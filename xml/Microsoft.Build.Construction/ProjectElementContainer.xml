<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a6b5b20bf5655f4da4ab482393dc854edc7e21" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30326931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c5236-101">Обеспечивает абстрактный класс контейнера для элементов проекта.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5236-101">Provides an abstract container class for project elements.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-102">Получает рекурсивный перечислитель преимущественно в глубину по всем дочерним элементам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-102">Gets a recursive depth-first enumerator over all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-103">Возвращает рекурсивный перечислитель преимущественно в глубину по всем дочерним элементам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-103">Returns a recursive depth-first enumerator over all child elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-104">Рекурсия возможна, так как контейнеры элементов проекта может содержать дочерние элементы, которые сами являются контейнерами элементов проекта.</span><span class="sxs-lookup"><span data-stu-id="c5236-104">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c5236-105">Добавляемый элемент проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-105">The project element to be appended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5236-106">Добавляет элемент <paramref name="child" /> в качестве последнего дочернего элемента данного контейнера проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-106">Appends the <paramref name="child" /> element as the last child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-107">Создает исключение, если этот контейнер проекта не имеют родителей или `child` уже является дочерним элементом, или если `child` элемент был создан с помощью другой <xref:Microsoft.Build.Construction.ProjectRootElement>.</span><span class="sxs-lookup"><span data-stu-id="c5236-107">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-108">Получает все дочерние элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-108">Gets all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-109">Возвращает все дочерние элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-109">Returns all child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-110">Получает все дочерние элементы, начиная с последнего элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-110">Gets all child elements, starting from the last child.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-111">Возвращает все дочерние элементы, начиная с последнего элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-111">Returns all child elements, starting from the last child.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-112">Получает количество дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-112">Gets the number of child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-113">Возвращает количество дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-113">Returns the number of child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-114">Получает первый дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-114">Gets the first child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-115">Возвращает первый дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-115">Returns the first child element.</span>
          </span>
          <span data-ttu-id="c5236-116">Возвращает значение null, если дочерний элемент отсутствует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-116">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-117">Используйте <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> для инициализации этого свойства.</span><span class="sxs-lookup"><span data-stu-id="c5236-117">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c5236-118">Вставляемый элемент проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-118">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="c5236-119">Элемент проекта, после которого необходимо вставить элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-119">The project element to be inserted after.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5236-120">Вставляет элемент <paramref name="child" /> после элемента <paramref name="reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-120">Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-121">Если `reference` элемент имеет значение null, этот метод эквивалентен <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5236-121">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span></span>  
  
 <span data-ttu-id="c5236-122">Создает исключение, если этот контейнер проекта не имеют родителей или `child` уже является дочерним элементом, или если `child` элемент был создан с помощью другой <xref:Microsoft.Build.Construction.ProjectRootElement>, или, если `reference` элемент не является потомком контейнера проекта .</span><span class="sxs-lookup"><span data-stu-id="c5236-122">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c5236-123">Вставляемый элемент проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-123">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="c5236-124">Элемент проекта, перед которым необходимо вставить элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-124">The project element to be inserted before.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5236-125">Вставляет элемент <paramref name="child" /> перед элементом <paramref name="reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-125">Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-126">Если `reference` элемент имеет значение null, этот метод эквивалентен <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5236-126">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span></span>  
  
 <span data-ttu-id="c5236-127">Создает исключение, если этот контейнер проекта не имеют родителей или `child` уже является дочерним элементом, или если `child` элемент был создан с помощью другой <xref:Microsoft.Build.Construction.ProjectRootElement>, или, если `reference` элемент не является потомком контейнера проекта .</span><span class="sxs-lookup"><span data-stu-id="c5236-127">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5236-128">Получает последний дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-128">Gets the last child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5236-129">Возвращает последний дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-129">Returns the last child element.</span>
          </span>
          <span data-ttu-id="c5236-130">Возвращает значение null, если дочерний элемент отсутствует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-130">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-131">Используйте <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> для инициализации этого свойства.</span><span class="sxs-lookup"><span data-stu-id="c5236-131">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c5236-132">Вставляемый в начало элемент проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-132">The project element to be prepended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5236-133">Добавляет элемент <paramref name="child" /> в качестве первого дочернего элемента данного контейнера проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-133">Prepends the <paramref name="child" /> element as the first child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-134">Создает исключение, если этот контейнер проекта не имеют родителей или `child` уже является дочерним элементом, или если `child` элемент был создан с помощью другой <xref:Microsoft.Build.Construction.ProjectRootElement>.</span><span class="sxs-lookup"><span data-stu-id="c5236-134">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c5236-135">Удаляет все существующие дочерние элементы из данного контейнера проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-135">Removes all the children, if any, from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-136">Можно безопасно изменить таким образом дочерние элементы во время перечисления.</span><span class="sxs-lookup"><span data-stu-id="c5236-136">It is safe to modify the children in this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c5236-137">Удаляемый элемент проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-137">The project element to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5236-138">Удаляет элемент <paramref name="child" /> из данного контейнера проекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5236-138">Removes a <paramref name="child" /> element from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5236-139">Вызывает исключение, если дочерний элемент не является родительским контейнером этого проекта.</span><span class="sxs-lookup"><span data-stu-id="c5236-139">Throws an exception if the child element is not currently parented by this project container.</span></span> <span data-ttu-id="c5236-140">Можно безопасно удалить дочерний таким образом, при перечислении.</span><span class="sxs-lookup"><span data-stu-id="c5236-140">It is safe to remove a child this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>