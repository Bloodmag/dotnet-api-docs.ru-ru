<Type Name="ITaskFactory" FullName="Microsoft.Build.Framework.ITaskFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84afcbecce72a3d529398cf359ba9a373967539a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="39bf5-101">Интерфейс, который должен реализовываться экземпляром фабрики задач.</span>
      <span class="sxs-lookup">
        <span data-stu-id="39bf5-101">Interface that a task factory Instance should implement.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="39bf5-102">Задача для очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-102">The task to clean up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39bf5-103">Удаляет контекст или состояние, которые могли быть созданы для данной задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-103">Cleans up any context or state that may have been built up for a given task.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">
          <span data-ttu-id="39bf5-104">Узел, на котором ведется журнал фабрики задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-104">The logging host for the task factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39bf5-105">Создает экземпляр задачи, которую необходимо использовать в пакете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-105">Creates an instance of the task to be used in a batch.</span>
          </span>
          <span data-ttu-id="39bf5-106">Узел, на котором ведется журнал фабрики задач, записывает сообщения в журнал в контексте задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-106">The task factory logging host will log messages in the context of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39bf5-107">Возвращает экземпляр задачи, которую необходимо использовать в пакете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-107">Returns an instance of the task to be used in a batch.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39bf5-108">Получает имя фабрики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-108">Gets the name of the factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39bf5-109">Имя фабрики.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-109">The name of the factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39bf5-110">Получает описания всех параметров задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-110">Get the descriptions for all the task's parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39bf5-111">Непустой массив описаний свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-111">A non-null array of property descriptions.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">
          <span data-ttu-id="39bf5-112">Имя задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-112">Name of the task.</span>
          </span>
        </param>
        <param name="parameterGroup">
          <span data-ttu-id="39bf5-113">Группа параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-113">The parameter group.</span>
          </span>
        </param>
        <param name="taskBody">
          <span data-ttu-id="39bf5-114">Тело задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-114">The task body.</span>
          </span>
        </param>
        <param name="taskFactoryLoggingHost">
          <span data-ttu-id="39bf5-115">Узел, на котором ведется журнал фабрики задач.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-115">The task factory logging host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39bf5-116">Инициализирует данную фабрику для создания экземпляров задач определенным блоком встроенной задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-116">Initializes this factory for instantiating tasks with a particular inline task block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39bf5-117">Значение, указывающее, успешно ли выполнена инициализация.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-117">A value indicating whether initialization was successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39bf5-118">Модуль MSBuild вызывает этот метод для инициализации фабрики.</span><span class="sxs-lookup"><span data-stu-id="39bf5-118">The MSBuild engine calls this method to initialize the factory.</span></span> <span data-ttu-id="39bf5-119">После инициализации фабрики могут быть применены ли имена задач могут создаваться фабрикой.</span><span class="sxs-lookup"><span data-stu-id="39bf5-119">After initialization, the factory can be asked whether or not task names can be created by the factory.</span></span>  
  
 <span data-ttu-id="39bf5-120">`taskFactoryLoggingHost` Сообщения в журнал в контексте целевого объекта, в котором сначала используется задача.</span><span class="sxs-lookup"><span data-stu-id="39bf5-120">The `taskFactoryLoggingHost` will log messages in the context of the target where the task is first used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39bf5-121">Получает тип задачи, экземпляры которой будет создавать данная фабрика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-121">Gets the type of the task this factory will instantiate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39bf5-122">Тип задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="39bf5-122">The type of task.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>