<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="41854-101">Используется классами <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> и <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> для указания формата сериализации пользовательского типа или агрегатной функции.</span><span class="sxs-lookup"><span data-stu-id="41854-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41854-102">Используется классами <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> и <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> для указания формата сериализации пользовательского типа или агрегатной функции.</span><span class="sxs-lookup"><span data-stu-id="41854-102">Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41854-103">В следующем примере показан `UserDefinedType` атрибут определяемого пользователем ТИПА Point.</span><span class="sxs-lookup"><span data-stu-id="41854-103">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="41854-104">Определяемый пользователем тип побайтно упорядоченного, называется «Точка», метод проверки с именем «ValidatePoint» и использует собственный формат сериализации.</span><span class="sxs-lookup"><span data-stu-id="41854-104">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41854-105">Формат сериализации <see langword="Native" /> использует простейший алгоритм, позволяющий серверу SQL Server сохранять на диске эффективное представление пользовательского типа.</span><span class="sxs-lookup"><span data-stu-id="41854-105">The <see langword="Native" /> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span></span> <span data-ttu-id="41854-106">Типами, отмеченными для сериализации <see langword="Native" />, могут быть только типы значений (структуры в Microsoft Visual C# и в Microsoft Visual Basic .NET) в качестве элементов.</span><span class="sxs-lookup"><span data-stu-id="41854-106">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span></span> <span data-ttu-id="41854-107">Члены в виде ссылочных типов (таких, как классы Visual C# или Visual Basic), определенных пользователем или существующих в базовой структуре (например, <see cref="T:System.String" />), не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="41854-107">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41854-108">Ниже приведены требования для этого формата.</span><span class="sxs-lookup"><span data-stu-id="41854-108">The requirements for this format are:</span></span>  
  
-   <span data-ttu-id="41854-109">`StructLayout.LayoutKindSequential` Атрибут должен быть применен для статистических выражений или определяемого пользователем ТИПА, если он определен в классе, а не структуры.</span><span class="sxs-lookup"><span data-stu-id="41854-109">The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="41854-110">Управляет физической компоновкой полей данных и используется для того, чтобы члены размещались последовательно в порядке их следования.</span><span class="sxs-lookup"><span data-stu-id="41854-110">This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="41854-111">SQL Server использует этот атрибут для задания порядка полей для определяемых пользователем типов с несколькими полями.</span><span class="sxs-lookup"><span data-stu-id="41854-111">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>  
  
-   <span data-ttu-id="41854-112">Тип должен содержать по крайней мере один член (сериализованные значения не может быть нулевой размер в байтах).</span><span class="sxs-lookup"><span data-stu-id="41854-112">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
-   <span data-ttu-id="41854-113">Все поля агрегатной функции должны быть *преобразуемые*, то есть они должны иметь общее представление в управляемой и неуправляемой памяти и не требуют специальной обработки упаковщиком взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="41854-113">All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
-   <span data-ttu-id="41854-114">Все поля определяемого пользователем типа должны быть одного из следующих типов, которые могут быть сериализованы: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, и других типов значений определяется пользователем, содержащие один из них поля типы.</span><span class="sxs-lookup"><span data-stu-id="41854-114">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  
  
-   <span data-ttu-id="41854-115">Статистическое выражение не должны указывать значение для `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="41854-115">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
-   <span data-ttu-id="41854-116">Статистическое выражение не должен содержать все поля [NonSerialized].</span><span class="sxs-lookup"><span data-stu-id="41854-116">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
-   <span data-ttu-id="41854-117">Поля, не должен быть помечен как явный макет (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span><span class="sxs-lookup"><span data-stu-id="41854-117">Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41854-118">Формат сериализации неизвестен.</span><span class="sxs-lookup"><span data-stu-id="41854-118">The serialization format is unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="41854-119">Формат сериализации <see langword="UserDefined" /> обеспечивает разработчику полный контроль над форматом двоичных данных, осуществляемый с помощью методов <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> и <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</span><span class="sxs-lookup"><span data-stu-id="41854-119">The <see langword="UserDefined" /> serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41854-120">Статистическая функция должна определять значение для `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="41854-120">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
 <span data-ttu-id="41854-121">Укажите <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> свойству атрибута.</span><span class="sxs-lookup"><span data-stu-id="41854-121">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property.</span></span> <span data-ttu-id="41854-122">Значением по умолчанию является false.</span><span class="sxs-lookup"><span data-stu-id="41854-122">The default value is false.</span></span>  
  
 <span data-ttu-id="41854-123">Если опустить любое поле в <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> или <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> методов, состояние этого поля не сериализуется.</span><span class="sxs-lookup"><span data-stu-id="41854-123">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>