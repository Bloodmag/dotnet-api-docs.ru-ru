<Type Name="Mouse" FullName="Microsoft.VisualBasic.Devices.Mouse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e5abd94c23ca91611a48eca9591666165609c97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30339468" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет свойства для получения информации о формате и конфигурации мыши, установленной на локальном компьютере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Mouse` Объект предоставляет способ получения сведений о мыши компьютера: ли кнопок мыши переставлены местами и сведения о колесика мыши.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Computer.Mouse.WheelExists` и `My.Computer.Mouse.WheelScrollLines` свойства, чтобы определить, если мышь имеет колесо прокрутки и сколько прокрутки при повороте его.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Mouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Mouse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Mouse();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Mouse` Объект предоставляет способ получения сведений о мыши компьютера: ли кнопок мыши переставлены местами и сведения о колесика мыши.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonsSwapped">
      <MemberSignature Language="C#" Value="public bool ButtonsSwapped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ButtonsSwapped" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonsSwapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ButtonsSwapped { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение типа <see langword="Boolean" />, которое позволяет определить, назначены ли клавишам мыши стандартные функции или их поменяли местами.</summary>
        <value>
          <see langword="Boolean" />, имеющее значение <see langword="True" />, если функции левой и правой клавиш мыши поменяли местами; в противном случае — значение <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Mouse.ButtonsSwapped` Свойство:  
  
-   Предоставляет функциональность, аналогичную <xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A> свойство.  
  
-   Предоставляет сведения о компьютере, на котором выполняется код.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Computer.Mouse.ButtonsSwapped` свойства, чтобы определить, если функции левой и правой кнопок мыши поменяли местами.  
  
 [!code-vb[VbVbalrMyComputer#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">На компьютере не установлена мышь.</exception>
      </Docs>
    </Member>
    <Member MemberName="WheelExists">
      <MemberSignature Language="C#" Value="public bool WheelExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WheelExists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WheelExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WheelExists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение типа <see langword="Boolean" />, которое указывает, оснащена ли мышь колесиком.</summary>
        <value>Логическое значение со значением <see langword="True" />, если мышь оснащена колесиком прокрутки; в противном случае — значение <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Mouse.WheelExists` Свойство предоставляет функциональность, аналогичную <xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A> свойство.  
  
 Следует проверить значение `My.Computer.Mouse.WheelExists` свойство перед попыткой обращения к <xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A> свойство, которое вызывает исключение, если указатель мыши отсутствует колесо прокрутки.  
  
 `My.Computer.Mouse.WheelExists` Свойстве содержатся сведения о компьютере, на котором выполняется код.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере используется `My.Computer.Mouse.WheelExists` свойства, чтобы определить, если мышь имеет колесо прокрутки и сколько прокрутки при повороте колесика мыши.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">На компьютере не установлена мышь.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines" />
      </Docs>
    </Member>
    <Member MemberName="WheelScrollLines">
      <MemberSignature Language="C#" Value="public int WheelScrollLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WheelScrollLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WheelScrollLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WheelScrollLines { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число, которое выражает объем прокрутки при повороте колесика мыши на одно деление.</summary>
        <value>
          <see langword="Integer" />, которое выражает объем прокрутки при повороте колесика мыши на одно деление. Положительное значение выражает объем прокрутки в строках, а отрицательное значение означает прокрутку на один экран за раз.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать, чтобы определить, сколько строк для прокрутки вверх или вниз в элемент управления многострочного текста, который содержит полосу прокрутки.  
  
 `My.Computer.Mouse.WheelScrollLines` Свойство предоставляет функциональность, аналогичную <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A> свойство.  
  
 Так как это свойство вызывает исключение, если указатель мыши отсутствует колесо прокрутки, следует убедиться в том, мышь имеет колесо прокрутки, проверив `My.Computer.Mouse.WheelExists` свойство.  
  
 Это свойство предоставляет сведения о компьютере, на котором выполняется код.  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере определяет, если имеется ли колесо мыши использует `My.Computer.Mouse.WheelExists` свойство, чтобы определить, какой объем прокручиваемых при вращении колесика мыши.  
  
 [!code-vb[VbVbalrMyComputer#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">У мыши нет колеса прокрутки.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists" />
      </Docs>
    </Member>
  </Members>
</Type>