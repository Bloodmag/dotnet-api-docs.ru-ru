<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a78587e6289c8eb39f60075f4ef8cb5c0cceb40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30350738" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Включает свойства и методы для управления реестром.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать эти свойства, необходимо иметь разрешение на чтение и запись из <xref:System.Security.Permissions.RegistryPermissionAccess> перечисления. Любой код, выполняемый с полным доверием (согласно политике безопасности по умолчанию, — это любой код, установленный на локальном жестком диске пользователя) имеет необходимые разрешения на доступ к реестру. Дополнительные сведения см. в описании класса <xref:System.Security.Permissions.RegistryPermission>.  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение данных из реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Этот пример считывает значение `Name` из `HKEY_CURRENT_USER\Software\MyApp` и отображает его в окне сообщения.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` в основном используется для хранения информации о сопоставления файлов в Windows.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте только права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере извлекаются имена подразделов для `ClassesRoot` раздел реестра и добавляет их в `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 В этом примере требуется наличие `ListBox` с именем `ListBox1` в своем проекте.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` в основном используется для хранения параметров для устройств на компьютере.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте только права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере создается подраздел `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_CURRENT_USER" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` в основном используется для хранения пользовательские параметры, такие как цветов и шрифтов, в Windows. Ключ, зависят от пользователя.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте наименьшие права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Этот пример удаляет подраздел `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_DYNDATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` используется для хранения динамические данные реестра, которые используются в драйверы виртуальных устройств и поддерживается только в системах Windows 95/98. В системах без Windows 95/98 вызов любых методов ключа, возвращенного с `Registry.DynData`, такие как `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`и т.д., вызовет <xref:System.IO.IOException>.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте наименьшие права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере удаляется дерево подраздела `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Ключ, из которого извлекается значение. Обязательно.</param>
        <param name="valueName">
          <see langword="String" />. Извлекаемое значение. Обязательно.</param>
        <param name="defaultValue">
          <see langword="Object" />. .Значение по умолчанию, которое предоставляется, если значение не существует. Обязательно.</param>
        <summary>Получает значение из раздела реестра</summary>
        <returns>Получает значение из раздела реестра</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` не учитывает регистр.  
  
 Раздел реестра может содержать одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Для получения этого безымянного значения, укажите значение null или пустая строка ("») для `valueName`.  
  
 В следующей таблице перечислены примеры задач, связанных с `GetValue` метод.  
  
|Кому|См.|  
|--------|---------|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Этот пример считывает значение `Name` из `HKEY_CURRENT_USER\Software\MyApp` и отображает его в `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для чтения из раздела реестра.</exception>
        <exception cref="T:System.IO.IOException">Раздел <see cref="T:Microsoft.Win32.RegistryKey" />, содержащий заданное значение, был помечен для удаления.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">чтение из реестра. Связанное перечисление: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Чтобы прочитать раздел реестра типа REG_EXPAND_SZ. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` обычно используется для хранения параметров, которые не зависят от пользователей в Windows. Все пользователи компьютера совместно используют этот ключ. Пять подразделов (`Hardware`, `SAM`, `Security`, `Software`, и `System`) хранения данных конфигурации для локального компьютера.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте наименьшие права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере открывается подраздела `Software\MyCompany\Preferences` и устанавливает значение `FontColor` для `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` используется для доступа к данным производительности для компонентов программного обеспечения. Каждый программный компонент создает ключи для своих объектов и счетчиков при установке и записывает данные счетчиков в процессе выполнения. Эти данные не хранятся в реестре, несмотря на то, что реестр используется для доступа к нему. Вместо этого вызов функций реестра через `HKEY_PERFORMANCE_DATA` заставляет систему собирать данные из соответствующих системных диспетчеров объектов.  
  
 Этот ключ не существует в системе Windows 98; Попытка использовать кроме вызова `Name` метод вызывает исключение <xref:System.IO.IOException>.  
  
 Этот ключ обычно нельзя выполнять запись Попытка создать подраздел на нем вызовет <xref:System.IO.IOException>.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте наименьшие права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|AllAccess|Создание, чтение и запись доступа к переменным реестра.|  
|Создать|Доступ к переменным реестра с разрешением на создание.|  
|NoAccess|Отсутствие доступа к переменным реестра.|  
|Чтение|Доступ к переменным реестра с разрешением на чтение.|  
|Write|Доступ к переменным реестра с разрешением на запись.|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|Кому|См.|  
|--------|---------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере возвращает значение `ThisSoftware` из `MyCompany` подраздела.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает значение в раздел реестра.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Имя ключа, в который требуется выполнить запись. Обязательно.</param>
        <param name="valueName">
          <see langword="String" />. Имя записываемого значения. Обязательно.</param>
        <param name="value">
          <see langword="Object" />. Значение, которое требуется записать Обязательно.</param>
        <summary>Записывает значение в раздел реестра.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если указанный раздел или значение не существует, он создается.  
  
 Ниже приведен пример задач с участием `My.Computer.Registry.SetValue` метод.  
  
|Кому|См.|  
|--------|---------|  
|Задайте значение раздела реестра|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 В этом примере устанавливается значение `FontColor` с «red» в ключе `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="value" /> имеет значение <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.  
  
 - или -  
  
 Значение параметра <paramref name="valueName" /> длиннее максимально допустимой длины (255 знаков).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> доступен только для чтения, и, следовательно, запись в него невозможна (например, это узел корневого уровня или раздел не был открыт с доступом для записи)..</exception>
        <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для изменения разделов реестра.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">для изменения заданного раздела реестра, если он существует, или создайте раздел реестра, если он еще не существует. Связанные перечисления: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Имя ключа, в который требуется выполнить запись. Обязательно.</param>
        <param name="valueName">
          <see langword="String" />. Имя записываемого значения. Обязательно.</param>
        <param name="value">
          <see langword="Object" />. Значение, которое требуется записать Обязательно.</param>
        <param name="valueKind">
          <see cref="T:Microsoft.Win32.RegistryValueKind" />. Обязательно.</param>
        <summary>Записывает значение в раздел реестра.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если указанный раздел или значение не существует, он создается.  
  
 Ниже приведен пример задач с участием `My.Computer.Registry.SetValue` метод.  
  
|Кому|См.|  
|--------|---------|  
|Задайте значение раздела реестра|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 В этом примере устанавливается значение `FontColor` с «red» в ключе `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="value" /> имеет значение <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="keyName" /> не начинается с правильного корневого раздела реестра.  
  
 - или -  
  
 Значение параметра <paramref name="keyName" /> длиннее максимально допустимой длины (255 знаков).  
  
 - или -  
  
 Тип параметра <paramref name="value" /> не соответствует типу данных реестра, заданному параметром <paramref name="valueKind" />, поэтому данные не удается правильно преобразовать.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> доступен только для чтения, и, следовательно, запись в него невозможна (например, это узел корневого уровня или раздел не был открыт с доступом для записи).</exception>
        <exception cref="T:System.Security.SecurityException">У пользователя отсутствуют разрешения, необходимые для изменения разделов реестра.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">для изменения заданного раздела реестра, если он существует, или создайте раздел реестра, если он еще не существует. Связанные перечисления: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип <see cref="T:Microsoft.Win32.RegistryKey" />, которой обеспечивает доступ к <see langword="HKEY_USERS" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` в основном используется для хранения параметров по умолчанию для пользователей, впервые.  
  
 <xref:System.Security.Permissions.RegistryPermission> Класс, который находится в <xref:System.Security.Permissions> пространства имен, управляет доступом к переменным реестра. Переменные реестра не следует хранить в областях памяти, к которым имеет доступ код без разрешений <xref:System.Security.Permissions.RegistryPermission>. Аналогично при предоставлении разрешений, предоставьте наименьшие права, необходимые для выполнения задачи.  
  
 Значения разрешений на доступ к реестру определяются перечислением <xref:System.Security.Permissions.RegistryPermissionAccess>. Его члены подробно рассмотрены в следующей таблице.  
  
|Значение|Доступ к переменным реестра|  
|-----------|----------------------------------|  
|AllAccess|Создание, чтение и запись|  
|Создать|Создать|  
|NoAccess|Нет доступа.|  
|Чтение|Чтение|  
|Write|Write|  
  
 В следующей таблице перечислены примеры задач, связанных с `My.Computer.Registry` объекта.  
  
|**Задача**|**См. разделы**|  
|------------|-------------|  
|Создание раздела реестра и присвойте ему значение|[Практическое руководство. Создание раздела реестра и задание его значения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Удаление раздела реестра|[Практическое руководство. Удаление раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Чтение значения из раздела реестра|[Практическое руководство. Чтение значения из раздела реестра](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 В этом примере подсчитывает и отображает количество значений в ключе реестра.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
      </Docs>
    </Member>
  </Members>
</Type>