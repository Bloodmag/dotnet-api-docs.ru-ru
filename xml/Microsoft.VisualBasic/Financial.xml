<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="93ee6-101">В модуле <see langword="Financial" /> содержатся процедуры, используемые для выполнения финансовых операций.</span><span class="sxs-lookup"><span data-stu-id="93ee6-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-102">Этот модуль поддерживает члены библиотеки времени выполнения Visual Basic, которые выполняют финансовых расчетов, например амортизации, текущих и будущих значений, процентных ставок, ставок возврата и платежей.</span><span class="sxs-lookup"><span data-stu-id="93ee6-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-103">В этом примере используется `Rate` функции для вычисления процентную ставку по кредиту, Получает общее число выплат (`TotPmts`), сумма платежа кредитов (`Payment`), текущее значение или участника, от порядка (`PVal`), будущее значение порядка (`FVal`), число, определяющее момент платежа — начало или конец периода оплаты (`PayType`) и приблизительное ожидаемой процентной ставки (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="93ee6-104">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-104">Required.</span></span> <span data-ttu-id="93ee6-105">Значение типа <see langword="Double" />, указывающее начальную стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-105"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="93ee6-106">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-106">Required.</span></span> <span data-ttu-id="93ee6-107">Значение типа <see langword="Double" />, задающее стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="93ee6-107"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="93ee6-108">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-108">Required.</span></span> <span data-ttu-id="93ee6-109">Значение типа <see langword="Double" />, задающее срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-109"><see langword="Double" /> specifying length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="93ee6-110">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-110">Required.</span></span> <span data-ttu-id="93ee6-111">Значение типа <see langword="Double" />, задающее период расчета амортизации актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-111"><see langword="Double" /> specifying period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="93ee6-112">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-112">Optional.</span></span> <span data-ttu-id="93ee6-113">Значение типа <see langword="Double" />, задающее коэффициент уменьшения остатка.</span><span class="sxs-lookup"><span data-stu-id="93ee6-113"><see langword="Double" /> specifying rate at which the balance declines.</span></span> <span data-ttu-id="93ee6-114">Если значение не указано, то предполагается 2 (метод двойного уменьшения остатка).</span><span class="sxs-lookup"><span data-stu-id="93ee6-114">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-115">Возвращает значение типа <see langword="Double" />, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-115">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="93ee6-116">Возвращает значение типа <see langword="Double" />, определяющее амортизацию актива за указанный период времени с помощью метода двойного уменьшения остатка или другого указанного метода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-116">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-117">Метод двойного уменьшения остатка вычисляет амортизацию, используя увеличенный коэффициент.</span><span class="sxs-lookup"><span data-stu-id="93ee6-117">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="93ee6-118">Снижение стоимости максимальна в первый период и уменьшается в последующие.</span><span class="sxs-lookup"><span data-stu-id="93ee6-118">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="93ee6-119">`Life` И `Period` аргументы должны задаваться в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-119">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="93ee6-120">Например если `Life` задается в месяцах, `Period` также должен быть задан в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-120">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="93ee6-121">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="93ee6-121">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="93ee6-122">`DDB` Функция использует следующую формулу для вычисления амортизации в течение заданного периода:</span><span class="sxs-lookup"><span data-stu-id="93ee6-122">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="93ee6-123">Амортизации / период = ((Cost – Salvage) \* коэффициент) / жизни</span><span class="sxs-lookup"><span data-stu-id="93ee6-123">Depreciation / Period = ((Cost – Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-124">В этом примере используется `DDB` функция, возвращающая амортизацию ресурса за указанный период начальной стоимости (`InitCost`), стоимость в конце срока полезного использования актива (`SalvageVal`), полное время нормальной эксплуатации актива в годах (`LifeTime`) и период в годах, для которых производится вычисление амортизации (`Depr`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-124">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-125"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 или <paramref name="Period" /> &gt; <paramref name="Life." /></span><span class="sxs-lookup"><span data-stu-id="93ee6-125"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-126">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-126">Required.</span></span> <span data-ttu-id="93ee6-127">Значение типа <see langword="Double" />, определяющее процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-127"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="93ee6-128">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-128">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="93ee6-129">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-129">Required.</span></span> <span data-ttu-id="93ee6-130">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-130"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-131">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-131">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="93ee6-132">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-132">Required.</span></span> <span data-ttu-id="93ee6-133">Значение типа <see langword="Double" />, определяющее платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-133"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="93ee6-134">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-134">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-135">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-135">Optional.</span></span> <span data-ttu-id="93ee6-136">Значение типа <see langword="Double" />, задающее приведенную (нынешнюю) стоимость, или общую сумму, равноценную на данный момент серии будущих выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-136"><see langword="Double" /> specifying present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="93ee6-137">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-137">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="93ee6-138">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-138">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-139">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-139">Optional.</span></span> <span data-ttu-id="93ee6-140">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-140">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-141">Этот аргумент должен равняться либо <see langword="DueDate.EndOfPeriod" />, если выплаты должны производиться в конце периода, либо <see langword="DueDate.BegOfPeriod" /> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-141">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-142">Если этот аргумент опущен, используется <see langword="DueDate.EndOfPeriod" />.</span><span class="sxs-lookup"><span data-stu-id="93ee6-142">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-143">Возвращает значение типа <see langword="Double" />, указывающее будущее значение аннуитета, рассчитываемого на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-143">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-144">Возвращает значение типа <see langword="Double" />, указывающее будущее значение аннуитета, рассчитываемого на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-144">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-145">Ежегодного платежа представляет собой серию фиксированных денежных выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-145">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="93ee6-146">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-146">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-147">`Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-147">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="93ee6-148">Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-148">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="93ee6-149">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-149">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-150">В этом примере используется `FV` курс функция, возвращающая будущее значение инвестиции в процентах, который начисляемые за период (`APR / 12`), общее число платежей (`TotPmts`), платеж (`Payment`), текущее значение инвестиций (`PVal`) и число, которое указывает, используется ли платеж в начале или в конце периода оплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-150">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="93ee6-151">Обратите внимание, что поскольку `Payment` представляет размер выплат, он является отрицательным числом.</span><span class="sxs-lookup"><span data-stu-id="93ee6-151">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-152">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-152">Required.</span></span> <span data-ttu-id="93ee6-153">Значение типа <see langword="Double" />, определяющее процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-153"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="93ee6-154">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-154">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="93ee6-155">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-155">Required.</span></span> <span data-ttu-id="93ee6-156">Значение типа <see langword="Double" />, задающее расчетный период в диапазоне от 1 до <c>NPer</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-156"><see langword="Double" /> specifying payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="93ee6-157">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-157">Required.</span></span> <span data-ttu-id="93ee6-158">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-158"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-159">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-159">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-160">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-160">Required.</span></span> <span data-ttu-id="93ee6-161">Значение типа <see langword="Double" />, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-161"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="93ee6-162">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-162">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-163">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-163">Optional.</span></span> <span data-ttu-id="93ee6-164">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-164"><see langword="Double" /> specifying future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="93ee6-165">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-165">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="93ee6-166">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-166">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-167">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-167">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-168">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-168">Optional.</span></span> <span data-ttu-id="93ee6-169">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-169">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-170">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-170">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-171">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-171">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-172">Возвращает значение типа <see langword="Double" />, определяющее процентный платеж аннуитета, рассчитываемому на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-172">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-173">Возвращает значение типа <see langword="Double" />, определяющее процентный платеж аннуитета, рассчитываемому на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-173">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-174">Ежегодного платежа представляет собой серию фиксированных денежных выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-174">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="93ee6-175">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-175">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-176">`Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-176">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="93ee6-177">Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-177">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="93ee6-178">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-178">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-179">В этом примере используется `IPmt` функции для вычисления оплаты занятого интерес при всех платежей имеют одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-179">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="93ee6-180">При этом задаются процентная ставка за период (`APR / 12`), расчетный период, для которого требуется по процентам (`Period`), общее число выплат (`TotPmts`), текущее значение или участника, от порядка (`PVal`), будущее значение порядка (`FVal`) и число, определяющее момент платежа — начало или конец периода оплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-180">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-181"><paramref name="Per" /> &lt;= 0 или <paramref name="Per" /> &gt; <paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="93ee6-181"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="93ee6-182">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-182">Required.</span></span> <span data-ttu-id="93ee6-183">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="93ee6-183">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="93ee6-184">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="93ee6-184">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="93ee6-185">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-185">Optional.</span></span> <span data-ttu-id="93ee6-186">Объект, задающий значение, которое будет возвращено функцией <see langword="IRR" />.</span><span class="sxs-lookup"><span data-stu-id="93ee6-186">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="93ee6-187">Если этот параметр опущен, используется значение <c>Guess</c>, равное 0,1 (10 процентам).</span><span class="sxs-lookup"><span data-stu-id="93ee6-187">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="93ee6-188">Возвращает значение типа <see langword="Double" />, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="93ee6-188">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="93ee6-189">Возвращает значение типа <see langword="Double" />, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="93ee6-189">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-190">Внутреннюю норму прибыли является процентную ставку, полученную от вложений, состоящий из выплат и поступлений, возникающие через регулярные интервалы.</span><span class="sxs-lookup"><span data-stu-id="93ee6-190">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="93ee6-191">`IRR` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-191">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="93ee6-192">Убедитесь в том, что значения поступления платежей и в верной последовательности.</span><span class="sxs-lookup"><span data-stu-id="93ee6-192">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="93ee6-193">Движение денежных средств за каждый период необязательно должно быть постоянным, как и для ежегодного платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-193">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="93ee6-194">`IRR` вычисляется путем итерации.</span><span class="sxs-lookup"><span data-stu-id="93ee6-194">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="93ee6-195">Начиная со значением `Guess`, `IRR` циклы вычисления, пока не получит результат с точностью 0,00001 процента.</span><span class="sxs-lookup"><span data-stu-id="93ee6-195">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="93ee6-196">Если `IRR` не удается найти результат после 20 пытается подключиться, она завершается.</span><span class="sxs-lookup"><span data-stu-id="93ee6-196">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-197">В этом примере `IRR` функция возвращает внутреннюю норму прибыли для ряда пять денежных потоков, содержащихся в массиве `Values()`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-197">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="93ee6-198">Первый элемент массива является отрицательной денежной операцией, представляющей собой затраты на бизнес.</span><span class="sxs-lookup"><span data-stu-id="93ee6-198">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="93ee6-199">Оставшиеся четыре денежных потока представляют положительные денежные потоки для последующих четырех лет.</span><span class="sxs-lookup"><span data-stu-id="93ee6-199">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="93ee6-200">`Guess` имеет предполагаемый внутреннюю норму прибыли.</span><span class="sxs-lookup"><span data-stu-id="93ee6-200">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93ee6-201">Недопустимые значения аргументов массива, или <paramref name="Guess" /> &lt;= –1.</span><span class="sxs-lookup"><span data-stu-id="93ee6-201">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="93ee6-202">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-202">Required.</span></span> <span data-ttu-id="93ee6-203">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="93ee6-203">Array of <see langword="Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="93ee6-204">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="93ee6-204">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="93ee6-205">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-205">Required.</span></span> <span data-ttu-id="93ee6-206">Значение типа <see langword="Double" />, определяющее процентную ставку оплаты как стоимость финансирования.</span><span class="sxs-lookup"><span data-stu-id="93ee6-206"><see langword="Double" /> specifying interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="93ee6-207">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-207">Required.</span></span> <span data-ttu-id="93ee6-208">Значение типа <see langword="Double" />, определяющее процентную ставку доходов от реинвестирования денежных средств.</span><span class="sxs-lookup"><span data-stu-id="93ee6-208"><see langword="Double" /> specifying interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="93ee6-209">Возвращает значение типа <see langword="Double" />, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="93ee6-209">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="93ee6-210">Возвращает значение типа <see langword="Double" />, определяющее внутреннюю ставку доходности для ряда периодических денежных потоков (платежей и поступлений).</span><span class="sxs-lookup"><span data-stu-id="93ee6-210">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-211">Измененную внутреннюю норму прибыли при внутреннюю норму прибыли выплат и поступлений подсчитываются с разной интенсивностью.</span><span class="sxs-lookup"><span data-stu-id="93ee6-211">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="93ee6-212">`MIRR` Функции учитывается как стоимость инвестиций (`FinanceRate`) и процентную ставку реинвестирования денежных средств (`ReinvestRate`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-212">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="93ee6-213">`FinanceRate` И `ReinvestRatearguments` процентных соотношений, выраженное в виде десятичных значений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-213">The `FinanceRate` and `ReinvestRatearguments` are percentages expressed as decimal values.</span></span> <span data-ttu-id="93ee6-214">Например 12 процентов задаются как 0,12.</span><span class="sxs-lookup"><span data-stu-id="93ee6-214">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="93ee6-215">`MIRR` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-215">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="93ee6-216">Убедитесь в том, что значения поступления платежей и в верной последовательности.</span><span class="sxs-lookup"><span data-stu-id="93ee6-216">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-217">В этом примере используется `MIRR` функция возвращает измененную внутреннюю норму прибыли для ряда денежных потоков, содержащихся в массиве `Values()`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-217">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="93ee6-218">`LoanAPR` представляет интерес финансирования, а `InvAPR` представляет процентную ставку реинвестирования.</span><span class="sxs-lookup"><span data-stu-id="93ee6-218">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93ee6-219">Ранг <paramref name="ValueArray" /> не равен 1, <paramref name="FinanceRate" /> =-1, или <paramref name="ReinvestRate" /> =-1</span><span class="sxs-lookup"><span data-stu-id="93ee6-219">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="93ee6-220">Произошло деление на ноль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-220">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-221">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-221">Required.</span></span> <span data-ttu-id="93ee6-222">Значение типа <see langword="Double" />, определяющее процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-222"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="93ee6-223">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-223">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="93ee6-224">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-224">Required.</span></span> <span data-ttu-id="93ee6-225">Значение типа <see langword="Double" />, определяющее платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-225"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="93ee6-226">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-226">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-227">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-227">Required.</span></span> <span data-ttu-id="93ee6-228">Значение типа <see langword="Double" />, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-228"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="93ee6-229">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-229">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-230">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-230">Optional.</span></span> <span data-ttu-id="93ee6-231">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-231"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="93ee6-232">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-232">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="93ee6-233">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-233">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-234">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-234">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-235">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-235">Optional.</span></span> <span data-ttu-id="93ee6-236">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-236">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-237">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-237">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-238">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-238">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-239">Возвращает значение типа <see langword="Double" />, определяющее число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-239">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-240">Возвращает значение типа <see langword="Double" />, определяющее число периодов выплат аннуитета, рассчитываемое на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-240">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-241">Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-241">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="93ee6-242">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-242">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-243">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-243">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-244">В этом примере используется `NPer` функция, возвращающая число периодов, в течение которых должны быть сделаны платежи для погашения кредиту, значение которого содержится в `PVal`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-244">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="93ee6-245">При этом задаются процентная ставка за период (`APR / 12`), платеж (`Payment`), будущее значение порядка (`FVal`) и число, определяющее момент платежа — начало или конец периода оплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-245">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-246"><paramref name="Rate" /> = 0 и <paramref name="Pmt" /> = 0</span><span class="sxs-lookup"><span data-stu-id="93ee6-246"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-247">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-247">Required.</span></span> <span data-ttu-id="93ee6-248">Представленное в виде десятичного числа значение типа <see langword="Double" />, задающее размер учетной ставки за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-248"><see langword="Double" /> specifying discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="93ee6-249">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-249">Required.</span></span> <span data-ttu-id="93ee6-250">Массив значений типа <see langword="Double" />, определяющий значения денежных операций.</span><span class="sxs-lookup"><span data-stu-id="93ee6-250">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="93ee6-251">Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление).</span><span class="sxs-lookup"><span data-stu-id="93ee6-251">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="93ee6-252">Возвращает значение типа <see langword="Double" />, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-252">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-253">Возвращает значение типа <see langword="Double" />, определяющее величину чистой приведенной стоимости инвестирования на основе ряда периодических денежных потоков (платежей и поступлений) и учетной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-253">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-254">Чистую приведенную стоимость вложений — это текущее значение из серии будущих выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-254">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="93ee6-255">`NPV` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-255">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="93ee6-256">Убедитесь в том, что значения поступления платежей и в верной последовательности.</span><span class="sxs-lookup"><span data-stu-id="93ee6-256">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="93ee6-257">`NPV` Инвестиции начинается за один период до даты первого значения денежных и оканчивается последней значение денежного потока в массиве.</span><span class="sxs-lookup"><span data-stu-id="93ee6-257">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="93ee6-258">Расчет чистой текущей стоимости основан на будущих денежных потоков.</span><span class="sxs-lookup"><span data-stu-id="93ee6-258">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="93ee6-259">Если первый денежные потоки возникает в начале первого периода, первое значение необходимо добавить в значение, возвращаемое `NPV` и не должно включаться в значения денежных `ValueArray`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-259">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="93ee6-260">`NPV` Функция подобна `PV` функции (текущее значение), за исключением того, что `PV` функция обеспечивает денежных потоков начать в конце или в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-260">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="93ee6-261">В отличие от переменной `NPV` значений денежных `PV` денежных потоков, которые должны быть постоянными на протяжении капиталовложения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-261">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-262">В этом примере используется `NPV` функция возвращает чистую приведенную стоимость для ряда денежных операций, содержащихся в массиве `values()`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-262">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="93ee6-263">Возвращаемое значение, хранящееся в `FixedRetRate`, представляющий основных внутреннюю норму прибыли.</span><span class="sxs-lookup"><span data-stu-id="93ee6-263">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-264">Значение <paramref name="ValueArray" /> равно <see langword="Nothing" />, ранг <paramref name="ValueArray" /> &lt;&gt; 1, или <paramref name="Rate" /> = –1</span><span class="sxs-lookup"><span data-stu-id="93ee6-264"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-265">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-265">Required.</span></span> <span data-ttu-id="93ee6-266">Значение типа <see langword="Double" />, определяющий процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-266"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="93ee6-267">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-267">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="93ee6-268">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-268">Required.</span></span> <span data-ttu-id="93ee6-269">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-269"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-270">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 \* 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-270">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-271">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-271">Required.</span></span> <span data-ttu-id="93ee6-272">Значение типа <see langword="Double" />, определяющее текущую стоимость (или общую сумму) платежей, которые должны быть уплачены в будущем.</span><span class="sxs-lookup"><span data-stu-id="93ee6-272"><see langword="Double" /> specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="93ee6-273">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-273">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-274">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-274">Optional.</span></span> <span data-ttu-id="93ee6-275">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-275"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="93ee6-276">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-276">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="93ee6-277">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-277">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-278">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-278">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-279">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-279">Optional.</span></span> <span data-ttu-id="93ee6-280">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-280">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-281">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-281">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-282">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-282">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-283">Возвращает значение типа <see langword="Double" />, определяющее платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-283">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-284">Возвращает значение типа <see langword="Double" />, определяющее платеж по аннуитету на основе периодических фиксированных платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-284">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-285">Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-285">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="93ee6-286">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-286">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-287">`Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-287">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="93ee6-288">Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-288">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="93ee6-289">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-289">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-290">В этом примере используется `Pmt` функция, возвращающая ежемесячного платежа по кредиту за определенный период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-290">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="93ee6-291">При этом задаются процентная ставка за период (`APR / 12`), общее число выплат (`TotPmts`), текущее значение или участника, от порядка (`PVal`), будущее значение порядка (`FVal`) и число, которое указывает ли Платежи осуществляются в начале или в конце периода оплаты `(PayType).`</span><span class="sxs-lookup"><span data-stu-id="93ee6-291">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-292"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-292"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-293">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-293">Required.</span></span> <span data-ttu-id="93ee6-294">Значение типа <see langword="Double" />, определяющий процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-294"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="93ee6-295">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-295">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="93ee6-296">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-296">Required.</span></span> <span data-ttu-id="93ee6-297">Значение типа <see langword="Double" />, указывающее расчетный период в диапазоне от 1 до <c>NPer</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-297"><see langword="Double" /> specifies the payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="93ee6-298">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-298">Required.</span></span> <span data-ttu-id="93ee6-299">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-299"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-300">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов выплат будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-300">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-301">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-301">Required.</span></span> <span data-ttu-id="93ee6-302">Значение типа <see langword="Double" />, задающее текущее значение из серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-302"><see langword="Double" /> specifies the current value of a series of future payments or receipts.</span></span> <span data-ttu-id="93ee6-303">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-303">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-304">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-304">Optional.</span></span> <span data-ttu-id="93ee6-305">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-305"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="93ee6-306">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-306">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="93ee6-307">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-307">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-308">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-308">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-309">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-309">Optional.</span></span> <span data-ttu-id="93ee6-310">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-310">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-311">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-311">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-312">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-312">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-313">Возвращает значение типа <see langword="Double" />, определяющее главный платеж аннуитета, рассчитываемому на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-313">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-314">Возвращает значение типа <see langword="Double" />, определяющее главный платеж аннуитета, рассчитываемому на основе периодических фиксированных выплат и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-314">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-315">Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-315">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="93ee6-316">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-316">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-317">`Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-317">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="93ee6-318">Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-318">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="93ee6-319">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-319">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-320">В этом примере используется `PPmt` функция для вычисления оплаты за определенный период занятого основной при всех платежей имеют одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-320">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="93ee6-321">При этом задаются процентная ставка за период (`APR / 12`), расчетный период, для которого требуется основной части (`Period`), общее число выплат (`TotPmts`), текущее значение или участника, от порядка (`PVal`), будущее значение порядка (`FVal`) и число, определяющее момент платежа — начало или конец периода оплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-321">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-322"><paramref name="Per" /> &lt;=0 или <paramref name="Per" /> &gt; <paramref name="NPer" />.</span><span class="sxs-lookup"><span data-stu-id="93ee6-322"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="93ee6-323">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-323">Required.</span></span> <span data-ttu-id="93ee6-324">Значение типа <see langword="Double" />, определяющий процентную ставку за период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-324"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="93ee6-325">Например, при взятии ссуды на автомобиль под годовую процентную ставку (APR) размером 10% с ежемесячными выплатами ставка за период равна отношению 0,1/12 или 0,0083.</span><span class="sxs-lookup"><span data-stu-id="93ee6-325">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="93ee6-326">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-326">Required.</span></span> <span data-ttu-id="93ee6-327">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-327"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-328">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет количество периодов выплат будет равно 4 \* 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-328">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="93ee6-329">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-329">Required.</span></span> <span data-ttu-id="93ee6-330">Значение типа <see langword="Double" />, определяющее платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-330"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="93ee6-331">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-331">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-332">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-332">Optional.</span></span> <span data-ttu-id="93ee6-333">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-333"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="93ee6-334">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-334">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="93ee6-335">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-335">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-336">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-336">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-337">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-337">Optional.</span></span> <span data-ttu-id="93ee6-338">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-338">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-339">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-339">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-340">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-340">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="93ee6-341">Возвращает значение типа <see langword="Double" />, определяющее текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-341">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="93ee6-342">Возвращает значение типа <see langword="Double" />, определяющее текущее значение аннуитета на основе фиксированных периодических платежей и постоянной процентной ставки.</span><span class="sxs-lookup"><span data-stu-id="93ee6-342">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-343">Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-343">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="93ee6-344">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-344">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-345">`Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-345">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="93ee6-346">Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-346">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="93ee6-347">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-347">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-348">В этом примере `PV` функция возвращает текущее значение ежегодного платежа 1 000 000 долларов, который предоставит 50 000 долларов в год Далее 20 лет.</span><span class="sxs-lookup"><span data-stu-id="93ee6-348">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="93ee6-349">Предоставленными являются ожидаемая годовую процентную ставку (`APR`), общее число платежей (`TotPmts`), размер каждого платежа (`YrIncome`), общее будущее значение инвестиции (`FVal`) и число, которое указывает ли каждого в начале или в конце периода оплаты выплаты (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-349">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="93ee6-350">Обратите внимание, что `YrIncome` является отрицательным числом, так как он представляет выплаченные из платежа каждый год.</span><span class="sxs-lookup"><span data-stu-id="93ee6-350">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="93ee6-351">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-351">Required.</span></span> <span data-ttu-id="93ee6-352">Значение типа <see langword="Double" />, задающее общее количество периодов платежей аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-352"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="93ee6-353">Например, при ежемесячных выплатах ссуды за автомобиль на протяжении 4 лет общее количество периодов оплаты будет равно 4 x 12 (или 48).</span><span class="sxs-lookup"><span data-stu-id="93ee6-353">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="93ee6-354">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-354">Required.</span></span> <span data-ttu-id="93ee6-355">Значение типа <see langword="Double" />, определяющее платеж за каждый период.</span><span class="sxs-lookup"><span data-stu-id="93ee6-355"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="93ee6-356">Обычно платежи содержат основную сумму и проценты, которые не изменяются на протяжении периода действия аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-356">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="93ee6-357">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-357">Required.</span></span> <span data-ttu-id="93ee6-358">Значение типа <see langword="Double" />, задающее текущую сумму (или значение на сегодняшний день) серии будущих платежей или поступлений.</span><span class="sxs-lookup"><span data-stu-id="93ee6-358"><see langword="Double" /> specifies the present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="93ee6-359">Например, если для покупки автомобиля взят заем, то эта сумма представляет собой текущее значение предстоящих ежемесячных платежей за автомобиль.</span><span class="sxs-lookup"><span data-stu-id="93ee6-359">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="93ee6-360">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-360">Optional.</span></span> <span data-ttu-id="93ee6-361">Значение типа <see langword="Double" />, задающее требуемую будущую сумму или баланс наличности после уплаты последнего платежа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-361"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="93ee6-362">Например, будущее значение ссуды равно $0, поcкольку такова будет ее величина после последней выплаты.</span><span class="sxs-lookup"><span data-stu-id="93ee6-362">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="93ee6-363">Но если требуется собрать за 18 лет сумму в $50 000 на образование детей, то будущая сумма будет равна $50 000.</span><span class="sxs-lookup"><span data-stu-id="93ee6-363">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="93ee6-364">Если этот аргумент опущен, используется значение 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-364">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="93ee6-365">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-365">Optional.</span></span> <span data-ttu-id="93ee6-366">Объект типа <see cref="T:Microsoft.VisualBasic.DueDate" />, указывающий время выплат.</span><span class="sxs-lookup"><span data-stu-id="93ee6-366">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="93ee6-367">Этот аргумент должен равняться либо <c>DueDate.EndOfPeriod</c>, если выплаты должны производиться в конце периода, либо <c>DueDate.BegOfPeriod</c> в случае оплаты в начале периода.</span><span class="sxs-lookup"><span data-stu-id="93ee6-367">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="93ee6-368">Если аргумент не задан, используется значение <c>DueDate.EndOfPeriod</c>.</span><span class="sxs-lookup"><span data-stu-id="93ee6-368">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="93ee6-369">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="93ee6-369">Optional.</span></span> <span data-ttu-id="93ee6-370">Значение типа <see langword="Double" />, задающее оцениваемое значение и возвращаемое функцией <see langword="Rate" />.</span><span class="sxs-lookup"><span data-stu-id="93ee6-370"><see langword="Double" /> specifying value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="93ee6-371">Если этот параметр опущен, используется значение <c>Guess</c>, равное 0,1 (10 процентам).</span><span class="sxs-lookup"><span data-stu-id="93ee6-371">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="93ee6-372">Возвращает значение типа <see langword="Double" />, определяющее процентную ставку за период для аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-372">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="93ee6-373">Возвращает значение типа <see langword="Double" />, определяющее процентную ставку за период для аннуитета.</span><span class="sxs-lookup"><span data-stu-id="93ee6-373">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-374">Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-374">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="93ee6-375">Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).</span><span class="sxs-lookup"><span data-stu-id="93ee6-375">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="93ee6-376">Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.</span><span class="sxs-lookup"><span data-stu-id="93ee6-376">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="93ee6-377">`Rate` вычисляется путем итерации.</span><span class="sxs-lookup"><span data-stu-id="93ee6-377">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="93ee6-378">Начиная со значением `Guess`, `Rate` циклы вычисления, пока не получит результат с точностью 0,00001 процента.</span><span class="sxs-lookup"><span data-stu-id="93ee6-378">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="93ee6-379">Если `Rate` не удается найти результат после 20 пытается подключиться, она завершается.</span><span class="sxs-lookup"><span data-stu-id="93ee6-379">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="93ee6-380">Если guess составляет 10 процентов и `Rate` завершается ошибкой, попробуйте другое значение для `Guess`.</span><span class="sxs-lookup"><span data-stu-id="93ee6-380">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-381">В этом примере используется `Rate` функции для вычисления процентную ставку по кредиту Получает общее число выплат (`TotPmts`), сумма платежа кредитов (`Payment`), текущее значение или участника, от порядка (`PVal`), будущее значение порядка (`FVal`), число, определяющее момент платежа — начало или конец периода оплаты (`PayType`) и приблизительное ожидаемой процентной ставки (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-381">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-382"><paramref name="NPer" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-382"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="93ee6-383">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-383">Required.</span></span> <span data-ttu-id="93ee6-384">Значение типа <see langword="Double" />, указывающее начальную стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-384"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="93ee6-385">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-385">Required.</span></span> <span data-ttu-id="93ee6-386">Значение типа <see langword="Double" />, задающее стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="93ee6-386"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="93ee6-387">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-387">Required.</span></span> <span data-ttu-id="93ee6-388">Значение типа <see langword="Double" />, задающее срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-388"><see langword="Double" /> specifying length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="93ee6-389">Возвращает значение типа <see langword="Double" />, определяющее равномерную амортизацию актива за один период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-389">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="93ee6-390">Возвращает значение типа <see langword="Double" />, определяющее равномерную амортизацию актива за один период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-390">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-391">Период амортизации должны задаваться в одну и ту же единицу как `Life` аргумент.</span><span class="sxs-lookup"><span data-stu-id="93ee6-391">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="93ee6-392">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="93ee6-392">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-393">В этом примере используется `SLN` функция, возвращающая линейную амортизацию ресурса за один период времени; (`InitCost`), стоимость в конце срока полезного использования актива (`SalvageVal`) и всего жизненного цикла актива в годах (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-393">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-394"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-394"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="93ee6-395">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-395">Required.</span></span> <span data-ttu-id="93ee6-396">Значение типа <see langword="Double" />, указывающее начальную стоимость актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-396"><see langword="Double" /> specifying the initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="93ee6-397">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-397">Required.</span></span> <span data-ttu-id="93ee6-398">Значение типа <see langword="Double" />, задающее стоимость актива на момент окончания срока его эксплуатации.</span><span class="sxs-lookup"><span data-stu-id="93ee6-398"><see langword="Double" /> specifying the value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="93ee6-399">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-399">Required.</span></span> <span data-ttu-id="93ee6-400">Значение типа <see langword="Double" />, задающее срок эксплуатации актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-400"><see langword="Double" /> specifying the length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="93ee6-401">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="93ee6-401">Required.</span></span> <span data-ttu-id="93ee6-402">Значение типа <see langword="Double" />, задающее период расчета амортизации актива.</span><span class="sxs-lookup"><span data-stu-id="93ee6-402"><see langword="Double" /> specifying the period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="93ee6-403">Возвращает значение типа <see langword="Double" />, определяющее величину ускоренной амортизации актива за указанный период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-403">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="93ee6-404">Возвращает значение типа <see langword="Double" />, определяющее величину ускоренной амортизации актива за указанный период времени.</span><span class="sxs-lookup"><span data-stu-id="93ee6-404">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93ee6-405">`Life` И `Period` аргументы должны задаваться в одинаковых единицах измерения.</span><span class="sxs-lookup"><span data-stu-id="93ee6-405">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="93ee6-406">Например если `Life` задается в месяцах, `Period` также должен быть задан в месяцах.</span><span class="sxs-lookup"><span data-stu-id="93ee6-406">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="93ee6-407">Все аргументы должны быть положительными числами.</span><span class="sxs-lookup"><span data-stu-id="93ee6-407">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93ee6-408">В этом примере используется `SYD` функция, возвращающая амортизацию ресурса за указанный период времени; (`InitCost`), стоимость в конце срока полезного использования актива (`SalvageVal`) и полное время нормальной эксплуатации актива в лет (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="93ee6-408">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93ee6-409"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, или <paramref name="Period" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="93ee6-409"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
  </Members>
</Type>