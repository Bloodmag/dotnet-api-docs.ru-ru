<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a2def-101">В модуле <see langword="Information" /> содержатся процедуры, используемые для возврата, тестирования и проверки информации.</span><span class="sxs-lookup"><span data-stu-id="a2def-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-102">Этот модуль поддерживает ключевые слова языка Visual Basic и члены библиотеки времени выполнения, которые предоставляют сведения об ошибке, проверка данных, определение границ массива и получить сведения о данных тип и цвет.</span><span class="sxs-lookup"><span data-stu-id="a2def-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-103">В следующем примере используется `VbTypeName` функцию для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="a2def-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2def-104">Возвращает целое число, указывающее номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="a2def-104">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a2def-105">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a2def-105">Read-only.</span></span></summary>
        <returns><span data-ttu-id="a2def-106">Возвращает целое число, указывающее номер строки последнего выполненного оператора.</span><span class="sxs-lookup"><span data-stu-id="a2def-106">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a2def-107">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a2def-107">Read-only.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-108">Если Visual Basic не обнаруживает номера строки, она возвращает 0.</span><span class="sxs-lookup"><span data-stu-id="a2def-108">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-109">В этом примере используется `Erl` свойство, указывающее номер строки.</span><span class="sxs-lookup"><span data-stu-id="a2def-109">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2def-110">Содержит сведения об ошибках во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="a2def-110">Contains information about run-time errors.</span></span></summary>
        <returns><span data-ttu-id="a2def-111">Содержит сведения об ошибках во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="a2def-111">Contains information about run-time errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-112">Свойства `Err` объекта устанавливаются генератором ошибки — Visual Basic, объектом или программистом.</span><span class="sxs-lookup"><span data-stu-id="a2def-112">The properties of the `Err` object are set by the generator of an error—Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="a2def-113">При возникновении ошибки во время выполнения свойства `Err` объекта заполняются данными, который уникально идентифицирует ошибку, и можно использовать для обработки ошибки.</span><span class="sxs-lookup"><span data-stu-id="a2def-113">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="a2def-114">Чтобы создать ошибку во время выполнения в коде, используйте `Raise` метод.</span><span class="sxs-lookup"><span data-stu-id="a2def-114">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="a2def-115">`Err` Свойств объекта устанавливаются равными нулю или строка нулевой длины ("») после `Exit Sub`, `Exit Function`, `Exit Property`, или `Resume Next` инструкции подпрограммы обработки ошибок.</span><span class="sxs-lookup"><span data-stu-id="a2def-115">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="a2def-116">Использование форм `Resume` инструкции за пределами подпрограммы обработки ошибок не приведет к сбросу `Err` свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="a2def-116">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="a2def-117">Можно использовать `Clear` метод явно сбросить `Err`.</span><span class="sxs-lookup"><span data-stu-id="a2def-117">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="a2def-118">Используйте `Raise` метод вместо `Error` инструкции для создания ошибки во время выполнения для системных ошибок и модулей класса.</span><span class="sxs-lookup"><span data-stu-id="a2def-118">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="a2def-119">Решение о том, следует ли использовать `Raise` метода в другой код зависит от полноты информации, чтобы вернуть.</span><span class="sxs-lookup"><span data-stu-id="a2def-119">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="a2def-120">`Err` Объект является внутренним объектом глобальной области.</span><span class="sxs-lookup"><span data-stu-id="a2def-120">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="a2def-121">Таким образом необязательно создавать его экземпляр в коде.</span><span class="sxs-lookup"><span data-stu-id="a2def-121">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-122">В этом примере свойства `Err` объекта в формировании диалогового окна сообщения об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a2def-122">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="a2def-123">Обратите внимание, что при использовании `Clear` метод первый раз, когда создается ошибка Visual Basic с `Raise` метод, Visual Basic по умолчанию значения становятся свойства `Err` объекта.</span><span class="sxs-lookup"><span data-stu-id="a2def-123">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="a2def-124">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-124">Required.</span></span> <span data-ttu-id="a2def-125">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-125"><see langword="Object" /> variable.</span></span></param>
        <summary><span data-ttu-id="a2def-126">Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</span><span class="sxs-lookup"><span data-stu-id="a2def-126">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></summary>
        <returns><span data-ttu-id="a2def-127">Возвращает значение типа <see langword="Boolean" />, показывающее, указывает ли переменная на массив.</span><span class="sxs-lookup"><span data-stu-id="a2def-127">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-128">`IsArray` Возвращает `True` Если переменная указывает на массив; в противном случае он возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-128">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="a2def-129">`IsArray` особенно полезна для объектов, которые могут содержать массивы.</span><span class="sxs-lookup"><span data-stu-id="a2def-129">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-130">В этом примере используется `IsArray` функции для проверки того, указывают ли несколько переменных в массив.</span><span class="sxs-lookup"><span data-stu-id="a2def-130">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-131">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-131">Required.</span></span> <span data-ttu-id="a2def-132">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-132"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-133">Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-133">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="a2def-134">Возвращает значение <see langword="Boolean" />, показывающее, представляет ли выражение допустимое значение <see langword="Date" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-134">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-135">`IsDate` Возвращает `True` Если `Expression` имеет <xref:System.DateTime> данных введите или может быть преобразован к нему; в противном случае — возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-135">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="a2def-136"><xref:System.DateTime> Тип данных содержит значение даты и значения времени.</span><span class="sxs-lookup"><span data-stu-id="a2def-136">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="a2def-137">`IsDate` Возвращает `True` Если `Expression` представляет допустимую дату, допустимое время или допустимую дату и время.</span><span class="sxs-lookup"><span data-stu-id="a2def-137">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-138">В следующем примере используется `IsDate` функцию, чтобы определить, если несколько переменных представляет допустимое <xref:System.DateTime> значения.</span><span class="sxs-lookup"><span data-stu-id="a2def-138">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="a2def-139">В приведенном выше примере `IsDate` возвращает `True` для первых четырех вызовов и `False` для последнего вызова.</span><span class="sxs-lookup"><span data-stu-id="a2def-139">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-140">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-140">Required.</span></span> <span data-ttu-id="a2def-141">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-141"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-142">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-142">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></summary>
        <returns><span data-ttu-id="a2def-143">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к классу <see cref="T:System.DBNull" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-143">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-144">`IsDBNull` Возвращает `True` ли тип данных `Expression` равен <xref:System.DBNull> типа; в противном случае `IsDBNull` возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-144">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="a2def-145"><xref:System.DBNull?displayProperty=nameWithType> Значение указывает, что `Object` представляет отсутствующие или несуществующие данные.</span><span class="sxs-lookup"><span data-stu-id="a2def-145">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="a2def-146">`DBNull` не является таким же, как `Nothing`, указывающая, что переменная не была инициализирована.</span><span class="sxs-lookup"><span data-stu-id="a2def-146">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="a2def-147">`DBNull` также не является таким же, как строка нулевой длины (`""`), которые иногда называют пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="a2def-147">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-148">В этом примере используется `IsDBNull` функцию, чтобы определить, если переменная принимает значение `DBNull`.</span><span class="sxs-lookup"><span data-stu-id="a2def-148">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-149">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-149">Required.</span></span> <span data-ttu-id="a2def-150">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-150"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-151">Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</span><span class="sxs-lookup"><span data-stu-id="a2def-151">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></summary>
        <returns><span data-ttu-id="a2def-152">Возвращает значение типа <see langword="Boolean" />, указывающее, является ли выражение типом исключения.</span><span class="sxs-lookup"><span data-stu-id="a2def-152">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-153">`IsError` Возвращает `True` Если выражение представляет `Object` переменную, которая является производным от <xref:System.Exception> класса в <xref:System> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="a2def-153">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="a2def-154">Исключение, которое является производным от <xref:System.Exception?displayProperty=nameWithType> может быть перехвачено с `Try...Catch...Finally` инструкции.</span><span class="sxs-lookup"><span data-stu-id="a2def-154">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-155">В следующем примере используется `IsError` функции для проверки, если выражение представляет системное исключение.</span><span class="sxs-lookup"><span data-stu-id="a2def-155">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-156">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-156">Required.</span></span> <span data-ttu-id="a2def-157">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-157"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-158">Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</span><span class="sxs-lookup"><span data-stu-id="a2def-158">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></summary>
        <returns><span data-ttu-id="a2def-159">Возвращает значение <see langword="Boolean" />, показывающее отсутствует ли для выражения назначенный объект.</span><span class="sxs-lookup"><span data-stu-id="a2def-159">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-160">`IsNothing` Возвращает `True` Если выражение представляет объектную переменную, которая в настоящее время нет объекта, назначенный на него; в противном случае, он возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-160">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="a2def-161">`IsNothing` предназначен для работы со ссылочными типами.</span><span class="sxs-lookup"><span data-stu-id="a2def-161">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="a2def-162">Тип значения не может содержать значение и возвращается к значению по умолчанию, если назначить `Nothing` к нему.</span><span class="sxs-lookup"><span data-stu-id="a2def-162">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="a2def-163">При указании типа значения в `Expression`, `IsNothing` всегда возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-163">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-164">В следующем примере используется `IsNothing` функцию, чтобы определить, связан ли объектной переменной с любым экземпляром объекта.</span><span class="sxs-lookup"><span data-stu-id="a2def-164">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-165">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-165">Required.</span></span> <span data-ttu-id="a2def-166">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-166"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-167">Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</span><span class="sxs-lookup"><span data-stu-id="a2def-167">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></summary>
        <returns><span data-ttu-id="a2def-168">Возвращает значение типа <see langword="Boolean" />, указывающее, может ли выражение обрабатываться как число.</span><span class="sxs-lookup"><span data-stu-id="a2def-168">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-169">`IsNumeric` Возвращает `True` ли тип данных `Expression` — `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, или `UShort`.</span><span class="sxs-lookup"><span data-stu-id="a2def-169">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="a2def-170">Он также возвращает `True` Если `Expression` — `Char`, `String`, или `Object` , преобразуется в число.</span><span class="sxs-lookup"><span data-stu-id="a2def-170">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="a2def-171">`Expression` может содержать алфавитно цифровые символы.</span><span class="sxs-lookup"><span data-stu-id="a2def-171">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="a2def-172">`IsNumeric` Возвращает `True` Если `Expression` является строка, содержащая допустимое шестнадцатеричное или восьмеричное число.</span><span class="sxs-lookup"><span data-stu-id="a2def-172">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="a2def-173">`IsNumeric` также возвращает `True` Если `Expression` содержит допустимое числовое выражение, которое начинается с + или - символ или содержит запятые.</span><span class="sxs-lookup"><span data-stu-id="a2def-173">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="a2def-174">`IsNumeric` Возвращает `False` Если `Expression` относится к типу данных `Date`.</span><span class="sxs-lookup"><span data-stu-id="a2def-174">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="a2def-175">Он возвращает `False` Если `Expression` — `Char`, `String`, или `Object` , не может быть преобразован в число.</span><span class="sxs-lookup"><span data-stu-id="a2def-175">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-176">В следующем примере используется `IsNumeric` функцию, чтобы определить, может ли содержимое переменной обрабатываться как число.</span><span class="sxs-lookup"><span data-stu-id="a2def-176">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="a2def-177">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-177">Required.</span></span> <span data-ttu-id="a2def-178">Выражение <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-178"><see langword="Object" /> expression.</span></span></param>
        <summary><span data-ttu-id="a2def-179">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</span><span class="sxs-lookup"><span data-stu-id="a2def-179">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></summary>
        <returns><span data-ttu-id="a2def-180">Возвращает значение <see langword="Boolean" />, показывающее, относится ли выражение к ссылочному типу.</span><span class="sxs-lookup"><span data-stu-id="a2def-180">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-181">`IsReference` Возвращает `True` Если `Expression` представляет ссылочным типом, например экземпляр класса `String` типа или массив любого типа; в противном случае он возвращает `False`.</span><span class="sxs-lookup"><span data-stu-id="a2def-181">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="a2def-182">Ссылочный тип содержит указатель на данные, хранящиеся в другом месте в памяти.</span><span class="sxs-lookup"><span data-stu-id="a2def-182">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="a2def-183">Тип значения содержит свои собственные данные.</span><span class="sxs-lookup"><span data-stu-id="a2def-183">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-184">В этом примере используется `IsReference` функции для проверки того, указывают ли несколько переменных на ссылочные типы.</span><span class="sxs-lookup"><span data-stu-id="a2def-184">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="a2def-185">В предыдущем примере первые три вызова `IsReference` возвращают `True`.</span><span class="sxs-lookup"><span data-stu-id="a2def-185">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="a2def-186">Последний вызов возвращает `False`, так как `Integer` является типом значения, а не ссылочным типом.</span><span class="sxs-lookup"><span data-stu-id="a2def-186">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="a2def-187">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-187">Required.</span></span> <span data-ttu-id="a2def-188">Массив данных любого типа.</span><span class="sxs-lookup"><span data-stu-id="a2def-188">Array of any data type.</span></span> <span data-ttu-id="a2def-189">Массив, в котором осуществляется поиск минимального индекса измерения.</span><span class="sxs-lookup"><span data-stu-id="a2def-189">The array in which you want to find the lowest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="a2def-190">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="a2def-190">Optional.</span></span> <span data-ttu-id="a2def-191"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-191"><see langword="Integer" />.</span></span> <span data-ttu-id="a2def-192">Измерение, для которого возвращается минимальный индекс.</span><span class="sxs-lookup"><span data-stu-id="a2def-192">The dimension for which the lowest possible subscript is to be returned.</span></span> <span data-ttu-id="a2def-193">Используйте 1 для первого измерения, 2 — для второго и т. д.</span><span class="sxs-lookup"><span data-stu-id="a2def-193">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="a2def-194">Если параметр <c>Rank</c> не указан, используется значение 1.</span><span class="sxs-lookup"><span data-stu-id="a2def-194">If <c>Rank</c> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="a2def-195">Возвращает наименьший доступный индекс для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="a2def-195">Returns the lowest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns>
          <span data-ttu-id="a2def-196"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-196"><see langword="Integer" />.</span></span> <span data-ttu-id="a2def-197">Наименьшее значение, которое может содержать нижний индекс для указанного измерения.</span><span class="sxs-lookup"><span data-stu-id="a2def-197">The lowest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="a2def-198">После инициализации массива <paramref name="Array" /> метод <see langword="LBound" /> всегда возвращает значение 0, даже если массив не содержит элементов (например, является строкой нулевой длины).</span><span class="sxs-lookup"><span data-stu-id="a2def-198"><see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span></span> <span data-ttu-id="a2def-199">Если параметр <paramref name="Array" /> равен <see langword="Nothing" />, <see langword="LBound" /> вызывает исключение <see cref="T:System.ArgumentNullException" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-199">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-200">Поскольку значения индексов массива начинаются с 0, минимальный доступный индекс для любой размерности всегда равен 0.</span><span class="sxs-lookup"><span data-stu-id="a2def-200">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="a2def-201">Для массива со следующими измерениями `LBound` возвращает значения в следующей таблице:</span><span class="sxs-lookup"><span data-stu-id="a2def-201">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="a2def-202">Вызов LBound</span><span class="sxs-lookup"><span data-stu-id="a2def-202">Call to LBound</span></span>|<span data-ttu-id="a2def-203">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="a2def-203">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="a2def-204">0</span><span class="sxs-lookup"><span data-stu-id="a2def-204">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="a2def-205">0</span><span class="sxs-lookup"><span data-stu-id="a2def-205">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="a2def-206">0</span><span class="sxs-lookup"><span data-stu-id="a2def-206">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a2def-207">В следующем примере используется `LBound` функцию, чтобы определить минимальный доступный индекс для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="a2def-207">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2def-208">Свойство <paramref name="Array" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-208"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="a2def-209">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-209"><paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color"><span data-ttu-id="a2def-210">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-210">Required.</span></span> <span data-ttu-id="a2def-211">Целое число от 0 до 15.</span><span class="sxs-lookup"><span data-stu-id="a2def-211">A whole number in the range 0–15.</span></span></param>
        <summary><span data-ttu-id="a2def-212">Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-212">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></summary>
        <returns><span data-ttu-id="a2def-213">Возвращает значение типа <see langword="Integer" />, представляющее RGB-код цвета, соответствующего указанному номеру цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-213">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-214">Начиная с наименьшего байта, возвращаемое значение указывает значения красного, зеленого и синего, используемые для установки соответствующего цвета в системе RGB, используемых в языке Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="a2def-214">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="a2def-215">`Color` Имеет следующие параметры.</span><span class="sxs-lookup"><span data-stu-id="a2def-215">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="a2def-216">Число</span><span class="sxs-lookup"><span data-stu-id="a2def-216">Number</span></span>|<span data-ttu-id="a2def-217">Цвет</span><span class="sxs-lookup"><span data-stu-id="a2def-217">Color</span></span>|<span data-ttu-id="a2def-218">Число</span><span class="sxs-lookup"><span data-stu-id="a2def-218">Number</span></span>|<span data-ttu-id="a2def-219">Цвет</span><span class="sxs-lookup"><span data-stu-id="a2def-219">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="a2def-220">0</span><span class="sxs-lookup"><span data-stu-id="a2def-220">0</span></span>|<span data-ttu-id="a2def-221">Черный</span><span class="sxs-lookup"><span data-stu-id="a2def-221">Black</span></span>|<span data-ttu-id="a2def-222">8</span><span class="sxs-lookup"><span data-stu-id="a2def-222">8</span></span>|<span data-ttu-id="a2def-223">Серый</span><span class="sxs-lookup"><span data-stu-id="a2def-223">Gray</span></span>|  
|<span data-ttu-id="a2def-224">1</span><span class="sxs-lookup"><span data-stu-id="a2def-224">1</span></span>|<span data-ttu-id="a2def-225">Синий</span><span class="sxs-lookup"><span data-stu-id="a2def-225">Blue</span></span>|<span data-ttu-id="a2def-226">9</span><span class="sxs-lookup"><span data-stu-id="a2def-226">9</span></span>|<span data-ttu-id="a2def-227">Светло-синим цветом</span><span class="sxs-lookup"><span data-stu-id="a2def-227">Light blue</span></span>|  
|<span data-ttu-id="a2def-228">2</span><span class="sxs-lookup"><span data-stu-id="a2def-228">2</span></span>|<span data-ttu-id="a2def-229">Зеленый</span><span class="sxs-lookup"><span data-stu-id="a2def-229">Green</span></span>|<span data-ttu-id="a2def-230">10</span><span class="sxs-lookup"><span data-stu-id="a2def-230">10</span></span>|<span data-ttu-id="a2def-231">Светло-зеленый</span><span class="sxs-lookup"><span data-stu-id="a2def-231">Light green</span></span>|  
|<span data-ttu-id="a2def-232">3</span><span class="sxs-lookup"><span data-stu-id="a2def-232">3</span></span>|<span data-ttu-id="a2def-233">Голубой</span><span class="sxs-lookup"><span data-stu-id="a2def-233">Cyan</span></span>|<span data-ttu-id="a2def-234">11</span><span class="sxs-lookup"><span data-stu-id="a2def-234">11</span></span>|<span data-ttu-id="a2def-235">Светло-бирюзовый</span><span class="sxs-lookup"><span data-stu-id="a2def-235">Light cyan</span></span>|  
|<span data-ttu-id="a2def-236">4</span><span class="sxs-lookup"><span data-stu-id="a2def-236">4</span></span>|<span data-ttu-id="a2def-237">Красный</span><span class="sxs-lookup"><span data-stu-id="a2def-237">Red</span></span>|<span data-ttu-id="a2def-238">12</span><span class="sxs-lookup"><span data-stu-id="a2def-238">12</span></span>|<span data-ttu-id="a2def-239">Светло-красный</span><span class="sxs-lookup"><span data-stu-id="a2def-239">Light red</span></span>|  
|<span data-ttu-id="a2def-240">5</span><span class="sxs-lookup"><span data-stu-id="a2def-240">5</span></span>|<span data-ttu-id="a2def-241">Пурпурный</span><span class="sxs-lookup"><span data-stu-id="a2def-241">Magenta</span></span>|<span data-ttu-id="a2def-242">13</span><span class="sxs-lookup"><span data-stu-id="a2def-242">13</span></span>|<span data-ttu-id="a2def-243">Светло-пурпурный</span><span class="sxs-lookup"><span data-stu-id="a2def-243">Light magenta</span></span>|  
|<span data-ttu-id="a2def-244">6</span><span class="sxs-lookup"><span data-stu-id="a2def-244">6</span></span>|<span data-ttu-id="a2def-245">Желтый</span><span class="sxs-lookup"><span data-stu-id="a2def-245">Yellow</span></span>|<span data-ttu-id="a2def-246">14</span><span class="sxs-lookup"><span data-stu-id="a2def-246">14</span></span>|<span data-ttu-id="a2def-247">Светло-желтый</span><span class="sxs-lookup"><span data-stu-id="a2def-247">Light yellow</span></span>|  
|<span data-ttu-id="a2def-248">7</span><span class="sxs-lookup"><span data-stu-id="a2def-248">7</span></span>|<span data-ttu-id="a2def-249">Белый</span><span class="sxs-lookup"><span data-stu-id="a2def-249">White</span></span>|<span data-ttu-id="a2def-250">15</span><span class="sxs-lookup"><span data-stu-id="a2def-250">15</span></span>|<span data-ttu-id="a2def-251">Яркий белый</span><span class="sxs-lookup"><span data-stu-id="a2def-251">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a2def-252">В этом примере используется `QBColor` функции для изменения цвета, обозначенном `colorInteger`.</span><span class="sxs-lookup"><span data-stu-id="a2def-252">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="a2def-253">`QBColor` принимает целочисленные значения от 0 до 15.</span><span class="sxs-lookup"><span data-stu-id="a2def-253">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2def-254">Параметр <paramref name="Color" /> находится вне диапазона от 0 до 15 включительно.</span><span class="sxs-lookup"><span data-stu-id="a2def-254"><paramref name="Color" /> is outside of range 0 to 15, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red"><span data-ttu-id="a2def-255">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-255">Required.</span></span> <span data-ttu-id="a2def-256">Значение типа <see langword="Integer" /> в диапазоне 0-255 включительно, представляющее интенсивность красного компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-256"><see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</span></span></param>
        <param name="Green"><span data-ttu-id="a2def-257">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-257">Required.</span></span> <span data-ttu-id="a2def-258">Значение типа <see langword="Integer" /> в диапазоне 0-255 включительно, представляющее интенсивность зеленого компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-258"><see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</span></span></param>
        <param name="Blue"><span data-ttu-id="a2def-259">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-259">Required.</span></span> <span data-ttu-id="a2def-260">Значение типа <see langword="Integer" /> в диапазоне 0-255 включительно, представляющее интенсивность синего компонента цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-260"><see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</span></span></param>
        <summary><span data-ttu-id="a2def-261">Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-261">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></summary>
        <returns><span data-ttu-id="a2def-262">Возвращает значение типа <see langword="Integer" />, представляющее RGB-значение цвета, состоящее из набора красного, зеленого и синего компонентов цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-262">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-263">Методы и свойства, принимающие цвета приложения ожидают, что значение цвета спецификации число, представляющее RGB.</span><span class="sxs-lookup"><span data-stu-id="a2def-263">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="a2def-264">Значение RGB указывает относительную интенсивность красного, зеленого и синего цвета для отображения.</span><span class="sxs-lookup"><span data-stu-id="a2def-264">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="a2def-265">Если значение любого из аргументов `RGB` больше 255, используется значение 255.</span><span class="sxs-lookup"><span data-stu-id="a2def-265">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="a2def-266">В следующей таблице перечислены некоторые стандартные цвета и красного, зеленого и синего значения, которые они содержат.</span><span class="sxs-lookup"><span data-stu-id="a2def-266">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="a2def-267">Цвет</span><span class="sxs-lookup"><span data-stu-id="a2def-267">Color</span></span>|<span data-ttu-id="a2def-268">Значение красного</span><span class="sxs-lookup"><span data-stu-id="a2def-268">Red value</span></span>|<span data-ttu-id="a2def-269">Значение зеленого</span><span class="sxs-lookup"><span data-stu-id="a2def-269">Green value</span></span>|<span data-ttu-id="a2def-270">Значение синего</span><span class="sxs-lookup"><span data-stu-id="a2def-270">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="a2def-271">Черный</span><span class="sxs-lookup"><span data-stu-id="a2def-271">Black</span></span>|<span data-ttu-id="a2def-272">0</span><span class="sxs-lookup"><span data-stu-id="a2def-272">0</span></span>|<span data-ttu-id="a2def-273">0</span><span class="sxs-lookup"><span data-stu-id="a2def-273">0</span></span>|<span data-ttu-id="a2def-274">0</span><span class="sxs-lookup"><span data-stu-id="a2def-274">0</span></span>|  
|<span data-ttu-id="a2def-275">Синий</span><span class="sxs-lookup"><span data-stu-id="a2def-275">Blue</span></span>|<span data-ttu-id="a2def-276">0</span><span class="sxs-lookup"><span data-stu-id="a2def-276">0</span></span>|<span data-ttu-id="a2def-277">0</span><span class="sxs-lookup"><span data-stu-id="a2def-277">0</span></span>|<span data-ttu-id="a2def-278">255</span><span class="sxs-lookup"><span data-stu-id="a2def-278">255</span></span>|  
|<span data-ttu-id="a2def-279">Зеленый</span><span class="sxs-lookup"><span data-stu-id="a2def-279">Green</span></span>|<span data-ttu-id="a2def-280">0</span><span class="sxs-lookup"><span data-stu-id="a2def-280">0</span></span>|<span data-ttu-id="a2def-281">255</span><span class="sxs-lookup"><span data-stu-id="a2def-281">255</span></span>|<span data-ttu-id="a2def-282">0</span><span class="sxs-lookup"><span data-stu-id="a2def-282">0</span></span>|  
|<span data-ttu-id="a2def-283">Голубой</span><span class="sxs-lookup"><span data-stu-id="a2def-283">Cyan</span></span>|<span data-ttu-id="a2def-284">0</span><span class="sxs-lookup"><span data-stu-id="a2def-284">0</span></span>|<span data-ttu-id="a2def-285">255</span><span class="sxs-lookup"><span data-stu-id="a2def-285">255</span></span>|<span data-ttu-id="a2def-286">255</span><span class="sxs-lookup"><span data-stu-id="a2def-286">255</span></span>|  
|<span data-ttu-id="a2def-287">Красный</span><span class="sxs-lookup"><span data-stu-id="a2def-287">Red</span></span>|<span data-ttu-id="a2def-288">255</span><span class="sxs-lookup"><span data-stu-id="a2def-288">255</span></span>|<span data-ttu-id="a2def-289">0</span><span class="sxs-lookup"><span data-stu-id="a2def-289">0</span></span>|<span data-ttu-id="a2def-290">0</span><span class="sxs-lookup"><span data-stu-id="a2def-290">0</span></span>|  
|<span data-ttu-id="a2def-291">Пурпурный</span><span class="sxs-lookup"><span data-stu-id="a2def-291">Magenta</span></span>|<span data-ttu-id="a2def-292">255</span><span class="sxs-lookup"><span data-stu-id="a2def-292">255</span></span>|<span data-ttu-id="a2def-293">0</span><span class="sxs-lookup"><span data-stu-id="a2def-293">0</span></span>|<span data-ttu-id="a2def-294">255</span><span class="sxs-lookup"><span data-stu-id="a2def-294">255</span></span>|  
|<span data-ttu-id="a2def-295">Желтый</span><span class="sxs-lookup"><span data-stu-id="a2def-295">Yellow</span></span>|<span data-ttu-id="a2def-296">255</span><span class="sxs-lookup"><span data-stu-id="a2def-296">255</span></span>|<span data-ttu-id="a2def-297">255</span><span class="sxs-lookup"><span data-stu-id="a2def-297">255</span></span>|<span data-ttu-id="a2def-298">0</span><span class="sxs-lookup"><span data-stu-id="a2def-298">0</span></span>|  
|<span data-ttu-id="a2def-299">Белый</span><span class="sxs-lookup"><span data-stu-id="a2def-299">White</span></span>|<span data-ttu-id="a2def-300">255</span><span class="sxs-lookup"><span data-stu-id="a2def-300">255</span></span>|<span data-ttu-id="a2def-301">255</span><span class="sxs-lookup"><span data-stu-id="a2def-301">255</span></span>|<span data-ttu-id="a2def-302">255</span><span class="sxs-lookup"><span data-stu-id="a2def-302">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a2def-303">В этом примере показано, как `RGB` функция используется для возврата объект, представляющий целое число `RGB` значение цвета.</span><span class="sxs-lookup"><span data-stu-id="a2def-303">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2def-304"><paramref name="Green" />, <paramref name="Blue" /> или <paramref name="Red" /> находятся вне диапазона от 0 до 255 включительно.</span><span class="sxs-lookup"><span data-stu-id="a2def-304"><paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName"><span data-ttu-id="a2def-305">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-305">Required.</span></span> <span data-ttu-id="a2def-306">Переменная типа <see langword="String" />, содержащая имя типа Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="a2def-306">A <see langword="String" /> variable containing a Visual Basic type name.</span></span></param>
        <summary><span data-ttu-id="a2def-307">Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-307">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="a2def-308">Возвращает значение типа <see langword="String" />, содержащее имя системного типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-308">Returns a <see langword="String" /> value containing the system data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-309">`SystemTypeName` Возвращает полное общих языка среды выполнения (CLR) имя типа с именем типа Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="a2def-309">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="a2def-310">Например если `VbName` содержит «Date», `SystemTypeName` возвращает «System.DateTime».</span><span class="sxs-lookup"><span data-stu-id="a2def-310">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="a2def-311">Если `SystemTypeName` не распознает значение `VbName`, она возвращает `Nothing` (не строка «Nothing»).</span><span class="sxs-lookup"><span data-stu-id="a2def-311">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-312">В следующем примере используется `SystemTypeName` функцию для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="a2def-312">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="a2def-313">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-313">Required.</span></span> <span data-ttu-id="a2def-314">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-314"><see langword="Object" /> variable.</span></span> <span data-ttu-id="a2def-315">Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</span><span class="sxs-lookup"><span data-stu-id="a2def-315">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="a2def-316">Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-316">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></summary>
        <returns><span data-ttu-id="a2def-317">Возвращает значение типа <see langword="String" />, содержащее сведения о типе данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-317">Returns a <see langword="String" /> value containing data-type information about a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-318">В следующей таблице показаны `String` значения, возвращаемые методом `TypeName` для различного содержимого `VarName`.</span><span class="sxs-lookup"><span data-stu-id="a2def-318">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="a2def-319">`VarName` Содержание</span><span class="sxs-lookup"><span data-stu-id="a2def-319">`VarName` contents</span></span>|<span data-ttu-id="a2def-320">Возвращаемая строка</span><span class="sxs-lookup"><span data-stu-id="a2def-320">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="a2def-321">16-разрядное `True` или `False` тип значения</span><span class="sxs-lookup"><span data-stu-id="a2def-321">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="a2def-322">«Boolean»</span><span class="sxs-lookup"><span data-stu-id="a2def-322">"Boolean"</span></span>|  
|<span data-ttu-id="a2def-323">8-битовое значение типа</span><span class="sxs-lookup"><span data-stu-id="a2def-323">8-bit binary value type</span></span>|<span data-ttu-id="a2def-324">«Байт»</span><span class="sxs-lookup"><span data-stu-id="a2def-324">"Byte"</span></span>|  
|<span data-ttu-id="a2def-325">16-разрядный символ типа значения</span><span class="sxs-lookup"><span data-stu-id="a2def-325">16-bit character value type</span></span>|<span data-ttu-id="a2def-326">«Char»</span><span class="sxs-lookup"><span data-stu-id="a2def-326">"Char"</span></span>|  
|<span data-ttu-id="a2def-327">Введите значение 64-разрядных даты и времени</span><span class="sxs-lookup"><span data-stu-id="a2def-327">64-bit date and time value type</span></span>|<span data-ttu-id="a2def-328">«Date»</span><span class="sxs-lookup"><span data-stu-id="a2def-328">"Date"</span></span>|  
|<span data-ttu-id="a2def-329">Ссылочный тип, указывающий данных отсутствует или не существует</span><span class="sxs-lookup"><span data-stu-id="a2def-329">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="a2def-330">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="a2def-330">"DBNull"</span></span>|  
|<span data-ttu-id="a2def-331">числовое значение с фиксированной запятой 128-разрядный тип</span><span class="sxs-lookup"><span data-stu-id="a2def-331">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="a2def-332">«Десятичное число»</span><span class="sxs-lookup"><span data-stu-id="a2def-332">"Decimal"</span></span>|  
|<span data-ttu-id="a2def-333">64-разрядное значение с плавающей запятой числового типа</span><span class="sxs-lookup"><span data-stu-id="a2def-333">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="a2def-334">«Double»</span><span class="sxs-lookup"><span data-stu-id="a2def-334">"Double"</span></span>|  
|<span data-ttu-id="a2def-335">Тип значения для 32-разрядное целое число</span><span class="sxs-lookup"><span data-stu-id="a2def-335">32-bit integer value type</span></span>|<span data-ttu-id="a2def-336">«Целое число»</span><span class="sxs-lookup"><span data-stu-id="a2def-336">"Integer"</span></span>|  
|<span data-ttu-id="a2def-337">Ссылочный тип, указывающий на неспециализированный объект</span><span class="sxs-lookup"><span data-stu-id="a2def-337">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="a2def-338">«Объект»</span><span class="sxs-lookup"><span data-stu-id="a2def-338">"Object"</span></span>|  
|<span data-ttu-id="a2def-339">Ссылочный тип, указывающий на специализированный объект, созданный из класса *objectclass*</span><span class="sxs-lookup"><span data-stu-id="a2def-339">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="a2def-340">«*objectclass*»</span><span class="sxs-lookup"><span data-stu-id="a2def-340">"*objectclass*"</span></span>|  
|<span data-ttu-id="a2def-341">Тип значения 64-разрядное целое число</span><span class="sxs-lookup"><span data-stu-id="a2def-341">64-bit integer value type</span></span>|<span data-ttu-id="a2def-342">«Long»</span><span class="sxs-lookup"><span data-stu-id="a2def-342">"Long"</span></span>|  
|<span data-ttu-id="a2def-343">Ссылочный тип с к нему в настоящее время назначен ни один из объектов</span><span class="sxs-lookup"><span data-stu-id="a2def-343">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="a2def-344">«Nothing»</span><span class="sxs-lookup"><span data-stu-id="a2def-344">"Nothing"</span></span>|  
|<span data-ttu-id="a2def-345">Тип значения в 8-разрядное целое число со знаком</span><span class="sxs-lookup"><span data-stu-id="a2def-345">8-bit signed integer value type</span></span>|<span data-ttu-id="a2def-346">«SByte»</span><span class="sxs-lookup"><span data-stu-id="a2def-346">"SByte"</span></span>|  
|<span data-ttu-id="a2def-347">Тип значения 16-разрядное целое число</span><span class="sxs-lookup"><span data-stu-id="a2def-347">16-bit integer value type</span></span>|<span data-ttu-id="a2def-348">«Короткий»</span><span class="sxs-lookup"><span data-stu-id="a2def-348">"Short"</span></span>|  
|<span data-ttu-id="a2def-349">Тип 32-разрядное числовое значение с плавающей запятой</span><span class="sxs-lookup"><span data-stu-id="a2def-349">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="a2def-350">«Один»</span><span class="sxs-lookup"><span data-stu-id="a2def-350">"Single"</span></span>|  
|<span data-ttu-id="a2def-351">Ссылочный тип, указывающий на строку 16-разрядных символов</span><span class="sxs-lookup"><span data-stu-id="a2def-351">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="a2def-352">«Строка»</span><span class="sxs-lookup"><span data-stu-id="a2def-352">"String"</span></span>|  
|<span data-ttu-id="a2def-353">Тип значения для 32-разрядное целое число без знака</span><span class="sxs-lookup"><span data-stu-id="a2def-353">32-bit unsigned integer value type</span></span>|<span data-ttu-id="a2def-354">«UInteger»</span><span class="sxs-lookup"><span data-stu-id="a2def-354">"UInteger"</span></span>|  
|<span data-ttu-id="a2def-355">Тип значения 64-разрядное целое число без знака</span><span class="sxs-lookup"><span data-stu-id="a2def-355">64-bit unsigned integer value type</span></span>|<span data-ttu-id="a2def-356">«ULong»</span><span class="sxs-lookup"><span data-stu-id="a2def-356">"ULong"</span></span>|  
|<span data-ttu-id="a2def-357">Тип значения 16-разрядное целое число без знака</span><span class="sxs-lookup"><span data-stu-id="a2def-357">16-bit unsigned integer value type</span></span>|<span data-ttu-id="a2def-358">«UShort»</span><span class="sxs-lookup"><span data-stu-id="a2def-358">"UShort"</span></span>|  
  
 <span data-ttu-id="a2def-359">Если `VarName` является массивом, возвращаемая строка может быть одной из строк в таблице выше с пустыми скобками.</span><span class="sxs-lookup"><span data-stu-id="a2def-359">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="a2def-360">Например если `VarName` указывает на массив целых чисел, `TypeName` возвращает «Integer()».</span><span class="sxs-lookup"><span data-stu-id="a2def-360">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="a2def-361">Если `TypeName` возвращает имя ссылочного типа, например класс, она возвращает только имя, не полное имя.</span><span class="sxs-lookup"><span data-stu-id="a2def-361">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="a2def-362">Например если `VarName` указывает на объект класса <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` возвращает «PaperSource».</span><span class="sxs-lookup"><span data-stu-id="a2def-362">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="a2def-363">Обратите внимание, что если переменная объявлена с определенным типом класса, но не назначен объект, `TypeName` возвращает «Nothing».</span><span class="sxs-lookup"><span data-stu-id="a2def-363">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-364">В следующем примере используется `TypeName` функция, возвращающая данные о нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="a2def-364">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array"><span data-ttu-id="a2def-365">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-365">Required.</span></span> <span data-ttu-id="a2def-366">Массив данных любого типа.</span><span class="sxs-lookup"><span data-stu-id="a2def-366">Array of any data type.</span></span> <span data-ttu-id="a2def-367">Массив, в котором осуществляется поиск наибольшего индекса измерения.</span><span class="sxs-lookup"><span data-stu-id="a2def-367">The array in which you want to find the highest possible subscript of a dimension.</span></span></param>
        <param name="Rank"><span data-ttu-id="a2def-368">Необязательный.</span><span class="sxs-lookup"><span data-stu-id="a2def-368">Optional.</span></span> <span data-ttu-id="a2def-369"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-369"><see langword="Integer" />.</span></span> <span data-ttu-id="a2def-370">Измерение, для которого возвращается максимальный индекс.</span><span class="sxs-lookup"><span data-stu-id="a2def-370">The dimension for which the highest possible subscript is to be returned.</span></span> <span data-ttu-id="a2def-371">Используйте 1 для первого измерения, 2 — для второго и т. д.</span><span class="sxs-lookup"><span data-stu-id="a2def-371">Use 1 for the first dimension, 2 for the second, and so on.</span></span> <span data-ttu-id="a2def-372">Если параметр <c>Rank</c> не указан, используется значение 1.</span><span class="sxs-lookup"><span data-stu-id="a2def-372">If <c>Rank</c> is omitted, 1 is assumed.</span></span></param>
        <summary><span data-ttu-id="a2def-373">Возвращает наибольший доступный индекс для указанной размерности массива.</span><span class="sxs-lookup"><span data-stu-id="a2def-373">Returns the highest available subscript for the indicated dimension of an array.</span></span></summary>
        <returns>
          <span data-ttu-id="a2def-374"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-374"><see langword="Integer" />.</span></span> <span data-ttu-id="a2def-375">Может содержать самое большое значение нижнего индекса для указанного измерения.</span><span class="sxs-lookup"><span data-stu-id="a2def-375">The highest value the subscript for the specified dimension can contain.</span></span> <span data-ttu-id="a2def-376">Если массив <paramref name="Array" /> содержит ровно один элемент, метод <see langword="UBound" /> возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="a2def-376">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span></span> <span data-ttu-id="a2def-377">Если массив <paramref name="Array" /> не содержит элементов (например, является строкой нулевой длины), метод <see langword="UBound" /> возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="a2def-377">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-378">Поскольку значения индексов массива начинаются с 0, длина измерения превышает наибольший доступный индекс для этого измерения единицу.</span><span class="sxs-lookup"><span data-stu-id="a2def-378">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="a2def-379">Для массива со следующими измерениями `UBound` возвращает значения в следующей таблице:</span><span class="sxs-lookup"><span data-stu-id="a2def-379">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="a2def-380">Вызов UBound</span><span class="sxs-lookup"><span data-stu-id="a2def-380">Call to UBound</span></span>|<span data-ttu-id="a2def-381">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="a2def-381">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="a2def-382">100</span><span class="sxs-lookup"><span data-stu-id="a2def-382">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="a2def-383">5</span><span class="sxs-lookup"><span data-stu-id="a2def-383">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="a2def-384">4</span><span class="sxs-lookup"><span data-stu-id="a2def-384">4</span></span>|  
  
 <span data-ttu-id="a2def-385">Можно использовать `UBound` определить общее число элементов в массиве, но необходимо скорректировать значение для учета того факта, что значения индексов начинаются с 0.</span><span class="sxs-lookup"><span data-stu-id="a2def-385">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="a2def-386">В следующем примере вычисляется общий размер массива `a` в предыдущем примере:</span><span class="sxs-lookup"><span data-stu-id="a2def-386">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="a2def-387">Значение вычисляется для `total` равно 3030, что 101 * 6 * 5.</span><span class="sxs-lookup"><span data-stu-id="a2def-387">The value calculated for `total` is 3030, which is 101 * 6 * 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-388">В следующем примере используется `UBound` функцию, чтобы определить наибольший доступный индекс для указанного измерения массива.</span><span class="sxs-lookup"><span data-stu-id="a2def-388">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2def-389">Свойство <paramref name="Array" /> имеет значение <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-389"><paramref name="Array" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="a2def-390">Параметр <paramref name="Rank" /> меньше 1 или <paramref name="Rank" /> превышает ранг <paramref name="Array" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-390"><paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName"><span data-ttu-id="a2def-391">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-391">Required.</span></span> <span data-ttu-id="a2def-392">Переменная <see langword="Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2def-392"><see langword="Object" /> variable.</span></span> <span data-ttu-id="a2def-393">Если <see langword="Option Strict" /> имеет значение <see langword="Off" />, разрешается передача переменной с любым типом данных, за исключением структуры.</span><span class="sxs-lookup"><span data-stu-id="a2def-393">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span></span></param>
        <summary><span data-ttu-id="a2def-394">Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-394">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></summary>
        <returns><span data-ttu-id="a2def-395">Возвращает значение типа <see langword="Integer" />, содержащее классификацию типа данных переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-395">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-396">Целочисленное значение, возвращаемое `VarType` является членом <xref:Microsoft.VisualBasic.VariantType>.</span><span class="sxs-lookup"><span data-stu-id="a2def-396">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="a2def-397">В следующей таблице показаны значения, возвращаемые методом `VarType` для особых случаев `VarName`.</span><span class="sxs-lookup"><span data-stu-id="a2def-397">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="a2def-398">Тип данных, представленный `VarName`</span><span class="sxs-lookup"><span data-stu-id="a2def-398">Data type represented by `VarName`</span></span>|<span data-ttu-id="a2def-399">Значение, возвращаемое `VarType`</span><span class="sxs-lookup"><span data-stu-id="a2def-399">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="a2def-400">Nothing</span><span class="sxs-lookup"><span data-stu-id="a2def-400">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="a2def-401">Перечисление</span><span class="sxs-lookup"><span data-stu-id="a2def-401">Enumeration</span></span>|<span data-ttu-id="a2def-402">Базовый тип данных (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, или `ULong`)</span><span class="sxs-lookup"><span data-stu-id="a2def-402">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="a2def-403">Массив</span><span class="sxs-lookup"><span data-stu-id="a2def-403">Array</span></span>|<span data-ttu-id="a2def-404">Побитовый оператор или тип элемента массива и `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="a2def-404">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="a2def-405">Массив массивов</span><span class="sxs-lookup"><span data-stu-id="a2def-405">Array of arrays</span></span>|<span data-ttu-id="a2def-406">Побитовое или `VariantType.Object` и `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="a2def-406">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="a2def-407">Структура (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="a2def-407">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="a2def-408">Неизвестно</span><span class="sxs-lookup"><span data-stu-id="a2def-408">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="a2def-409">В следующем примере используется `VarType` функции для возврата сведений о нескольких переменных классификации типа данных.</span><span class="sxs-lookup"><span data-stu-id="a2def-409">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName"><span data-ttu-id="a2def-410">Обязательно.</span><span class="sxs-lookup"><span data-stu-id="a2def-410">Required.</span></span> <span data-ttu-id="a2def-411">Переменная типа <see langword="String" />, содержащая имя типа, используемое средой CLR.</span><span class="sxs-lookup"><span data-stu-id="a2def-411"><see langword="String" /> variable containing a type name used by the common language runtime.</span></span></param>
        <summary><span data-ttu-id="a2def-412">Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-412">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></summary>
        <returns><span data-ttu-id="a2def-413">Возвращает значение типа <see langword="String" />, содержащее имя типа данных Visual Basic для переменной.</span><span class="sxs-lookup"><span data-stu-id="a2def-413">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2def-414">`VbTypeName` Возвращает имя типа Visual Basic, соответствующее имя типа среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="a2def-414">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="a2def-415">Например если `UrtName` содержит «Int32» или «System.Int32» `VbTypeName` возвращает «Integer».</span><span class="sxs-lookup"><span data-stu-id="a2def-415">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="a2def-416">Если `VbTypeName` не распознает значение `UrtName`, она возвращает `Nothing` (не строка «Nothing»).</span><span class="sxs-lookup"><span data-stu-id="a2def-416">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="a2def-417">Имя типа в `UrtName` можно получить из разных источников, например из <xref:System.Reflection.MemberInfo.Name%2A> свойство в <xref:System.Reflection.MemberInfo> массив <xref:System.Type> класса.</span><span class="sxs-lookup"><span data-stu-id="a2def-417">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2def-418">В следующем примере используется `VbTypeName` функцию для возврата имен типов данных для нескольких переменных.</span><span class="sxs-lookup"><span data-stu-id="a2def-418">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>