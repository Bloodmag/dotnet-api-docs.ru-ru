<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Strings.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f6b720a5c53d27944cd3cd053d3b53983622209fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b720a5c53d27944cd3cd053d3b53983622209fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>The <ph id="ph1">&lt;see langword="Strings" /&gt;</ph> module contains procedures used to perform string operations.</source>
          <target state="translated">В модуле <ph id="ph1">&lt;see langword="Strings" /&gt;</ph> содержатся процедуры, используемые для выполнения операций над строками.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Strings">
          <source>This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</source>
          <target state="translated">Этот модуль поддерживает ключевые слова языка Visual Basic и члены библиотеки времени выполнения, работы со строками.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Strings">
          <source>The following example demonstrates how to split a string at its spaces.</source>
          <target state="translated">В следующем примере показано, как для разбиения строки относительно пробелов.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="Char" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> — выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, в качестве входного значения используется только первый символ строки.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> или не содержит знаков, возникает ошибка <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> Возвращает <bpt id="p1">*</bpt>кодовой<ept id="p1">*</ept>, или код символа, для входного символа.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Это может быть от 0 до 255 для однобайтовой кодировки (SBCS) и значения от -32768 до 32767 для двухбайтовой кодировки (DBCS) значения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> Возвращает кодовую точку Юникода для входного символа.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Это может быть от 0 до 65535.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph> Функция более ранних версиях Visual Basic возвращает код для байта, вместо символа.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`AscB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Asc`</ph> функция, возвращающая <ph id="ph2">`Integer`</ph> символов коды соответствующий первую букву в каждой строке.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="Char" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> — выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, в качестве входного значения используется только первый символ строки.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> или не содержит знаков, возникает ошибка <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> Возвращает <bpt id="p1">*</bpt>кодовой<ept id="p1">*</ept>, или код символа, для входного символа.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Это может быть от 0 до 255 для однобайтовой кодировки (SBCS) и значения от -32768 до 32767 для двухбайтовой кодировки (DBCS) значения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> Возвращает кодовую точку Юникода для входного символа.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Это может быть от 0 до 65535.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph> Функция более ранних версиях Visual Basic возвращает код для байта, вместо символа.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`AscB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Asc`</ph> функция, возвращающая <ph id="ph2">`Integer`</ph> символов коды соответствующий первую букву в каждой строке.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="Char" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> — выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, в качестве входного значения используется только первый символ строки.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> или не содержит знаков, возникает ошибка <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> Возвращает <bpt id="p1">*</bpt>кодовой<ept id="p1">*</ept>, или код символа, для входного символа.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Это может быть от 0 до 255 для однобайтовой кодировки (SBCS) и значения от -32768 до 32767 для двухбайтовой кодировки (DBCS) значения.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> Возвращает кодовую точку Юникода для входного символа.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Это может быть от 0 до 65535.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph> Функция более ранних версиях Visual Basic возвращает код для байта, вместо символа.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`AscB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Asc`</ph> функция, возвращающая <ph id="ph2">`Integer`</ph> символов коды соответствующий первую букву в каждой строке.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph> or <ph id="ph2">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="Char" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression, only the first character of the string is used for input.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> — выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, в качестве входного значения используется только первый символ строки.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> or contains no characters, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> error occurs.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>String<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> или не содержит знаков, возникает ошибка <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the character code corresponding to a character.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее код знака, соответствующий знаку.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source><ph id="ph1">`Asc`</ph> returns the <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, for the input character.</source>
          <target state="translated"><ph id="ph1">`Asc`</ph> Возвращает <bpt id="p1">*</bpt>кодовой<ept id="p1">*</ept>, или код символа, для входного символа.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</source>
          <target state="translated">Это может быть от 0 до 255 для однобайтовой кодировки (SBCS) и значения от -32768 до 32767 для двухбайтовой кодировки (DBCS) значения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source><ph id="ph1">`AscW`</ph> returns the Unicode code point for the input character.</source>
          <target state="translated"><ph id="ph1">`AscW`</ph> Возвращает кодовую точку Юникода для входного символа.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>This can be 0 through 65535.</source>
          <target state="translated">Это может быть от 0 до 65535.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The returned value is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Возвращаемое значение не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The <ph id="ph1">`AscB`</ph> function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</source>
          <target state="translated"><ph id="ph1">`AscB`</ph> Функция более ранних версиях Visual Basic возвращает код для байта, вместо символа.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`AscB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`AscB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
          <source>The following example uses the <ph id="ph1">`Asc`</ph> function to return <ph id="ph2">`Integer`</ph> character codes corresponding to the first letter in each string.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Asc`</ph> функция, возвращающая <ph id="ph2">`Integer`</ph> символов коды соответствующий первую букву в каждой строке.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression representing the <bpt id="p1">&lt;c&gt;</bpt>code point<ept id="p1">&lt;/c&gt;</ept>, or character code, for the character.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее <bpt id="p1">&lt;c&gt;</bpt>кодовую точку<ept id="p1">&lt;/c&gt;</ept> (код символа) для символа.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Возвращает знак, связанный с указанным кодом знака.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Возвращает знак, связанный с указанным кодом знака.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">Асимметричный диапазон, принятых для <ph id="ph1">`CharCode`</ph> компенсирует различия в хранении <ph id="ph2">`Short`</ph> и <ph id="ph3">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">Например,-29183 является <ph id="ph1">`Short`</ph> , то 36353 <ph id="ph2">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">Это также способствует совместимости с Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">`Chr`</ph> uses the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph> использует <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> класса в <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> пространства имен, чтобы определить, использует ли текущий поток набор однобайтовых символов (SBCS) или двухбайтовый символ набор (DBCS).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">Затем принимает <ph id="ph1">`CharCode`</ph> как кода точки из соответствующего набора.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">Диапазон может быть от 0 до 255 для набора Однобайтовых символов и от -32768 до 65535 символов DBCS.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The returned value depends on the code page for the current thread, which is contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> namespace.</source>
          <target state="translated">Возвращаемое значение зависит от кодовой страницы для текущего потока, который содержится в <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> класса в <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> пространства имен.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>You can obtain <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> by specifying <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">Вы можете получить <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> , указав <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph> принимает <ph id="ph2">`CharCode`</ph> как Юникод кода точки.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Диапазон не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">Значения от -32768 до-1 интерпретируется как значения в диапазоне от + 32768 до + 65535.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">Числа в диапазоне от 0 до 31 являются таким же, как стандартные непечатаемые коды ASCII.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">Например <ph id="ph1">`Chr(10)`</ph> возвращает символом перевода строки.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The <ph id="ph1">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated"><ph id="ph1">`ChrB`</ph> В предыдущих версиях Visual Basic функция возвращает только один байт.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Все строки в Visual Basic и .NET Framework хранятся в Юникоде и <ph id="ph1">`ChrB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source>The following example uses the <ph id="ph1">`Chr`</ph> function to return the character associated with the specified character code.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Chr`</ph> функция возвращает символ, соответствующий заданному коду символа.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or <ph id="ph3">&amp;gt;</ph> 255 for <ph id="ph4">&lt;see langword="Chr" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 или <ph id="ph3">&amp;gt;</ph> 255 для <ph id="ph4">&lt;see langword="Chr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression representing the <bpt id="p1">&lt;c&gt;</bpt>code point<ept id="p1">&lt;/c&gt;</ept>, or character code, for the character.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>, представляющее <bpt id="p1">&lt;c&gt;</bpt>кодовую точку<ept id="p1">&lt;/c&gt;</ept> (код символа) для символа.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Возвращает знак, связанный с указанным кодом знака.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Returns the character associated with the specified character code.</source>
          <target state="translated">Возвращает знак, связанный с указанным кодом знака.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The asymmetric range accepted for <ph id="ph1">`CharCode`</ph> compensates for the storage differences between the <ph id="ph2">`Short`</ph> and the <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">Асимметричный диапазон, принятых для <ph id="ph1">`CharCode`</ph> компенсирует различия в хранении <ph id="ph2">`Short`</ph> и <ph id="ph3">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>For example, -29183 is a <ph id="ph1">`Short`</ph> but +36353 is an <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">Например,-29183 является <ph id="ph1">`Short`</ph> , то 36353 <ph id="ph2">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>This also facilitates compatibility with Visual Basic 6.0.</source>
          <target state="translated">Это также способствует совместимости с Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">`Chr`</ph> uses the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</source>
          <target state="translated"><ph id="ph1">`Chr`</ph> использует <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> класса в <ph id="ph3">&lt;xref:System.Text?displayProperty=nameWithType&gt;</ph> пространства имен, чтобы определить, использует ли текущий поток набор однобайтовых символов (SBCS) или двухбайтовый символ набор (DBCS).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>It then takes <ph id="ph1">`CharCode`</ph> as a code point in the appropriate set.</source>
          <target state="translated">Затем принимает <ph id="ph1">`CharCode`</ph> как кода точки из соответствующего набора.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</source>
          <target state="translated">Диапазон может быть от 0 до 255 для набора Однобайтовых символов и от -32768 до 65535 символов DBCS.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The returned value depends on the code page for the current thread, which is contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> class in the <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> namespace.</source>
          <target state="translated">Возвращаемое значение зависит от кодовой страницы для текущего потока, который содержится в <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Globalization.TextInfo&gt;</ph> класса в <ph id="ph3">&lt;xref:System.Globalization&gt;</ph> пространства имен.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>You can obtain <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> by specifying <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</source>
          <target state="translated">Вы можете получить <ph id="ph1">&lt;xref:System.Globalization.TextInfo.ANSICodePage%2A&gt;</ph> , указав <ph id="ph2">`System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">`ChrW`</ph> takes <ph id="ph2">`CharCode`</ph> as a Unicode code point.</source>
          <target state="translated"><ph id="ph1">`ChrW`</ph> принимает <ph id="ph2">`CharCode`</ph> как Юникод кода точки.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The range is independent of the culture and code page settings for the current thread.</source>
          <target state="translated">Диапазон не зависит от языка и региональных параметров и параметров кодовой страницы для текущего потока.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</source>
          <target state="translated">Значения от -32768 до-1 интерпретируется как значения в диапазоне от + 32768 до + 65535.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</source>
          <target state="translated">Числа в диапазоне от 0 до 31 являются таким же, как стандартные непечатаемые коды ASCII.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>For example, <ph id="ph1">`Chr(10)`</ph> returns a line feed character.</source>
          <target state="translated">Например <ph id="ph1">`Chr(10)`</ph> возвращает символом перевода строки.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The <ph id="ph1">`ChrB`</ph> function in earlier versions of Visual Basic returns a single byte.</source>
          <target state="translated"><ph id="ph1">`ChrB`</ph> В предыдущих версиях Visual Basic функция возвращает только один байт.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>All strings in Visual Basic and the .NET Framework are in Unicode, and <ph id="ph1">`ChrB`</ph> is no longer supported.</source>
          <target state="translated">Все строки в Visual Basic и .NET Framework хранятся в Юникоде и <ph id="ph1">`ChrB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source>The following example uses the <ph id="ph1">`Chr`</ph> function to return the character associated with the specified character code.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">`Chr`</ph> функция возвращает символ, соответствующий заданному коду символа.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -32768 or <ph id="ph3">&amp;gt;</ph> 65535 for <ph id="ph4">&lt;see langword="ChrW" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="CharCode" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> –32768 или <ph id="ph3">&amp;gt;</ph> 65535 для <ph id="ph4">&lt;see langword="ChrW" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, выделяемое согласно указанным условиям фильтрации.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">Одномерный массив строк, в котором необходимо выполнить поиск.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>String to search for.</source>
          <target state="translated">Строка, которую требуется найти.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether to return substrings that include or exclude <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Значение типа <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that contains <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="True" /&gt;</ph>, функция <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> возвращает подмножество строк массива, содержащих <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> в виде подстроки.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="False" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that does not contain <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="False" /&gt;</ph>, функция <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> возвращает подмножество строк массива, не содержащих <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> в виде подстроки.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">Числовое значение, указывающее вид выполняемого сравнения строк.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, выделяемое согласно указанным условиям фильтрации.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, выделяемое согласно указанным условиям фильтрации.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">Если совпадений нет <ph id="ph1">`Match`</ph> находится в <ph id="ph2">`Source`</ph>, <ph id="ph3">`Filter`</ph> функция возвращает пустой массив.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">Если возникает ошибка <ph id="ph1">`Source`</ph> равно <ph id="ph2">`Nothing`</ph> или не является одномерным массивом.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">Массив, возвращаемый методом <ph id="ph1">`Filter`</ph> функция содержит ровно столько элементов, которые могут содержать количество соответствующих элементов.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> Аргумент может иметь следующие значения.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">Выполняет сравнение по тексту</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`Filter`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`Filter`</ph> функции.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> является <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> или не является одномерным массивом.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>One-dimensional array of strings to be searched.</source>
          <target state="translated">Одномерный массив строк, в котором необходимо выполнить поиск.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>String to search for.</source>
          <target state="translated">Строка, которую требуется найти.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether to return substrings that include or exclude <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Значение типа <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, указывающее, какие подстроки требуется возвращать: содержащие или не содержащие строку <bpt id="p1">&lt;c&gt;</bpt>Match<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="True" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that contains <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="True" /&gt;</ph>, функция <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> возвращает подмножество строк массива, содержащих <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> в виде подстроки.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="False" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> function returns the subset of the array that does not contain <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> as a substring.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Include<ept id="p1">&lt;/c&gt;</ept> равен <ph id="ph1">&lt;see langword="False" /&gt;</ph>, функция <ph id="ph2">&lt;see langword="Filter" /&gt;</ph> возвращает подмножество строк массива, не содержащих <bpt id="p2">&lt;c&gt;</bpt>Match<ept id="p2">&lt;/c&gt;</ept> в виде подстроки.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of string comparison to use.</source>
          <target state="translated">Числовое значение, указывающее вид выполняемого сравнения строк.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, выделяемое согласно указанным условиям фильтрации.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based array containing a subset of a <ph id="ph1">&lt;see langword="String" /&gt;</ph> array based on specified filter criteria.</source>
          <target state="translated">Возвращает массив (с индексацией от нуля), который содержит подмножество массива типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, выделяемое согласно указанным условиям фильтрации.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>If no matches of <ph id="ph1">`Match`</ph> are found within <ph id="ph2">`Source`</ph>, the <ph id="ph3">`Filter`</ph> function returns an empty array.</source>
          <target state="translated">Если совпадений нет <ph id="ph1">`Match`</ph> находится в <ph id="ph2">`Source`</ph>, <ph id="ph3">`Filter`</ph> функция возвращает пустой массив.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>An error occurs if <ph id="ph1">`Source`</ph> is set to <ph id="ph2">`Nothing`</ph> or is not a one-dimensional array.</source>
          <target state="translated">Если возникает ошибка <ph id="ph1">`Source`</ph> равно <ph id="ph2">`Nothing`</ph> или не является одномерным массивом.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The array returned by the <ph id="ph1">`Filter`</ph> function contains only enough elements to contain the number of matched items.</source>
          <target state="translated">Массив, возвращаемый методом <ph id="ph1">`Filter`</ph> функция содержит ровно столько элементов, которые могут содержать количество соответствующих элементов.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> Аргумент может иметь следующие значения.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">Выполняет сравнение по тексту</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`Filter`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`Filter`</ph> функции.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> or is not a one-dimensional array.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Source" /&gt;</ph> является <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> или не является одномерным массивом.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Any valid expression.</source>
          <target state="translated">Любое допустимое выражение.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A valid named or user-defined format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Правильно именованное или определенное пользователем выражение формата <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Returns a string formatted according to instructions contained in a format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Возвращает строку, отформатированную в соответствии с инструкциями, содержащимися в формате выражения <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Returns a string formatted according to instructions contained in a format <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Возвращает строку, отформатированную в соответствии с инструкциями, содержащимися в формате выражения <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> method also provides similar functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> Метод также предоставляет аналогичные функциональные возможности.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</source>
          <target state="translated">При форматировании нелокализованной числовой строки числового формата, определяемых пользователем следует использовать, чтобы получить желаемый вид.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you try to format a number without specifying <ph id="ph1">`Style`</ph>, the <ph id="ph2">`Format`</ph> function provides functionality similar to the <ph id="ph3">`Str`</ph> function, although it is internationally aware.</source>
          <target state="translated">При попытке форматировать числа без указания <ph id="ph1">`Style`</ph>, <ph id="ph2">`Format`</ph> функция предоставляет функциональность, аналогичную <ph id="ph3">`Str`</ph> работать, но с других странах.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>However, positive numbers formatted as strings using the <ph id="ph1">`Format`</ph> function don't include a leading space reserved for the sign of the value; those converted using the <ph id="ph2">`Str`</ph> function retain the leading space.</source>
          <target state="translated">Однако положительные числа в формате строки, используя <ph id="ph1">`Format`</ph> функция не включает начальный пробел для знака значения; их преобразовывать с помощью <ph id="ph2">`Str`</ph> функция сохранить начальный пробел.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Different Formats for Different Numeric Values</source>
          <target state="translated">Различные форматы для различных числовых значений</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A user-defined format expression for numbers can have from one to three sections separated by semicolons.</source>
          <target state="translated">Выражение пользовательского формата для чисел может содержать от одного до трех разделов, разделенных точкой с запятой.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function contains one of the predefined numeric formats, only one section is allowed.</source>
          <target state="translated">Если <ph id="ph1">`Style`</ph> аргумент <ph id="ph2">`Format`</ph> функция содержит один из стандартных числовых форматов, допускается только один раздел.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you use</source>
          <target state="translated">Если вы используете</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This is the result</source>
          <target state="translated">Результат</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>One section only</source>
          <target state="translated">Только одна секция</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The format expression applies to all values.</source>
          <target state="translated">Выражение форматирования применяется ко всем значениям.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Two sections</source>
          <target state="translated">Две секции</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The first section applies to positive values and zeros; the second applies to negative values.</source>
          <target state="translated">Первая секция применяется для положительных значений и нулей; второй применяется для отрицательных значений.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Three sections</source>
          <target state="translated">Три секции</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</source>
          <target state="translated">Первый раздел распространяется на положительные значения, второй применяется для отрицательных значений и третий относится к нули.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</source>
          <target state="translated">Следующий пример состоит из двух разделов: первый определяет формат для положительных значений и нулей; Во втором разделе определяет формат отрицательных значений.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Since the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function takes a string, it is enclosed by quotation marks.</source>
          <target state="translated">Поскольку <ph id="ph1">`Style`</ph> аргумент <ph id="ph2">`Format`</ph> функция принимает строку, она заключена в кавычки.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</source>
          <target state="translated">При включении запятой с между которыми ничего нет, пропущенный раздел выводится в формате положительного значения.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, the following format displays positive and negative values using the format in the first section and displays <ph id="ph1">`Zero`</ph> if the value is zero.</source>
          <target state="translated">Например, следующий формат отображает положительные и отрицательные значения форматируются в первом разделе и отображает <ph id="ph1">`Zero`</ph> Если значение равно нулю.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Predefined Numeric Formats</source>
          <target state="translated">Предопределенные числовые форматы</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies the predefined numeric format names.</source>
          <target state="translated">В следующей таблице перечислены имена стандартных числовых форматов.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used by name as the <ph id="ph1">`Style`</ph> argument for the <ph id="ph2">`Format`</ph> function:</source>
          <target state="translated">Их можно использовать по имени как <ph id="ph1">`Style`</ph> аргумент для <ph id="ph2">`Format`</ph> функции:</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format name</source>
          <target state="translated">Название формата</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`General Number`</ph>, <ph id="ph2">`G`</ph>, or <ph id="ph3">`g`</ph></source>
          <target state="translated"><ph id="ph1">`General Number`</ph>, <ph id="ph2">`G`</ph>или <ph id="ph3">`g`</ph></target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with no thousand separator.</source>
          <target state="translated">Отображает число без разделителя групп разрядов.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(&amp;H3FA, "g")`</ph> returns <ph id="ph2">`1018`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(&amp;H3FA, "g")`</ph> возвращает <ph id="ph2">`1018`</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Currency`</ph>, <ph id="ph2">`C`</ph>, or <ph id="ph3">`c`</ph></source>
          <target state="translated"><ph id="ph1">`Currency`</ph>, <ph id="ph2">`C`</ph>или <ph id="ph3">`c`</ph></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</source>
          <target state="translated">Отображает число с разделитель групп разрядов, если это применимо; Отображает две цифры справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Output is based on system locale settings.</source>
          <target state="translated">Вывод основан на параметрах локали системы.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "c")`</ph> returns <ph id="ph2">`$1,234,567.00`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1234567, "c")`</ph> возвращает <ph id="ph2">`$1,234,567.00`</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Fixed`</ph>, <ph id="ph2">`F`</ph>, or <ph id="ph3">`f`</ph></source>
          <target state="translated"><ph id="ph1">`Fixed`</ph>, <ph id="ph2">`F`</ph>или <ph id="ph3">`f`</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays at least one digit to the left and two digits to the right of the decimal separator.</source>
          <target state="translated">Отображает по крайней мере одной цифры слева и две цифры справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "f")`</ph> returns <ph id="ph2">`1234567.00`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1234567, "f")`</ph> возвращает <ph id="ph2">`1234567.00`</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Standard`</ph>, <ph id="ph2">`N`</ph>, or <ph id="ph3">`n`</ph></source>
          <target state="translated"><ph id="ph1">`Standard`</ph>, <ph id="ph2">`N`</ph>или <ph id="ph3">`n`</ph></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</source>
          <target state="translated">Отображает число с разделитель групп разрядов, по крайней мере одной цифры слева и две цифры справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "n")`</ph> returns <ph id="ph2">`1,234,567.00`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1234567, "n")`</ph> возвращает <ph id="ph2">`1,234,567.00`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</source>
          <target state="translated">Отображает число, умноженное на 100, со знаком процента (%), стоящим непосредственно справа, всегда отображает две цифры справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0.4744, "Percent")`</ph> returns <ph id="ph2">`47.44%`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(0.4744, "Percent")`</ph> возвращает <ph id="ph2">`47.44%`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`P`</ph>, or <ph id="ph2">`p`</ph></source>
          <target state="translated"><ph id="ph1">`P`</ph>, или <ph id="ph2">`p`</ph></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</source>
          <target state="translated">Отображает число с разделителем тысяч, умноженное на 100, со знаком процента (%), стоящим справа и отделенным от одного пробела, всегда отображает две цифры справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0.80345, "p")`</ph> returns <ph id="ph2">`80.35 %`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(0.80345, "p")`</ph> возвращает <ph id="ph2">`80.35 %`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses standard scientific notation, providing two significant digits.</source>
          <target state="translated">Использует стандартное научное обозначение с двумя значащими разрядами.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "Scientific")`</ph> returns <ph id="ph2">`1.23E+06`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1234567, "Scientific")`</ph> возвращает <ph id="ph2">`1.23E+06`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`E`</ph>, or <ph id="ph2">`e`</ph></source>
          <target state="translated"><ph id="ph1">`E`</ph>, или <ph id="ph2">`e`</ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses standard scientific notation, providing six significant digits.</source>
          <target state="translated">Использует стандартное научное обозначение с шестью значащими разрядами.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1234567, "e")`</ph> returns <ph id="ph2">`1.234567e+006`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1234567, "e")`</ph> возвращает <ph id="ph2">`1.234567e+006`</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`D`</ph>, or <ph id="ph2">`d`</ph></source>
          <target state="translated"><ph id="ph1">`D`</ph>, или <ph id="ph2">`d`</ph></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number as a string that contains the value of the number in Decimal (base 10) format.</source>
          <target state="translated">Отображает число в виде строки, содержащей значение числа в формате десятичным (основание 10).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This option is supported for integral types (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) only.</source>
          <target state="translated">Этот параметр поддерживается для целочисленных типов (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) только.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(&amp;H7F, "d")`</ph> returns <ph id="ph2">`127`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(&amp;H7F, "d")`</ph> возвращает <ph id="ph2">`127`</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`X`</ph>, or <ph id="ph2">`x`</ph></source>
          <target state="translated"><ph id="ph1">`X`</ph>, или <ph id="ph2">`x`</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</source>
          <target state="translated">Отображает число в виде строки, содержащей значение числа в шестнадцатеричном формате (основание 16) формате.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This option is supported for integral types (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) only.</source>
          <target state="translated">Этот параметр поддерживается для целочисленных типов (<ph id="ph1">`Byte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>) только.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(127, "x")`</ph> returns <ph id="ph2">`7f`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(127, "x")`</ph> возвращает <ph id="ph2">`7f`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`No`</ph> if number is 0; otherwise, displays <ph id="ph2">`Yes`</ph>.</source>
          <target state="translated">Отображает <ph id="ph1">`No`</ph> Если число равно 0; в противном случае, <ph id="ph2">`Yes`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(0, "Yes/No")`</ph> returns <ph id="ph2">`No`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(0, "Yes/No")`</ph> возвращает <ph id="ph2">`No`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`False`</ph> if number is 0; otherwise, displays <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Отображает <ph id="ph1">`False`</ph> Если число равно 0; в противном случае, <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1, "True/False")`</ph> returns <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1, "True/False")`</ph> возвращает <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays <ph id="ph1">`Off`</ph> if number is 0; otherwise, displays <ph id="ph2">`On`</ph>.</source>
          <target state="translated">Отображает <ph id="ph1">`Off`</ph> Если число равно 0; в противном случае, <ph id="ph2">`On`</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Format(1, "On/Off")`</ph> returns <ph id="ph2">`On`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Format(1, "On/Off")`</ph> возвращает <ph id="ph2">`On`</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`Yes/No`</ph>, <ph id="ph2">`True/False`</ph>, and <ph id="ph3">`On/Off`</ph> formats are not supported.</source>
          <target state="translated"><ph id="ph1">`Yes/No`</ph>, <ph id="ph2">`True/False`</ph>, И <ph id="ph3">`On/Off`</ph> форматы не поддерживаются.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>User-Defined Numeric Formats</source>
          <target state="translated">Пользовательские числовые форматы</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies characters you can use to create user-defined number formats.</source>
          <target state="translated">В следующей таблице перечислены символы, которые можно использовать для создания пользовательских числовых форматов.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used to build the <ph id="ph1">`Style`</ph> argument for the <ph id="ph2">`Format`</ph> function:</source>
          <target state="translated">Их можно использовать для построения <ph id="ph1">`Style`</ph> аргумент для <ph id="ph2">`Format`</ph> функции:</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Character</source>
          <target state="translated">Знак</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>None</source>
          <target state="translated">Нет</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the number with no formatting.</source>
          <target state="translated">Отображает число без форматирования.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`0`</ph>)</source>
          <target state="translated">(<ph id="ph1">`0`</ph>)</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Digit placeholder.</source>
          <target state="translated">Заполнитель для цифр.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a digit or a zero.</source>
          <target state="translated">Отображает цифру или ноль.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</source>
          <target state="translated">Если выражение содержит цифру в позиции, где в строке формата стоит ноль, отобразите ее; в противном случае выводится ноль в этой позиции.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</source>
          <target state="translated">Если число имеет меньше разрядов, чем задано нулей (с обеих сторон от десятичного разделителя) в выражении форматирования, выводится с начальными либо конечными нулями.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</source>
          <target state="translated">Если число имеет больше разрядов справа от десятичного разделителя, чем нулей справа от десятичного разделителя в выражении форматирования, округление до количества десятичных разрядов, сколько нулей.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</source>
          <target state="translated">Если число имеет больше цифр слева от десятичного разделителя, чем нулей слева от десятичного разделителя в выражении форматирования, отображает дополнительные разряды выводятся без изменений.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`#`</ph>)</source>
          <target state="translated">(<ph id="ph1">`#`</ph>)</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Digit placeholder.</source>
          <target state="translated">Заполнитель для цифр.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a digit or nothing.</source>
          <target state="translated">Отображает цифру или ничего.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the expression has a digit in the position where the <ph id="ph1">`#`</ph> character appears in the format string, displays it; otherwise, displays nothing in that position.</source>
          <target state="translated">Если выражение содержит цифру в позиции, где <ph id="ph1">`#`</ph> в строке формата стоит знак отображается; в противном случае не отображает ничего в этой позиции.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This symbol works like the <ph id="ph1">`0`</ph> digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are <ph id="ph2">`#`</ph> characters on either side of the decimal separator in the format expression.</source>
          <target state="translated">Этот символ действует как <ph id="ph1">`0`</ph> заполнитель для цифр, за исключением того, что начальные и конечные нули не отображаются, если число имеет меньше разрядов, чем число <ph id="ph2">`#`</ph> с обеих сторон от десятичного разделителя в выражении форматирования.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`.`</ph>)</source>
          <target state="translated">(<ph id="ph1">`.`</ph>)</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Decimal placeholder.</source>
          <target state="translated">Заполнитель десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</source>
          <target state="translated">Определяет, сколько разрядов отображается слева и справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the format expression contains only <ph id="ph1">`#`</ph> characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</source>
          <target state="translated">Если выражение формата содержит только <ph id="ph1">`#`</ph> символов слева от этого символа; числа меньше 1 начинаются с десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</source>
          <target state="translated">Чтобы отображался начальный ноль в дробных числах, укажите ноль в качестве первого цифрового заполнителя слева от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, a comma is used as the decimal separator.</source>
          <target state="translated">В некоторых языковых стандартах в качестве десятичного разделителя используется запятая.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</source>
          <target state="translated">Фактический символ, используется в качестве десятичного заполнителя в отформатированном значении, зависит от числового формата, распознаваемого системой.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</source>
          <target state="translated">Таким образом вам следует использовать периода в качестве десятичного заполнителя в собственных форматах даже при работе в языковом стандарте, использующих запятую в качестве десятичного заполнителя.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted string will appear in the format correct for the locale.</source>
          <target state="translated">Отформатированная строка будет отображаться в формате для языкового стандарта.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`%`</ph>)</source>
          <target state="translated">(<ph id="ph1">`%`</ph>)</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Percent placeholder.</source>
          <target state="translated">Заполнитель процента.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Multiplies the expression by 100.</source>
          <target state="translated">Умножает выражение на 100.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The percent character (<ph id="ph1">`%`</ph>) is inserted in the position where it appears in the format string.</source>
          <target state="translated">Символ процента (<ph id="ph1">`%`</ph>) вставляется там, где он отображается в строке форматирования.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`,`</ph>)</source>
          <target state="translated">(<ph id="ph1">`,`</ph>)</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thousand separator.</source>
          <target state="translated">Разделитель групп разрядов.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</source>
          <target state="translated">Разделитель групп разрядов отделяет тысячи от сотен в числе с четырьмя или более разрядами слева от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (<ph id="ph1">`0`</ph> or <ph id="ph2">`#`</ph>).</source>
          <target state="translated">Указанный стандартном использовании разделителя групп разрядов Если формат разделителя групп разрядов, заполнители цифр (<ph id="ph1">`0`</ph> или <ph id="ph2">`#`</ph>).</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</source>
          <target state="translated">Разделитель непосредственно слева от десятичного разделителя (ли указан десятичное число) или крайним правым символов в строке, это означает «масштабирование числа путем деления его на 1 000, округления при необходимости.»</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Numbers smaller than 1,000 but greater or equal to 500 are displayed as <ph id="ph1">`1`</ph>, and numbers smaller than 500 are displayed as <ph id="ph2">`0`</ph>.</source>
          <target state="translated">Числа меньше 1 000, но больше или равно 500 отображаются как <ph id="ph1">`1`</ph>, а числа меньше 500 отображаются как <ph id="ph2">`0`</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</source>
          <target state="translated">Два смежных разделителя групп разрядов в этой позиции масштабирования с коэффициентом 1 миллион и дополнительный фактор 1 000 за каждый дополнительный разделитель.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</source>
          <target state="translated">Несколько разделителей групп разрядов в любой позиции, кроме позиции непосредственно слева от десятичного разделителя или конечной позиции в строке, обрабатываются просто как разделители групп разрядов.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, a period is used as a thousand separator.</source>
          <target state="translated">В некоторых языковых стандартах в качестве разделителя тысяч используется период.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</source>
          <target state="translated">Фактический символ, используется в качестве разделителя групп разрядов в отформатированном значении, зависит от числового формата, распознаваемого системой.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</source>
          <target state="translated">Таким образом вам следует использовать запятую как разделитель групп разрядов в собственных форматах даже при работе в языковом стандарте, используется период в качестве разделителя тысяч.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted string will appear in the format correct for the locale.</source>
          <target state="translated">Отформатированная строка будет отображаться в формате для языкового стандарта.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, consider the three following format strings:</source>
          <target state="translated">Например рассмотрим следующие три строки форматирования:</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#,0."`</ph>, which uses the thousands separator to format the number 100 million as the string "100,000,000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#,0."`</ph>, который использует разделитель тысяч для форматирования числа 100 миллионов как строки «100,000,000».</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#0,."`</ph>, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#0,."`</ph>, которая использует деление на тысячу для форматирования числа 100 миллионов строки «100000».</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">-   </ph><ph id="ph2">`"#,0,."`</ph>, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`"#,0,."`</ph>, который использует разделитель тысяч и деление на тысячу для форматирования числа 100 миллионов как строки «100,000».</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`:`</ph>)</source>
          <target state="translated">(<ph id="ph1">`:`</ph>)</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Time separator.</source>
          <target state="translated">Разделитель компонентов времени.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the time separator.</source>
          <target state="translated">В некоторых языковых стандартах разделителя времени могут использоваться другие символы.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The time separator separates hours, minutes, and seconds when time values are formatted.</source>
          <target state="translated">Разделитель компонентов времени разделяет часы, минуты и секунды при форматировании значений времени.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the time separator in formatted output is determined by your system settings.</source>
          <target state="translated">Фактический символ, используемый в качестве разделителя времени в отформатированном значении, определяется параметрами системы.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`/`</ph>)</source>
          <target state="translated">(<ph id="ph1">`/`</ph>)</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date separator.</source>
          <target state="translated">Разделитель компонентов даты.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the date separator.</source>
          <target state="translated">В некоторых языковых стандартах в качестве разделителя дат могут использоваться другие символы.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The date separator separates the day, month, and year when date values are formatted.</source>
          <target state="translated">Разделитель компонентов даты разделяет день, месяц и год при форматировании значений даты.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character used as the date separator in formatted output is determined by your system settings.</source>
          <target state="translated">Фактический символ, используемый в качестве разделителя дат в отформатированном значении, определяется параметрами системы.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`E-``E+``e-``e+`</ph>)</source>
          <target state="translated">(<ph id="ph1">`E-``E+``e-``e+`</ph>)</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Scientific format.</source>
          <target state="translated">Экспоненциальный формат.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the format expression contains at least one digit placeholder (<ph id="ph1">`0`</ph> or <ph id="ph2">`#`</ph>) to the left of <ph id="ph3">`E-`</ph>, <ph id="ph4">`E+`</ph>, <ph id="ph5">`e-`</ph>, or <ph id="ph6">`e+`</ph>, the number is displayed in scientific format and <ph id="ph7">`E`</ph> or <ph id="ph8">`e`</ph> is inserted between the number and its exponent.</source>
          <target state="translated">Если выражение формата содержит минимум один цифровой заполнитель (<ph id="ph1">`0`</ph> или <ph id="ph2">`#`</ph>) слева от <ph id="ph3">`E-`</ph>, <ph id="ph4">`E+`</ph>, <ph id="ph5">`e-`</ph>, или <ph id="ph6">`e+`</ph>, число отображается в экспоненциальном формате и <ph id="ph7">`E`</ph> или <ph id="ph8">`e`</ph> вставляется между числом и его показатель степени.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The number of digit placeholders to the left determines the number of digits in the exponent.</source>
          <target state="translated">Количество заполнителей цифр слева определяет число цифр экспоненты определяется.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`E-`</ph> or <ph id="ph2">`e-`</ph> to place a minus sign next to negative exponents.</source>
          <target state="translated">Используйте <ph id="ph1">`E-`</ph> или <ph id="ph2">`e-`</ph> поместить знак «минус» экспонентой с отрицательным значением.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`E+`</ph> or <ph id="ph2">`e+`</ph> to place a minus sign next to negative exponents and a plus sign next to positive exponents.</source>
          <target state="translated">Используйте <ph id="ph1">`E+`</ph> или <ph id="ph2">`e+`</ph> минус отрицательных показателей степени и знак плюс рядом с положительными.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You must also include digit placeholders to the right of this symbol to get correct formatting.</source>
          <target state="translated">Необходимо также включить заполнители цифр справа от этого символа для правильного форматирования.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`-`</ph> <ph id="ph2">`+`</ph> <ph id="ph3">`$`</ph> ( )</source>
          <target state="translated"><ph id="ph1">`-`</ph> <ph id="ph2">`+`</ph> <ph id="ph3">`$`</ph> ( )</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Literal characters.</source>
          <target state="translated">Буквенные символы.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These characters are displayed exactly as typed in the format string.</source>
          <target state="translated">Эти символы выводятся так же, как в строке форматирования.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a character other than one of those listed, precede it with a backslash (<ph id="ph1">`\`</ph>) or enclose it in double quotation marks (" ").</source>
          <target state="translated">Чтобы вывести символ, которого нет в списке, укажите перед ним обратную косую черту (<ph id="ph1">`\`</ph>) либо заключите его в двойные кавычки (» «).</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`\`</ph>)</source>
          <target state="translated">(<ph id="ph1">`\`</ph>)</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the next character in the format string.</source>
          <target state="translated">Отображает следующий символ в строке формата.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a character that has special meaning as a literal character, precede it with a backslash (<ph id="ph1">`\`</ph>).</source>
          <target state="translated">Чтобы вывести символ, который имеет особое значение в качестве буквенного символа, укажите перед ним обратную косую черту (<ph id="ph1">`\`</ph>).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The backslash itself isn't displayed.</source>
          <target state="translated">Сама обратная косая черта не отображается.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Using a backslash is the same as enclosing the next character in double quotation marks.</source>
          <target state="translated">Использование обратной косой черты — аналогично заключению выводимого символа в двойные кавычки.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To display a backslash, use two backslashes (<ph id="ph1">`\\`</ph>).</source>
          <target state="translated">Чтобы отобразить обратную косую черту, укажите две черты подряд (<ph id="ph1">`\\`</ph>).</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (<ph id="ph1">`a`</ph>, <ph id="ph2">`c`</ph>, <ph id="ph3">`d`</ph>, <ph id="ph4">`h`</ph>, <ph id="ph5">`m`</ph>, <ph id="ph6">`n`</ph>, <ph id="ph7">`p`</ph>, <ph id="ph8">`q`</ph>, <ph id="ph9">`s`</ph>, <ph id="ph10">`t`</ph>, <ph id="ph11">`w`</ph>, <ph id="ph12">`y`</ph>, <ph id="ph13">`/`</ph>, and <ph id="ph14">`:`</ph>), the numeric-formatting characters (<ph id="ph15">`#`</ph>, <ph id="ph16">`0`</ph>, <ph id="ph17">`%`</ph>, <ph id="ph18">`E`</ph>, <ph id="ph19">`e`</ph>, comma, and period), and the string-formatting characters (<ph id="ph20">`@`</ph>, <ph id="ph21">`&amp;`</ph>, <ph id="ph22">`&lt;`</ph>, <ph id="ph23">`&gt;`</ph>, and <ph id="ph24">`!`</ph>).</source>
          <target state="translated">Примеры символов, которые нельзя отобразить как литералы являются символы форматирования даты и времени форматирование (<ph id="ph1">`a`</ph>, <ph id="ph2">`c`</ph>, <ph id="ph3">`d`</ph>, <ph id="ph4">`h`</ph>, <ph id="ph5">`m`</ph>, <ph id="ph6">`n`</ph>, <ph id="ph7">`p`</ph>, <ph id="ph8">`q`</ph>, <ph id="ph9">`s`</ph>, <ph id="ph10">`t`</ph>, <ph id="ph11">`w`</ph>, <ph id="ph12">`y`</ph>, <ph id="ph13">`/`</ph>, и <ph id="ph14">`:`</ph>), символы форматирования чисел (<ph id="ph15">`#`</ph>, <ph id="ph16">`0`</ph>, <ph id="ph17">`%`</ph>, <ph id="ph18">`E`</ph>, <ph id="ph19">`e`</ph>, запятая и точка) и символы форматирования строк (<ph id="ph20">`@`</ph>, <ph id="ph21">`&amp;`</ph>, <ph id="ph22">`&lt;`</ph>, <ph id="ph23">`&gt;`</ph>, и <ph id="ph24">`!`</ph>).</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`"``ABC``"`</ph>)</source>
          <target state="translated">(<ph id="ph1">`"``ABC``"`</ph>)</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the string inside the double quotation marks (" ").</source>
          <target state="translated">Вывод строки, заключенной в двойные кавычки (» «).</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>To include a string in the style argument from within code, you must use <ph id="ph1">`Chr(34)`</ph> to enclose the text (<ph id="ph2">`34`</ph> is the character code for a quotation mark (")).</source>
          <target state="translated">Чтобы включить строку в аргумент стиля из кода, необходимо использовать <ph id="ph1">`Chr(34)`</ph> для заключения текста (<ph id="ph2">`34`</ph> — код символа кавычки ("«)).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Legacy Code Example</source>
          <target state="translated">Старый пример кода</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table contains some sample format expressions for numbers.</source>
          <target state="translated">Следующая таблица содержит некоторые образцы выражений форматирования для чисел.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the <ph id="ph1">`Style`</ph> argument of the <ph id="ph2">`Format`</ph> function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</source>
          <target state="translated">(Предполагается, что параметр языкового стандарта системы является английский (США)) Первый столбец содержит строки форматирования для <ph id="ph1">`Style`</ph> аргумент <ph id="ph2">`Format`</ph> функции; другие столбцы содержат выходные данные, полученные, если форматируемые данные имеют значение, заданное в заголовках столбцов.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format (<ph id="ph1">`Style`</ph>)</source>
          <target state="translated">Формат (<ph id="ph1">`Style`</ph>)</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"5" formatted as</source>
          <target state="translated">«5» в формате</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"-5" formatted as</source>
          <target state="translated">в формате «-5»</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>"0.5" formatted as</source>
          <target state="translated">«0,5» в формате</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Predefined Date/Time Formats</source>
          <target state="translated">Форматы предопределенных даты и времени</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table identifies the predefined date and time format names.</source>
          <target state="translated">Ниже приведены стандартные даты и имен форматов времени.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>These may be used by name as the style argument for the <ph id="ph1">`Format`</ph> function:</source>
          <target state="translated">Их можно использовать по имени в качестве аргумента стиля для <ph id="ph1">`Format`</ph> функции:</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format Name</source>
          <target state="translated">Название формата</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`General Date`</ph>, or <ph id="ph2">`G`</ph></source>
          <target state="translated"><ph id="ph1">`General Date`</ph>, или <ph id="ph2">`G`</ph></target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date and/or time.</source>
          <target state="translated">Отображает дату и время.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008 11:07:31 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`3/12/2008 11:07:31 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date display is determined by your application's current culture value.</source>
          <target state="translated">Отображение даты определяется текущее значение языка и региональных параметров приложения.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Long Date`</ph>, <ph id="ph2">`Medium Date`</ph>, or <ph id="ph3">`D`</ph></source>
          <target state="translated"><ph id="ph1">`Long Date`</ph>, <ph id="ph2">`Medium Date`</ph>или <ph id="ph3">`D`</ph></target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date according to your current culture's long date format.</source>
          <target state="translated">Отображает дату в соответствии с форматом даты текущих региональных параметров.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`Wednesday, March 12, 2008`</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Short Date`</ph>, or <ph id="ph2">`d`</ph></source>
          <target state="translated"><ph id="ph1">`Short Date`</ph>, или <ph id="ph2">`d`</ph></target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a date using your current culture's short date format.</source>
          <target state="translated">Отображает дату в формате короткой даты текущих региональных параметров.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`3/12/2008`</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`d`</ph> character displays the day in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`d`</ph> Символ отображает день в формате даты, определяемой пользователем.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Long Time`</ph>, <ph id="ph2">`Medium Time`</ph>, or <ph id="ph3">`T`</ph></source>
          <target state="translated"><ph id="ph1">`Long Time`</ph>, <ph id="ph2">`Medium Time`</ph>или <ph id="ph3">`T`</ph></target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</source>
          <target state="translated">Отображает время, используя текущую культуру длинный формат времени; обычно включает часы, минуты и секунды.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`11:07:31 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`11:07:31 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Short Time`</ph> or <ph id="ph2">`t`</ph></source>
          <target state="translated"><ph id="ph1">`Short Time`</ph> или <ph id="ph2">`t`</ph></target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays a time using your current culture's short time format.</source>
          <target state="translated">Отображает время, используя текущую культуру краткий формат времени.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`11:07 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`11:07 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`t`</ph> character displays <ph id="ph2">`AM`</ph> or <ph id="ph3">`PM`</ph> values for locales that use a 12-hour clock in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`t`</ph> Символов отображает <ph id="ph2">`AM`</ph> или <ph id="ph3">`PM`</ph> значения для языков, использующих 12-часовом формате, в формате времени, определяемого пользователем.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the long date and short time according to your current culture's format.</source>
          <target state="translated">Отображение даты и краткого времени в соответствии с форматом в текущей культуре.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 11:07 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`Wednesday, March 12, 2008 11:07 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the long date and long time according to your current culture's format.</source>
          <target state="translated">Отображение даты и время в соответствии с форматом в текущей культуре.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 11:07:31 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`Wednesday, March 12, 2008 11:07:31 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the short date and short time according to your current culture's format.</source>
          <target state="translated">Отображает краткий формат даты и краткого времени в соответствии с форматом в текущей культуре.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`3/12/2008 11:07 AM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`3/12/2008 11:07 AM`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`M`</ph>, <ph id="ph2">`m`</ph></source>
          <target state="translated"><ph id="ph1">`M`</ph>, <ph id="ph2">`m`</ph></target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month and the day of a date.</source>
          <target state="translated">Отображает месяц и день даты.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`March 12`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`March 12`</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`M`</ph> character displays the month in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`M`</ph> Символ отображает месяц в формате даты, определяемой пользователем.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`m`</ph> character displays the minutes in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`m`</ph> Символ Отображает минуты в формате времени, определяемого пользователем.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`R`</ph>, <ph id="ph2">`r`</ph></source>
          <target state="translated"><ph id="ph1">`R`</ph>, <ph id="ph2">`r`</ph></target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date according to the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A&gt;</ph> property.</source>
          <target state="translated">Форматирует дату в соответствии с <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wed, 12 Mar 2008 11:07:31 GMT`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`Wed, 12 Mar 2008 11:07:31 GMT`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The formatted date does not adjust the value of the date and time.</source>
          <target state="translated">Форматированные даты не изменяется значение даты и времени.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You must adjust the Date/Time value to GMT before calling the <ph id="ph1">`Format`</ph> function.</source>
          <target state="translated">Перед вызовом метода необходимо изменить значение даты и времени по Гринвичу <ph id="ph1">`Format`</ph> функции.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time as a sortable index.</source>
          <target state="translated">Форматирует дату и время в виде сортируемого индекса.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`2008-03-12T11:07:31`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`2008-03-12T11:07:31`</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`s`</ph> character displays the seconds in a user-defined time format.</source>
          <target state="translated"><ph id="ph1">`s`</ph> Символ Отображает секунды в формате времени, определяемого пользователем.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time as a GMT sortable index.</source>
          <target state="translated">Форматирует дату и время в виде сортируемого индекса GMT.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`2008-03-12 11:07:31Z`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`2008-03-12 11:07:31Z`</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date and time with the long date and long time as GMT.</source>
          <target state="translated">Форматирует дату и время с длинной даты и время в формате GMT.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`Wednesday, March 12, 2008 6:07:31 PM`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`Wednesday, March 12, 2008 6:07:31 PM`</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source><ph id="ph1">`Y`</ph>, <ph id="ph2">`y`</ph></source>
          <target state="translated"><ph id="ph1">`Y`</ph>, <ph id="ph2">`y`</ph></target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Formats the date as the year and month.</source>
          <target state="translated">Форматирует дату в виде года и месяца.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example, <ph id="ph1">`March, 2008`</ph>.</source>
          <target state="translated">Например, <ph id="ph1">`March, 2008`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The <ph id="ph1">`Y`</ph> and <ph id="ph2">`y`</ph> characters display the year in a user-defined date format.</source>
          <target state="translated"><ph id="ph1">`Y`</ph> И <ph id="ph2">`y`</ph> символов отображают год в формате даты, определяемой пользователем.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For more information about the application's current culture information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о текущем языком и региональными параметрами информацию о разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>User-Defined Date/Time Formats</source>
          <target state="translated">Форматы даты и времени, определяемые пользователем</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following table shows characters you can use to create user-defined date/time formats.</source>
          <target state="translated">Следующая таблица показывает символы, которые можно использовать для создания новых форматов даты и времени, определяемого пользователем.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</source>
          <target state="translated">В отличие от более ранних версиях Visual Basic эти символы форматирования учитывается регистр.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Character</source>
          <target state="translated">Знак</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`:`</ph>)</source>
          <target state="translated">(<ph id="ph1">`:`</ph>)</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Time separator.</source>
          <target state="translated">Разделитель компонентов времени.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the time separator.</source>
          <target state="translated">В некоторых языковых стандартах разделителя времени могут использоваться другие символы.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The time separator separates hours, minutes, and seconds when time values are formatted.</source>
          <target state="translated">Разделитель компонентов времени разделяет часы, минуты и секунды при форматировании значений времени.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</source>
          <target state="translated">Фактический символ, используемый в качестве разделителя времени в отформатированном значении, определяется текущее значение языка и региональных параметров приложения.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`/`</ph>)</source>
          <target state="translated">(<ph id="ph1">`/`</ph>)</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Date separator.</source>
          <target state="translated">Разделитель компонентов даты.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>In some locales, other characters may be used to represent the date separator.</source>
          <target state="translated">В некоторых языковых стандартах в качестве разделителя дат могут использоваться другие символы.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The date separator separates the day, month, and year when date values are formatted.</source>
          <target state="translated">Разделитель компонентов даты разделяет день, месяц и год при форматировании значений даты.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The actual character that is used as the date separator in formatted output is determined by your application's current culture.</source>
          <target state="translated">Фактический символ, используемый в качестве разделителя дат в отформатированном значении, определяется текущего языка и региональных параметров приложения.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>(<ph id="ph1">`%`</ph>)</source>
          <target state="translated">(<ph id="ph1">`%`</ph>)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</source>
          <target state="translated">Используется для указания, что следующий символ должен считываться как однобуквенный формат без учета замыкающих букв.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Also used to indicate that a single-letter format is read as a user-defined format.</source>
          <target state="translated">Также используется для указания, что однобуквенный формат считывается как определяемый пользователем формат.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>See what follows for additional details.</source>
          <target state="translated">См. ниже для получения дополнительной информации.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a number without a leading zero (for example, <ph id="ph1">`1`</ph>).</source>
          <target state="translated">Отображает день в виде числа без ведущих нулей (например, <ph id="ph1">`1`</ph>).</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%d`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%d`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a number with a leading zero (for example, <ph id="ph1">`01`</ph>).</source>
          <target state="translated">Отображает день в виде числа с ведущими нулями (например, <ph id="ph1">`01`</ph>).</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as an abbreviation (for example, <ph id="ph1">`Sun`</ph>).</source>
          <target state="translated">Выводит сокращенное название дня (например, <ph id="ph1">`Sun`</ph>).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the day as a full name (for example, <ph id="ph1">`Sunday`</ph>).</source>
          <target state="translated">Отображает день в виде полного имени (например, <ph id="ph1">`Sunday`</ph>).</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a number without a leading zero (for example, January is represented as <ph id="ph1">`1`</ph>).</source>
          <target state="translated">Отображает месяц в виде числа без ведущих нулей (например, январь представляется <ph id="ph1">`1`</ph>).</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%M`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%M`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a number with a leading zero (for example, <ph id="ph1">`01/12/01`</ph>).</source>
          <target state="translated">Отображает месяц в виде числа с ведущими нулями (например, <ph id="ph1">`01/12/01`</ph>).</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as an abbreviation (for example, <ph id="ph1">`Jan`</ph>).</source>
          <target state="translated">Выводит сокращенное название месяца (например, <ph id="ph1">`Jan`</ph>).</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the month as a full month name (for example, <ph id="ph1">`January`</ph>).</source>
          <target state="translated">Отображает полное название месяца (например, <ph id="ph1">`January`</ph>).</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the period/era string (for example, <ph id="ph1">`A.D.`</ph>).</source>
          <target state="translated">Отображает строку эры (например, <ph id="ph1">`A.D.`</ph>).</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number without leading zeros using the 12-hour clock (for example, <ph id="ph1">`1:15:15 PM`</ph>).</source>
          <target state="translated">Выводит часы в виде числа без ведущих нулей в 12-часовом формате (например, <ph id="ph1">`1:15:15 PM`</ph>).</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%h`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%h`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number with leading zeros using the 12-hour clock (for example, <ph id="ph1">`01:15:15 PM`</ph>).</source>
          <target state="translated">Выводит часы в виде числа с ведущими нулями в 12-часовом формате (например, <ph id="ph1">`01:15:15 PM`</ph>).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number without leading zeros using the 24-hour clock (for example, <ph id="ph1">`1:15:15`</ph>).</source>
          <target state="translated">Выводит часы в виде числа без ведущих нулей в 24-часовом формате (например, <ph id="ph1">`1:15:15`</ph>).</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%H`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%H`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the hour as a number with leading zeros using the 24-hour clock (for example, <ph id="ph1">`01:15:15`</ph>).</source>
          <target state="translated">Выводит часы в виде числа с ведущими нулями в 24-часовом формате (например, <ph id="ph1">`01:15:15`</ph>).</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the minute as a number without leading zeros (for example, <ph id="ph1">`12:1:15`</ph>).</source>
          <target state="translated">Выводит минуты в виде числа без ведущих нулей (например, <ph id="ph1">`12:1:15`</ph>).</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%m`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%m`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the minute as a number with leading zeros (for example, <ph id="ph1">`12:01:15`</ph>).</source>
          <target state="translated">Выводит минуты в виде числа с ведущими нулями (например, <ph id="ph1">`12:01:15`</ph>).</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the second as a number without leading zeros (for example, <ph id="ph1">`12:15:5`</ph>).</source>
          <target state="translated">Выводит второе в виде числа без ведущих нулей (например, <ph id="ph1">`12:15:5`</ph>).</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%s`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%s`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the second as a number with leading zeros (for example, <ph id="ph1">`12:15:05`</ph>).</source>
          <target state="translated">Выводит секунды в виде числа с ведущими нулями (например, <ph id="ph1">`12:15:05`</ph>).</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays fractions of seconds.</source>
          <target state="translated">Выводит доли секунды.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For example <ph id="ph1">`ff`</ph> displays hundredths of seconds, whereas <ph id="ph2">`ffff`</ph> displays ten-thousandths of seconds.</source>
          <target state="translated">Например <ph id="ph1">`ff`</ph> будут отображены сотые доли секунды, а <ph id="ph2">`ffff`</ph> отображает десятитысячные доли секунды.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>You may use up to seven <ph id="ph1">`f`</ph> symbols in your user-defined format.</source>
          <target state="translated">Можно использовать до семи <ph id="ph1">`f`</ph> символов в определяемом пользователем формате.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%f`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%f`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Uses the 12-hour clock and displays an uppercase <ph id="ph1">`A`</ph> for any hour before noon; displays an uppercase <ph id="ph2">`P`</ph> for any hour between noon and 11:59 P.M.</source>
          <target state="translated">Используется 12-часовой формат времени и отображает <ph id="ph1">`A`</ph> для любого часа до полудня Вывод заглавных букв <ph id="ph2">`P`</ph> для времени от полудня до 23:59.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%t`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%t`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 12-hour clock, displays an uppercase <ph id="ph1">`AM`</ph> with any hour before noon; displays an uppercase <ph id="ph2">`PM`</ph> with any hour between noon and 11:59 P.M.</source>
          <target state="translated">Для языков, использующих 12-часовом формате, Вывод заглавных букв <ph id="ph1">`AM`</ph> при выводе времени до полудня; Вывод заглавных букв <ph id="ph2">`PM`</ph> времени от полудня до 23:59.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 24-hour clock, displays nothing.</source>
          <target state="translated">Для языков, использующих 24-часовом формате не отображает ничего.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year number (0-9) without leading zeros.</source>
          <target state="translated">Отображает номер года (0-9) без предшествующих нулей.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%y`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%y`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in two-digit numeric format with a leading zero, if applicable.</source>
          <target state="translated">Отображает год в числовом формате из двух цифр с нулем в начале, если это применимо.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in four-digit numeric format.</source>
          <target state="translated">Отображает год в числовом формате из четырех цифр.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the year in four-digit numeric format.</source>
          <target state="translated">Отображает год в числовом формате из четырех цифр.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the timezone offset without a leading zero (for example, <ph id="ph1">`-8`</ph>).</source>
          <target state="translated">Выводит Сдвиг часового пояса без ведущих нулей (например, <ph id="ph1">`-8`</ph>).</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Use <ph id="ph1">`%z`</ph> if this is the only character in your user-defined numeric format.</source>
          <target state="translated">Используйте <ph id="ph1">`%z`</ph> Если это только один символ в определяемых пользователем числовом формате.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the timezone offset with a leading zero (for example, <ph id="ph1">`-08`</ph>)</source>
          <target state="translated">Выводит Сдвиг часового пояса с нулем в начале (например, <ph id="ph1">`-08`</ph>)</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays the full timezone offset (for example, <ph id="ph1">`-08:00`</ph>)</source>
          <target state="translated">Отображает полный Сдвиг часового пояса (например, <ph id="ph1">`-08:00`</ph>)</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Legacy Code Example</source>
          <target state="translated">Старый пример кода</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The following are examples of user-defined date and time formats for <ph id="ph1">`December 7, 1958, 8:50 PM, 35 seconds`</ph>:</source>
          <target state="translated">Ниже приведены примеры пользовательских форматов даты и времени для <ph id="ph1">`December 7, 1958, 8:50 PM, 35 seconds`</ph>:</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Format</source>
          <target state="translated">Формат</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Displays</source>
          <target state="translated">Отображение</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>The minimum time resolution for a device is determined by the manufacturer of the device.</source>
          <target state="translated">Минимальный квант времени для устройства определяется производителем устройства.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>If the time resolution for the device is coarse enough, the <ph id="ph1">`f`</ph> format character returns 0 when run on that device.</source>
          <target state="translated">Если квант времени для устройства достаточно грубым <ph id="ph1">`f`</ph> символ формата возвращает 0 при запуске на этом устройстве.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>This example shows various uses of the <ph id="ph1">`Format`</ph> function to format values using both <ph id="ph2">`String`</ph> formats and user-defined formats.</source>
          <target state="translated">В данном примере показаны различные способы использования функции <ph id="ph1">`Format`</ph> для форматирования значений с применением как форматов <ph id="ph2">`String`</ph>, так и определенных пользователем форматов.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For the date separator (<ph id="ph1">`/`</ph>), time separator (<ph id="ph2">`:`</ph>), and the AM/PM indicators (<ph id="ph3">`t`</ph> and <ph id="ph4">`tt`</ph>), the actual formatted output displayed by your system depends on the locale settings the code is using.</source>
          <target state="translated">Фактическое отображение системой разделителя даты (<ph id="ph1">`/`</ph>), разделителя времени (<ph id="ph2">`:`</ph> и индикаторов AM/PM (<ph id="ph3">`t`</ph> и <ph id="ph4">`tt`</ph>) зависит от региональных параметров, применяемых кодом.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</source>
          <target state="translated">При отображении времени и даты в среде разработки используется короткий формат времени и даты региональных установок кода.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
          <source>For locales that use a 24-hour clock, the AM/PM indicators (<ph id="ph1">`t`</ph> and <ph id="ph2">`tt`</ph>) display nothing.</source>
          <target state="translated">Для языков, использующих 24-часовой формат, индикаторы AM/PM (<ph id="ph1">`t`</ph> и <ph id="ph2">`tt`</ph>) не отображаются.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">Форматируемое выражение.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">По умолчанию используется значение –1, указывающее на необходимость использования региональных настроек компьютера.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not a leading zero is displayed for fractional values.</source>
          <target state="translated">Перечисление <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающее, следует ли отображать ноль в начале дробных значений.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">Значения см. в разделе "Примечания".</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated">Перечисление <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающее, следует ли заключать отрицательные значения в скобки.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">Значения см. в разделе "Примечания".</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</source>
          <target state="translated">Перечисление <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающее, следует ли объединять разряды чисел в группы, используя разделитель групп, определенный в региональных параметрах компьютера.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Remarks" for values.</source>
          <target state="translated">Значения см. в разделе "Примечания".</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">Возвращает выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</source>
          <target state="translated">Возвращает выражение в формате денежной единицы с использованием символа денежной единицы, определенного в системной панели управления.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</source>
          <target state="translated">Если один или несколько необязательных аргументов опущены, вместо них используются соответствующие значения региональных параметров компьютера.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The position of the currency symbol relative to the currency value is determined by the system's regional settings.</source>
          <target state="translated">Положение символа валюты относительно значения денежной суммы определяется региональными параметрами системы.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">Сведения о всех настройках поступает из языкового стандарта приложения.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">По умолчанию, которые будут языковому стандарту, установленному на панели управления.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the <ph id="ph1">`Number`</ph> tab.</source>
          <target state="translated">Тем не менее, он может измениться программным способом с помощью .NET Framework, кроме нуля, которое берется из <ph id="ph1">`Number`</ph> вкладки.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments take the following TriState enumeration values.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, И <ph id="ph3">`GroupDigits`</ph> аргументы принимать следующие значения перечисления три состояния.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">Да</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">Региональные настройки компьютера</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The following example illustrates the use of the <ph id="ph1">`FormatCurrency`</ph> function.</source>
          <target state="translated">В следующем примере показано применение функции <ph id="ph1">`FormatCurrency`</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Number of digits after decimal point is greater than 99.</source>
          <target state="translated">Число цифр после десятичного разделителя превышает 99.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">Тип не является числовым.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source><ph id="ph1">&lt;see langword="Date" /&gt;</ph> expression to be formatted.</source>
          <target state="translated">Форматируемое выражение <ph id="ph1">&lt;see langword="Date" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Numeric value that indicates the date/time format used.</source>
          <target state="translated">Числовое значение, указывающее используемый формат даты/времени.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If omitted, <ph id="ph1">&lt;see langword="DateFormat.GeneralDate" /&gt;</ph> is used.</source>
          <target state="translated">Если опущен, используется <ph id="ph1">&lt;see langword="DateFormat.GeneralDate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">Возвращает строковое выражение, представляющее значение даты и времени.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Returns a string expression representing a date/time value.</source>
          <target state="translated">Возвращает строковое выражение, представляющее значение даты и времени.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>The <ph id="ph1">`Date`</ph> data type always contains both date and time information.</source>
          <target state="translated"><ph id="ph1">`Date`</ph> Тип данных всегда содержит сведения о дате и времени.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</source>
          <target state="translated">В целях преобразования типов Visual Basic рассматривает 1/1/1 (1 января 1 года) к нейтральным значением даты и 00:00:00 (полночь) будет нейтральным значением времени.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If you format a <ph id="ph1">`Date`</ph> value as a date/time string, <ph id="ph2">`FormatDateTime`</ph> does not include neutral values in the resulting string.</source>
          <target state="translated">При форматировании <ph id="ph1">`Date`</ph> значение в виде строки даты и времени, <ph id="ph2">`FormatDateTime`</ph> включает нейтральные значения в результирующую строку.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</source>
          <target state="translated">Например, если преобразование #1/1/0001 9:30:00 # в строку, результат — «9:30:00 AM»; Дата отбрасывается.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>However, the date information is still present in the original <ph id="ph1">`Date`</ph> value and can be recovered with functions such as <ph id="ph2">`DatePart`</ph>.</source>
          <target state="translated">Тем не менее, сведения о дате по-прежнему присутствует в исходной коллекции <ph id="ph1">`Date`</ph> значение и может быть восстановлен с помощью функции например <ph id="ph2">`DatePart`</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If you pass the <ph id="ph1">`Expression`</ph> argument as a <ph id="ph2">`String`</ph> literal, <ph id="ph3">`FormatDateTime`</ph> interprets it according to the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> setting of your application.</source>
          <target state="translated">Если передать <ph id="ph1">`Expression`</ph> аргумента в качестве <ph id="ph2">`String`</ph> литерал, <ph id="ph3">`FormatDateTime`</ph> интерпретируется согласно <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> установки приложения.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>However, if you pass it as a <ph id="ph1">`Date`</ph> literal, use the format #mm/dd/yyyy#, because <ph id="ph2">`FormatDateTime`</ph> always interprets a <ph id="ph3">`Date`</ph> literal according to the English (US) culture.</source>
          <target state="translated">Тем не менее если передать его как <ph id="ph1">`Date`</ph> литерал, используйте формат #mm/дд/гггг #, так как <ph id="ph2">`FormatDateTime`</ph> всегда интерпретирует <ph id="ph3">`Date`</ph> литерала культуре английского языка (США).</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>This is necessary because, if an application is developed and coded using <ph id="ph1">`Date`</ph> literals from one culture, but is then executed on a platform with a different culture, the <ph id="ph2">`Date`</ph> literals could be parsed incorrectly.</source>
          <target state="translated">Это необходимо, поскольку, если приложение разрабатывается и кодируется с использованием <ph id="ph1">`Date`</ph> литералы из одного языка и региональных параметров, но выполняется на платформе с другим языком, <ph id="ph2">`Date`</ph> разбор литералов может быть неверно.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>The <ph id="ph1">`NamedFormat`</ph> argument has the following settings.</source>
          <target state="translated"><ph id="ph1">`NamedFormat`</ph> Аргумент имеет следующие параметры.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date and/or time.</source>
          <target state="translated">Отобразить дату и время.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date part as a short date.</source>
          <target state="translated">Отображает часть даты в кратком формате.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If there is a time part, display it as a long time.</source>
          <target state="translated">Если часть времени, отображается много времени.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>If present, both parts display.</source>
          <target state="translated">Если он имеется, отображаются обе части.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date using the long date format specified in your computer's regional settings.</source>
          <target state="translated">Отображает дату в формате даты, указанные в региональных параметров компьютера.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a date using the short date format specified in your computer's regional settings.</source>
          <target state="translated">Отображает дату в формате короткой даты, определяется в региональных настройках компьютера.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a time using the time format specified in your computer's regional settings.</source>
          <target state="translated">Отображает время в формате, который указан в региональных настройках компьютера.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>Display a time using the 24-hour format (hh:mm).</source>
          <target state="translated">Отображает время в 24-часовом формате (чч: мм).</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source>This example demonstrates the use of the <ph id="ph1">`FormatDateTime`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`FormatDateTime`</ph> функции.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
          <source><ph id="ph1">&lt;paramref name="NamedFormat" /&gt;</ph> setting is not valid.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="NamedFormat" /&gt;</ph> недопустим.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">Форматируемое выражение.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places are displayed to the right of the decimal.</source>
          <target state="translated">Числовое значение, указывающее количество цифр, которые должны быть отображены справа от десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The default value is –1, which indicates that the computer's regional settings are used.</source>
          <target state="translated">По умолчанию принимается значение –1, что указывает на использование региональных параметров компьютера.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether a leading 0 is displayed for fractional values.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, следует ли отображать 0 в начале дробных значений.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether to place negative values within parentheses.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, следует ли заключать отрицательные значения в скобки.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">Возвращает выражение в формате числа.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a number.</source>
          <target state="translated">Возвращает выражение в формате числа.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">Когда один или несколько необязательных аргументов опущены значения задаются параметры языковых стандартов.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">Сведения о всех настройках поступает из языкового стандарта приложения.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">По умолчанию, которые будут языковому стандарту, установленному на панели управления.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">Однако его можно изменить программным способом с помощью .NET Framework.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, И <ph id="ph3">`GroupDigits`</ph> аргументы имеют следующие параметры.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">Да</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">Региональные настройки компьютера</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>This example demonstrates the <ph id="ph1">`FormatNumber`</ph> function.</source>
          <target state="translated">В этом примере демонстрируется <ph id="ph1">`FormatNumber`</ph> функции.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">Тип не является числовым.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Expression to be formatted.</source>
          <target state="translated">Форматируемое выражение.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Numeric value indicating how many places to the right of the decimal are displayed.</source>
          <target state="translated">Числовое значение, указывающее количество отображаемых цифр справа от десятичной запятой.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Default value is –1, which indicates that the locale settings are used.</source>
          <target state="translated">Значение по умолчанию — 1. Это указывает на то, что используются настройки языкового стандарта.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not a leading zero displays for fractional values.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, отображается ли ноль в дробных значениях.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not to place negative values within parentheses.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, нужно ли заключать отрицательные значения в скобки.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</source>
          <target state="translated">Константа <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.TriState" /&gt;</ph>, указывающая, группируются ли значения с использованием разделителя, указанного в настройках языкового стандарта.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">Возвращает выражение в виде процента (умноженное на 100) с символом % в конце.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</source>
          <target state="translated">Возвращает выражение в виде процента (умноженное на 100) с символом % в конце.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</source>
          <target state="translated">Когда один или несколько необязательных аргументов опущены, значения задаются параметры языковых стандартов.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>All settings information comes from the locale of the application.</source>
          <target state="translated">Сведения о всех настройках поступает из языкового стандарта приложения.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>By default, that will be the locale set in the control panel.</source>
          <target state="translated">По умолчанию, которые будут языковому стандарту, установленному на панели управления.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>However, it may be changed programmatically by using the .NET Framework.</source>
          <target state="translated">Однако его можно изменить программным способом с помощью .NET Framework.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The <ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, and <ph id="ph3">`GroupDigits`</ph> arguments have the following settings.</source>
          <target state="translated"><ph id="ph1">`IncludeLeadingDigit`</ph>, <ph id="ph2">`UseParensForNegativeNumbers`</ph>, И <ph id="ph3">`GroupDigits`</ph> аргументы имеют следующие параметры.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>True</source>
          <target state="translated">Да</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>False</source>
          <target state="translated">False</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>The computer's regional settings</source>
          <target state="translated">Региональные настройки компьютера</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>This example illustrates the use of the <ph id="ph1">`FormatPercent`</ph> function.</source>
          <target state="translated">В этом примере показано использование <ph id="ph1">`FormatPercent`</ph> функции.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
          <source>Type is not numeric.</source>
          <target state="translated">Тип не является числовым.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>The (1-based) index of the character in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept> to be returned.</source>
          <target state="translated">Возвращаемый индекс символа (отсчитываемый от 1) в <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see langword="Char" /&gt;</ph> value representing the character from the specified index in the supplied string.</source>
          <target state="translated">Возвращает значение типа <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, представляющее знак из указанной позиции в предоставленной строке.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Char" /&gt;</ph> value representing the character from the specified index in the supplied string.</source>
          <target state="translated">Значение типа <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, представляющее знак из указанного индекса в предоставленной строке.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>If <ph id="ph1">`Index`</ph> is less than 1 or greater than the index of the last character in <ph id="ph2">`str`</ph>, an <ph id="ph3">`ArgumentException`</ph> is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Index`</ph> меньше 1 или больше индекса последнего символа в <ph id="ph2">`str`</ph>, <ph id="ph3">`ArgumentException`</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source>This example shows how to use the <ph id="ph1">`GetChar`</ph> function to return a character from a specified index in a <ph id="ph2">`String`</ph>.</source>
          <target state="translated">В этом примере показано, как использовать <ph id="ph1">`GetChar`</ph> функцию для возврата знака из указанного индекса в <ph id="ph2">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="str" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>, <ph id="ph3">&lt;paramref name="Index" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 1, or <ph id="ph5">&lt;paramref name="Index" /&gt;</ph> is greater than index of last character of <ph id="ph6">&lt;paramref name="str" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="str" /&gt;</ph> равен <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>, параметр <ph id="ph3">&lt;paramref name="Index" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 1, или параметр <ph id="ph5">&lt;paramref name="Index" /&gt;</ph> больше индекса последнего символа в <ph id="ph6">&lt;paramref name="str" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>The integer is a one-based index if a match is found.</source>
          <target state="translated">Целое число представляет собой отсчитываемый от единицы индекс, если совпадение найдено.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>If no match is found, the function returns zero.</source>
          <target state="translated">Если совпадение не найдено, функция возвращает нуль.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression being searched.</source>
          <target state="translated">Искомое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression sought.</source>
          <target state="translated">Искомое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Указывает тип сравнения строк.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> не задан, параметр <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> определяет тип сравнения.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">If</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>InStr returns</source>
          <target state="translated">InStr возвращает</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String1" /&gt;</ph> является пустой строкой или значением <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String2" /&gt;</ph> является пустой строкой или значением <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The starting position for the search, which defaults to the first character position.</source>
          <target state="translated">Начальная позиция диапазона для поиска, которая по умолчанию в первом положении символа.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is not found</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String2" /&gt;</ph> не найден.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> находится в пределах <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Position where match begins</source>
          <target state="translated">Позиция, где начинается соответствие</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">Как правило <ph id="ph1">`InStr`</ph> функция используется при анализе строк.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated"><ph id="ph1">`InStrB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов, а не позицию символа.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`InStrB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated">Параметры аргумента <ph id="ph1">`Compare`</ph>:</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison</source>
          <target state="translated">Выполняет сравнение текста</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`InStr`</ph> function to return the position of the first occurrence of one string within another.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`InStr`</ph> используется для возврата позиции первого вхождения одной строки в другую.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric expression that sets the starting position for each search.</source>
          <target state="translated">Числовое выражение, задающее начальную позицию для каждого поиска.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, search begins at the first character position.</source>
          <target state="translated">Если это выражение опущено, поиск начинается с позиции первого знака.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The start index is 1-based.</source>
          <target state="translated">Начальный индекс равен 1.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression being searched.</source>
          <target state="translated">Искомое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression sought.</source>
          <target state="translated">Искомое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Указывает тип сравнения строк.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> не задан, параметр <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> определяет тип сравнения.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns an integer specifying the start position of the first occurrence of one string within another.</source>
          <target state="translated">Возвращает целое число, указывающее начальную позицию первого вхождения одной строки в другую.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">If</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>InStr returns</source>
          <target state="translated">InStr возвращает</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String1" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String1" /&gt;</ph> является пустой строкой или значением <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is zero length or <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String2" /&gt;</ph> является пустой строкой или значением <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is not found</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="String2" /&gt;</ph> не найден.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="String2" /&gt;</ph> находится в пределах <ph id="ph2">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Position where match begins</source>
          <target state="translated">Позиция, где начинается соответствие</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> length of <ph id="ph3">&lt;paramref name="String1" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> Длина <ph id="ph3">&lt;paramref name="String1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Typically, the <ph id="ph1">`InStr`</ph> function is used when parsing strings.</source>
          <target state="translated">Как правило <ph id="ph1">`InStr`</ph> функция используется при анализе строк.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`InStrB`</ph> function in previous versions of Visual Basic returns a number of bytes rather than a character position.</source>
          <target state="translated"><ph id="ph1">`InStrB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов, а не позицию символа.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>All Visual Basic 2005 strings are in Unicode, and <ph id="ph1">`InStrB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic 2005 кодируются в Юникоде, и <ph id="ph1">`InStrB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated">Параметры аргумента <ph id="ph1">`Compare`</ph>:</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison</source>
          <target state="translated">Выполняет сравнение текста</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`InStr`</ph> function to return the position of the first occurrence of one string within another.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`InStr`</ph> используется для возврата позиции первого вхождения одной строки в другую.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 1.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression being searched.</source>
          <target state="translated">Строковое выражение, в котором ведется поиск.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression being searched for.</source>
          <target state="translated">Строковое выражение, которое требуется найти.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</source>
          <target state="translated">Числовое выражение, устанавливающее начальную позицию, начиная с 1, для каждой операции поиска, начиная с левого края строки.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is omitted then –1 is used, meaning the search begins at the last character position.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> не указан, то используется значение –1, означающее, что поиск начинается с позиции последнего символа.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Search then proceeds from right to left.</source>
          <target state="translated">После этого строка просматривается справа налево.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">Числовое значение, показывающее вид сравнения, используемое при оценке подстрок.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, a binary comparison is performed.</source>
          <target state="translated">Если этот аргумент опущен, то выполняется двоичное сравнение.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See Settings for values.</source>
          <target state="translated">См. значения в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns the position of the first occurrence of one string within another, starting from the right side of the string.</source>
          <target state="translated">Возвращает позицию первого вхождения одной строки в другую, начиная с правого конца строки.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If</source>
          <target state="translated">If</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>InStrRev returns</source>
          <target state="translated">InStrRev возвращает</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringCheck" /&gt;</ph> is zero-length</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="StringCheck" /&gt;</ph> имеет нулевую длину</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is zero-length</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> имеет нулевую длину</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is not found</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> не найден.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> is found within <ph id="ph2">&lt;paramref name="StringCheck" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="StringMatch" /&gt;</ph> находится в пределах <ph id="ph2">&lt;paramref name="StringCheck" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Position at which the first match is found, starting with the right side of the string.</source>
          <target state="translated">Позиция, в которой найдено первое сравнение, начиная с правого конца строки.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> is greater than length of <ph id="ph2">&lt;paramref name="StringMatch" /&gt;</ph></source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="Start" /&gt;</ph> больше, чем длина параметра <ph id="ph2">&lt;paramref name="StringMatch" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Note that the syntax for the <ph id="ph1">`InStrRev`</ph> function is not the same as the syntax for the <ph id="ph2">`InStr`</ph> function.</source>
          <target state="translated">Обратите внимание, что синтаксис <ph id="ph1">`InStrRev`</ph> функция отличается от синтаксиса <ph id="ph2">`InStr`</ph> функции.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> Аргумент может иметь следующие значения.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison.</source>
          <target state="translated">Выполняется двоичное сравнение.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison.</source>
          <target state="translated">Выполняется текстовое сравнение.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the use of the <ph id="ph1">`InStrRev`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`InStrRev`</ph> функции.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> = 0 or <ph id="ph2">&lt;paramref name="Start" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> = 0 или <ph id="ph2">&lt;paramref name="Start" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> –1.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">Одномерный массив подстрок, подлежащих объединению.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">Любая строка, используемая для разделения подстрок в составе возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">Если этот аргумент опущен, используется знак пробела (" ").</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is a zero-length string ("") or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">Если в качестве <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> задана строка нулевой длины ("") или ключевое слово <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, все элементы списка сцепляются без разделителей.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">Равенство между <ph id="ph1">`Join`</ph> и <ph id="ph2">`Split`</ph> функции.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph> Функция принимает массив строк и соединяет их, используя строку-разделитель для возвращения одной строки.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph> Функция принимает строку и разбивает ее по разделителям, возвращая массив строк.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">Тем не менее, Ключевое отличие является <ph id="ph1">`Join`</ph> можно соединить строки с любой строкой-разделителем <ph id="ph2">`Split`</ph> строки, с помощью одного символа разделителя можно разделить.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">`Join`</ph> function to create a list from several strings.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">`Join`</ph> функцию, чтобы создать список из нескольких строк.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
          <source><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> не является одномерным.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>One-dimensional array containing substrings to be joined.</source>
          <target state="translated">Одномерный массив подстрок, подлежащих объединению.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Any string, used to separate the substrings in the returned string.</source>
          <target state="translated">Любая строка, используемая для разделения подстрок в составе возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>If omitted, the space character (" ") is used.</source>
          <target state="translated">Если этот аргумент опущен, используется знак пробела (" ").</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is a zero-length string ("") or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, all items in the list are concatenated with no delimiters.</source>
          <target state="translated">Если в качестве <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> задана строка нулевой длины ("") или ключевое слово <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>, все элементы списка сцепляются без разделителей.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>Returns a string created by joining a number of substrings contained in an array.</source>
          <target state="translated">Возвращает строку, образуемую путем соединения нескольких подстрок, содержащихся в массиве.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>There is a parity between the <ph id="ph1">`Join`</ph> and <ph id="ph2">`Split`</ph> functions.</source>
          <target state="translated">Равенство между <ph id="ph1">`Join`</ph> и <ph id="ph2">`Split`</ph> функции.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The <ph id="ph1">`Join`</ph> function takes an array of strings and joins them using a delimiter string, to return a single string.</source>
          <target state="translated"><ph id="ph1">`Join`</ph> Функция принимает массив строк и соединяет их, используя строку-разделитель для возвращения одной строки.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The <ph id="ph1">`Split`</ph> function takes a string and separates it at the delimiter, to return an array of strings.</source>
          <target state="translated"><ph id="ph1">`Split`</ph> Функция принимает строку и разбивает ее по разделителям, возвращая массив строк.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>However, a key difference is that <ph id="ph1">`Join`</ph> can concatenate strings with any delimiter string, <ph id="ph2">`Split`</ph> can only separate strings using a single character delimiter.</source>
          <target state="translated">Тем не менее, Ключевое отличие является <ph id="ph1">`Join`</ph> можно соединить строки с любой строкой-разделителем <ph id="ph2">`Split`</ph> строки, с помощью одного символа разделителя можно разделить.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">`Join`</ph> function to create a list from several strings.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">`Join`</ph> функцию, чтобы создать список из нескольких строк.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
          <source><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> is not one dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="SourceArray" /&gt;</ph> не является одномерным.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Возвращает строку или символ, преобразованные в нижний регистр.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Возвращает строку или символ, преобразованные в нижний регистр.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Возвращает строку или символ, преобразованные в нижний регистр.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Только прописные буквы преобразуются в нижний регистр; Все строчные буквы и символы nonletter остаются неизменными.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Эта функция использует данные язык и региональные параметры приложения при обработке строки, чтобы изменения регистра соответствовали для языкового стандарта, в котором используется это приложение.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">Если приложение принимает решений по безопасности на основе результата сравнения или операциями изменения регистра, то эта операция должна выполняться <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> и передайте <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> или <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> для <ph id="ph4">`comparisonType`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
          <source>This example uses the <ph id="ph1">`LCase`</ph> function to return a lowercase version of a string.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`LCase`</ph> функция, возвращающая версия строки в нижний регистр.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Возвращает строку или символ, преобразованные в нижний регистр.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Returns a string or character converted to lowercase.</source>
          <target state="translated">Возвращает строку или символ, преобразованные в нижний регистр.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Только прописные буквы преобразуются в нижний регистр; Все строчные буквы и символы nonletter остаются неизменными.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Эта функция использует данные язык и региональные параметры приложения при обработке строки, чтобы изменения регистра соответствовали для языкового стандарта, в котором используется это приложение.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">Если приложение принимает решений по безопасности на основе результата сравнения или операциями изменения регистра, то эта операция должна выполняться <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> и передайте <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> или <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> для <ph id="ph4">`comparisonType`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
          <source>This example uses the <ph id="ph1">`LCase`</ph> function to return a lowercase version of a string.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`LCase`</ph> функция, возвращающая версия строки в нижний регистр.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which the leftmost characters are returned.</source>
          <target state="translated">Выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, из которого возвращаются крайние левые знаки.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">Числовое выражение, показывающее необходимое число возвращаемых знаков.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">Если выражение равно 0, возвращается строка нулевой длины ("").</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If greater than or equal to the number of characters in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, the entire string is returned.</source>
          <target state="translated">Если выражение больше или равно числу символов в <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, то возвращается вся строка.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">Возвращает строку, содержащую указанное число знаков с левой стороны строки.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the left side of a string.</source>
          <target state="translated">Возвращает строку, содержащую указанное число знаков с левой стороны строки.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Чтобы определить число знаков в <ph id="ph1">`str`</ph>, используйте <ph id="ph2">`Len`</ph> функции.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>If used in a Windows Forms application, or any other class that has a <ph id="ph1">`Left`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</source>
          <target state="translated">При использовании в приложении Windows Forms или любой другой класс, имеющий <ph id="ph1">`Left`</ph> свойства, необходимо полностью определить функцию с <ph id="ph2">`Microsoft.VisualBasic.Left`</ph>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>The <ph id="ph1">`LeftB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`LeftB`</ph> В предыдущих версиях Visual Basic функция возвращает строку, в байтах, а не символы.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LeftB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LeftB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`Left`</ph> function to return a substring of a given <ph id="ph2">`String`</ph>.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`Left`</ph> функция возвращает подстроку из данного <ph id="ph2">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source>In a class that has a <ph id="ph1">`Left`</ph> property, it may be necessary to fully qualify the <ph id="ph2">`Left`</ph> function.</source>
          <target state="translated">В классе, который имеет <ph id="ph1">`Left`</ph> свойства, может оказаться необходимым для полного определения <ph id="ph2">`Left`</ph> функции.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.String)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression or variable name.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или имя переменной.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, the <ph id="ph2">&lt;see langword="Len" /&gt;</ph> function returns the size as it will be written to the file by the <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph> function.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> имеет тип <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, то функция <ph id="ph2">&lt;see langword="Len" /&gt;</ph> возвращает размер объекта при записи в файл функцией <ph id="ph3">&lt;see langword="FilePut" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</source>
          <target state="translated">Возвращает целое число, содержащее либо количество знаков в строке, либо количество байтов, необходимых для хранения переменной.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>With user-defined types and <ph id="ph1">`Object`</ph> variables, the <ph id="ph2">`Len`</ph> function returns the size as it will be written to the file by the <ph id="ph3">`FilePut`</ph> function.</source>
          <target state="translated">С помощью определяемых пользователем типов и <ph id="ph1">`Object`</ph> переменных, <ph id="ph2">`Len`</ph> функция возвращает размер, как она будет записана в файл путем <ph id="ph3">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the string.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина строки.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, it will return the size of the object as it will be written to the file by the <ph id="ph2">`FilePut`</ph> function.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, он возвращает размер объекта будет записан в файл с <ph id="ph2">`FilePut`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`VBFixedString`</ph> attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</source>
          <target state="translated"><ph id="ph1">`VBFixedString`</ph> Атрибут может применяться к строковым полям в объекты, чтобы указать размер строки в байтах, при записи на диск.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function uses the <ph id="ph2">`VBFixedString`</ph> attribute, if available, when determining the size of <ph id="ph3">`Object`</ph> variables.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция использует <ph id="ph2">`VBFixedString`</ph> атрибута, если он доступен, при определении размера <ph id="ph3">`Object`</ph> переменных.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функции не удается определить фактическое число байтов памяти, необходимых при использовании строк переменной длины в определенных пользователем типов данных.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`LenB`</ph> function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</source>
          <target state="translated"><ph id="ph1">`LenB`</ph> В предыдущих версиях Visual Basic функция возвращает число байтов в строке, а не символы.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`LenB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`LenB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>Smart Device Developer Notes</source>
          <target state="translated">Примечания для разработчиков интеллектуальных устройств</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>The <ph id="ph1">`Len`</ph> function accepts only <ph id="ph2">`String`</ph> and <ph id="ph3">`Object`</ph> variables as parameters.</source>
          <target state="translated"><ph id="ph1">`Len`</ph> Функция принимает только <ph id="ph2">`String`</ph> и <ph id="ph3">`Object`</ph> переменные в качестве параметров.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains a <ph id="ph2">`String`</ph>, it will return the length of the <ph id="ph3">`String`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит <ph id="ph2">`String`</ph>, то возвращается длина <ph id="ph3">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If a parameter is a NULL <ph id="ph1">`Object`</ph> reference, the function returns zero.</source>
          <target state="translated">Если параметр имеет значение NULL <ph id="ph1">`Object`</ph> ссылку, то функция возвращает ноль.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>If an <ph id="ph1">`Object`</ph> contains any other type, an exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`Object`</ph> содержит другой тип, выдается исключение.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
          <source>This example uses <ph id="ph1">`Len`</ph> to return the number of characters in a string.</source>
          <target state="translated">В данном примере <ph id="ph1">`Len`</ph> используется для возврата числа знаков в строке.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Name of string variable.</source>
          <target state="translated">Имя строковой переменной.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Length of returned string.</source>
          <target state="translated">Длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Возвращает выровненную по левому краю строку запрашиваемой длины, содержащую указанную строку.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>Returns a left-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Возвращает выровненную по левому краю строку запрашиваемой длины, содержащую указанную строку.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>If the specified string is longer than the specified length, the returned string is shortened to the specified length.</source>
          <target state="translated">Если указанная строка длиннее значения указанной длины, возвращаемая строка сокращается до указанной длины.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</source>
          <target state="translated">Если указанная строка короче указанной длины, добавляются пробелы в правый конец возвращаемой строки для достижения соответствующей длины.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`LSet`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`LSet`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, И <ph id="ph3">`Trim`</ph> функции удалить пробелы в конце строки.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`LTrim`</ph> используется, чтобы убрать пробелы в начале, а функция <ph id="ph2">`RTrim`</ph> — чтобы убрать пробелы в конце строковой переменной.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">Функция <ph id="ph1">`Trim`</ph> в примере используется для удаления обоих типов пробелов.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string that contains characters from a specified string.</source>
          <target state="translated">Возвращает строку, содержащую символы из указанной строки.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which characters are returned.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>, из которого возвращаются знаки.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Starting position of the characters to return.</source>
          <target state="translated">Начальная позиция возвращаемых знаков.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is greater than the number of characters in <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, the <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> function returns a zero-length string ("").</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> больше, чем количество символов в параметре <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, функция <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> возвращает пустую строку ("").</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is one-based.</source>
          <target state="translated">Значение параметра <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> отсчитывается от единицы.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Returns a string that contains all the characters starting from a specified position in a string.</source>
          <target state="translated">Возвращает строку, содержащую все символы начиная с указанной позиции в строке.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>A string that consists of all the characters starting from the specified position in the string.</source>
          <target state="translated">Строка, состоящая из всех символов начиная с указанной позиции в строке.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Чтобы определить число знаков в <ph id="ph1">`str`</ph>, используйте <ph id="ph2">`Len`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic использует <ph id="ph1">`Mid`</ph> функции и <ph id="ph2">`Mid`</ph> инструкции.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">Эти элементы, они работают на указанное число знаков в строке, но <ph id="ph1">`Mid`</ph> функция возвращает символов при <ph id="ph2">`Mid`</ph> инструкция заменяет символы.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>оператор Mid<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>The <ph id="ph1">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`MidB`</ph> В предыдущих версиях Visual Basic функция возвращает строку, в байтах, а не символы.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic кодируются в Юникоде, и <ph id="ph1">`MidB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source>The last line in this example uses this overload of the <ph id="ph1">`Mid`</ph> function to return the fifth and subsequent characters from a string.</source>
          <target state="translated">Последняя строка в этом примере используется перегрузка метода <ph id="ph1">`Mid`</ph> функция, возвращающая пятая и последующие символы из строки.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 или <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which characters are returned.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>, из которого возвращаются знаки.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Starting position of the characters to return.</source>
          <target state="translated">Начальная позиция возвращаемых знаков.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is greater than the number of characters in <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, the <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> function returns a zero-length string ("").</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> больше, чем количество символов в параметре <bpt id="p2">&lt;c&gt;</bpt>str<ept id="p2">&lt;/c&gt;</ept>, функция <ph id="ph1">&lt;see langword="Mid" /&gt;</ph> возвращает пустую строку ("").</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> is one based.</source>
          <target state="translated">Значение параметра <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> отсчитывается от единицы.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Number of characters to return.</source>
          <target state="translated">Число возвращаемых знаков.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>If omitted or if there are fewer than <bpt id="p1">&lt;c&gt;</bpt>Length<ept id="p1">&lt;/c&gt;</ept> characters in the text (including the character at position <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>), all characters from the start position to the end of the string are returned.</source>
          <target state="translated">Если этот параметр не указан или количество знаков в тексте меньше значения <bpt id="p1">&lt;c&gt;</bpt>Length<ept id="p1">&lt;/c&gt;</ept> (включая символ в позиции <bpt id="p2">&lt;c&gt;</bpt>Start<ept id="p2">&lt;/c&gt;</ept>), возвращаются все знаки от начальной позиции до конца строки.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Returns a string that contains a specified number of characters starting from a specified position in a string.</source>
          <target state="translated">Возвращает строку, содержащую указанное число символов начиная с указанной позиции в строке.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>A string that consists of the specified number of characters starting from the specified position in the string.</source>
          <target state="translated">Строка, состоящая из указанного числа символов начиная с указанной позиции в строке.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Чтобы определить число знаков в <ph id="ph1">`str`</ph>, используйте <ph id="ph2">`Len`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>Visual Basic has a <ph id="ph1">`Mid`</ph> function and a <ph id="ph2">`Mid`</ph> statement.</source>
          <target state="translated">Visual Basic использует <ph id="ph1">`Mid`</ph> функции и <ph id="ph2">`Mid`</ph> инструкции.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>These elements both operate on a specified number of characters in a string, but the <ph id="ph1">`Mid`</ph> function returns the characters while the <ph id="ph2">`Mid`</ph> statement replaces the characters.</source>
          <target state="translated">Эти элементы, они работают на указанное число знаков в строке, но <ph id="ph1">`Mid`</ph> функция возвращает символов при <ph id="ph2">`Mid`</ph> инструкция заменяет символы.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Mid Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>оператор Mid<ept id="p1">](~/docs/visual-basic/language-reference/statements/mid-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`MidB`</ph> function in previous versions of Visual Basic returns a string in bytes rather than characters.</source>
          <target state="translated"><ph id="ph1">`MidB`</ph> В предыдущих версиях Visual Basic функция возвращает строку, в байтах, а не символы.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>All Visual Basic strings are in Unicode, and <ph id="ph1">`MidB`</ph> is no longer supported.</source>
          <target state="translated">Все строки Visual Basic кодируются в Юникоде, и <ph id="ph1">`MidB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>The first two <ph id="ph1">`Mid`</ph> functions in this example return the specified number of characters from a string, starting from the given positions.</source>
          <target state="translated">Первые два <ph id="ph1">`Mid`</ph> функции в этом примере возвращает указанное количество символов из строки, начиная с заданной позиции.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source>(The last function illustrates the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29&gt;</ph> overload and only specifies the starting point for the string extraction.)</source>
          <target state="translated">(Последняя функция иллюстрирует <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29&gt;</ph> перегружать и только указывает начальную точку для извлечения строки.)</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 or <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Start" /&gt;</ph> <ph id="ph2">&amp;lt;</ph>= 0 или <ph id="ph3">&lt;paramref name="Length" /&gt;</ph> <ph id="ph4">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>String expression containing substring to replace.</source>
          <target state="translated">Строковое выражение, содержащее замещаемую подстроку.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Substring being searched for.</source>
          <target state="translated">Подстрока, которую требуется найти.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Replacement substring.</source>
          <target state="translated">Подстрока для замены.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Position within <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> that starts a substring used for replacement.</source>
          <target state="translated">Позиция в <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept>, с которой начинается подстрока, используемая для замены.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The return value of <ph id="ph1">&lt;see langword="Replace" /&gt;</ph> is a string that begins at <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept>, with appropriate substitutions.</source>
          <target state="translated">Возвращаемое значение <ph id="ph1">&lt;see langword="Replace" /&gt;</ph> представляет собой строку, начинающуюся со <bpt id="p1">&lt;c&gt;</bpt>Start<ept id="p1">&lt;/c&gt;</ept> с соответствующими заменами.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, 1 is assumed.</source>
          <target state="translated">Если этот аргумент не указан, используется значение 1.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Number of substring substitutions to perform.</source>
          <target state="translated">Число выполняемых замен подстроки.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If omitted, the default value is –1, which means "make all possible substitutions."</source>
          <target state="translated">Если этот аргумент опущен, по умолчанию принимается значение –1, указывающее, что следует "выполнить все возможные замены".</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the kind of comparison to use when evaluating substrings.</source>
          <target state="translated">Числовое значение, показывающее вид сравнения, используемое при оценке подстрок.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See Settings for values.</source>
          <target state="translated">См. значения в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a string in which a specified substring has been replaced with another substring a specified number of times.</source>
          <target state="translated">Возвращает строку, в которой указанная подстрока заданное число раз заменена другой подстрокой.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="Replace" /&gt;</ph> returns the following values.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="Replace" /&gt;</ph> возвращает следующие значения.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> If</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Условие</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Replace returns</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Функция Replace возвращает</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><bpt id="p1">&lt;item&gt;</bpt><bpt id="p2">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="Find" /&gt;</ph> is zero-length or <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph><ept id="p2">&lt;/term&gt;</ept><bpt id="p3">&lt;description&gt;</bpt> Copy of <ph id="ph5">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/description&gt;</ept><ept id="p1">&lt;/item&gt;</ept><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph><ph id="ph8">&lt;paramref name="Replace" /&gt;</ph> is zero-length</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><bpt id="p1">&lt;item&gt;</bpt><bpt id="p2">&lt;term&gt;</bpt><ph id="ph3">&lt;paramref name="Find" /&gt;</ph> имеет нулевую длину или равно <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph><ept id="p2">&lt;/term&gt;</ept><bpt id="p3">&lt;description&gt;</bpt>. Копия <ph id="ph5">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/description&gt;</ept><ept id="p1">&lt;/item&gt;</ept><ph id="ph6">&lt;item&gt;</ph><ph id="ph7">&lt;term&gt;</ph><ph id="ph8">&lt;paramref name="Replace" /&gt;</ph> имеет нулевую длину.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Copy of <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> with no occurrences of <ph id="ph3">&lt;paramref name="Find" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph4">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt><ph id="ph5">&lt;paramref name="Expression" /&gt;</ph> is zero-length or <ph id="ph6">&lt;see langword="Nothing" /&gt;</ph>, or <ph id="ph7">&lt;paramref name="Start" /&gt;</ph> is greater than length of <ph id="ph8">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph9">&lt;see langword="Nothing" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><ph id="ph10">&lt;item&gt;</ph><ph id="ph11">&lt;term&gt;</ph><ph id="ph12">&lt;paramref name="Count" /&gt;</ph> is 0</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Копия <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph> без вхождений <ph id="ph3">&lt;paramref name="Find" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph4">&lt;/item&gt;</ph><bpt id="p2">&lt;item&gt;</bpt><bpt id="p3">&lt;term&gt;</bpt><ph id="ph5">&lt;paramref name="Expression" /&gt;</ph> имеет нулевую длину или равна <ph id="ph6">&lt;see langword="Nothing" /&gt;</ph>, либо <ph id="ph7">&lt;paramref name="Start" /&gt;</ph> больше длины <ph id="ph8">&lt;paramref name="Expression" /&gt;</ph><ept id="p3">&lt;/term&gt;</ept><bpt id="p4">&lt;description&gt;</bpt><ph id="ph9">&lt;see langword="Nothing" /&gt;</ph><ept id="p4">&lt;/description&gt;</ept><ept id="p2">&lt;/item&gt;</ept><ph id="ph10">&lt;item&gt;</ph><ph id="ph11">&lt;term&gt;</ph><ph id="ph12">&lt;paramref name="Count" /&gt;</ph> равно 0</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Copy of <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;/list&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt> Копия <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;/list&gt;</ph></target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The return value of the <ph id="ph1">`Replace`</ph> function is a string that begins at the position specified by <ph id="ph2">`Start`</ph> and concludes at the end of the <ph id="ph3">`Expression`</ph> string, with the substitutions made as specified by the <ph id="ph4">`Find`</ph> and <ph id="ph5">`Replace`</ph> values.</source>
          <target state="translated">Возвращаемое значение <ph id="ph1">`Replace`</ph> функция представляет собой строку, которая начинается с позиции, указанной параметром <ph id="ph2">`Start`</ph> и завершается в конце <ph id="ph3">`Expression`</ph> строка со сделанными подстановками, заданные <ph id="ph4">`Find`</ph> и <ph id="ph5">`Replace`</ph> значения.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> Аргумент может иметь следующие значения.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">Выполняет сравнение по тексту</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This example demonstrates the <ph id="ph1">`Replace`</ph> function.</source>
          <target state="translated">В этом примере демонстрируется <ph id="ph1">`Replace`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Count" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> -1 or <ph id="ph3">&lt;paramref name="Start" /&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Count" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> –1 или <ph id="ph3">&lt;paramref name="Start" /&gt;</ph> <ph id="ph4">&amp;lt;</ph>= 0.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression from which the rightmost characters are returned.</source>
          <target state="translated">Выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, из которого возвращаются крайние правые знаки.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Numeric expression indicating how many characters to return.</source>
          <target state="translated">Числовое выражение, показывающее необходимое число возвращаемых знаков.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If 0, a zero-length string ("") is returned.</source>
          <target state="translated">Если выражение равно 0, возвращается строка нулевой длины ("").</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If greater than or equal to the number of characters in <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, the entire string is returned.</source>
          <target state="translated">Если выражение больше или равно числу символов в <bpt id="p1">&lt;c&gt;</bpt>str<ept id="p1">&lt;/c&gt;</ept>, то возвращается вся строка.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">Возвращает строку, содержащую указанное число знаков с правой стороны строки.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>Returns a string containing a specified number of characters from the right side of a string.</source>
          <target state="translated">Возвращает строку, содержащую указанное число знаков с правой стороны строки.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>To determine the number of characters in <ph id="ph1">`str`</ph>, use the <ph id="ph2">`Len`</ph> function.</source>
          <target state="translated">Чтобы определить число знаков в <ph id="ph1">`str`</ph>, используйте <ph id="ph2">`Len`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>If used in a Windows Form, or any other class that has a <ph id="ph1">`Right`</ph> property, you must fully qualify the function with <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</source>
          <target state="translated">При использовании в приложении Windows Form или любой другой класс, имеющий <ph id="ph1">`Right`</ph> свойства, необходимо полностью определить функцию с <ph id="ph2">`Microsoft.VisualBasic.Strings.Right`</ph>.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>The <ph id="ph1">`RightB`</ph> function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</source>
          <target state="translated"><ph id="ph1">`RightB`</ph> В предыдущих версиях Visual Basic функция возвращает строку, в байтах, а не символы.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>It is used primarily for converting strings in double-byte character set (DBCS) applications.</source>
          <target state="translated">Он используется главным образом для преобразования строк в приложениях с двухбайтовой кодировки (DBCS).</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>All current Visual Basic strings are in Unicode, and <ph id="ph1">`RightB`</ph> is no longer supported.</source>
          <target state="translated">Все строки текущей версии Visual Basic кодируются в Юникоде, и <ph id="ph1">`RightB`</ph> больше не поддерживается.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`Right`</ph> function to return a substring of a given <ph id="ph2">`String`</ph>.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`Right`</ph> функция возвращает подстроку из данного <ph id="ph2">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source>In a class that has a <ph id="ph1">`Right`</ph> property, it may be necessary to fully qualify the <ph id="ph2">`Right`</ph> function.</source>
          <target state="translated">В классе, который имеет <ph id="ph1">`Right`</ph> свойства, может оказаться необходимым для полного определения <ph id="ph2">`Right`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Length" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Name of string variable.</source>
          <target state="translated">Имя строковой переменной.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Length of returned string.</source>
          <target state="translated">Длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Возвращает выровненную по правому краю строку, содержащую указанную строку, настроенную под указанную длину.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>Returns a right-aligned string containing the specified string adjusted to the specified length.</source>
          <target state="translated">Возвращает выровненную по правому краю строку, содержащую указанную строку, настроенную под указанную длину.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If <ph id="ph1">`Source`</ph> is longer than <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> places only the leftmost characters, up to the length of <ph id="ph4">`Source`</ph>, in the returned string.</source>
          <target state="translated">Если <ph id="ph1">`Source`</ph> длиннее, чем <ph id="ph2">`Length`</ph>, <ph id="ph3">`RSet`</ph> помещает только первых символов до длины <ph id="ph4">`Source`</ph>, в возвращаемой строке.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</source>
          <target state="translated">Если указанная строка короче указанной длины, добавляются пробелы в левый конец строки для достижения соответствующей длины.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>If the specified string is longer than the specified length, it is shortened to the specified length.</source>
          <target state="translated">Если указанная строка длиннее значения указанной длины, он сокращается до указанной длины.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
          <source>This example demonstrates the use of the <ph id="ph1">`RSet`</ph> function.</source>
          <target state="translated">В этом примере показано использование функции <ph id="ph1">`RSet`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, И <ph id="ph3">`Trim`</ph> функции удалить пробелы в конце строки.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`LTrim`</ph> используется, чтобы убрать пробелы в начале, а функция <ph id="ph2">`RTrim`</ph> — чтобы убрать пробелы в конце строковой переменной.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">Функция <ph id="ph1">`Trim`</ph> в примере используется для удаления обоих типов пробелов.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>The number of spaces you want in the string.</source>
          <target state="translated">Нужное количество пробелов в строке.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">Возвращает строку, состоящую из указанного числа пробелов.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>Returns a string consisting of the specified number of spaces.</source>
          <target state="translated">Возвращает строку, состоящую из указанного числа пробелов.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>The <ph id="ph1">`Space`</ph> function is useful for formatting output and clearing data in fixed-length strings.</source>
          <target state="translated"><ph id="ph1">`Space`</ph> Функция используется для форматирования выходных данных и очистки данных в строках фиксированной длины.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source>This example uses the <ph id="ph1">`Space`</ph> function to return a string consisting of a specified number of spaces.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`Space`</ph> функция возвращает строку, состоящую из указанного числа пробелов.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing substrings and delimiters.</source>
          <target state="translated">Выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>, содержащее подстроки и разделители.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Any single character used to identify substring limits.</source>
          <target state="translated">Одиночный знак, используемый для обозначения границ подстроки.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> is omitted, the space character (" ") is assumed to be the delimiter.</source>
          <target state="translated">Если аргумент <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> опущен, в качестве разделителя используется пробел (" ").</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Maximum number of substrings into which the input string should be split.</source>
          <target state="translated">Максимальное число подстрок, на которые должна быть разделена входная строка.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The default, –1, indicates that the input string should be split at every occurrence of the <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept> string.</source>
          <target state="translated">По умолчанию –1 указывает, что входная строка должна быть разбита в местах каждого из вхождений строки <bpt id="p1">&lt;c&gt;</bpt>Delimiter<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Numeric value indicating the comparison to use when evaluating substrings.</source>
          <target state="translated">Числовое значение, которое указывает вид сравнения, выполняемого при оценке подстрок.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>See "Settings" for values.</source>
          <target state="translated">Сведения о значениях см. в разделе "Параметры".</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns a zero-based, one-dimensional array containing a specified number of substrings.</source>
          <target state="translated">Возвращает одномерный массив (с индексацией от нуля), содержащий указанное число подстрок.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> is a zero-length string (""), <ph id="ph2">&lt;see langword="Split" /&gt;</ph> returns a single-element array containing a zero-length string.</source>
          <target state="translated">Если <ph id="ph1">&lt;paramref name="Expression" /&gt;</ph> является строкой нулевой длины (""), функция <ph id="ph2">&lt;see langword="Split" /&gt;</ph> возвращает одноэлементный массив, содержащий строку нулевой длины.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>If <ph id="ph1">&lt;paramref name="Delimiter" /&gt;</ph> is a zero-length string, or if it does not appear anywhere in <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph>, <ph id="ph3">&lt;see langword="Split" /&gt;</ph> returns a single-element array containing the entire <ph id="ph4">&lt;paramref name="Expression" /&gt;</ph> string.</source>
          <target state="translated">Если <ph id="ph1">&lt;paramref name="Delimiter" /&gt;</ph> является строкой нулевой длины, или он нигде не найден в параметре <ph id="ph2">&lt;paramref name="Expression" /&gt;</ph>, функция <ph id="ph3">&lt;see langword="Split" /&gt;</ph> возвращает одноэлементный массив, содержащий всю строку <ph id="ph4">&lt;paramref name="Expression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>By default, or when <ph id="ph1">`Limit`</ph> equals -1, the <ph id="ph2">`Split`</ph> function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</source>
          <target state="translated">По умолчанию или когда <ph id="ph1">`Limit`</ph> равно -1, <ph id="ph2">`Split`</ph> функция Разделяет входную строку при каждом вхождении строки разделителя и возвращает подстроки в массиве.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>When the <ph id="ph1">`Limit`</ph> parameter is greater than zero, the <ph id="ph2">`Split`</ph> function splits the string at the first <ph id="ph3">`Limit`</ph>-1 occurrences of the delimiter, and returns an array with the resulting substrings.</source>
          <target state="translated">Когда <ph id="ph1">`Limit`</ph> параметр больше нуля, <ph id="ph2">`Split`</ph> функция разбивает строку на первый <ph id="ph3">`Limit`</ph>-1 вхождений разделителей и возвращает массив с результирующими подстроками.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>For example, <ph id="ph1">`Split("a:b:c", ":")`</ph> returns the array <ph id="ph2">`{"a", "b", "c"}`</ph>, while <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> returns the array <ph id="ph4">`{"a", "b:c"}`</ph>.</source>
          <target state="translated">Например <ph id="ph1">`Split("a:b:c", ":")`</ph> возвращает массив <ph id="ph2">`{"a", "b", "c"}`</ph>, пока <ph id="ph3">`Split("a:b:c", ":", 2)`</ph> возвращает массив <ph id="ph4">`{"a", "b:c"}`</ph>.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>When the <ph id="ph1">`Split`</ph> function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</source>
          <target state="translated">Если <ph id="ph1">`Split`</ph> функция встречает два разделителя в строке или разделитель в начале или конце строки, они интерпретируются как окружающие пустую строку (»»).</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>For example, <ph id="ph1">`Split("xx", "x")`</ph> returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</source>
          <target state="translated">Например <ph id="ph1">`Split("xx", "x")`</ph> возвращает массив, содержащий три пустых строки: одну от начала строки и первого «x», другую между двумя строками «x» и третью от последнего «x» и в конце строки.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>This table demonstrates how the optional <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, and <ph id="ph3">`Compare`</ph> parameters can change the behavior of the <ph id="ph4">`Split`</ph> function.</source>
          <target state="translated">В этой таблице показано, как необязательный <ph id="ph1">`Delimiter`</ph>, <ph id="ph2">`Limit`</ph>, и <ph id="ph3">`Compare`</ph> параметры можно изменить поведение <ph id="ph4">`Split`</ph> функции.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Split Call</source>
          <target state="translated">Вызов разделителя</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Return Value</source>
          <target state="translated">Возвращаемое значение</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42," , "12," , "19"}</source>
          <target state="translated">{"42," , "12," , "19"}</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42", "12", "19"}</source>
          <target state="translated">{"42", "12", "19"}</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"42", "12, 19"}</source>
          <target state="translated">{"42", "12, 19"}</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"192", "168", "0", "1"}</source>
          <target state="translated">{"192", "168", "0", "1"}</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"Alice and Bob"}</source>
          <target state="translated">{«Анна и Виктор»}</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"Alice", "Bob"}</source>
          <target state="translated">{«Алиса», «Bob»}</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"<ph id="ph1">someone@example.com</ph>"}</source>
          <target state="translated">{"<ph id="ph1">someone@example.com</ph>"}</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>{"someone", "example.com"}</source>
          <target state="translated">{«someone», «example.com»}</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument can have the following values.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> Аргумент может иметь следующие значения.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Value</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison</source>
          <target state="translated">Выполняет двоичное сравнение</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a textual comparison</source>
          <target state="translated">Выполняет сравнение по тексту</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The following example demonstrates how to split a string at its spaces.</source>
          <target state="translated">В следующем примере показано, как для разбиения строки относительно пробелов.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
          <source>The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</source>
          <target state="translated">Следующий пример демонстрирует разбиение строк с несколькими разделителями в строке и фильтрация пустых строк.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Specifies the type of string comparison.</source>
          <target state="translated">Указывает тип сравнения строк.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> is omitted, the <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> setting determines the type of comparison.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Compare<ept id="p1">&lt;/c&gt;</ept> не задан, параметр <ph id="ph1">&lt;see langword="Option Compare" /&gt;</ph> определяет тип сравнения.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Returns -1, 0, or 1, based on the result of a string comparison.</source>
          <target state="translated">Возвращает -1, 0 или 1 в зависимости от результата сравнения строк.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">&lt;see langword="StrComp" /&gt;</ph> function has the following return values.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="StrComp" /&gt;</ph> возвращает следующие значения.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> If</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;item&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Условие</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> StrComp returns</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> StrComp возвращает</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> sorts ahead of <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> сортирует перед <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> –1</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> is equal to <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> равно <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> sorts after <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;paramref name="String1" /&gt;</ph> сортирует после <ph id="ph5">&lt;paramref name="String2" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph6">&lt;description&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The strings are compared by alphanumeric sort values beginning with the first character.</source>
          <target state="translated">Они сравниваются по буквенно-цифровой сортировки значений, начиная с первого символа.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>For further information on binary comparisons, textual comparisons, and sort order, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о двоичном сравнении, текстовом сравнение и порядок сортировки см. в разделе <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>The <ph id="ph1">`Compare`</ph> argument settings are:</source>
          <target state="translated">Параметры аргумента <ph id="ph1">`Compare`</ph>:</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Constant</source>
          <target state="translated">Константа</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</source>
          <target state="translated">Выполняет двоичное сравнение, на основе порядка сортировки, производного от внутренних двоичных представлений символов.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Performs a text comparison, based on a case-insensitive text sort order determined by your system's <ph id="ph1">`LocaleID`</ph> value.</source>
          <target state="translated">Выполняет сравнение текста, на основе порядка сортировки текста без учета регистра, определяется вашей системы <ph id="ph1">`LocaleID`</ph> значение.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This example uses the <ph id="ph1">`StrComp`</ph> function to return the results of a string comparison.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`StrComp`</ph> функции для возврата результатов сравнения строк.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;paramref name="Compare" /&gt;</ph> value is not valid.</source>
          <target state="translated">Недопустимое значение параметра <ph id="ph1">&lt;paramref name="Compare" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression to be converted.</source>
          <target state="translated">Преобразуемое выражение <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.VbStrConv" /&gt;</ph> member.</source>
          <target state="translated">Член <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.VbStrConv" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The enumeration value specifying the type of conversion to perform.</source>
          <target state="translated">Значение перечисления, задающее тип выполняемого преобразования.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> value, if different from the system <ph id="ph2">&lt;see langword="LocaleID" /&gt;</ph> value.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph>, если оно отличается от системного значения <ph id="ph2">&lt;see langword="LocaleID" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>(The system <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> value is the default.)</source>
          <target state="translated">(Системное значение <ph id="ph1">&lt;see langword="LocaleID" /&gt;</ph> является значением по умолчанию.)</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Returns a string converted as specified.</source>
          <target state="translated">Возвращает строку, преобразованную как указано.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Returns a string converted as specified.</source>
          <target state="translated">Возвращает строку, преобразованную как указано.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The constants <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, and <ph id="ph6">`VbStrConv.Hiragana`</ph> can cause run-time errors when used in locales where they do not apply, but not always: the constants <ph id="ph7">`VbStrConv.Katakana`</ph> and <ph id="ph8">`VbStrConv.Hiragana`</ph> can be used in a non-Japanese system with the Japanese Language Pack installed.</source>
          <target state="translated">Константы <ph id="ph1">`VbStrConv.Wide`</ph>, <ph id="ph2">`VbStrConv.Narrow`</ph>, <ph id="ph3">`VbStrConv.SimplifiedChinese`</ph>, <ph id="ph4">`VbStrConv.TraditionalChinese`</ph>, <ph id="ph5">`VbStrConv.Katakana`</ph>, и <ph id="ph6">`VbStrConv.Hiragana`</ph> может привести к ошибкам во время выполнения при использовании в регионах, где они не применяются, но не всегда: константы <ph id="ph7">`VbStrConv.Katakana`</ph> и <ph id="ph8">`VbStrConv.Hiragana`</ph>может использоваться в системе не японский с установлен японский языковой пакет.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>In addition, use of the constants <ph id="ph1">`VbStrConv.Wide`</ph> and <ph id="ph2">`VbStrConv.Narrow`</ph> is supported on any system with an East Asian language installed.</source>
          <target state="translated">Кроме того, использование констант <ph id="ph1">`VbStrConv.Wide`</ph> и <ph id="ph2">`VbStrConv.Narrow`</ph> поддерживается в любой системе установлен восточноазиатских языков.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Эта функция использует данные язык и региональные параметры приложения при обработке строки, чтобы изменения регистра соответствовали для языкового стандарта, в котором используется это приложение.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">Если приложение принимает решений по безопасности на основе результата сравнения или операциями изменения регистра, то эта операция должна выполняться <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> и передайте <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> или <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> для <ph id="ph4">`comparisonType`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The <ph id="ph1">`Conversion`</ph> argument settings are:</source>
          <target state="translated">Параметры аргумента <ph id="ph1">`Conversion`</ph>:</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Enumeration member</source>
          <target state="translated">Член перечисления</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Performs no conversion</source>
          <target state="translated">Преобразование не выполняется</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Uses linguistic rules for casing, rather than File System (default).</source>
          <target state="translated">Использует лингвистические правила для учета регистра, а не в файловой системе (по умолчанию).</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Valid with <ph id="ph1">`VbStrConv.UpperCase`</ph> and <ph id="ph2">`VbStrConv.LowerCase`</ph> only.</source>
          <target state="translated">Допустимый с помощью <ph id="ph1">`VbStrConv.UpperCase`</ph> и <ph id="ph2">`VbStrConv.LowerCase`</ph> только.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the string to uppercase characters.</source>
          <target state="translated">Преобразует строку в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the string to lowercase characters.</source>
          <target state="translated">Преобразует строку в нижний регистр.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts the first letter of every word in string to uppercase.</source>
          <target state="translated">Преобразует первую букву каждого слова в строке в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Wide`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts narrow (half-width) characters in the string to wide (full-width) characters.</source>
          <target state="translated">Преобразует узкие (с половиной ширины) знаки в строке (с полной шириной) расширенных символов.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Narrow`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Narrow`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts wide (full-width) characters in the string to narrow (half-width) characters.</source>
          <target state="translated">Преобразует широкие (с полной шириной) знаки в строке символов (с половиной ширины).</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Katakana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Katakana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Hiragana characters in the string to Katakana characters.</source>
          <target state="translated">Преобразует все символы хирагана в символы катакана.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.Hiragana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.Hiragana`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">**</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Katakana characters in the string to Hiragana characters.</source>
          <target state="translated">Преобразует все символы катакана в символы хирагана.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.SimplifiedChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Traditional Chinese characters to Simplified Chinese.</source>
          <target state="translated">Преобразует символы традиционного китайского языка (упрощенное письмо).</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><ph id="ph1">`VbStrConv.TraditionalChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></source>
          <target state="translated"><ph id="ph1">`VbStrConv.TraditionalChinese`</ph> <bpt id="p1">&lt;sup&gt;</bpt><ph id="ph2">*</ph><ept id="p1">&lt;/sup&gt;</ept></target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Converts Simplified Chinese characters to Traditional Chinese.</source>
          <target state="translated">Преобразует символы упрощенного китайского письма традиционного китайского письма.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">*</ph><ept id="p1">&lt;/sup&gt;</ept> Applies to Asian locales.</source>
          <target state="translated"><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">*</ph><ept id="p1">&lt;/sup&gt;</ept> Применяется к азиатских языков.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">**</ph><ept id="p1">&lt;/sup&gt;</ept> Applies to Japan only.</source>
          <target state="translated"><bpt id="p1">&lt;sup&gt;</bpt><ph id="ph1">**</ph><ept id="p1">&lt;/sup&gt;</ept> Только для японского языка.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>These constants are specified in the .NET Framework common language runtime.</source>
          <target state="translated">Эти константы указываются в общеязыковой среде выполнения .NET Framework.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>As a result, they can be used anywhere in your code in place of the actual values.</source>
          <target state="translated">В результате они могут использоваться в любом месте в коде вместо фактических значений.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Most can be combined (for example, <ph id="ph1">`UpperCase + Wide`</ph>), except when they are mutually exclusive (for example, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</source>
          <target state="translated">Большинство могут объединяться (например, <ph id="ph1">`UpperCase + Wide`</ph>), за исключением случаев, когда они являются взаимоисключающими (например, <ph id="ph2">`VbStrConv.Wide + VbStrConv.Narrow`</ph>).</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The following are valid word separators for proper casing: Null (<ph id="ph1">`Chr$(0)`</ph>), horizontal tab (<ph id="ph2">`Chr$(9)`</ph>), line feed (<ph id="ph3">`Chr$(10)`</ph>), vertical tab (<ph id="ph4">`Chr$(11)`</ph>), form feed (<ph id="ph5">`Chr$(12)`</ph>), carriage return (<ph id="ph6">`Chr$(13)`</ph>), space (single-byte character set) (<ph id="ph7">`Chr$(32)`</ph>).</source>
          <target state="translated">Ниже приведены допустимые разделители слов для правильного применения регистра: Null (<ph id="ph1">`Chr$(0)`</ph>), символ горизонтальной табуляции (<ph id="ph2">`Chr$(9)`</ph>), перевод строки (<ph id="ph3">`Chr$(10)`</ph>), вертикальная табуляция (<ph id="ph4">`Chr$(11)`</ph>), перевод страницы (<ph id="ph5">`Chr$(12)`</ph>), символ возврата каретки (<ph id="ph6">`Chr$(13)`</ph>), пробел () однобайтовая кодировка) (<ph id="ph7">`Chr$(32)`</ph>).</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</source>
          <target state="translated">Фактическое значение для пробела, который может быть полной или половинной ширины, зависит от страны или региона для восточно-азиатских языков и региональных параметров.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>This example converts text into all lowercase letters.</source>
          <target state="translated">Этот пример преобразует текст в буквы нижнего регистра.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
          <source>Unsupported <ph id="ph1">&lt;paramref name="LocaleID" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Conversion" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> 0 or <ph id="ph4">&amp;gt;</ph> 2048, or unsupported conversion for specified locale.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="LocaleID" /&gt;</ph> не поддерживается, <ph id="ph2">&lt;paramref name="Conversion" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> 0 или <ph id="ph4">&amp;gt;</ph> 2048, либо конверсия не поддерживается для указанного языкового стандарта.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>The length to the string to be returned.</source>
          <target state="translated">Длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph> или <ph id="ph3">&lt;see langword="Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Используется только первый знак выражения.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Если параметр Character относится к типу <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, он должен содержать значение <ph id="ph2">&lt;see langword="Char" /&gt;</ph> или <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Эта функция возвращает <ph id="ph1">`String`</ph> состоит из повторяющихся символов.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">Символ, содержащийся в строке является первым символом в <ph id="ph1">`Character`</ph> аргумент, который повторяется <ph id="ph2">`Number`</ph> количество раз.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`StrDup`</ph> функция, возвращающая строки дублирован символов.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated">Недопустимо значение <ph id="ph1">&lt;paramref name="Number" /&gt;</ph> меньшее 0 или типа <ph id="ph2">&lt;paramref name="Character" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="Character" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>The length to the string to be returned.</source>
          <target state="translated">Длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph> или <ph id="ph3">&lt;see langword="Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Используется только первый знак выражения.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Если параметр Character относится к типу <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, он должен содержать значение <ph id="ph2">&lt;see langword="Char" /&gt;</ph> или <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Эта функция возвращает <ph id="ph1">`String`</ph> состоит из повторяющихся символов.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">Символ, содержащийся в строке является первым символом в <ph id="ph1">`Character`</ph> аргумент, который повторяется <ph id="ph2">`Number`</ph> количество раз.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`StrDup`</ph> функция, возвращающая строки дублирован символов.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated">Недопустимо значение <ph id="ph1">&lt;paramref name="Number" /&gt;</ph> меньшее 0 или типа <ph id="ph2">&lt;paramref name="Character" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="Character" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Выражение <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>The length to the string to be returned.</source>
          <target state="translated">Длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение <ph id="ph1">&lt;see langword="Char" /&gt;</ph>, <ph id="ph2">&lt;see langword="String" /&gt;</ph> или <ph id="ph3">&lt;see langword="Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Only the first character of the expression will be used.</source>
          <target state="translated">Используется только первый знак выражения.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>If Character is of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, it must contain either a <ph id="ph2">&lt;see langword="Char" /&gt;</ph> or a <ph id="ph3">&lt;see langword="String" /&gt;</ph> value.</source>
          <target state="translated">Если параметр Character относится к типу <ph id="ph1">&lt;see langword="Object" /&gt;</ph>, он должен содержать значение <ph id="ph2">&lt;see langword="Char" /&gt;</ph> или <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>Returns a string or object consisting of the specified character repeated the specified number of times.</source>
          <target state="translated">Возвращает строку или объект, состоящие из указанного знака, повторенного определенное количество раз.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>This function returns a <ph id="ph1">`String`</ph> made up of repeated characters.</source>
          <target state="translated">Эта функция возвращает <ph id="ph1">`String`</ph> состоит из повторяющихся символов.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>The character that makes up the string is the first character in the <ph id="ph1">`Character`</ph> argument, and it is duplicated <ph id="ph2">`Number`</ph> number of times.</source>
          <target state="translated">Символ, содержащийся в строке является первым символом в <ph id="ph1">`Character`</ph> аргумент, который повторяется <ph id="ph2">`Number`</ph> количество раз.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source>This example uses the <ph id="ph1">`StrDup`</ph> function to return a string of duplicated characters.</source>
          <target state="translated">В этом примере используется <ph id="ph1">`StrDup`</ph> функция, возвращающая строки дублирован символов.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is less than 0 or <ph id="ph2">&lt;paramref name="Character" /&gt;</ph> type is not valid.</source>
          <target state="translated">Недопустимо значение <ph id="ph1">&lt;paramref name="Number" /&gt;</ph> меньшее 0 или типа <ph id="ph2">&lt;paramref name="Character" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="Character" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="Character" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>String expression whose characters are to be reversed.</source>
          <target state="translated">Строковое выражение, знаки которого следует переставить в обратном порядке.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> is a zero-length string (""), a zero-length string is returned.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>Expression<ept id="p1">&lt;/c&gt;</ept> является строкой нулевой длины (""), то возвращается строка нулевой длины.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">Возвращает строку, содержащую те же знаки, что и в заданной строке, но в противоположном порядке.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>Returns a string in which the character order of a specified string is reversed.</source>
          <target state="translated">Возвращает строку, содержащую те же знаки, что и в заданной строке, но в противоположном порядке.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
          <source>The <ph id="ph1">`StrReverse`</ph> function returns a string that contains the same characters as <ph id="ph2">`Expression`</ph>, but in the opposite order.</source>
          <target state="translated"><ph id="ph1">`StrReverse`</ph> Функция возвращает строку, содержащую те же символы как <ph id="ph2">`Expression`</ph>, но в обратном порядке.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое выражение типа <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>Returns a string containing a copy of a specified string with no leading spaces (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), no trailing spaces (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>), or no leading or trailing spaces (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</source>
          <target state="translated">Возвращает строку, содержащую копию указанной строки без начальных пробелов (<ph id="ph1">&lt;see langword="LTrim" /&gt;</ph>), замыкающих пробелов (<ph id="ph2">&lt;see langword="RTrim" /&gt;</ph>) или без тех и других (<ph id="ph3">&lt;see langword="Trim" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>The <ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, and <ph id="ph3">`Trim`</ph> functions remove spaces from the ends of strings.</source>
          <target state="translated"><ph id="ph1">`LTrim`</ph>, <ph id="ph2">`RTrim`</ph>, И <ph id="ph3">`Trim`</ph> функции удалить пробелы в конце строки.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>This example uses the <ph id="ph1">`LTrim`</ph> function to strip leading spaces and the <ph id="ph2">`RTrim`</ph> function to strip trailing spaces from a string variable.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`LTrim`</ph> используется, чтобы убрать пробелы в начале, а функция <ph id="ph2">`RTrim`</ph> — чтобы убрать пробелы в конце строковой переменной.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
          <source>It uses the <ph id="ph1">`Trim`</ph> function to strip both types of spaces.</source>
          <target state="translated">Функция <ph id="ph1">`Trim`</ph> в примере используется для удаления обоих типов пробелов.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Strings">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Только строчные буквы преобразуются в верхний регистр; Все прописные буквы и символы nonletter остаются неизменными.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Эта функция использует данные язык и региональные параметры приложения при обработке строки, чтобы изменения регистра соответствовали для языкового стандарта, в котором используется это приложение.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">Если приложение принимает решений по безопасности на основе результата сравнения или операциями изменения регистра, то эта операция должна выполняться <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> и передайте <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> или <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> для <ph id="ph4">`comparisonType`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
          <source>This example uses the <ph id="ph1">`UCase`</ph> function to return an uppercase version of a string.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`UCase`</ph> используется для возврата строки в верхнем регистре.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Required.</source>
          <target state="translated">Обязательно.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Any valid <ph id="ph1">&lt;see langword="String" /&gt;</ph> or <ph id="ph2">&lt;see langword="Char" /&gt;</ph> expression.</source>
          <target state="translated">Любое допустимое значение <ph id="ph1">&lt;see langword="String" /&gt;</ph> или выражение <ph id="ph2">&lt;see langword="Char" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Returns a string or character containing the specified string converted to uppercase.</source>
          <target state="translated">Возвращает строку или знак, содержащий указанную строку, преобразованную в верхний регистр.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</source>
          <target state="translated">Только строчные буквы преобразуются в верхний регистр; Все прописные буквы и символы nonletter остаются неизменными.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</source>
          <target state="translated">Эта функция использует данные язык и региональные параметры приложения при обработке строки, чтобы изменения регистра соответствовали для языкового стандарта, в котором используется это приложение.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and pass <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> for the <ph id="ph4">`comparisonType`</ph> argument.</source>
          <target state="translated">Если приложение принимает решений по безопасности на основе результата сравнения или операциями изменения регистра, то эта операция должна выполняться <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> и передайте <ph id="ph2">&lt;xref:System.StringComparison.Ordinal&gt;</ph> или <ph id="ph3">&lt;xref:System.StringComparison.OrdinalIgnoreCase&gt;</ph> для <ph id="ph4">`comparisonType`</ph> аргумент.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How Culture Affects Strings in Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как языка и региональных параметров влияет на строки в Visual Basic<ept id="p1">](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
          <source>This example uses the <ph id="ph1">`UCase`</ph> function to return an uppercase version of a string.</source>
          <target state="translated">В данном примере функция <ph id="ph1">`UCase`</ph> используется для возврата строки в верхнем регистре.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>