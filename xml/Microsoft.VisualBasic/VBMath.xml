<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3839187e325901ad3f3f4d5e81304055450240f2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>В модуле <see langword="VbMath" /> содержатся процедуры, используемые для выполнения математических операций.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот модуль поддерживает ключевые слова языка Visual Basic и члены библиотек времени выполнения для генерации случайных чисел.  
  
   
  
## Examples  
 В этом примере используется `Rnd` функция создает случайное целочисленное значение в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует генератор случайных чисел.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует генератор случайных чисел.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка `Randomize` метод не принимает начальное значение. Вместо этого значения, возвращенного системного таймера используется в качестве нового начального значения.  
  
 Если `Randomize` не используется, `Rnd` функция (без аргументов) использует тот же номер начальное первый раз, он вызывается, а затем использует последнее сгенерированное число в качестве начального значения.  
  
> [!NOTE]
>  Для повтора последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед вызовом `Randomize` с числовым аргументом.  
  
> [!IMPORTANT]
>  Поскольку `Random` инструкции и `Rnd` функция начать с начальным значением и генерируют числа в конечном диапазоне, результаты могут быть прогнозируемого кто знает алгоритм, используемый для их создания. Следовательно `Random` инструкции и `Rnd` функция не должна использоваться для генерации случайных чисел для использования при шифровании. Дополнительные сведения см. в разделе <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 В этом примере используется `Randomize` инструкции для инициализации генератора случайных чисел. Поскольку числовой аргумент опущен, `Randomize` использует значение, возвращаемое `Timer` работать в качестве нового начального значения.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">Необязательный. Любое допустимое числовое выражение или <see langword="Object" />.</param>
        <summary>Инициализирует генератор случайных чисел.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` использует `Number` для инициализации `Rnd` функции генератора случайных чисел, задавая его новое начальное значение. Если не указан `Number`, значение, возвращаемое системного таймера используется в качестве нового начального значения.  
  
 Если `Randomize` не используется, `Rnd` функция (без аргументов) использует тот же номер начальное первый раз, он вызывается, а затем использует последнее сгенерированное число в качестве начального значения.  
  
> [!NOTE]
>  Для повтора последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед вызовом `Randomize` с числовым аргументом. С помощью `Randomize` с тем же значением для `Number` повторение предыдущей последовательности не происходит.  
  
> [!IMPORTANT]
>  Поскольку `Random` инструкции и `Rnd` функция начать с начальным значением и генерируют числа в конечном диапазоне, результаты могут быть прогнозируемого кто знает алгоритм, используемый для их создания. Следовательно `Random` инструкции и `Rnd` функция не должна использоваться для генерации случайных чисел для использования при шифровании. Дополнительные сведения см. в разделе <xref:System.Security.Cryptography.RandomNumberGenerator>.  
  
   
  
## Examples  
 В этом примере используется `Randomize` инструкции для инициализации генератора случайных чисел. Поскольку числовой аргумент опущен, `Randomize` использует значение, возвращаемое `Timer` работать в качестве нового начального значения.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
        <returns>Следующее случайное число в последовательности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Функция возвращает значение меньше 1, но больше или равно нулю.  
  
 Перед вызовом метода `Rnd`, используйте `Randomize` оператором без указания аргументов для инициализации генератора случайных чисел с начальным значением на основе системного таймера.  
  
 Для получения случайных целых чисел в заданном диапазоне, используйте следующую формулу.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Здесь `upperbound` наибольший номер в диапазоне, а `lowerbound` — наименьшее число в диапазоне.  
  
> [!NOTE]
>  Для повтора последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед вызовом `Randomize` с числовым аргументом.  
  
> [!IMPORTANT]
>  Поскольку `Random` инструкции и `Rnd` функция начать с начальным значением и генерируют числа в конечном диапазоне, результаты могут быть прогнозируемого кто знает алгоритм, используемый для их создания. Следовательно `Random` инструкции и `Rnd` функция не должна использоваться для генерации случайных чисел для использования при шифровании.  
  
   
  
## Examples  
 В этом примере используется `Rnd` функция создает случайное целочисленное значение в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">Необязательный. Значение типа <see langword="Single" /> значение или любое допустимое выражение типа <see langword="Single" />.</param>
        <summary>Возвращает случайное число типа <see langword="Single" />.</summary>
        <returns>Если аргумент Number меньше нуля, Rnd создает каждый раз одно и то же число, используя <paramref name="Number" /> в качестве начального числа. Если аргумент Number больше нуля, Rnd создает следующее случайное число в последовательности. Если аргумент Number равен нулю, функция Rnd генерирует самое последнее созданное число. Если аргумент Number не указан, функция Rnd создает следующее случайное число в последовательности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` Функция возвращает значение меньше 1, но больше или равно нулю.  
  
 Значение `Number` определяет, каким образом `Rnd` создает случайное число.  
  
 Для любого заданного начального числа генерируется та же последовательность чисел, поскольку каждый последующий вызов `Rnd` функция использует ранее созданный номер как начальное значение для следующего числа в последовательности.  
  
 Перед вызовом метода `Rnd`, используйте `Randomize` оператором без указания аргументов для инициализации генератора случайных чисел с начальным значением на основе системного таймера.  
  
 Для получения случайных целых чисел в заданном диапазоне, используйте следующую формулу.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 Здесь `upperbound` наибольший номер в диапазоне, а `lowerbound` — наименьшее число в диапазоне.  
  
> [!NOTE]
>  Для повтора последовательности случайных чисел, вызовите `Rnd` с отрицательным аргументом непосредственно перед вызовом `Randomize` с числовым аргументом. С помощью `Randomize` с тем же значением для `Number` повторение предыдущей последовательности не происходит.  
  
> [!IMPORTANT]
>  Поскольку `Random` инструкции и `Rnd` функция начать с начальным значением и генерируют числа в конечном диапазоне, результаты могут быть прогнозируемого кто знает алгоритм, используемый для их создания. Следовательно `Random` инструкции и `Rnd` функция не должна использоваться для генерации случайных чисел для использования при шифровании.  
  
   
  
## Examples  
 В этом примере используется `Rnd` функция создает случайное целочисленное значение в диапазоне от 1 до 6.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>