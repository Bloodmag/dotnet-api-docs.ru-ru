<Type Name="ITree&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5fd9b8c914a88fa8f584e54a945051a8a5e554b7" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52602247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITree&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITree`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.ITree`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITree(Of TKey, TValue)&#xA;Implements IBidirectionalContainer(Of TValue), ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class ITree : ICloneable, Microsoft::VisualC::StlClr::Generic::IBidirectionalContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ITree&lt;'Key, 'Value&gt; = interface&#xA;    interface IBidirectionalContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="b879b-101">Тип ключа для элемента в управляемой последовательности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b879b-101">The type of the key component of an element in the controlled sequence.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="b879b-102">Тип значения для элемента в управляемой последовательности.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b879b-102">The type of the value component of an element in the controlled sequence.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b879b-103">Определяет интерфейс STL/CLR объектов <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c> и <c>hash_multiset</c>.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b879b-103">Defines the interface of the STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, and <c>hash_multiset</c> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="b879b-104">Дополнительные сведения см. в разделе [хэш\_карты (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [хэш\_мультиотображении (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [хэш\_(STL/CLR) задайте](/cpp/dotnet/hash-set-stl-clr)и [хэш\_мультинаборе (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-104">For more information, see [hash\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hash\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hash\_set (STL/CLR)](/cpp/dotnet/hash-set-stl-clr), and [hash\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iTree.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="b879b-105">Задает начало управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-105">Designates the beginning of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-106">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-106">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-107">Дополнительные сведения см. в разделе [хэш\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [хэш\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [хэш\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), и [хэш\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-107">For more information, see [hash\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hash\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hash\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), and [hash\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iTree.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b879b-108">Удаляет все элементы из контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-108">Removes all elements from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-109">Дополнительные сведения см. в разделе [хэш\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [хэш\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [хэш\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), и [хэш\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-109">For more information, see [hash\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hash\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hash\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), and [hash\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function count (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int count(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member count : 'Key -&gt; int" Usage="iTree.count _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">
          <span data-ttu-id="b879b-110">Значение ключа, по которому выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-110">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-111">Определяет количество элементов, которые соответствуют заданному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-111">Finds the number of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-112">Количество элементов управляемой последовательности с ключом <paramref name="_Keyval" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-112">The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />.</span>
          </span>
          <span data-ttu-id="b879b-113">Используется для определения количества элементов в управляемой последовательности, ключ которых в данный момент совпадает с заданным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-113">You use it to determine the number of elements currently in the controlled sequence that match a specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-114">Дополнительные сведения см. в разделе [хэш\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [хэш\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [хэш\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), и [хэш\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-114">For more information, see [hash\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hash\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hash\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), and [hash\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iTree.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b879b-115">Проверяет, действительно ли в контейнере нет элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-115">Tests whether no elements are present in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-116">Если элементы в контейнере отсутствуют, значение <see langword="true" />, если они есть, значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-116">
              <see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-117">Дополнительные сведения см. в разделе [хэш\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [хэш\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [хэш\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), и [хэш\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-117">For more information, see [hash\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hash\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hash\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), and [hash\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iTree.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="b879b-118">Задает конец управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-118">Designates the end of the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-119">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-119">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-120">Дополнительные сведения см. в разделе [хэш\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [хэш\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [хэш\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), и [хэш\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span><span class="sxs-lookup"><span data-stu-id="b879b-120">For more information, see [hash\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hash\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hash\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), and [hash\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public void equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_range (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), ContainerBidirectionalIterator(Of TValue)), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ equal_range(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member equal_range :  * 'Key -&gt; unit" Usage="iTree.equal_range (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="b879b-121">Значение ключа, по которому выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-121">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-122">Определяет диапазон, соответствующий указанному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-122">Finds the range that matches a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-123">Пара итераторов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-123">A pair of iterators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-124">Дополнительные сведения см. в разделе [хэш\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range), [хэш\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [хэш\_set::equal_ диапазон (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), и [хэш\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span><span class="sxs-lookup"><span data-stu-id="b879b-124">For more information, see [hash\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range), [hash\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hash\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), and [hash\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b879b-125">Удаляет элементы из контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-125">Removes elements from the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-126">Дополнительные сведения см. в разделе [хэш\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [хэш\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [хэш\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), и [хэш\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="b879b-126">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int erase(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member erase : 'Key -&gt; int" Usage="iTree.erase _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval">
          <span data-ttu-id="b879b-127">Значение ключа для удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-127">The key value to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-128">Удаляет из контейнера элементы, которые соответствуют заданному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-128">Removes elements from the container that match the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-129">Количество удаленных элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-129">The number of elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-130">Дополнительные сведения см. в разделе [хэш\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [хэш\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [хэш\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), и [хэш\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="b879b-130">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="b879b-131">Итератор, который указывает на элемент, подлежащий удалению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-131">An iterator that points to the element to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-132">Удаляет из контейнера элемент, указанный данным итератором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-132">Removes from the container the element that is specified by the given iterator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-133">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-133">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b879b-134">Дополнительные сведения см. в разделе [хэш\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [хэш\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [хэш\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), и [хэш\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="b879b-134">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _First_iter As ContainerBidirectionalIterator(Of TValue), _Last_iter As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_First_iter">
          <span data-ttu-id="b879b-135">Итератор, который указывает на начало диапазона удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-135">An iterator that points to the beginning of the range to erase.</span>
          </span>
        </param>
        <param name="_Last_iter">
          <span data-ttu-id="b879b-136">Итератор, который задает положение непосредственно после диапазона удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-136">An iterator that points to the position that immediately follows the range to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-137">Удаляет из контейнера элементы, находящиеся между заданными итераторами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-137">Removes from the container the elements between the specified iterators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-138">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-138">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b879b-139">Дополнительные сведения см. в разделе [хэш\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [хэш\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [хэш\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), и [хэш\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span><span class="sxs-lookup"><span data-stu-id="b879b-139">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public void find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function find (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ find(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member find :  * 'Key -&gt; unit" Usage="iTree.find (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="b879b-140">Значение ключа, по которому выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-140">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-141">Определяет элемент, соответствующий указанному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-141">Finds an element that matches a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-142">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-142">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-143">Дополнительные сведения см. в разделе [хэш\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [хэш\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [хэш\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), и [хэш\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span><span class="sxs-lookup"><span data-stu-id="b879b-143">For more information, see [hash\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hash\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hash\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), and [hash\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b879b-144">Добавляет в контейнер элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-144">Adds elements to the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-145">Дополнительные сведения см. в разделе [хэш\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [хэш\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [хэш\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), и [хэш\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="b879b-145">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.Generic.IEnumerable&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Right As IEnumerable(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : seq&lt;'Value&gt; -&gt; unit" Usage="iTree.insert _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.Generic.IEnumerable&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="b879b-146">Перечисление, которое необходимо вставить в контейнер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-146">The enumeration to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-147">Добавляет в контейнер заданное перечисление.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-147">Adds the given enumeration to the container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-148">Дополнительные сведения см. в разделе [хэш\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [хэш\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [хэш\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), и [хэш\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="b879b-148">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iTree.insert (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First">
          <span data-ttu-id="b879b-149">Итератор, который указывает на начало диапазона элементов для вставки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-149">An iterator that points to the beginning of the range of elements to insert.</span>
          </span>
        </param>
        <param name="_Last">
          <span data-ttu-id="b879b-150">Итератор, который указывает на элемент, расположенный непосредственно после элементов для вставки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-150">An iterator that points to the element that immediately follows the range of elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-151">Добавляет в контейнер элементы, указанные данными итераторами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-151">Adds to the container the elements specified by the given iterators.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-152">Дополнительные сведения см. в разделе [хэш\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [хэш\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [хэш\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), и [хэш\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="b879b-152">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt;&amp; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), Boolean), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, bool&gt; ^ % , TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * 'Value -&gt; unit" Usage="iTree.insert (, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Val">
          <span data-ttu-id="b879b-153">Значение ключа, которое необходимо вставить в контейнер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-153">The key value to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-154">Добавляет в контейнер заданное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-154">Adds the given value to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-155">Пара итераторов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-155">A pair of iterators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-156">Дополнительные сведения см. в разделе [хэш\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [хэш\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [хэш\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), и [хэш\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="b879b-156">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iTree.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Where">
          <span data-ttu-id="b879b-157">Итератор, который указывает положение в контейнере, в которое необходимо вставить элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-157">An iterator that specifies where in the container to insert the element.</span>
          </span>
          <span data-ttu-id="b879b-158">Он нужен только как подсказка и используется для повышения производительности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-158">This is a hint only and is used to improve performance.</span>
          </span>
          <span data-ttu-id="b879b-159">Вставка элемента в это положение может не выполняться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-159">The element might not be inserted at this location.</span>
          </span>
        </param>
        <param name="_Val">
          <span data-ttu-id="b879b-160">Значение ключа, которое необходимо вставить в контейнер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-160">The key value to insert into the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-161">Добавляет в контейнер заданный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-161">Adds the given element to the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-162">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-162">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b879b-163">Дополнительные сведения см. в разделе [хэш\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [хэш\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [хэш\_set::insert (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#insert), и [хэш\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span><span class="sxs-lookup"><span data-stu-id="b879b-163">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function key_comp () As BinaryDelegate(Of TKey, TKey, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TKey, TKey, bool&gt; ^ key_comp();" />
      <MemberSignature Language="F#" Value="abstract member key_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Key, 'Key, bool&gt;" Usage="iTree.key_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b879b-164">Возвращает делегата упорядочения, который используется для упорядочения управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-164">Returns the ordering delegate that is used to order the controlled sequence.</span>
          </span>
          <span data-ttu-id="b879b-165">Используется для сравнения двух ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-165">You use it to compare two keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-166">Делегат упорядочения, который используется для упорядочения управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-166">The ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-167">Дополнительные сведения см. в разделе [хэш\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [хэш\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [хэш\_set::key_comp (STL / Среда CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), и [хэш\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span><span class="sxs-lookup"><span data-stu-id="b879b-167">For more information, see [hash\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hash\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hash\_set::key_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), and [hash\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public void lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function lower_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ lower_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member lower_bound :  * 'Key -&gt; unit" Usage="iTree.lower_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="b879b-168">Значение ключа, по которому выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-168">The key value for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-169">Определяет начало диапазона элементов, которые соответствуют заданному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-169">Finds the beginning of the range of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-170">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-170">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-171">Дополнительные сведения см. в разделе [хэш\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [хэш\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [хэш\_set::lower_ привязать (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), и [хэш\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span><span class="sxs-lookup"><span data-stu-id="b879b-171">For more information, see [hash\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hash\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hash\_set::lower_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), and [hash\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iTree.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="b879b-172">Задает начало обратной управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-172">Designates the beginning of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-173">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-173">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-174">Дополнительные сведения см. в разделе [хэш\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [хэш\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [хэш\_set::rbegin (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#rbegin), и [хэш\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span><span class="sxs-lookup"><span data-stu-id="b879b-174">For more information, see [hash\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hash\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hash\_set::rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin), and [hash\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iTree.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <summary>
          <span data-ttu-id="b879b-175">Задает конец обратной управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-175">Designates the end of the reversed controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-176">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-176">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-177">Дополнительные сведения см. в разделе [хэш\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [хэш\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [хэш\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), и [хэш\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span><span class="sxs-lookup"><span data-stu-id="b879b-177">For more information, see [hash\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hash\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hash\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), and [hash\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iTree.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b879b-178">Подсчитывает количество элементов в контейнере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-178">Counts the number of elements in the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-179">Длина управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-179">The length of the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-180">Дополнительные сведения см. в разделе [хэш\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [хэш\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [хэш\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), и [хэш\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span><span class="sxs-lookup"><span data-stu-id="b879b-180">For more information, see [hash\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hash\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hash\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), and [hash\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.ITree`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (_Right As ITree(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::ITree&lt;TKey, TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.ITree&lt;'Key, 'Value&gt; -&gt; unit" Usage="iTree.swap _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.ITree&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">
          <span data-ttu-id="b879b-181">Контейнер, с которым производится обмен содержимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-181">The container with which to swap contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-182">Меняет местами содержимое двух контейнеров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-182">Swaps the contents of two containers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-183">Дополнительные сведения см. в разделе [хэш\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [хэш\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [хэш\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), и [хэш\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span><span class="sxs-lookup"><span data-stu-id="b879b-183">For more information, see [hash\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hash\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hash\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), and [hash\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public void upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function upper_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ upper_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member upper_bound :  * 'Key -&gt; unit" Usage="iTree.upper_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="">To be added.</param>
        <param name="_Keyval">
          <span data-ttu-id="b879b-184">Искомое значение ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-184">The key value to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b879b-185">Определяет конец диапазона элементов, которые соответствуют заданному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-185">Finds the end of the range of elements that match a specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-186">Итератор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-186">An iterator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="b879b-187">Дополнительные сведения см. в разделе [хэш\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [хэш\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [хэш\_set::upper_ привязать (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), и [хэш\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span><span class="sxs-lookup"><span data-stu-id="b879b-187">For more information, see [hash\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hash\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hash\_set::upper_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), and [hash\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function value_comp () As BinaryDelegate(Of TValue, TValue, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TValue, TValue, bool&gt; ^ value_comp();" />
      <MemberSignature Language="F#" Value="abstract member value_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Value, 'Value, bool&gt;" Usage="iTree.value_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b879b-188">Возвращает делегата упорядочения, который используется для упорядочения управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-188">Returns the ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b879b-189">Делегат упорядочения, который используется для упорядочения управляемой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b879b-189">The ordering delegate that is used to order the controlled sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b879b-190">Дополнительные сведения см. в разделе [хэш\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [хэш\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [хэш\_set::value_comp (STL/CLR) ](/cpp/dotnet/hash-set-stl-clr#value_comp), и [хэш\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span><span class="sxs-lookup"><span data-stu-id="b879b-190">For more information, see [hash\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hash\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hash\_set::value_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp), and [hash\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>