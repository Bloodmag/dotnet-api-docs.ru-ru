<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SafeAccessTokenHandle.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b4a55c02d9568078a042c86715232d38f5f217a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b4a55c02d9568078a042c86715232d38f5f217a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
          <source>Provides a safe handle to a Windows thread or process access token.</source>
          <target state="translated">Предоставляет безопасный дескриптор для потока Windows или маркера доступа процесса.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
          <source>For more information see <bpt id="p1">[</bpt>Access Tokens<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa374909.aspx)</ept></source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Маркеры доступа<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa374909.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> object that represents the pre-existing handle to use.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>, представляющий ранее существующий дескриптор для использования.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)">
          <source>Using <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph> returns an invalid handle.</source>
          <target state="translated">Используя <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>, возвращает недопустимый дескриптор.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle">
          <source>Returns an invalid handle by instantiating a <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph> object with <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">Возвращает недопустимый дескриптор путем создания экземпляра объекта <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph> с <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle">
          <source>Returns a <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph> object.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid">
          <source>Gets a value that indicates whether the handle is invalid.</source>
          <target state="translated">Получает значение, указывающее, является ли дескриптор недействительным.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handle is not valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если дескриптор недействителен, в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>