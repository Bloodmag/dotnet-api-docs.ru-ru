<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionServices.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5886e9cdce0e9cf76120fc6dcf4418d239ea5f398.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">886e9cdce0e9cf76120fc6dcf4418d239ea5f398</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>A transformation API used to convert environment aware expressions to an activity tree.</source>
          <target state="translated">API, используемый для преобразования выражений, учитывающих среду, в дерево действий.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>The conversion methods in this class transform the specified lambda expressions, which can contain multiple sub-expressions, into activity trees composed of a hierarchy of activities.</source>
          <target state="translated">Методы преобразования в этом классе преобразуют указанные лямбда-выражения, которые могут содержать несколько вложенных выражений, в деревья действий, состоящие из иерархии действий.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>It is strongly recommended to use these conversion methods instead of instantiating expression activities directly because they provide a higher level of abstraction and enable you to implement your workflow more intuitively.</source>
          <target state="translated">Настоятельно рекомендуется использовать эти методы преобразования вместо создания экземпляров действий выражений напрямую, поскольку эти методы позволяют обеспечить более высокий уровень абстракции и позволяют реализовать рабочие процессы более интуитивно понятным образом.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>See the examples for more information.</source>
          <target state="translated">Дополнительные сведения см. в примерах.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>The conversion methods in <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> are designed to work with variables and constants defined inside the workflow, or passed into the workflow via arguments.</source>
          <target state="translated">Методы преобразования в <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> предназначены для работы с переменными и константами, определенными в рабочем процессе или переданными в рабочий процесс в виде аргументов.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>The following code example calls <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph> to compute the sum of the array element at index 0 and the array element at index 1.</source>
          <target state="translated">В следующем примере кода вызывается <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph> для расчета суммы элемента массива с индексом 0 и элемента массива с индексом 1.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>Next, the resulting sum is assigned to a variable and is printed to the console.</source>
          <target state="translated">Затем полученная сумма присваивается переменной и выводится на консоль.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>The following code example is provided for comparison purposes.</source>
          <target state="translated">Следующий пример кода предоставлен для сравнения.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>This second example shows how to compute the sum by instantiating the <ph id="ph1">&lt;xref:System.Activities.Expressions.Add%603&gt;</ph> expression activity.</source>
          <target state="translated">Во втором примере показывается вычисление суммы путем создания экземпляра действия выражения <ph id="ph1">&lt;xref:System.Activities.Expressions.Add%603&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>The two examples are functionally equivalent but as you can see the second approach involves more coding and is not as straightforward as calling <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph>.</source>
          <target state="translated">Эти два примера функционально эквивалентны, но второй метод требует дополнительного программирования и отличается большей сложностью, чем вызов <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Expressions.ExpressionServices">
          <source>Therefore the first example is recommended.</source>
          <target state="translated">Поэтому рекомендуется использовать первый пример.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The type the expression is being converted to.</source>
          <target state="translated">Тип, в который преобразуется выражение.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The expression being converted.</source>
          <target state="translated">Выражение для преобразования.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>Converts a workflow environment-aware expression to an activity tree.</source>
          <target state="translated">Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The converted expression.</source>
          <target state="translated">Преобразованное выражение.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>For a code example of <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph>, see <ph id="ph2">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph>.</source>
          <target state="translated">Пример кода <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph> см. в разделе <ph id="ph2">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The conversion methods in <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> are designed to work with variables and constants defined inside the workflow, or passed into the workflow via arguments.</source>
          <target state="translated">Методы преобразования в <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> предназначены для работы с переменными и константами, определенными в рабочем процессе или переданными в рабочий процесс в виде аргументов.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The type the expression is being converted to.</source>
          <target state="translated">Тип, в который преобразуется выражение.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The expression being converted.</source>
          <target state="translated">Выражение для преобразования.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>Converts a reference to a workflow environment-aware expression to an activity tree.</source>
          <target state="translated">Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The converted expression.</source>
          <target state="translated">Преобразованное выражение.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The conversion methods in <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> are designed to work with variables and constants defined inside the workflow, or passed into the workflow via arguments.</source>
          <target state="translated">Методы преобразования в <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> предназначены для работы с переменными и константами, определенными в рабочем процессе или переданными в рабочий процесс в виде аргументов.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The following two code examples illustrate the use of <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph>.</source>
          <target state="translated">В следующих двух примерах кода показано использование методов <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The first code example uses <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph> in an <ph id="ph2">`Assign`</ph> activity to convert a lambda expression into a string property that is assigned a value.</source>
          <target state="translated">В первом примере кода используется метод <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A&gt;</ph> в действии <ph id="ph2">`Assign`</ph> для преобразования лямбда-выражения в строковое свойство, которому присваивается значение.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>Next, <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph> is called to convert a lambda expression into a string property value that is printed to the console in the <ph id="ph2">`WriteLine`</ph> activity.</source>
          <target state="translated">Затем вызывается метод <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices.Convert%2A&gt;</ph> для преобразования лямбда-выражения в значение строкового свойства, выводимого на консоль в действии <ph id="ph2">`WriteLine`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
          <source>The following code example is like the previous one except that the expression to convert is a reference to an item in a multidimensional array.</source>
          <target state="translated">Следующий пример кода похож на предыдущий с той разницей, что преобразуемое выражение является ссылкой на элемент в многомерном массиве.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source>The type the expression is being converted to.</source>
          <target state="translated">Тип, в который преобразуется выражение.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source>The expression being converted.</source>
          <target state="translated">Выражение для преобразования.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source>The converted expression.</source>
          <target state="translated">Преобразованное выражение.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source>Converts a workflow environment-aware expression to an activity tree.</source>
          <target state="translated">Преобразует выражение, учитывающее среду рабочего процесса, в дерево действий.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the expression can be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если выражение может быть преобразовано; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
          <source>The conversion methods in <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> are designed to work with variables and constants defined inside the workflow, or passed into the workflow via arguments.</source>
          <target state="translated">Методы преобразования в <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> предназначены для работы с переменными и константами, определенными в рабочем процессе или переданными в рабочий процесс в виде аргументов.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source>The type the expression is being converted to.</source>
          <target state="translated">Тип, в который преобразуется выражение.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source>The expression being converted.</source>
          <target state="translated">Выражение для преобразования.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source>The converted expression.</source>
          <target state="translated">Преобразованное выражение.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source>Converts a reference to a workflow environment-aware expression to an activity tree.</source>
          <target state="translated">Преобразует ссылку на выражение, учитывающее среду рабочего процесса, в дерево действий.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the expression can be converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если выражение может быть преобразовано; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
          <source>The conversion methods in <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> are designed to work with variables and constants defined inside the workflow, or passed into the workflow via arguments.</source>
          <target state="translated">Методы преобразования в <ph id="ph1">&lt;xref:System.Activities.Expressions.ExpressionServices&gt;</ph> предназначены для работы с переменными и константами, определенными в рабочем процессе или переданными в рабочий процесс в виде аргументов.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>