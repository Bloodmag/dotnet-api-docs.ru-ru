<Type Name="AttributeTableBuilder" FullName="System.Activities.Presentation.Metadata.AttributeTableBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d932f5491ce72aecf0315bc2ac061090f8feba03" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30350158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AttributeTableBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeTableBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.AttributeTableBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeTableBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeTableBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Создает и заполняет <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" />, используемый <see cref="T:System.Activities.Presentation.Metadata.MetadataStore" /> для обеспечения поиска и регистрации атрибута.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> и <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> для заполнения построителя, затем вызовите <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> для получения <xref:System.Activities.Presentation.Metadata.AttributeTable>, содержащего нужную коллекцию атрибутов.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeTableBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeTableBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Activities.Presentation.Metadata.AttributeTableBuilder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCallback">
      <MemberSignature Language="C#" Value="public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCallback(class System.Type type, class System.Activities.Presentation.Metadata.AttributeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCallback(Type ^ type, System::Activities::Presentation::Metadata::AttributeCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.Metadata.AttributeCallback" />
      </Parameters>
      <Docs>
        <param name="type">Тип, для которого обратный вызов обеспечит метаданные.</param>
        <param name="callback">Метод обратного вызова.</param>
        <summary>Задает обратный вызов, который будет выполняться, если для заданного типа требуются метаданные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В первый раз, когда к таблице <xref:System.Activities.Presentation.Metadata.AttributeTable>, возвращенной функцией <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>, делается запрос по атрибутам для `type`, вызывается `callback` для получения метаданных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">Тип, к которому добавляются атрибуты уровня класса.</param>
        <param name="attributes">Атрибуты, которые добавляются в построитель.</param>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="type" /> или <paramref name="attributes" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.ComponentModel.MemberDescriptor descriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, descriptor As MemberDescriptor, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::ComponentModel::MemberDescriptor ^ descriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="descriptor" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType">Тип, содержащий элемент, который идентифицируется параметром <c>descriptor</c>.</param>
        <param name="descriptor">Событие или свойство, к которому добавляются атрибуты.</param>
        <param name="attributes">Атрибуты, которые добавляются в построитель.</param>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="ownerType" />, <paramref name="descriptor" /> или <paramref name="attributes" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.Reflection.MemberInfo member, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, member As MemberInfo, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::Reflection::MemberInfo ^ member, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType">Тип, содержащий элемент, который идентифицируется параметром <c>member</c>.</param>
        <param name="member">Событие или свойство, к которому добавляются атрибуты.</param>
        <param name="attributes">Атрибуты, которые добавляются в построитель.</param>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="ownerType" />, <paramref name="member" /> или <paramref name="attributes" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, string memberName, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, string memberName, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, memberName As String, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::String ^ memberName, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType">Тип, содержащий элемент, который идентифицируется параметром <c>memberName</c>.</param>
        <param name="memberName">Имя события или свойства, к которому добавляются атрибуты.</param>
        <param name="attributes">Атрибуты, которые добавляются в построитель.</param>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Значение параметра <paramref name="ownerType" />, <paramref name="memberName" /> или <paramref name="attributes" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Type ownerType, class System.Windows.DependencyProperty dp, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ownerType As Type, dp As DependencyProperty, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(Type ^ ownerType, System::Windows::DependencyProperty ^ dp, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ownerType">Тип, содержащий зависимость, которая идентифицируется параметром <c>dp</c>.</param>
        <param name="dp">Свойство зависимостей, к которому добавляются атрибуты.</param>
        <param name="attributes">Атрибуты, которые добавляются в построитель.</param>
        <summary>Добавляет содержимое предоставленных атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 Если создается таблица атрибутов большого размера, используйте <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, чтобы отложить создание атрибутов до момента, когда они потребуются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="ownerType" />, <paramref name="dp" /> или <paramref name="attributes" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTable">
      <MemberSignature Language="C#" Value="public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table">Таблица исходных атрибутов.</param>
        <summary>Добавляет содержимое предоставленной таблицы атрибутов в этот построитель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае конфликта атрибута с другим атрибутом, уже включенным в построитель, последний добавленный атрибут заменяет прежние.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="table" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Metadata.AttributeTable CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTable () As AttributeTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Metadata::AttributeTable ^ CreateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Metadata.AttributeTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает таблицу атрибутов, содержащую все определения атрибутов, предоставленных путем вызовов метода <see cref="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])" />.</summary>
        <returns>
          <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" />, который можно передать хранилищу метаданных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблица представляет собой моментальный снимок текущего состояния построителя атрибутов. Никакие атрибуты, добавляемые при последующих вызовах <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, в таблицу не включаются.  
  
 Если методы обратного вызова используются для объявления атрибутов, эти методы не будут оцениваться во время <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Вместо этого обратные вызовы будут содержаться в таблице и оцениваться по мере необходимости.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTable">
      <MemberSignature Language="C#" Value="public void ValidateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Проверяет, что создаваемая таблица атрибутов содержит достоверную информацию об атрибутах.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые переопределения метода <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> не удается проверить, что значения, передаваемые для их параметров представляют допустимыми членами классов. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> проверяет, что вся пользовательская информация атрибутов соответствует фактическим членам классов. Этот метод может выполняться довольно долго, поэтому рекомендуется использовать его только в случаях, когда явно требуется проверка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Activities.Presentation.Metadata.AttributeTableValidationException">недопустимое состояние таблицы.</exception>
      </Docs>
    </Member>
  </Members>
</Type>