<Type Name="PropertyValue" FullName="System.Activities.Presentation.PropertyEditing.PropertyValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22c7146ed321c9e34c80a503766dc8d63b586dca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyValue : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyValue extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyValue&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyValue abstract : System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e9763-101">Поддерживает модель данных для значения свойства в сетке свойств.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9763-101">Maintains a data model for the value of a property in the property grid.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyValue (System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.#ctor(System.Activities.Presentation.PropertyEditing.PropertyEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parentProperty As PropertyEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyValue(System::Activities::Presentation::PropertyEditing::PropertyEntry ^ parentProperty);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProperty" Type="System.Activities.Presentation.PropertyEditing.PropertyEntry" />
      </Parameters>
      <Docs>
        <param name="parentProperty">
          <span data-ttu-id="e9763-102">Объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />, соответствующий этому <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-102">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> that corresponds to this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-103">Инициализирует новый экземпляр класса <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> с родительским свойством, установленным на заданный объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-103">Initializes a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> class with the parent property set to a specified <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public abstract bool CanConvertFromString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConvertFromString" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CanConvertFromString" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanConvertFromString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanConvertFromString { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-104">Если реализуется в производном классе, получение значение, указывающее, можно ли преобразовать<see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> из строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-104">When implemented in a derived class, gets a value that indicates whether <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> can be converted from a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-105">Значение <see langword="true" />, если значение свойства может быть преобразовано из строки; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-105">
              <see langword="true" /> if the property value can be converted from a string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchExceptions">
      <MemberSignature Language="C#" Value="protected virtual bool CatchExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CatchExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CatchExceptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CatchExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CatchExceptions { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-106">Получает значение, указывающее, должны ли обрабатываться исключения, возникшие при получении и указании значения свойства, или они должны передаваться прямо вызывающему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-106">Gets a value that indicates whether exceptions thrown during property value getting and setting should be caught or should be propagated directly to the caller.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-107">Значение <see langword="true" />, если исключения перехватываются; значение <see langword="false" />, если исключения передаются вызывающему объекту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-107">
              <see langword="true" /> if exceptions are caught; <see langword="false" /> if exceptions are propagated to the caller.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9763-108">Зависит от наличия подписчиков на событие <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException>.</span><span class="sxs-lookup"><span data-stu-id="e9763-108">This is based upon whether there are any subscribers to the <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public abstract void ClearValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ClearValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ClearValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ClearValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9763-109">Если реализуется в производном классе, удаляет <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />, оставляя незаданным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-109">When implemented in a derived class, clears the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> so that it is unset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Collection" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Collection As PropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValueCollection ^ Collection { System::Activities::Presentation::PropertyEditing::PropertyValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-110">Если реализуется в производном классе, получает коллекцию экземпляров <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />, соответствующих элементам в коллекции, если <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" /> проверяет, что свойство является коллекцией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-110">When implemented in a derived class, gets a collection of <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> instances that correspond to items in a collection when <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" /> verifies that the property is a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-111">Объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" />, который суть коллекция экземпляров значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-111">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" /> object that is a collection of property value instances.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="protected abstract object ConvertStringToValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object ConvertStringToValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertStringToValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConvertStringToValue (value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ ConvertStringToValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e9763-112">Значение <see cref="T:System.String" />, которое необходимо преобразовать в <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-112">The <see cref="T:System.String" /> value to convert to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-113">Если реализуется в производном классе, преобразует заданный <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> в <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-113">When implemented in a derived class, converts the specified <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9763-114">Значение <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-114">An <see cref="T:System.Object" /> value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="protected abstract string ConvertValueToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ConvertValueToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertValueToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConvertValueToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ ConvertValueToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e9763-115">Объект <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />, преобразуемый в строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-115">The <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> to convert to a string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-116">Если реализуется в производном классе, преобразует заданный <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> в <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-116">When implemented in a derived class, converts the specified <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9763-117">Версия <see cref="T:System.String" /><see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-117">A <see cref="T:System.String" /> version of the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueCore">
      <MemberSignature Language="C#" Value="protected abstract object GetValueCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValueCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.GetValueCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetValueCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetValueCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9763-118">Если реализуется в производном классе, возвращает <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-118">When implemented in a derived class, returns a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9763-119">Значение свойства <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-119">A property value <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSubProperties">
      <MemberSignature Language="C#" Value="public abstract bool HasSubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.HasSubProperties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasSubProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasSubProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-120">Если реализуется в производном классе, получает значение, указывающее, поддерживает ли тип этого свойства подсвойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-120">When implemented in a derived class, gets a value that indicates whether the type of this property supports sub-properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-121">Логическое значение<see cref="T:System.Boolean" />. Если равно <see cref="T:System.Boolean.True" />, производится проверка на то, поддерживает ли данный тип подсвойства. Если <see cref="T:System.Boolean.False" />, проверка не производится.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-121">A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the type supports sub-properties, otherwise <see cref="T:System.Boolean.False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9763-122">В стандартных реализациях используется <xref:System.ComponentModel.TypeConverter> для проверки того, существуют ли подсвойства.</span><span class="sxs-lookup"><span data-stu-id="e9763-122">Typical implementations will use a <xref:System.ComponentModel.TypeConverter> to verify whether sub-properties exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public abstract bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-123">Если реализуется в производном классе, получает значение, указывающее, является ли данный <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> коллекцией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-123">When implemented in a derived class, gets a value that indicates whether this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> is a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-124">Логическое значение <see cref="T:System.Boolean" />. Если равно <see cref="T:System.Boolean.True" />, производится проверка на то, является ли значение свойства коллекцией. Если <see cref="T:System.Boolean.False" />, проверка не производится.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-124">A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the property value is a collection, otherwise <see cref="T:System.Boolean.False" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultValue">
      <MemberSignature Language="C#" Value="public abstract bool IsDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDefaultValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDefaultValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-125">Если реализуется в производном классе, получает значение, указывающий, является ли <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> значением свойства по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-125">When implemented in a derived class, gets a value that indicates whether the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> is the default value for the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-126">Логическое значение <see cref="T:System.Boolean" />. Если равно <see cref="T:System.Boolean.True" />, производится проверка на то, является ли значение значением по умолчанию. Если <see cref="T:System.Boolean.False" />, проверка не производится.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-126">A <see cref="T:System.Boolean" /> that, when <see cref="T:System.Boolean.True" />, verifies that the value is the default, otherwise <see cref="T:System.Boolean.False" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMixedValue">
      <MemberSignature Language="C#" Value="public abstract bool IsMixedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixedValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsMixedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMixedValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMixedValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-127">Если реализуется в производном классе, получает значение, указывающее, содержится ли это свойство в нескольких объектах и используются ли там разные значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-127">When implemented in a derived class, gets a value that indicates whether multiple objects contain this property and have different values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-128">
            <see langword="true" /> Если несколько объектов содержат этого свойства. в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-128">
              <see langword="true" /> if multiple objects contain this property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9763-129">Если `true`, <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.Value%2A> возвращает значение null, а <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue%2A> возвращает <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="e9763-129">If `true`, <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.Value%2A> will return null and <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue%2A> will return <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyRootValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void NotifyRootValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyRootValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifyRootValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyRootValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyRootValueChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9763-130">Вызывает событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" />, если базовый тип значения меняется извне, например, в области конструктора отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-130">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" /> event when the underlying value type is changed externally, as on the design surface.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifySubPropertyChanged">
      <MemberSignature Language="C#" Value="protected void NotifySubPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifySubPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifySubPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifySubPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifySubPropertyChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9763-131">Вызывает событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" /> при изменении одного из подсвойств данного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-131">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" /> event when one of the sub-properties of this property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnPropertyChanged">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-132">Вызывает событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> при изменении значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-132">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> event when the property value has changed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e9763-133">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, предоставляющий имя измененного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-133">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> object that provides the name of the property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-134">Вызывает событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> с заданными объектами <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-134">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> event with the specified <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="e9763-135">Имя изменяемого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-135">The name of the property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-136">Вызывает событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" />, которое использует имя измененного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-136">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> event that uses the name of the property that changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyValueException">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyValueException (System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyValueException(class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyValueException(System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyValueException (e As PropertyValueExceptionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyValueException(System::Activities::Presentation::PropertyEditing::PropertyValueExceptionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e9763-137">Объект<see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" />, предоставляющий информацию о невозможности получить или задать значение свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-137">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" /> that provides information about the get or set failure that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-138">Реализация по умолчанию, вызывающая событие <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" />, когда невозможно получить или задать значения свойств <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> в базовой коллекции данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-138">Default implementation that raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" /> event when <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> properties experience failure getting or setting values in the underlying collection of data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentProperty">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.ParentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentProperty As PropertyEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::PropertyEditing::PropertyEntry ^ ParentProperty { System::Activities::Presentation::PropertyEditing::PropertyEntry ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-139">Получает родителя <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> в случае реализации свойства в среде узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-139">Gets the parent <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> when the property implementation occurs in a host environment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-140">Объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />, представляющий родительское свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-140">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> object that represents the parent property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-141">Возникает, если свойство или подсвойство объекта <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> изменилось.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-141">Occurs when properties or sub-properties of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> object has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyValueException">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyValueException As EventHandler(Of PropertyValueExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyValueExceptionEventArgs ^&gt; ^ PropertyValueException;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-142">Событие, используемое реализациями узлов для обработки ошибок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-142">Event used by host implementations for error handling.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event RootValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RootValueChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-143">Возникает, обновляется свойство <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> или <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> в результате изменения значения <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-143">Occurs when the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> or <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> property is updated as a result of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> value being changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueCore">
      <MemberSignature Language="C#" Value="protected abstract void SetValueCore (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetValueCore(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.SetValueCore(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetValueCore (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetValueCore(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e9763-144">Объект, задаваемый в базовой коллекции данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-144">The object to be set in the underlying collection of data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-145">Если реализуется в производном классе, задает <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-145">When implemented in a derived class, sets the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As PropertyValueSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValueSource ^ Source { System::Activities::Presentation::PropertyEditing::PropertyValueSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-146">Если реализуется в производном классе, получает объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" />, содержащий сведений о том, откуда получено это значение свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-146">When implemented in a derived class, gets a <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> object that contains information about where this property value is coming from.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-147">Объект <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" />, содержащий сведения об источнике значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-147">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> object that contains property value source information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public string StringValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-148">Возвращает или задает объект <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> как <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-148">Gets or sets a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-149">Версия <see cref="T:System.String" /><see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-149">A <see cref="T:System.String" /> version of the <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProperties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.SubProperties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SubProperties As PropertyEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyEntryCollection ^ SubProperties { System::Activities::Presentation::PropertyEditing::PropertyEntryCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-150">Если реализуется в производном классе, получает коллекцию подсвойств как экземпляров <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-150">When implemented in a derived class, gets a collection of sub-properties as <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> instances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-151">
            <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntryCollection" /> экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-151">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntryCollection" /> of instances.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubPropertyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SubPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SubPropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SubPropertyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SubPropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-152">Возникает, когда обновляются подсвойства в результате изменения <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-152">Occurs when sub-properties are updated as a result of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> being changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="protected abstract void ValidateValue (object valueToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateValue(object valueToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ValidateValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ValidateValue (valueToValidate As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ValidateValue(System::Object ^ valueToValidate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToValidate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="valueToValidate">
          <span data-ttu-id="e9763-153">Объект, значение которого проверяется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-153">The object whose value is verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9763-154">Если реализуется в производном классе, вызывает исключение, если проверка объекта а заданным значением показывает, что значение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-154">When implemented in a derived class, throws an exception if verification of the specified value object shows it to be invalid.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9763-155">Возвращает или задает значение свойства в базовой коллекции данных свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-155">Gets or sets a property value in the underlying collection of property data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9763-156">Значение свойства <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9763-156">A property value <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>