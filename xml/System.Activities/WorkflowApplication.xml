<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a4bb11495ac22a4922bd688c321c72ef46b28d2" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34254652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1f2a6-101">Предоставляет ведущее приложение для одиночного экземпляра рабочего процесса.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f2a6-101">Provides a host for a single instance of a workflow.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-102">Класс <xref:System.Activities.WorkflowApplication> предоставляет ведущее приложение для одиночного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="1f2a6-103">Он служит прокси-классом для фактического экземпляра рабочего процесса, который управляется средой выполнения рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="1f2a6-104">Пользователи <xref:System.Activities.WorkflowApplication> могут выполнять в среде выполнения рабочего процесса различные действия с экземпляром рабочего процесса, вызывая соответствующие методы в объекте <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="1f2a6-105">Если запрошенное действие оказывается недопустимым, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="1f2a6-106">С помощью <xref:System.Activities.WorkflowApplication> можно выполнять следующие задачи.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="1f2a6-107">Создавать новый экземпляр рабочего процесса или загружать экземпляр рабочего процесса из хранилища экземпляров.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="1f2a6-108">Задавать расширения для использования действиями в пределах экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="1f2a6-109">Управлять выполнением экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="1f2a6-110">Возобновлять закладку, созданную действием в пределах экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="1f2a6-111">Сохранять или выгружать экземпляр рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="1f2a6-112">Получать уведомления о событиях жизненного цикла экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-113">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-114">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-115">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-116">Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="1f2a6-117">Определение рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-117">The workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-118">Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" /> с указанным определением рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-119">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-120">Экземпляр <xref:System.Activities.WorkflowApplication> создается на основе определения рабочего процесса, состоящего из одного действия `DiceRoll`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="1f2a6-121">Действие `DiceRoll` имеет два выходных аргумента, представляющих результаты броска игральных костей.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="1f2a6-122">При завершении рабочего процесса выходные данные извлекаются обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A> и на консоль выдается следующее.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="1f2a6-123">Определение рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-123">The workflow definition.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-124">Удостоверение определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-124">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-125">Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" /> с указанным определением рабочего процесса и удостоверением определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="1f2a6-126">Определение рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-126">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="1f2a6-127">Значения для аргументов, определенных в корневом действии определения рабочего процесса, привязанные к именам аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-128">Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />, использующий указанное определение рабочего процесса и указанные значения аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-129">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-130">Экземпляр <xref:System.Activities.WorkflowApplication> создается на основе определения рабочего процесса, состоящего из одного действия `Divide`, принимающего два входных аргумента, и словаря входных аргументов, содержащих два передаваемых значения, привязанные по именам атрибутов.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="1f2a6-131">Нужные события жизненного цикла рабочего процесса обрабатываются, и рабочий процесс запускается вызовом метода <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-132">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="1f2a6-133">Определение рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-133">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="1f2a6-134">Удостоверение определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-134">The definition identity.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-135">Значения для аргументов, определенных в корневом действии определения рабочего процесса, привязанные к именам аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-136">Создает новый экземпляр класса <see cref="T:System.Activities.WorkflowApplication" />, использующий указанное определение рабочего процесса, указанные значения аргументов и удостоверение определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-137">Уведомляет среду выполнения рабочего процесса о том, что работа этого экземпляра рабочего процесса будет прервана.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-137">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-138">Если прерывается рабочий процесс, размещенный в <xref:System.Activities.WorkflowApplication>, то вызывается обработчик <xref:System.Activities.WorkflowApplication.Aborted%2A>, а обработчик <xref:System.Activities.WorkflowApplication.Completed%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-139">Уведомляет среду выполнения рабочего процесса о том, что работа этого экземпляра рабочего процесса будет прервана.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-139">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-140">Если прерывается рабочий процесс, размещенный в <xref:System.Activities.WorkflowApplication>, то вызывается обработчик <xref:System.Activities.WorkflowApplication.Aborted%2A>, а обработчик <xref:System.Activities.WorkflowApplication.Completed%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-141">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-142">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-143">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Abort%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="1f2a6-144">В случае прерывания рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-145">Причина запроса на прерывание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-145">The reason for the request to abort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-146">Уведомляет среду выполнения рабочего процесса о необходимом прерывании этого экземпляра рабочего процесса по указанной причине.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-147">Если прерывается рабочий процесс, размещенный в <xref:System.Activities.WorkflowApplication>, то вызывается обработчик <xref:System.Activities.WorkflowApplication.Aborted%2A>, а обработчик <xref:System.Activities.WorkflowApplication.Completed%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-148">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-149">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-150">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Abort%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="1f2a6-151">В случае прерывания рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-152">Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда прерывается экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-153">Действие, которое вызывается, когда прерывается экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-153">The action that is invoked when the workflow instance is aborted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-154">Если прерывается рабочий процесс, размещенный в <xref:System.Activities.WorkflowApplication>, то вызывается обработчик <xref:System.Activities.WorkflowApplication.Aborted%2A>, а обработчик <xref:System.Activities.WorkflowApplication.Completed%2A> не вызывается.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-155">В следующем примере кода проверяются аргументы <xref:System.Activities.WorkflowApplicationAbortedEventArgs>, переданные в обработчик <xref:System.Activities.WorkflowApplication.Aborted%2A> экземпляра <xref:System.Activities.WorkflowApplication>, и выводятся сведения о причинах прерывания рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues">
          <span data-ttu-id="1f2a6-156">Значения метаданных, которые включаются в первое сохранение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-156">The metadata values to be included with the first persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-157">Задает значения метаданных экземпляра, которые включаются в первое сохранение нового экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-158">Отменяет выполнение рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-159">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-159">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1f2a6-160">Метод, вызываемый при завершении операции отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-160">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-161">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-161">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-162">Отменяет экземпляр рабочего процесса в асинхронном режиме с указанным <see cref="T:System.AsyncCallback" /> и предоставляемым пользователем состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-163">Ссылка на асинхронную операцию отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-163">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-164">Чтобы определить, успешно ли выполнена операция отмены, вызовите метод <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="1f2a6-165">Метод <xref:System.Activities.WorkflowApplication.EndCancel%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-166">Если метод <xref:System.Activities.WorkflowApplication.EndCancel%2A> вызывается до завершения операции отмены, то он блокируется до завершения операции отмены.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="1f2a6-167">По умолчанию операция отмены должна завершаться за 30 секунд. В противном случае в методе <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-168">Этот метод отменяет рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-169">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-169">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-170">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-171">Метод, вызываемый при завершении операции отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-171">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-172">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-172">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-173">Отменяет экземпляр рабочего процесса в асинхронном режиме с использованием указанного интервала времени ожидания, объекта <see cref="T:System.AsyncCallback" /> и предоставляемого пользователем состояния.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-174">Ссылка на асинхронную операцию отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-174">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-175">Чтобы определить, успешно ли выполнена операция отмены, вызовите метод <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="1f2a6-176">Метод <xref:System.Activities.WorkflowApplication.EndCancel%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-177">Если метод <xref:System.Activities.WorkflowApplication.EndCancel%2A> вызывается до завершения операции отмены, то он блокируется до завершения операции отмены.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="1f2a6-178">Если операция отмены не завершается в течение интервала, указанного в параметре `timeOut`, то в методе <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-179">Этот метод отменяет рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-180">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-180">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-181">Асинхронно создает владельца экземпляра по умолчанию с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-182">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-182">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-183">Удостоверение определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-183">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="1f2a6-184">Фильтр удостоверения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-184">The identity filter.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-185">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-185">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-186">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-186">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-187">Создает владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, идентификатором определения, фильтром идентификатора, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-188">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-188">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-189">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-189">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-190">Удостоверение определения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-190">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="1f2a6-191">Фильтр удостоверения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-191">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-192">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-193">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-193">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-194">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-194">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-195">Создает владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, идентификатором определения, фильтром идентификатора, интервалом истечения времени ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-196">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-196">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-197">Асинхронно делегирует владельца экземпляра по умолчанию с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-198">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-198">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-199">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-199">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-200">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-200">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-201">Удаляет владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-202">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-202">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-203">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-203">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-204">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-205">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-205">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-206">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-206">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-207">Удаляет владельца экземпляра по умолчанию в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, интервалом времени ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-208">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-208">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-209">Асинхронно Извлекает владельца экземпляра с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-210">Идентификатор экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-210">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-211">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-211">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-212">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-212">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-213">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-213">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-214">Извлекает владельца экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанными идентификатором, хранилищем экземпляров, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-215">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-215">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-216">Идентификатор экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-216">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-217">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-217">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-218">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-219">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-219">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-220">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-220">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-221">Извлекает владельца экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанными идентификатором, хранилищем экземпляров, сроком ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-222">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-222">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-223">Асинхронно Извлекает владельца готового к запуску экземпляра с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-224">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-224">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-225">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-225">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-226">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-226">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-227">Извлекает владельца готового к запуску экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-228">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-228">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-229">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-229">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-230">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-231">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-231">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-232">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-232">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-233">Извлекает владельца готового к запуску экземпляра в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" /> с указанным хранилищем экземпляров, интервалом времени ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-234">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-234">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-235">Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-236">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-236">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-237">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-237">The instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-238">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-238">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-239">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-239">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-240">Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-241">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-241">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-242">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-242">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-243">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-243">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-244">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-244">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-245">Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-246">Состояние асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-246">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-247">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-247">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="1f2a6-248">Сопоставление обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-248">The update map.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-249">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-249">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-250">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-250">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-251">Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, сопоставлением обновления, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-252">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-252">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-253">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-253">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-254">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-255">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-255">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-256">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-256">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-257">Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, интервалом времени ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-258">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-258">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-259">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-259">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-260">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-261">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-261">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-262">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-262">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-263">Загружает рабочий процесс в асинхронном режиме из хранилища экземпляров, используя указанный идентификатор экземпляра, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-264">Состояние асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-264">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-265">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-265">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="1f2a6-266">Сопоставление обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-266">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-267">Интервал, в течение которого операция начала загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-268">Метод, вызываемый, когда операция начала загрузки была выполнена успешно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-268">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-269">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-269">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-270">Асинхронно загружает рабочий процесс из хранилища экземпляров с помощью шаблона асинхронного проекта <see cref="T:System.IAsyncResult" /> с указанным экземпляром, сопоставлением обновления, интервалом времени ожидания, обратным вызовом и состоянием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-271">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-271">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-272">Инициализирует асинхронный процесс загрузки запускаемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-273">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1f2a6-274">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-274">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-275">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-275">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-276">Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-277">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-277">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-278">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="1f2a6-279">Чтобы определить, была ли операция загрузки выполнена успешно, вызовите метод <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="1f2a6-280">Метод <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-281">Если <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-282">По умолчанию операция возобновления должна быть завершена в течение 30 секунд, в противном случае будет сформировано исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-283">Этот метод загружает рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-284">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-284">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-285">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-286">Метод, вызываемый при завершении этой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-286">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-287">Необязательный относящийся к приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-287">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-288">Запускает операцию для загрузки выполняемого экземпляра рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> с использованием указанного интервала времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-289">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-289">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-290">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="1f2a6-291">Чтобы определить, была ли операция загрузки выполнена успешно, вызовите метод <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="1f2a6-292">Метод <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-293">Если <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-294">Если операция загрузки не завершается в течение указанного интервала времени ожидания, то в методе <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-295">Этот метод загружает рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-296">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-296">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-297">Сохраняет экземпляр рабочего процесса в асинхронном режиме в хранилище экземпляров с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-298">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-298">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="1f2a6-299">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-300">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1f2a6-301">Метод, вызываемый при завершении операции сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-301">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-302">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-302">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-303">Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-304">Ссылка на асинхронную операцию сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-304">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-305">Чтобы определить, успешно ли выполнена операция сохранения, вызовите метод <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="1f2a6-306">Метод <xref:System.Activities.WorkflowApplication.EndPersist%2A> можно вызвать как изнутри, так и извне метода, ссылка на который приведена в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-307">Если метод <xref:System.Activities.WorkflowApplication.EndPersist%2A> вызывается до завершения операции сохранения, то он будет заблокирован до завершения операции сохранения.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="1f2a6-308">Если операция сохранения не завершается в течение 30 секунд, то в методе <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-309">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-310">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="1f2a6-311">Этот метод сохраняет рабочий процесс асинхронно, с помощью асинхронного шаблона <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-312">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-312">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-313">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-314">Метод, вызываемый при завершении операции сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-314">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-315">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-315">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-316">Сохраняет экземпляр рабочего процесса в хранилище экземпляров в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-317">Ссылка на асинхронную операцию сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-317">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-318">Чтобы определить, успешно ли выполнена операция сохранения, вызовите метод <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="1f2a6-319">Метод <xref:System.Activities.WorkflowApplication.EndPersist%2A> можно вызвать как изнутри, так и извне метода, ссылка на который приведена в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-320">Если метод <xref:System.Activities.WorkflowApplication.EndPersist%2A> вызывается до завершения операции сохранения, то он будет заблокирован до завершения операции сохранения.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="1f2a6-321">Если операция сохранения не завершается в течение указанного интервала времени ожидания, то в методе <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-322">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-323">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="1f2a6-324">Этот метод сохраняет экземпляр рабочего процесса в асинхронном режиме в соответствии с асинхронным шаблоном разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-325">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-325">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-326">Запускает асинхронную операцию продолжения чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-326">Initiates an asynchronous operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="1f2a6-327">Возобновляемая закладка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-327">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-328">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-329">Метод, вызываемый при завершении операции возобновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-329">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-330">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-330">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-331">Запускает операцию для возобновления закладки, используя указанное значение, метод обратного вызова и состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-332">Ссылка на асинхронную операцию возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-332">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-333">Чтобы определить, была ли операция возобновлена успешно, вызовите <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="1f2a6-334">Метод <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-335">Если <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-336">По умолчанию операция возобновления должна быть завершена в течение 30 секунд, в противном случае будет сформировано исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-337">Этот метод возобновляет чтение с закладки в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-338">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-338">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="1f2a6-339">Имя закладки, с которой будет продолжено чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-339">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-340">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-341">Метод, который вызывается после завершения асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-341">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-342">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-343">Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, метод обратного вызова и состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span>
          </span>
          <span data-ttu-id="1f2a6-344">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-345">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-345">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-346">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="1f2a6-347">Возобновляемая закладка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-347">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-348">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-349">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-350">Метод, вызываемый при завершении операции возобновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-350">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-351">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-351">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-352">Запускает операцию для возобновления закладки, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-353">Ссылка на асинхронную операцию возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-353">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-354">Чтобы определить, была ли операция возобновлена успешно, вызовите <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="1f2a6-355">Метод <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-356">Если <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-357">Если операция возобновления не завершается в течение указанного интервала времени ожидания, то из <xref:System.TimeoutException> формируется исключение <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-358">Этот метод возобновляет чтение с закладки в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-359">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-359">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="1f2a6-360">Имя закладки, с которой будет продолжено чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-360">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-361">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-362">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-362">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-363">Метод, который вызывается после завершения асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-363">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-364">Состояние выполнения рабочего процесса, сохраненное вызывающим потоком перед началом асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-365">Запускает асинхронную операцию для возобновления закладки с указанным именем, используя указанное значение, интервал времени ожидания, метод обратного вызова и состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span>
          </span>
          <span data-ttu-id="1f2a6-366">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-367">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-367">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-368">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-369">Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-370">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-370">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1f2a6-371">Метод, вызываемый при завершении операции возобновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-371">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-372">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-372">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-373">Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-374">Ссылка на асинхронную операцию запуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-374">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-375">Чтобы определить, успешно ли выполнена операция запуска, вызовите метод <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="1f2a6-376">Метод <xref:System.Activities.WorkflowApplication.EndRun%2A> можно вызвать как изнутри, так и извне метода, ссылка на который приведена в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-377">Если <xref:System.Activities.WorkflowApplication.EndRun%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-378">По умолчанию операция возобновления должна быть завершена в течение 30 секунд, или создается исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-379">Этот метод запускает или возобновляет рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-380">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-380">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-381">Период времени, в течение которого операция возобновления должна быть завершена, прежде чем операция отменяется и создается исключение <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-382">Метод, вызываемый при завершении операции возобновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-382">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-383">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-383">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-384">Запускает или возобновляет экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-385">Ссылка на асинхронную операцию запуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-385">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-386">Чтобы определить, успешно ли выполнена операция запуска, вызовите метод <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="1f2a6-387">Метод <xref:System.Activities.WorkflowApplication.EndRun%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-388">Если <xref:System.Activities.WorkflowApplication.EndRun%2A> вызывается до завершения операции возобновления, это приведет к блокировке до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="1f2a6-389">Если операция возобновления не завершается в течение указанного интервала времени ожидания, то из <xref:System.TimeoutException> формируется исключение <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-390">Этот метод запускает или возобновляет рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-391">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-391">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-392">Прерывает экземпляр рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-393">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-393">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-394">Причина завершения экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-394">The reason the workflow instance is terminated.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-395">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-396">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-396">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-397">Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-398">Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-399">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-400">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-401">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="1f2a6-402">Метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> можно вызвать как изнутри, так и извне метода, ссылка на который приведена в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-403">Если метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-404">По умолчанию операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> должна быть завершена в течение 30 секунд, в противном случае будет вызвано исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-405">Этот метод завершает рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-406">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-406">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-407">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-407">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-408">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-409">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-409">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-410">Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-411">Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-412">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-413">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-414">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="1f2a6-415">Метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-416">Если метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-417">По умолчанию операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> должна быть завершена в течение 30 секунд, в противном случае будет вызвано исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-418">Этот метод завершает экземпляр рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-419">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-419">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-420">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-420">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-421">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-422">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-423">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-423">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-424">Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное исключение, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-425">Ссылка на текущую операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-426">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-427">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-428">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="1f2a6-429">Метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> можно вызвать как изнутри, так и извне метода `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="1f2a6-430">Если метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-431">Если операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> не завершается в течение указанного интервала времени ожидания, то создается исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="1f2a6-432">Это исключение и все другие исключения, создаваемые в процессе <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, вызываются из метода <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-433">Этот метод завершает рабочий процесс в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-434">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-434">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-435">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-435">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-436">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-437">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-438">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-438">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-439">Завершает экземпляр рабочего процесса в асинхронном режиме, используя указанное сообщение об ошибке, интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-440">Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-441">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-442">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-443">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="1f2a6-444">Метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-445">Если метод <xref:System.Activities.WorkflowApplication.EndTerminate%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-446">Если операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> не завершается в течение указанного интервала времени ожидания, то из <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-447">Этот метод завершает экземпляр рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-448">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-448">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-449">Сохраняет и удаляет экземпляр рабочего процесса в асинхронном режиме с помощью асинхронного шаблона проектирования <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-450">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-450">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="1f2a6-451">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-452">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="1f2a6-453">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-454">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-454">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-455">Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-456">Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-457">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginUnload%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="1f2a6-458">Метод <xref:System.Activities.WorkflowApplication.EndUnload%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-459">Если метод <xref:System.Activities.WorkflowApplication.EndUnload%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginUnload%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-460">По умолчанию операция <xref:System.Activities.WorkflowApplication.BeginUnload%2A> должна быть завершена в течение 30 секунд, в противном случае будет вызвано исключение <xref:System.TimeoutException> из <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-461">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-462">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="1f2a6-463">Этот метод сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-464">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-464">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-465">Период времени, в течение которого операция <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="1f2a6-466">Метод, вызываемый после завершения операции <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1f2a6-467">Относящийся к необязательному приложению объект, содержащий сведения об асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-467">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-468">Сохраняет и освобождает экземпляр рабочего процесса в асинхронном режиме, используя указанный интервал времени ожидания, метод обратного вызова и предоставляемое пользователем состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-469">Ссылка на асинхронную операцию <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-470">Чтобы определить, успешно ли выполнена операция <xref:System.Activities.WorkflowApplication.BeginUnload%2A>, вызовите метод <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="1f2a6-471">Метод <xref:System.Activities.WorkflowApplication.EndUnload%2A> можно вызывать как в пределах, так и вне пределов метода, указанного в параметре `callback`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="1f2a6-472">Если метод <xref:System.Activities.WorkflowApplication.EndUnload%2A> вызывается до завершения операции <xref:System.Activities.WorkflowApplication.BeginUnload%2A>, то он блокируется до завершения операции <xref:System.Activities.WorkflowApplication.BeginUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="1f2a6-473">Если операция <xref:System.Activities.WorkflowApplication.BeginUnload%2A> не завершается в течение указанного интервала времени ожидания, то из <xref:System.TimeoutException> вызывается исключение <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="1f2a6-474">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-475">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="1f2a6-476">Этот метод сохраняет и выгружает экземпляр рабочего процесса в асинхронном режиме, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-477">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-477">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-478">Отменяет экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-478">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-479">Этот метод планирует отмену экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="1f2a6-480">Чтобы получить уведомление о выполнении отмены, воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-481">По умолчанию операция отмены должна быть завершена в течение 30 секунд, в противном случае будет сформировано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-482">Отменяет экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-482">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-483">Этот метод планирует отмену экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="1f2a6-484">Чтобы получить уведомление о выполнении отмены, используйте обработчик <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="1f2a6-485">По умолчанию операция отмены должна быть завершена в течение 30 секунд, в противном случае будет сформировано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-486">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-487">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-488">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Cancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="1f2a6-489">После отмены рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-490">Период времени, в течение которого операция отмены должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-491">Отменяет экземпляр рабочего процесса, используя указанный интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-491">Cancels the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-492">Этот метод планирует отмену экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="1f2a6-493">Чтобы получить уведомление о выполнении отмены, используйте обработчик <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-494">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-495">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-496">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Cancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="1f2a6-497">После отмены рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-498">Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда завершается экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-499">Действие, вызываемое при завершении экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-499">The action that is invoked when the workflow instance is complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-500">В следующем примере кода проверяются аргументы <xref:System.Activities.WorkflowApplicationCompletedEventArgs>, переданные в обработчик <xref:System.Activities.WorkflowApplication.Completed%2A> экземпляра <xref:System.Activities.WorkflowApplication>, и выводятся сведения о завершении рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-501">Создает владелец экземпляра по умолчанию для рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-501">Creates a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-502">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-502">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-503">Удостоверение определения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-503">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="1f2a6-504">Фильтр удостоверения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-504">The identity filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-505">Создает владелец экземпляра по умолчанию для рабочего процесса, используя указанное хранилище экземпляров, идентификатор определения, фильтр идентификатора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-506">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-506">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="1f2a6-507">Удостоверение определения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-507">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="1f2a6-508">Фильтр удостоверения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-508">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-509">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-509">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-510">Создает владелец экземпляра по умолчанию для рабочего процесса, используя указанное хранилище экземпляров, идентификатор определения, фильтр идентификатора и интервал истечения времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-511">Удаляет владелец экземпляра по умолчанию для рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-511">Deletes a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-512">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-512">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-513">Удаляет владелец экземпляра по умолчанию для рабочего процесса с указанным хранилищем экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-513">Deletes a default instance owner for the workflow with specified instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-514">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-514">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-515">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-515">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-516">Удаляет владелец экземпляра по умолчанию для рабочего процесса с указанным хранилищем экземпляров и интервалом времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval..</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-517">Асинхронная операция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-517">The asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-518">Ожидает завершения отложенной асинхронной операции отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-518">Waits for the pending asynchronous cancel operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-519">Этот метод определяет, была ли операция <xref:System.Activities.WorkflowApplication.BeginCancel%2A> успешной.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-520">Если вызывается до завершения операции отмены, то блокирует работу до завершения операции отмены.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-521">Этот метод завершает асинхронную операцию отмены, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-522">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-522">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1f2a6-523">Асинхронный результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-523">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-524">Ожидает завершения создания владельца экземпляра по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-524">Waits for the creation of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1f2a6-525">Асинхронный результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-525">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-526">Ожидает завершения удаления владельца экземпляра по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-526">Waits for the deletion of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1f2a6-527">Асинхронный результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-527">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-528">Ожидает завершения извлечения экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-528">Waits for the instance retrieval to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-529">Результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-529">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1f2a6-530">Асинхронный результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-530">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-531">Ожидает завершения асинхронной операции получения выполняемого экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-532">Результат операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-532">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-533">Асинхронная операция загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-533">The asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-534">Ожидает завершения отложенной асинхронной операции загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-534">Waits for the pending asynchronous load operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-535">Если этот метод вызывается до завершения операции загрузки, то он блокирует работу до завершения операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-536">Этот метод завершает асинхронную операцию загрузки, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-537">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-537">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-538">Ссылка на асинхронную операцию загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-538">A reference to the asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-539">Ожидает завершения асинхронной операции загрузки выполняемого экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-539">Waits for the asynchronous load runnable instance operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-540">Этот метод определяет, была ли операция <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> успешной.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-541">При вызове до завершения операции загрузки метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-542">Этот метод загружает рабочие процессы в асинхронном режиме, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-543">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-543">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-544">Асинхронная операция сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-544">The asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-545">Ожидает завершения отложенной асинхронной операции сохранения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-545">Waits for the pending asynchronous persist operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-546">Этот метод определяет, была ли операция <xref:System.Activities.WorkflowApplication.BeginPersist%2A> успешной.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-547">Если вызывается до завершения операции сохранения, то блокирует работу до завершения операции сохранения.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-548">Этот метод завершает асинхронную операцию сохранения, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-549">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-549">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-550">Ссылка на асинхронную операцию возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-550">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-551">Ожидает завершения операции возобновления закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-551">Waits for a bookmark resume operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-552">Одно из значений перечисления, которое указывает результаты операции возобновления закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-553">Этот метод определяет, была ли операция <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> успешной.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-554">При вызове до завершения операции загрузки метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-555">Этот метод возобновляет чтение с закладки в асинхронном режиме с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-556">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-556">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-557">Асинхронная операция запуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-557">The asynchronous run operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-558">Ожидает завершения отложенной асинхронной операции выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-558">Waits for the pending asynchronous run operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-559">Этот метод определяет, была ли операция <xref:System.Activities.WorkflowApplication.BeginRun%2A> успешной.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-560">Если вызывается до завершения операции возобновления, то происходит блокировка до завершения операции возобновления.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-561">Этот метод завершает асинхронную операцию выполнения, следуя асинхронному шаблону разработки <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-562">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-562">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-563">Асинхронная операция завершения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-563">The asynchronous terminate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-564">Ожидает выполнения отложенной асинхронной операции завершения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-564">Waits for the pending asynchronous terminate operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-565">Этот метод можно вызвать, чтобы определить, была ли успешной операция <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-566">Если вызывается до выполнения операции завершения, то блокирует работу до выполнения операции.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-567">Этот метод завершает асинхронную операцию <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-568">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-568">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="1f2a6-569">Асинхронная операция выгрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-569">The asynchronous unload operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-570">Ожидает завершения отложенной асинхронной операции выгрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-570">Waits for the pending asynchronous unload operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-571">Этот метод можно вызвать, чтобы определить, была ли успешной операция <xref:System.Activities.WorkflowApplication.BeginUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="1f2a6-572">Если вызывается до завершения операции выгрузки, то блокирует работу до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1f2a6-573">Этот метод завершает асинхронную операцию <xref:System.Activities.WorkflowApplication.BeginUnload%2A> с помощью асинхронного шаблона проектирования <xref:System.IAsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="1f2a6-574">Дополнительные сведения см. в разделе [асинхронного программирования Обзор](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-574">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-575">Возвращает коллекцию расширений для текущего экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-575">Gets the collection of extensions for the current workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-576">Коллекция объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-576">A collection of objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-577">Возвращает коллекцию закладок для экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-577">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-578">Возвращает коллекцию закладок для экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-578">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-579">Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-579">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-580">Если эта операция не завершается в течение 30 секунд, то вызывается исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-581">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-582">Рабочий процесс запускается, и, когда создается <xref:System.Activities.Bookmark>, а рабочий процесс переходит в состояние бездействия, вызывается метод <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="1f2a6-583">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-584">Интервал, в течение которого этот метод должен завершить работу до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-585">Возвращает коллекцию закладок для экземпляра рабочего процесса, используя указанный интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-586">Доступная только для чтения коллекция закладок для экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-586">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-587">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-588">Рабочий процесс запускается, и, когда создается <xref:System.Activities.Bookmark>, а рабочий процесс переходит в состояние бездействия, вызывается метод <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="1f2a6-589">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-590">Извлекает Экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-590">Retrieves the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-591">Идентификатор экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-591">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-592">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-592">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-593">Извлекает экземпляр рабочего процесса, используя указанный идентификатор экземпляра и хранилище экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-593">Retrieves the workflow instance using specified instance identifier and instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-594">Извлеченный экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-594">The retrieved instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-595">Идентификатор экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-595">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-596">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-596">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-597">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-597">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-598">Извлекает экземпляр рабочего процесса, используя указанный идентификатор экземпляра, хранилище экземпляров и срок ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-599">Ссылка на асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-599">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-600">Получает готовый к запуску экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-600">Retrieves the runnable instance of the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-601">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-601">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-602">Извлекает готовый к запуску экземпляр рабочего процесса с указанным хранилищем экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-602">Retrieves the runnable instance of the workflow with specified instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-603">Запускаемый экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-603">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="1f2a6-604">Доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-604">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-605">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-605">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-606">Извлекает готовый к запуску экземпляр рабочего процесса с указанным хранилищем экземпляров и интервалом времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-607">Запускаемый экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-607">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-608">Возвращает 128-разрядный идентификатор GUID для текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-609">128-разрядный идентификатор GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-609">A 128-bit GUID identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-610">В следующем примере создается экземпляр <xref:System.Activities.WorkflowApplication> и на консоль выдается значение <xref:System.Activities.WorkflowApplication.Id%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-611">Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда текущий экземпляр рабочего процесса становится бездействующим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-612">Действие, которое выполняется, когда экземпляр рабочего процесса становится бездействующим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-612">An action that executes when a workflow instance becomes idle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-613">В следующем примере кода проверяются аргументы <xref:System.Activities.WorkflowApplicationIdleEventArgs>, переданные в обработчик <xref:System.Activities.WorkflowApplication.Idle%2A> экземпляра <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="1f2a6-614">В этом примере рабочий процесс, переходящий в состояние бездействия, содержит одну закладку <xref:System.Activities.Bookmark> с именем `EnterGuess`, которая принадлежит действию с именем `ReadInt`.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="1f2a6-615">Данный пример кода основан [как: запуск рабочего процесса](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), который является частью [учебник по началу работы &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="1f2a6-616">Если на данном этапе изменить обработчик <xref:System.Activities.WorkflowApplication.Idle%2A> и включить код из этого примера, то будут выведены следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-617">Возвращает или задает объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-618">Хранилище экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-618">An instance store.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-619">В следующем примере создается экземпляр WorkflowApplication, а затем настраивается <xref:System.Activities.WorkflowApplication.InstanceStore%2A> с помощью <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="1f2a6-620">Данный пример кода является частью [как: Создание и запуск длительно выполняющегося рабочего процесса](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), который является частью [учебник по началу работы &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="1f2a6-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-621">Загружает экземпляр рабочего процесса из хранилища экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-621">Loads a workflow instance from an instance store.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-622">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-622">The instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-623">Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-623">Loads a workflow instance from an instance store with specified instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-624">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-624">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-625">Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-625">Loads the specified workflow instance into memory from an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-626">В следующем примере вызывается метод <xref:System.Activities.WorkflowApplication.Load%2A> для загрузки сохраненного экземпляра рабочего процесса из <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="1f2a6-627">Этот пример взят из `LoadAndCompleteInstance` метод в [сохранение приложения рабочего процесса](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-628">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-628">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="1f2a6-629">Сопоставление обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-629">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-630">Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром и сопоставлением обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-630">Loads a workflow instance from an instance store with specified instance and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-631">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-631">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-632">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-632">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-633">Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром и интервалом времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="1f2a6-634">Глобально уникальный 128-разрядный идентификатор экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-634">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-635">Интервал, в течение которого операция загрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-636">Загружает указанный экземпляр рабочего процесса в память из хранилища экземпляров, используя указанный интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-637">В следующем примере вызывается метод <xref:System.Activities.WorkflowApplication.Load%2A> для загрузки сохраненного экземпляра рабочего процесса из <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="1f2a6-638">Этот пример взят из `LoadAndCompleteInstance` метод в [сохранение приложения рабочего процесса](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f2a6-639">Экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-639">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="1f2a6-640">Сопоставление обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-640">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-641">Период времени, в течение которого операция начала загрузки должна быть завершена, прежде чем она будет отменена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-641">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-642">Загружает экземпляр рабочего процесса из хранилища экземпляров с указанным экземпляром, сопоставлением обновления и интервалом времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-643">Загружает экземпляр запускаемого рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-644">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-645">Загружает экземпляр запускаемого рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-646">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="1f2a6-647">По умолчанию операция загрузки должна завершаться за 30 секунд. В противном случае вызывается исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-648">Период времени, в течение которого операция загрузки должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-649">Загружает выполняемый экземпляр рабочего процесса из <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />, используя указанный интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-650">Запускаемый экземпляр является экземпляром, для которого истекло время таймера или блокировки экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-651">Возвращает или задает функцию <see cref="T:System.Func`2" />, которая вызывается, когда в текущем экземпляре рабочего процесса обнаруживается необработанное исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-652">Делегат, который вызывается, когда в экземпляре рабочего процесса обнаруживается необработанное исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-653">И <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>, и <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> определяют поведение среды выполнения, когда исключение не обработано рабочим процессом. Однако при этом для <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> предусмотрен параметр, который позволяет оставить приостановленный рабочий процесс в хранилище сохраняемости, а у <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> такого параметра нет.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="1f2a6-654">Причина этого заключается в том, что происходящее с приостановленным рабочим процессом зависит от хоста, а <xref:System.Activities.WorkflowApplication> — не зависит.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="1f2a6-655">Чтобы реализовать эту возможность с помощью <xref:System.Activities.WorkflowApplication>, создайте пользовательский <xref:System.Activities.Persistence.PersistenceParticipant> с этим поведением.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-656">В следующем примере кода вызывается рабочий процесс, в котором создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="1f2a6-657">Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="1f2a6-658">Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-659">Сохраняет экземпляр рабочего процесса в хранилище экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-659">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-660">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-661">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-662">Сохраняет экземпляр рабочего процесса в хранилище экземпляров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-662">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-663">Если операция сохранения не завершается в течение 30 секунд, то вызывается исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="1f2a6-664">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-665">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-666">В следующем примере вызывается метод <xref:System.Activities.WorkflowApplication.Persist%2A> для сохранения экземпляра рабочего процесса перед запуском рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="1f2a6-667">Данный пример является частью `StartAndUnloadInstance` метод в [сохранение приложения рабочего процесса](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-668">Период времени, в течение которого операция сохранения должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-669">Сохраняет экземпляр рабочего процесса в хранилище экземпляров с использованием указанного интервала времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-669">Persists a workflow instance to an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-670">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-671">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-672">В следующем примере вызывается метод <xref:System.Activities.WorkflowApplication.Persist%2A> для сохранения экземпляра рабочего процесса перед запуском рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="1f2a6-673">Этот пример взят из `StartAndUnloadInstance` метод в [сохранение приложения рабочего процесса](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-674">Возвращает или задает функцию <see cref="T:System.Activities.ActivityFunc" />, которая вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-674">Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-675">Функция <see cref="T:System.Activities.ActivityFunc" />, которая вызывается, когда текущий экземпляр рабочего процесса является бездействующим и может быть сохранен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-675">The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-676">Когда рабочий процесс приходит в состояние бездействия и может быть сохранен, вызываются методы <xref:System.Activities.WorkflowApplication.Idle%2A> и <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="1f2a6-677">Обработчик <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> возвращает одно из значений перечисления <xref:System.Activities.PersistableIdleAction>: <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist> или <xref:System.Activities.PersistableIdleAction.Unload>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-678">В следующем примере показан обработчик <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> и даются указания среде выполнения сохранить и разгрузить поток.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-679">Запускает операцию продолжения чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-679">Initiates an operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="1f2a6-680">Возобновляемая закладка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-680">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-681">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-682">Запускает операцию для возобновления указанной закладки, используя указанное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-682">Initiates an operation to resume the specified bookmark, using the specified value.</span>
          </span>
          <span data-ttu-id="1f2a6-683">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-684">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-684">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-685">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-686">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-687">Рабочий процесс запускается, и после создания <xref:System.Activities.Bookmark> и перехода рабочего процесса в состояние бездействия запрашивается действие пользователя и возобновляется закладка.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="1f2a6-688">Имя закладки, с которой будет продолжено чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-688">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-689">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-690">Запускает операцию для возобновления закладки с указанным именем, используя указанное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span>
          </span>
          <span data-ttu-id="1f2a6-691">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-692">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-692">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-693">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-694">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-695">Рабочий процесс запускается, и после создания <xref:System.Activities.Bookmark> и перехода рабочего процесса в состояние бездействия запрашивается действие пользователя и возобновляется закладка.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="1f2a6-696">Возобновляемая закладка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-696">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-697">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-698">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-698">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-699">Запускает операцию для возобновления указанной закладки, используя указанное значение и интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="1f2a6-700">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-701">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-701">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-702">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-703">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-704">Рабочий процесс запускается, и после создания <xref:System.Activities.Bookmark> и перехода рабочего процесса в состояние бездействия запрашивается действие пользователя и возобновляется закладка.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="1f2a6-705">Имя закладки, с которой будет продолжено чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-705">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f2a6-706">Объект, передаваемый в качестве параметра методу, вызываемому при возобновлении чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-707">Временной интервал, в течение которого чтение с закладки должно быть возобновлено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-707">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-708">Запускает операцию для возобновления закладки с указанным именем, используя указанное значение и интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="1f2a6-709">Закладка, с которой будет продолжено чтение, ранее создавалась действием в экземпляре рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f2a6-710">Результат операции возобновления чтения с закладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-710">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-711">Результат по закладке показывает, была ли операция возобновления успешной, либо она завершилась с ошибками.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-712">В следующем примере создается рабочий процесс, который использует действие `ReadLine`, создающее <xref:System.Activities.Bookmark>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="1f2a6-713">Рабочий процесс запускается, и после создания <xref:System.Activities.Bookmark> и перехода рабочего процесса в состояние бездействия запрашивается действие пользователя и возобновляется закладка.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-714">Начинает или возобновляет выполнение экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-714">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-715">Этот метод вызывается для инициализации выполнения вновь созданного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-716">Начинает или возобновляет выполнение экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-716">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-717">Этот метод вызывается для инициализации выполнения вновь созданного экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="1f2a6-718">Если операция выполнения не завершается в течение 30 секунд, то вызывается исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-719">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-720">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-721">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-722">Этот метод вызывается для инициализации выполнения вновь созданного экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-722">Call this method to initiate execution of a newly created workflow instance.</span>
          </span>
          <span data-ttu-id="1f2a6-723">Интервал, в течение которого операция выполнения должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-724">Начинает или возобновляет выполнение экземпляра рабочего процесса с использованием указанного интервала времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-725">Обратите внимание, что в отличие от <xref:System.Activities.WorkflowInvoker.Invoke%2A> этот метод завершается по истечении времени ожидания только в том случае, если рабочий процесс не запустился за указанное время, а не при необходимости завершения, когда истекло указанное время.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="1f2a6-726">Причина этого заключается в том, что метод <xref:System.Activities.WorkflowInvoker.Invoke%2A> выполняется синхронно (блокируя основной поток), тогда как метод <xref:System.Activities.WorkflowApplication.Run%2A> выполняется асинхронно, блокируя основной поток только на то время, которое требуется для запуска рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-727">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-728">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-729">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-730">Завершает экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-730">Terminates a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-731">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-731">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-732">Завершает экземпляр рабочего процесса, используя указанное исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-732">Terminates a workflow instance using the specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-733">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-734">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-735">По умолчанию операция <xref:System.Activities.WorkflowApplication.Terminate%2A> должна быть завершена в течение 30 секунд. В противном случае будет сформировано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-736">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-737">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-738">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="1f2a6-739">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-740">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-740">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-741">Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-741">Terminates a workflow instance using the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-742">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-743">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="1f2a6-744">По умолчанию операция <xref:System.Activities.WorkflowApplication.Terminate%2A> должна быть завершена в течение 30 секунд. В противном случае будет сформировано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-745">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-746">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-747">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="1f2a6-748">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-749">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-749">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-750">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-751">Завершает экземпляр рабочего процесса, используя указанное исключение и интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-751">Terminates a workflow instance using the specified exception and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-752">Этот метод планирует завершение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="1f2a6-753">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-754">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-755">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-756">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="1f2a6-757">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="1f2a6-758">Причина завершения работы экземпляра рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-758">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="1f2a6-759">Период времени, в течение которого операция <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> должна быть завершена, прежде чем она будет отменена с формированием исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-760">Завершает экземпляр рабочего процесса, используя указанное сообщение об ошибке и интервал времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-760">Terminates a workflow instance using the specified error message and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-761">Этот метод планирует завершение экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="1f2a6-762">Чтобы получить уведомление о завершении прерывания воспользуйтесь обработчиком <xref:System.Activities.WorkflowApplication.Completed%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-763">В следующем примере рабочий процесс размещается с помощью <xref:System.Activities.WorkflowApplication>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="1f2a6-764">Создается экземпляр <xref:System.Activities.WorkflowApplication> с использованием указанного определения рабочего процесса, обрабатываются нужные события жизненного цикла рабочего процесса и вызывается рабочий процесс методом <xref:System.Activities.WorkflowApplication.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="1f2a6-765">После запуска рабочего процесса вызывается метод <xref:System.Activities.WorkflowApplication.Terminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="1f2a6-766">После завершения рабочего процесса на консоль выводятся следующие данные.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-767">Сохраняет и выгружает экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-767">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-768">По умолчанию операция выгрузки должна быть завершена в течение 30 секунд, в противном случае будет вызвано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="1f2a6-769">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-770">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-771">Сохраняет и выгружает экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-771">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-772">По умолчанию операция выгрузки должна быть завершена в течение 30 секунд, в противном случае будет вызвано исключение <xref:System.TimeoutException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="1f2a6-773">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-774">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-775">Следующий пример кода является частью [действие NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="1f2a6-776">В этом примере рабочий процесс бездействует, а ведущее приложение ожидает ввода данных пользователем.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="1f2a6-777">Если пользователь выберет выгрузку процесса, вызывается метод <xref:System.Activities.WorkflowApplication.Unload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="1f2a6-778">В случае успешного выполнения этого метода рабочий процесс сохраняется и выгружается из памяти.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1f2a6-779">Интервал, в течение которого операция выгрузки должна завершиться до отмены операции и создания исключения <see cref="T:System.TimeoutException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f2a6-780">Сохраняет и выгружает экземпляр рабочего процесса с использованием указанного интервала времени ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-780">Persists and unloads a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f2a6-781">В экземпляре рабочего процесса, ранее загруженного из сохраняемости, для загрузки процесса используется тот же <xref:System.Runtime.DurableInstancing.InstanceStore>, что и для загрузки рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="1f2a6-782">Если рабочий процесс создан и еще не сохранен, то <xref:System.Activities.WorkflowApplication.InstanceStore%2A> должен быть настроен перед вызовом этого метода, в противном случае во время его вызова возникнет исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f2a6-783">Следующий пример кода является частью [действие NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) образца.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="1f2a6-784">В этом примере рабочий процесс бездействует, а ведущее приложение ожидает ввода данных пользователем.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="1f2a6-785">Если пользователь выберет выгрузку процесса, вызывается метод <xref:System.Activities.WorkflowApplication.Unload%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="1f2a6-786">В случае успешного выполнения этого метода рабочий процесс сохраняется и выгружается из памяти.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f2a6-787">Возвращает или задает действие <see cref="T:System.Action`1" />, которое вызывается, когда выгружается текущий рабочий процесс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f2a6-788">Действие, которое вызывается, когда выгружается экземпляр рабочего процесса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f2a6-788">An action that is invoked when a workflow instance is unloaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f2a6-789">В следующем примере кода проверяются аргументы <xref:System.Activities.WorkflowApplicationEventArgs>, переданные в обработчик <xref:System.Activities.WorkflowApplication.Unloaded%2A> экземпляра <xref:System.Activities.WorkflowApplication>, и выводится <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> для выгруженного рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1f2a6-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>