<Type Name="WorkflowApplicationUnhandledExceptionEventArgs" FullName="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
  <TypeSignature Language="C#" Value="public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationUnhandledExceptionEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationUnhandledExceptionEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationUnhandledExceptionEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f6be4-101">Предоставляет сведения о необработанном исключении, вызванном в экземпляре рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-101">Provides information about an unhandled exception that occurred in a workflow instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6be4-102">Если исключение возникает из действия и не обрабатывается, поведение по умолчанию состоит в завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-102">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="f6be4-103">Если присутствует обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>, в нем может переопределяться это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f6be4-103">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="f6be4-104">Обработчик предоставляет автору узла рабочего процесса возможность выполнить соответствующую обработку, например пользовательское протоколирование, прерывание, отмену или прекращение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-104">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6be4-105">В следующем примере кода вызывается рабочий процесс, в котором создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f6be4-105">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="f6be4-106">Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6be4-106">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="f6be4-107">Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.</span><span class="sxs-lookup"><span data-stu-id="f6be4-107">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionSource">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ExceptionSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ExceptionSource" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSource As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ExceptionSource { System::Activities::Activity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6be4-108">Возвращает действие, оказавшееся источником необработанного исключения.</span><span class="sxs-lookup"><span data-stu-id="f6be4-108">Gets the activity that is the source of the unhandled exception.</span></span></summary>
        <value><span data-ttu-id="f6be4-109">Действие.</span><span class="sxs-lookup"><span data-stu-id="f6be4-109">An activity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6be4-110">Если исключение возникает из действия и не обрабатывается, поведение по умолчанию состоит в завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-110">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="f6be4-111">Если присутствует обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>, в нем может переопределяться это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f6be4-111">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="f6be4-112">Обработчик предоставляет автору узла рабочего процесса возможность выполнить соответствующую обработку, например пользовательское протоколирование, прерывание, отмену или прекращение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-112">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6be4-113">В следующем примере кода вызывается рабочий процесс, в котором создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f6be4-113">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="f6be4-114">Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6be4-114">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="f6be4-115">Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.</span><span class="sxs-lookup"><span data-stu-id="f6be4-115">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionSourceInstanceId">
      <MemberSignature Language="C#" Value="public string ExceptionSourceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExceptionSourceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSourceInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExceptionSourceInstanceId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6be4-116">Возвращает уникальный идентификатор экземпляра действия, ставшего источником необработанного исключения.</span><span class="sxs-lookup"><span data-stu-id="f6be4-116">Gets the unique identifier of the activity instance that is the source of the unhandled exception.</span></span></summary>
        <value><span data-ttu-id="f6be4-117">Идентификатор экземпляра действия, ставшего источником необработанного исключения.</span><span class="sxs-lookup"><span data-stu-id="f6be4-117">An identifier of the activity instance that is the source of the unhandled exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6be4-118">Если исключение возникает из действия и не обрабатывается, поведение по умолчанию состоит в завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-118">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="f6be4-119">Если присутствует обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>, в нем может переопределяться это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f6be4-119">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="f6be4-120">Обработчик предоставляет автору узла рабочего процесса возможность выполнить соответствующую обработку, например пользовательское протоколирование, прерывание, отмену или прекращение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-120">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6be4-121">В следующем примере кода вызывается рабочий процесс, в котором создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f6be4-121">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="f6be4-122">Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6be4-122">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="f6be4-123">Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.</span><span class="sxs-lookup"><span data-stu-id="f6be4-123">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public Exception UnhandledException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception UnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ UnhandledException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6be4-124">Возвращает объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-124">Gets the <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span></span></summary>
        <value><span data-ttu-id="f6be4-125">Объект <see cref="T:System.Exception" />, не обработанный экземпляром рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-125">The <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6be4-126">Если исключение возникает из действия и не обрабатывается, поведение по умолчанию состоит в завершении экземпляра рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-126">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="f6be4-127">Если присутствует обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>, в нем может переопределяться это поведение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f6be4-127">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="f6be4-128">Обработчик предоставляет автору узла рабочего процесса возможность выполнить соответствующую обработку, например пользовательское протоколирование, прерывание, отмену или прекращение рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="f6be4-128">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6be4-129">В следующем примере кода вызывается рабочий процесс, в котором создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f6be4-129">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="f6be4-130">Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6be4-130">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="f6be4-131">Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.</span><span class="sxs-lookup"><span data-stu-id="f6be4-131">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>