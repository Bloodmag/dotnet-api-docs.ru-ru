<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="89758-101">Тип объектов для перечисления.</span><span class="sxs-lookup"><span data-stu-id="89758-101">The type of objects to enumerate.</span></span> <span data-ttu-id="89758-102"><c>C</c> необходимо реализовать <see cref="T:System.AddIn.Contract.IContract" /> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="89758-102"><c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="89758-103">Перечисляет элементы базовой коллекции объектов <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="89758-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89758-104">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="89758-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="89758-105">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="89758-106">В этой позиции, возвращаемое значение <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="89758-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="89758-107">Поэтому необходимо вызвать метод <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> , чтобы переместить перечислитель к первому элементу коллекции до вызова метода <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="89758-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="89758-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="89758-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="89758-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Задает значение, возвращаемое <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> к следующему элементу.</span><span class="sxs-lookup"><span data-stu-id="89758-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="89758-110">Если <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="89758-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="89758-111">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="89758-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="89758-112">Если последний вызов метода <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> возвращается `false`, возвращаемое значение <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="89758-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="89758-113">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="89758-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="89758-114">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="89758-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89758-115">Возвращает объект <see cref="T:System.AddIn.Contract.IContract" />, в коллекции на текущей позиции перечислителя.</span><span class="sxs-lookup"><span data-stu-id="89758-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="89758-116">Объект <see cref="T:System.AddIn.Contract.IContract" />, соответствующий текущей позиции перечислителя в коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89758-117">Возвращаемое значение <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> не определен ни в одном из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="89758-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="89758-118">Перечислитель располагается перед первым элементом в коллекции, сразу же после создания перечислителя или после <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="89758-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="89758-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Чтобы переместить перечислитель к первому элементу коллекции до вызова метода необходимо вызвать <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="89758-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="89758-120">Последнего вызова <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> возвращается `false`, который указывает конец коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="89758-121">Перечислитель становится недействительным из-за изменений в коллекции, такие как добавление, изменение или удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="89758-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="89758-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="89758-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="89758-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Задает значение, возвращаемое <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> к следующему элементу.</span><span class="sxs-lookup"><span data-stu-id="89758-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89758-124">Перемещает перечислитель к следующему элементу коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-124">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="89758-125">Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-125"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89758-126">После создания перечислителя или после <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> вызывается метод, перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="89758-127">Первый вызов <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> метод перемещает перечислитель к первому элементу коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="89758-128">Если <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="89758-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="89758-129">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> также возвращают `false` до <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="89758-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="89758-130">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="89758-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="89758-131">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> или <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="89758-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89758-132">После создания перечислителя семейство было изменено.</span><span class="sxs-lookup"><span data-stu-id="89758-132">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89758-133">Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="89758-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89758-134">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="89758-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="89758-135">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> или <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="89758-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89758-136">После создания перечислителя семейство было изменено.</span><span class="sxs-lookup"><span data-stu-id="89758-136">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>