<Type Name="QualificationDataItem" FullName="System.AddIn.Hosting.QualificationDataItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f195067fe3517ac69b9cb5094bb4b436022d2a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct QualificationDataItem" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit QualificationDataItem extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.QualificationDataItem" />
  <TypeSignature Language="VB.NET" Value="Public Structure QualificationDataItem" />
  <TypeSignature Language="C++ CLI" Value="public value class QualificationDataItem" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет информацию от разработчика сегмента конвейера для ее использования узелом.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый элемент данных квалификации состоит из пары имя/значение, примененное к сегменту конвейера с помощью <xref:System.AddIn.Pipeline.QualificationDataAttribute> атрибут для предоставления сведений, определяющее использование сегмента (например, рекомендуемый уровень изоляции сегмента). <xref:System.AddIn.Hosting.QualificationDataItem> Структура содержит пару одно имя значение и тип сегмента конвейера, она была применена к.  
  
 Используйте <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=nameWithType> на вложенный набор словарей, который содержит свойство <xref:System.AddIn.Hosting.QualificationDataItem> структуры для сегментов конвейера, связанные с <xref:System.AddIn.Hosting.AddInToken>.  
  
 Можно также с помощью <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=nameWithType> метод для получения перечислителя для <xref:System.AddIn.Hosting.QualificationDataItem> структуры сегментов конвейера, связанный с маркером или просто использовать `foreach` инструкции (`For Each` в Visual Basic `for each` в Visual C++) для считать маркер так же, как коллекция <xref:System.AddIn.Hosting.QualificationDataItem> структуры.  
  
   
  
## Examples  
 В следующем примере перечисляются данные квалификации для сегментов конвейера, связанных с каждым <xref:System.AddIn.Hosting.AddInToken> в коллекцию маркеров.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сравнения.</param>
        <summary>Определяет, идентичен ли указанный объект текущему элементу квалификационных данных.</summary>
        <returns>
          Значение <see langword="true" />, если <paramref name="obj" /> равен текущему экземпляру; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для данного элемента квалификационных данных.</summary>
        <returns>Хэш-код.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя элемента квалификационных данных.</summary>
        <value>Имя элемента квалификационных данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый элемент данных квалификации состоит из пары имя/значение, примененное к сегменту конвейера с помощью <xref:System.AddIn.Pipeline.QualificationDataAttribute> атрибут для предоставления сведений о потребителях надстройки. <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> Свойство возвращает имя. Используйте <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> свойство для получения значения.  
  
   
  
## Examples  
 В следующем примере перечисляются данные квалификации для сегментов конвейера, связанных с каждым <xref:System.AddIn.Hosting.AddInToken> в коллекцию маркеров. <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> Свойство используется для отображения имени каждого элемента.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Первый экземпляр <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> для сравнения.</param>
        <param name="item2">Второй экземпляр <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> для сравнения.</param>
        <summary>Определяет равенство двух структур <see cref="T:System.AddIn.Hosting.QualificationDataItem" />.</summary>
        <returns>
          Значение <see langword="true" />, если <paramref name="item1" /> и <paramref name="item2" /> равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Первый экземпляр <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> для сравнения.</param>
        <param name="item2">Второй экземпляр <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> для сравнения.</param>
        <summary>Определяет различие двух структур <see cref="T:System.AddIn.Hosting.QualificationDataItem" />.</summary>
        <returns>
          Значение <see langword="true" />, если <paramref name="item1" /> и <paramref name="item2" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInSegmentType Segment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.AddInSegmentType Segment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segment As AddInSegmentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInSegmentType Segment { System::AddIn::Hosting::AddInSegmentType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInSegmentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее сегмент конвейера, к которому был применен элемент квалификационных данных.</summary>
        <value>Разновидность сегмента конвейера, к которому был применен элемент данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При перечислении данных квалификации, это свойство можно используйте для идентификации квалификации данных, к которой принадлежит определенного сегмента конвейера.  
  
> [!NOTE]
>  Модель надстроек не использует данные квалификации, применяемый к представлению основного приложения надстройки. В результате при перечислении данных квалификации, не будут найдены любые элементы, <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> свойство <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn>.  
  
   
  
## Examples  
 В следующем примере перечисляются данные квалификации для сегментов конвейера, связанных с каждым <xref:System.AddIn.Hosting.AddInToken> в коллекцию маркеров. <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> Свойство используется для отображения тип сегмента.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение элемента квалификационных данных.</summary>
        <value>Значение элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый элемент данных квалификации состоит из пары имя/значение, примененное к сегменту конвейера с помощью <xref:System.AddIn.Pipeline.QualificationDataAttribute> атрибут для предоставления сведений о потребителях надстройки. <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> Свойство возвращает значение. Используйте <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> свойство для получения имени.  
  
   
  
## Examples  
 В следующем примере перечисляются данные квалификации для сегментов конвейера, связанных с каждым <xref:System.AddIn.Hosting.AddInToken> в коллекцию маркеров. <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> Свойство используется для отображения значения элемента.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>