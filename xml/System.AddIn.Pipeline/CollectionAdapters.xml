<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="574bd-101">Позволяет передавать коллекции между надстройкой и приложением ее сайта.</span><span class="sxs-lookup"><span data-stu-id="574bd-101">Enables collections to be passed between an add-in and its host application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="574bd-102">Этот класс предоставляет методы, позволяющие <xref:System.Collections.Generic.IList%601> коллекции должно быть преобразовано в <xref:System.AddIn.Contract.IListContract%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="574bd-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="574bd-103"><xref:System.AddIn.Contract.IListContract%601> Сбора передаются через границу изоляции и преобразовать обратно в <xref:System.Collections.Generic.IList%601> коллекции, можно использовать надстройку или ведущего приложения.</span><span class="sxs-lookup"><span data-stu-id="574bd-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="574bd-104">Объекты коллекций должны быть удаленными.</span><span class="sxs-lookup"><span data-stu-id="574bd-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="574bd-105">Дополнительные сведения о типах объектов, которые можно передать см. в разделе [контракты, представления и адаптеры](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span><span class="sxs-lookup"><span data-stu-id="574bd-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="574bd-106">Тип объектов, содержащихся в списке.</span><span class="sxs-lookup"><span data-stu-id="574bd-106">The type of objects that are contained in the list.</span></span> <span data-ttu-id="574bd-107"><c>T</c> должен быть сериализуемым.</span><span class="sxs-lookup"><span data-stu-id="574bd-107"><c>T</c> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="574bd-108">Коллекция из другой стороны конвейера.</span><span class="sxs-lookup"><span data-stu-id="574bd-108">The collection from the other side of the pipeline.</span></span></param>
        <summary><span data-ttu-id="574bd-109">Преобразовывает выбранную коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" /> в коллекцию <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="574bd-109">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="574bd-110">Преобразованная коллекция.</span><span class="sxs-lookup"><span data-stu-id="574bd-110">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="574bd-111">Ведущее приложение или надстройку можно использовать возвращаемый <xref:System.Collections.Generic.IList%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="574bd-111">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="574bd-112"><xref:System.Collections.Generic.IList%601> Получают токен срока существования для удаленного <xref:System.AddIn.Contract.IListContract%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="574bd-112">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="574bd-113">Эта перегрузка метода следует использовать только тогда, когда содержимое <xref:System.AddIn.Contract.IListContract%601> являются сериализуемыми типами, которые можно передать напрямую надстройки и узла (а не типы, которые должны быть адаптированы представления).</span><span class="sxs-lookup"><span data-stu-id="574bd-113">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="574bd-114">В следующем примере реализуется сегмент адаптера узла конвейера, как описано [Пошаговое руководство: передача коллекций между узлами и надстройки](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). Пример использует пользовательский `ProcessBooks` метода, используя <xref:System.AddIn.Contract.IListContract%601> коллекции, переданных из надстройки и преобразования его в <xref:System.Collections.Generic.IList%601> коллекции, который можно затем использовать ведущего приложения.</span><span class="sxs-lookup"><span data-stu-id="574bd-114">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract"><span data-ttu-id="574bd-115">Тип, который определяет контракт для передачи объектов типа <c>TView</c> через границы изоляции.</span><span class="sxs-lookup"><span data-stu-id="574bd-115">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span></span></typeparam>
        <typeparam name="TView"><span data-ttu-id="574bd-116">Тип, определяющий вид объектов в списке.</span><span class="sxs-lookup"><span data-stu-id="574bd-116">The type that defines the view of the objects in the list.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="574bd-117">Коллекция для передачи другой стороне конвейера.</span><span class="sxs-lookup"><span data-stu-id="574bd-117">The collection to pass to the other side of the pipeline.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="574bd-118">Преобразователь, адаптирующий данные типа, определенного в контракте к типу, ожидаемому в представлении.</span><span class="sxs-lookup"><span data-stu-id="574bd-118">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="574bd-119">Преобразователь, адаптирующий данные типа, определенные в представлении к типу, ожидаемому в контракте.</span><span class="sxs-lookup"><span data-stu-id="574bd-119">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <summary><span data-ttu-id="574bd-120">Преобразует выбранную коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" /> в коллекцию <see cref="T:System.Collections.Generic.IList`1" /> с использованием адаптеров преобразователя.</span><span class="sxs-lookup"><span data-stu-id="574bd-120">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="574bd-121">Преобразованная коллекция.</span><span class="sxs-lookup"><span data-stu-id="574bd-121">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="574bd-122">Используйте перегрузку этого метода для <xref:System.AddIn.Contract.IListContract%601> коллекции, которые содержат типы, которые должны быть адаптированы перед их можно было передавать надстройки или узла (а не простые сериализуемые типы, которые могут быть переданы непосредственно).</span><span class="sxs-lookup"><span data-stu-id="574bd-122">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="574bd-123">Ведущее приложение или надстройку можно использовать возвращаемый <xref:System.Collections.Generic.IList%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="574bd-123">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="574bd-124">Он будет иметь маркер времени жизни для удаленного <xref:System.AddIn.Contract.IListContract%601>.</span><span class="sxs-lookup"><span data-stu-id="574bd-124">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="574bd-125">Тип объектов, содержащихся в списке.</span><span class="sxs-lookup"><span data-stu-id="574bd-125">The type of objects that are contained in the list.</span></span> <span data-ttu-id="574bd-126"><c>T</c> должен быть сериализуемым.</span><span class="sxs-lookup"><span data-stu-id="574bd-126"><c>T</c> must be serializable.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="574bd-127">Коллекция для преобразования.</span><span class="sxs-lookup"><span data-stu-id="574bd-127">The collection to convert.</span></span></param>
        <summary><span data-ttu-id="574bd-128">Преобразовывает выбранную коллекцию <see cref="T:System.Collections.Generic.IList`1" /> в коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="574bd-128">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="574bd-129">Преобразованная коллекция.</span><span class="sxs-lookup"><span data-stu-id="574bd-129">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="574bd-130"><xref:System.AddIn.Contract.IListContract%601> Коллекции может быть маршалирован через границы изоляции между надстройкой и приложением узла.</span><span class="sxs-lookup"><span data-stu-id="574bd-130">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="574bd-131">Эта перегрузка метода следует использовать только тогда, когда содержимое <xref:System.Collections.Generic.IList%601> являются сериализуемыми типами, которые могут передаваться непосредственно в контракт (а не типы, которые должны быть адаптированы).</span><span class="sxs-lookup"><span data-stu-id="574bd-131">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="574bd-132">В следующем примере реализуется класс, определяющий сегмент конвейера адаптер надстройки.</span><span class="sxs-lookup"><span data-stu-id="574bd-132">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="574bd-133">Он использует пользовательский `ProcessBooks` метода, используя <xref:System.Collections.Generic.IList%601> коллекции, переданных из сегмента представления надстройки и преобразования его в <xref:System.AddIn.Contract.IListContract%601> коллекцию, которая может быть маршалирован через границу изоляции для узла.</span><span class="sxs-lookup"><span data-stu-id="574bd-133">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView"><span data-ttu-id="574bd-134">Тип, определяющий вид объектов в списке.</span><span class="sxs-lookup"><span data-stu-id="574bd-134">The type that defines the view of the objects in the list.</span></span></typeparam>
        <typeparam name="TContract"><span data-ttu-id="574bd-135">Тип, который определяет контракт для передачи объектов типа <c>TView</c> через границы изоляции.</span><span class="sxs-lookup"><span data-stu-id="574bd-135">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="574bd-136">Коллекция для преобразования.</span><span class="sxs-lookup"><span data-stu-id="574bd-136">The collection to convert.</span></span></param>
        <param name="viewContractAdapter"><span data-ttu-id="574bd-137">Преобразователь, адаптирующий данные типа, определенные в представлении к типу, ожидаемому в контракте.</span><span class="sxs-lookup"><span data-stu-id="574bd-137">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span></span></param>
        <param name="contractViewAdapter"><span data-ttu-id="574bd-138">Преобразователь, адаптирующий данные типа, определенного в контракте к типу, ожидаемому в представлении.</span><span class="sxs-lookup"><span data-stu-id="574bd-138">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span></span></param>
        <summary><span data-ttu-id="574bd-139">Преобразует выбранную коллекцию <see cref="T:System.Collections.Generic.IList`1" /> в коллекцию <see cref="T:System.AddIn.Contract.IListContract`1" /> с использованием адаптеров преобразователя.</span><span class="sxs-lookup"><span data-stu-id="574bd-139">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span></span></summary>
        <returns><span data-ttu-id="574bd-140">Преобразованная коллекция.</span><span class="sxs-lookup"><span data-stu-id="574bd-140">The converted collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="574bd-141">Используйте перегрузку этого метода для <xref:System.Collections.Generic.IList%601> коллекции, которые содержат типы, которые должны быть адаптированы перед их можно передать в контракт (а не простые сериализуемые типы, которые могут быть переданы непосредственно).</span><span class="sxs-lookup"><span data-stu-id="574bd-141">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="574bd-142"><xref:System.AddIn.Contract.IListContract%601> Коллекции может быть маршалирован через границы изоляции между надстройки и главного приложения.</span><span class="sxs-lookup"><span data-stu-id="574bd-142">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>