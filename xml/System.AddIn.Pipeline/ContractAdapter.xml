<Type Name="ContractAdapter" FullName="System.AddIn.Pipeline.ContractAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41d4782b82dcc729dd9b148472be19b45036f486" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30358668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ContractAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContractAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractAdapter abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы для совместного доступа к надстройкам их реадаптирования.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс можно использовать для совместного использования надстройки с другого узла, у которого нет такого же конвейера для этой надстройки (особенно, другой узел, у которого нет же хост представление надстройки).  
  
 Если необходимо адаптировать активированной надстройки из его представления узла в контракте, используйте <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> метод.  
  
 Если имеется экземпляр контракта и необходимо преобразовать его в представлении узлов, используйте <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> метод.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="ContractToViewAdapter&lt;TView&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает серверное представление надстройки, если в указанном месте найден подходящий адаптер сайта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, valuetype System.AddIn.Hosting.PipelineStoreLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, location As PipelineStoreLocation) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::AddIn::Hosting::PipelineStoreLocation location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="location" Type="System.AddIn.Hosting.PipelineStoreLocation" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Тип, определяющий серверное представление надстройки.</typeparam>
        <param name="contract">Дескриптор к контракту, используемый надстройкой, предполагаемой для совместного доступа.</param>
        <param name="location">База приложения сайта.</param>
        <summary>Получает серверное представление надстройки, если найден подходящий адаптер сайта в месте, указанном значением из перечисления <see cref="T:System.AddIn.Hosting.PipelineStoreLocation" />.</summary>
        <returns>Серверное представление надстройки, находящейся в совместном доступе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае сущность имеет экземпляр контракта и стремится адаптировать его к конкретному представлению. Используйте этот метод для запроса системы для поиска и создании адаптера для преобразования в это представление.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="location" /> недопустим.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContractToViewAdapter&lt;TView&gt;">
      <MemberSignature Language="C#" Value="public static TView ContractToViewAdapter&lt;TView&gt; (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TView ContractToViewAdapter&lt;TView&gt;(class System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter(Of TView) (contract As ContractHandle, pipelineRoot As String) As TView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView&gt;&#xA; static TView ContractToViewAdapter(System::AddIn::Pipeline::ContractHandle ^ contract, System::String ^ pipelineRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Pipeline.ContractHandle" />
        <Parameter Name="pipelineRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TView">Тип, определяющий серверное представление надстройки.</typeparam>
        <param name="contract">Дескриптор к контракту, используемый надстройкой, предполагаемой для совместного доступа.</param>
        <param name="pipelineRoot">Путь к хранилищу надстройки.</param>
        <summary>Получает серверное представление надстройки, если найден подходящий адаптер сайта в месте, указанном путем.</summary>
        <returns>Серверное представление надстройки, находящейся в совместном доступе.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае сущность имеет экземпляр контракта и стремится адаптировать его к конкретному представлению. Используйте этот метод для запроса системы для поиска и создании адаптера для преобразования в это представление.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Pipeline.ContractHandle ViewToContractAdapter(object view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (view As Object) As ContractHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Pipeline::ContractHandle ^ ViewToContractAdapter(System::Object ^ view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Pipeline.ContractHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="view">Серверное представление надстройки активированное системой из текущего приложения домена.</param>
        <summary>Возвращает дескриптор контракту для предоставленного серверного представления надстройки.</summary>
        <returns>Дескриптор контракта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом случае исходная сущность (узел) имеет надстройку, если оно доступно для конечной сущности (другой узел).  
  
 Используйте этот метод для получения дескриптора к контракту, созданному для исходной сущности системой надстройки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="view" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>