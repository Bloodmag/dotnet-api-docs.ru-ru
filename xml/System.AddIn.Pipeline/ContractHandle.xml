<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContractHandle.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Provides methods that control the lifetime of an add-in.</source>
          <target state="translated">Предоставляет методы, для контроля времени жизни надстройки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</source>
          <target state="translated">Так как модель надстроек предоставляет возможность для надстроек для взаимодействия между доменами приложения и между процессами, нельзя полагаться на сборщику мусора освободить их.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</source>
          <target state="translated">Этот класс предоставляет механизм подсчета ссылок для надстройки с получением маркера времени жизни этого контракта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When a <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object is constructed, it calls the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;</ph> method on the contract that is passed to the constructor.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> объект создан, он вызывает метод <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;</ph> метод контракта, который передается в конструктор.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object is disposed or finalized, it calls the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;</ph> method on the contract, which removes its hold on the contract.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> объект удален или завершает работу, он вызывает метод <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;</ph> метод на контракт, который удаляет его блокировку контракт.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Adapters implement the contract.</source>
          <target state="translated">Адаптеры реализуют контракт.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> Класс предназначен для использования в адаптере контракт представление для помощи разработчикам конвейера управления временем жизни контракт, который адаптируется.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</source>
          <target state="translated">Как правило экземпляр этого класса создается во время создания класса адаптера и хранится в поле экземпляра адаптера.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When the adapter class is garbage-collected, the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object will also be collected and the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object will revoke the lifetime token on the contract.</source>
          <target state="translated">Когда класс адаптера сбора мусора <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> объектов также будут собираться и <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> объекта будет отменить маркер времени жизни на контракт.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>It is recommended that your view-to-contract adapters inherit from the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractBase&gt;</ph> class.</source>
          <target state="translated">Рекомендуется, адаптеры представление контракт наследовать от <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractBase&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>You can then use a default implementation for the members of <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>, which means you need to implement only the members of your specific contract.</source>
          <target state="translated">Затем можно использовать реализацию по умолчанию для членов <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>, что означает, что вам необходимо реализовать члены конкретного контракта.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</source>
          <target state="translated">Приведенный ниже показано, как задать дескриптор маркера жизненного цикла в адаптере контракт представление на стороне надстройки конвейера.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source>The contract to use in the pipeline.</source>
          <target state="translated">Контракт для использования в конвейере.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="contract" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>The application domain to check.</source>
          <target state="translated">Домен приложения для проверки.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>Gets the instance of the add-in-side adapter when the application domain was created.</source>
          <target state="translated">Возвращает экземпляр адаптера надстройки при создании домена приложения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> object that represents the owner of the application domain.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>, представляющий владельца домена приложения.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>The add-in-side adapters are typed as <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</source>
          <target state="translated">Адаптеры на стороне надстройки вводятся в виде <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>If the application domain was previously created by a user, there is no owner.</source>
          <target state="translated">Если домен приложения был создан ранее пользователем, нет владельца.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="domain" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.AddIn.Pipeline.ContractHandle.Contract">
          <source>Gets the contract used by a pipeline.</source>
          <target state="translated">Возвращает контракт, используемый конвейером.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Pipeline.ContractHandle.Contract">
          <source>The contract, which is derived from <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</source>
          <target state="translated">Контракт, полученный из <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>The contract to check.</source>
          <target state="translated">Контракт для проверки.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>The application domain to check.</source>
          <target state="translated">Домен приложения для проверки.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>Determines whether an application domain is owned by the specified contract.</source>
          <target state="translated">Определяет владеет ли выбранный контракт доменом приложения.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the contract owns the application domain; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>если контракт владеет доменом приложения; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="contract" /&gt;</ph> или <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Revokes the lifetime token on a contract.</source>
          <target state="translated">Отменяет маркер времени жизни на контракте.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose">
          <source>Revokes the lifetime token on a contract, regardless of input.</source>
          <target state="translated">Отменяет маркер времени жизни на контракте, без учета ввода.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)">
          <source>Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</source>
          <target state="translated">Отменяет маркер времени жизни на контракте без учета ввода и дополнительно высвобождает управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>Releases the resources associated with the <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph> instance.</source>
          <target state="translated">Освобождает ресурсы, связанные с экземпляром <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Этот метод переопределяет метод <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Код приложения не должен вызывать этот метод; Объект <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A&gt;</ph> метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>When called by the garbage collector, this method calls the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;</ph> method.</source>
          <target state="translated">При вызове сборщиком мусора, этот метод вызывает метод <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;</ph> метод.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>