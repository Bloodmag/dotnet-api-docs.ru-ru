<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cd6391acbb63e22a350d0f119e03fa9818cfdba" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0bad6-101">Предоставляет базовый класс для реализаций <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-101">Provides a base class for <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
      </span>
      <span data-ttu-id="0bad6-102">Это абстрактный класс.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-103">Объект <xref:System.CodeDom.Compiler.CodeDomProvider> можно использовать для создания и извлечения экземпляров генераторов кода и компиляторов.</span><span class="sxs-lookup"><span data-stu-id="0bad6-103">A <xref:System.CodeDom.Compiler.CodeDomProvider> can be used to create and retrieve instances of code generators and code compilers.</span></span> <span data-ttu-id="0bad6-104">Генераторы кода применяются для создания кода на определенном языке, а компиляторы кода используются для компиляции кода в сборки.</span><span class="sxs-lookup"><span data-stu-id="0bad6-104">Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-105">В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], методы были доступны в генератор кода и компилятора кода, доступны непосредственно из поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-105">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the methods made available in the code generator and code compiler are available directly from the code provider.</span></span> <span data-ttu-id="0bad6-106">Необходимо вызвать <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> или <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> для доступа к методы и эти методы помечены как устаревшие.</span><span class="sxs-lookup"><span data-stu-id="0bad6-106">You do not need to call <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> or <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> to access the methods, and those methods are marked as obsolete.</span></span> <span data-ttu-id="0bad6-107">Это относится к ранее существующим и новым реализациям поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-107">This applies to preexisting as well as new code provider implementations.</span></span>  
  
 <span data-ttu-id="0bad6-108">Объект <xref:System.CodeDom.Compiler.CodeDomProvider> реализации обычно предоставляет код Создание и/или код компиляции интерфейсы для создания кода и управления компиляцией для отдельного языка программирования.</span><span class="sxs-lookup"><span data-stu-id="0bad6-108">A <xref:System.CodeDom.Compiler.CodeDomProvider> implementation typically provides code generation and/or code compilation interfaces for generating code and managing compilation for a single programming language.</span></span> <span data-ttu-id="0bad6-109">Некоторые языки поддерживаются <xref:System.CodeDom.Compiler.CodeDomProvider> реализации, которые поставляются вместе с [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0bad6-109">Several languages are supported by <xref:System.CodeDom.Compiler.CodeDomProvider> implementations that ship with the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)].</span></span> <span data-ttu-id="0bad6-110">Эти языки включают C#, Visual Basic, C++ и JScript.</span><span class="sxs-lookup"><span data-stu-id="0bad6-110">These languages include C#, Visual Basic, C++, and JScript.</span></span> <span data-ttu-id="0bad6-111">Разработчики и поставщики компиляторов можно реализовать <xref:System.CodeDom.Compiler.ICodeGenerator> и <xref:System.CodeDom.Compiler.ICodeCompiler> интерфейсы и предоставить <xref:System.CodeDom.Compiler.CodeDomProvider> , поддерживать CodeDOM в других языках программирования.</span><span class="sxs-lookup"><span data-stu-id="0bad6-111">Developers or compiler vendors can implement the <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> interfaces and provide a <xref:System.CodeDom.Compiler.CodeDomProvider> that extends CodeDOM support to other programming languages.</span></span>  
  
 <span data-ttu-id="0bad6-112">[ &lt;System.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в конфигурации компьютера (Machine.config) файл предоставляет механизм для разработчиков и поставщиками компиляторов добавить параметры конфигурации для дополнительных <xref:System.CodeDom.Compiler.CodeDomProvider>реализации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-112">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) provides a mechanism for developers and compiler vendors to add configuration settings for additional <xref:System.CodeDom.Compiler.CodeDomProvider> implementations.</span></span>  
  
 <span data-ttu-id="0bad6-113"><xref:System.CodeDom.Compiler.CodeDomProvider> Класс предоставляет статические методы для обнаружения и перечислить <xref:System.CodeDom.Compiler.CodeDomProvider> реализации на компьютере.</span><span class="sxs-lookup"><span data-stu-id="0bad6-113">The <xref:System.CodeDom.Compiler.CodeDomProvider> class provides static methods to discover and enumerate the <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="0bad6-114"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> Метод возвращает параметры для всех <xref:System.CodeDom.Compiler.CodeDomProvider> реализации на компьютере.</span><span class="sxs-lookup"><span data-stu-id="0bad6-114">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method returns the settings for all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer.</span></span> <span data-ttu-id="0bad6-115"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Метод возвращает параметры для конкретного <xref:System.CodeDom.Compiler.CodeDomProvider> реализации, основанной на имя языка программирования.</span><span class="sxs-lookup"><span data-stu-id="0bad6-115">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method returns the settings for a specific <xref:System.CodeDom.Compiler.CodeDomProvider> implementation, based on the programming language name.</span></span> <span data-ttu-id="0bad6-116"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Метод возвращает экземпляр класса <xref:System.CodeDom.Compiler.CodeDomProvider> реализации для конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-116">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="0bad6-117">Дополнительные сведения о параметрах поставщика языка в файле конфигурации см. в разделе [компилятора и схема параметров поставщиков языков](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span><span class="sxs-lookup"><span data-stu-id="0bad6-117">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](http://msdn.microsoft.com/library/c020b139-8699-4f0d-9ac9-70d0c5b2a8c8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-118">Этот класс выполняет запрос ссылки и запрос наследования на уровне класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-118">This class makes a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="0bad6-119">Объект <xref:System.Security.SecurityException> создается, если непосредственный вызывающий объект или производного класса не имеет разрешения полного доверия.</span><span class="sxs-lookup"><span data-stu-id="0bad6-119">A <xref:System.Security.SecurityException> is thrown if either the immediate caller or the derived class does not have full trust permission.</span></span> <span data-ttu-id="0bad6-120">Дополнительные сведения о требованиях безопасности см. в разделе [требования связывания](~/docs/framework/misc/link-demands.md) и [требования к наследованию](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="0bad6-120">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-121">В следующем примере программа можно создавать и компиляцию исходного кода на основе модели CodeDOM программы, которая выводит «Hello World» с помощью <xref:System.Console> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-121">The following example program can generate and compile source code based on a CodeDOM model of a program that prints "Hello World" using the <xref:System.Console> class.</span></span> <span data-ttu-id="0bad6-122">Предоставляется пользовательский интерфейс Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="0bad6-122">A Windows Forms user interface is provided.</span></span> <span data-ttu-id="0bad6-123">Пользователь может выбрать целевой язык из нескольких диапазонов программирования: C#, Visual Basic и JScript.</span><span class="sxs-lookup"><span data-stu-id="0bad6-123">The user can select the target programming language from several selections: C#, Visual Basic, and JScript.</span></span>  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <span data-ttu-id="0bad6-124">Для полного доверия для непосредственного вызывающего.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-124">for full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="0bad6-125">Этот класс не может использоваться частично доверенным кодом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-125">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="0bad6-126">для полного доверия для разработчиков производных классов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-126">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="0bad6-127">Этот класс не наследуется частично доверенным кодом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bad6-127">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="0bad6-128">В .NET Framework версий 1.0 и 1.1 поставщики кода состоят из реализаций <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, и <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bad6-128">In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</span>
        </span>
        <span data-ttu-id="0bad6-129">В [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, и <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> методы считаются устаревшими и методах <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> и <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> доступны непосредственно в <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> класса.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bad6-129">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, and <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> methods are obsolete, and the methods of <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> and <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> are directly available in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
        </span>
        <span data-ttu-id="0bad6-130">Необходимо переопределить эти методы в реализации поставщика кода и не вызывать базовые методы.</span>
        <span class="sxs-lookup">
          <span data-stu-id="0bad6-130">You should override those methods in your code provider implementation and not call the base methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-131">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-131">Initializes a new instance of the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-132">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-132">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-133">Этот класс не может использоваться частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-133">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0bad6-134">Объект <see cref="T:System.CodeDom.Compiler.CompilerParameters" />, задающий параметры компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-134">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="compilationUnits">
          <span data-ttu-id="0bad6-135">Массив типа <see cref="T:System.CodeDom.CodeCompileUnit" />, указывающий код для компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-135">An array of type <see cref="T:System.CodeDom.CodeCompileUnit" /> that indicates the code to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-136">Компилирует сборку на основе деревьев <see cref="N:System.CodeDom" />, содержащихся в указанном массиве объектов <see cref="T:System.CodeDom.CodeCompileUnit" />, используя указанные параметры компилятора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-136">Compiles an assembly based on the <see cref="N:System.CodeDom" /> trees contained in the specified array of <see cref="T:System.CodeDom.CodeCompileUnit" /> objects, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-137">Объект <see cref="T:System.CodeDom.Compiler.CompilerResults" />, показывающий результаты компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-137">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-138">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeCompiler> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-138">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-139">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-139">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-140">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeCompiler> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-140">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-141">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-141">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-142">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-142">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-143">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> метод для обеспечения совместимости с существующие ранее поставщиков, использующих компиляторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-143">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0bad6-144">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-144">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-145">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует компилятора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-145">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="fileNames" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0bad6-146">Объект <see cref="T:System.CodeDom.Compiler.CompilerParameters" />, задающий параметры компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-146">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the settings for the compilation.</span>
          </span>
        </param>
        <param name="fileNames">
          <span data-ttu-id="0bad6-147">Массив имен файлов для компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-147">An array of the names of the files to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-148">Компилирует сборку из исходного кода, содержащегося в указанных файлах, используя указанные параметры компилятора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-148">Compiles an assembly from the source code contained in the specified files, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-149">Объект <see cref="T:System.CodeDom.Compiler.CompilerResults" />, показывающий результаты компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-149">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-150">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeCompiler> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-150">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-151">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-151">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-152">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeCompiler> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-152">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-153">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-153">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-154">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-154">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-155">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> метод для обеспечения совместимости с существующие ранее поставщиков, использующих компиляторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-155">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0bad6-156">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-156">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-157">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует компилятора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-157">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" />
        <Parameter Name="sources" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="0bad6-158">Объект <see cref="T:System.CodeDom.Compiler.CompilerParameters" />, задающий параметры компилятора для компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-158">A <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object that indicates the compiler settings for this compilation.</span>
          </span>
        </param>
        <param name="sources">
          <span data-ttu-id="0bad6-159">Массив строк исходного кода для компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-159">An array of source code strings to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-160">Компилирует сборку из указанного массива строк, содержащего исходный код, используя указанные параметры компилятора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-160">Compiles an assembly from the specified array of strings containing source code, using the specified compiler settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-161">Объект <see cref="T:System.CodeDom.Compiler.CompilerResults" />, показывающий результаты компиляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-161">A <see cref="T:System.CodeDom.Compiler.CompilerResults" /> object that indicates the results of compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-162">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeCompiler> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-162">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-163">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-163">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-164">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeCompiler> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-164">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeCompiler> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-165">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-165">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-166">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-166">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-167">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> метод для обеспечения совместимости с существующие ранее поставщиков, использующих компиляторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-167">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> method for compatibility with preexisting providers that use code compilers.</span>
            </span>
            <span data-ttu-id="0bad6-168">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-168">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-169">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует компилятора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-169">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code compiler.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-170">При переопределении в производном классе создает новый компилятор кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-170">When overridden in a derived class, creates a new code compiler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-171">Объект <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />, который может использоваться для компиляции представлений исходного кода на основе <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-171">An <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> that can be used for compilation of <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-172">Этот метод является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0bad6-172">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="0bad6-173">Взамен рекомендуется использовать заключается в вызове <xref:System.CodeDom.Compiler.ICodeCompiler> методы, которые доступны непосредственно в код поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-173">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeCompiler> methods that are directly available in the code provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-174">В [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], следует реализовать <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> членов в <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> класса и исключение <see cref="T:System.NotSupportedException" /> при вызове этого метода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-174">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0bad6-175">Строка, для которой создается Escape-идентификатор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-175">The string for which to create an escaped identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-176">Создает Escape-идентификатор для заданного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-176">Creates an escaped identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-177">Escape-идентификатор для данного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-177">The escaped identifier for the value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> тесты ли идентификатор конфликтует с любым зарезервированных слов языка и если да, возвращает соответствующее имя с форматированием кода переключения режима для конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-178"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with any reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="0bad6-179">Это называется экранированный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="0bad6-179">This is referred to an escaped identifier.</span></span> <span data-ttu-id="0bad6-180">Экранированный идентификатор содержит тот же `value` , но форматирование escape кода добавил отличать его от ключевого слова.</span><span class="sxs-lookup"><span data-stu-id="0bad6-180">The escaped identifier contains the same `value` but has escape-code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="0bad6-181">Двух примерах реализации `value` с «@» или скобок `value` с «[» и «]».</span><span class="sxs-lookup"><span data-stu-id="0bad6-181">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-182">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-182">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-183">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-183">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-184">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-184">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-185">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-185">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-186">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-186">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-187">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-187">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-188">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-188">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-189">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-189">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-190">При переопределении в производном классе создает новый генератор кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-190">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-191">При переопределении в производном классе создает новый генератор кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-191">When overridden in a derived class, creates a new code generator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-192">Объект <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, который может использоваться для генерации представлений исходного кода на основе <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-192">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-193">Этот метод является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0bad6-193">This method is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)].</span></span> <span data-ttu-id="0bad6-194">Взамен рекомендуется использовать заключается в вызове <xref:System.CodeDom.Compiler.ICodeGenerator> методы, которые доступны непосредственно в <xref:System.CodeDom.Compiler.CodeDomProvider> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-194">The recommended alternative is to call the <xref:System.CodeDom.Compiler.ICodeGenerator> methods that are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-195">В [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], следует реализовать <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> членов в <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> класса и исключение <see cref="T:System.NotSupportedException" /> при вызове этого метода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-195">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], you should implement the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> members in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class and throw a <see cref="T:System.NotSupportedException" /> when this method is called.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="0bad6-196">Объект <see cref="T:System.IO.TextWriter" />, который следует использовать для вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-196">A <see cref="T:System.IO.TextWriter" /> to use to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-197">При переопределении в производном классе создает новый генератор кода, используя для вывода указанный объект <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-197">When overridden in a derived class, creates a new code generator using the specified <see cref="T:System.IO.TextWriter" /> for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-198">Объект <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, который может использоваться для генерации представлений исходного кода на основе <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-198">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-199">Этот метод использует указанный <xref:System.IO.TextWriter> для выходных данных.</span><span class="sxs-lookup"><span data-stu-id="0bad6-199">This method uses the specified <xref:System.IO.TextWriter> for output.</span></span> <span data-ttu-id="0bad6-200">Этот метод поддерживает дополнительные Создание оптимизированного кода, который выполняет добавочное обновление исходного кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-200">This method supports more optimized code generation that incrementally updates the source code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-201">Реализация вызывает базовый класс <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод, который является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] и приводит к <xref:System.NotSupportedException> Если <xref:System.CodeDom.Compiler.ICodeGenerator> не возвращается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-201">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0bad6-202">Имя файла для выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-202">The file name to output to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-203">При переопределении в производном классе создает новый генератор кода, используя указанное имя файла для выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-203">When overridden in a derived class, creates a new code generator using the specified file name for output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-204">Объект <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, который может использоваться для генерации представлений исходного кода на основе <see cref="N:System.CodeDom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-204">An <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> that can be used to generate <see cref="N:System.CodeDom" /> based source code representations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-205">Этот метод использует указанное имя файла для выходных данных.</span><span class="sxs-lookup"><span data-stu-id="0bad6-205">This method uses the specified file name for output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-206">Реализация вызывает базовый класс <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод, который является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] и приводит к <xref:System.NotSupportedException> Если <xref:System.CodeDom.Compiler.ICodeGenerator> не возвращается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-206">The base class implementation calls the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method, which is obsolete in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] and results in a <xref:System.NotSupportedException> if an <xref:System.CodeDom.Compiler.ICodeGenerator> object is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-207">При переопределении в производном классе создает новый анализатор кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-207">When overridden in a derived class, creates a new code parser.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-208">Объект <see cref="T:System.CodeDom.Compiler.ICodeParser" />, который может использоваться для анализа исходного кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-208">An <see cref="T:System.CodeDom.Compiler.ICodeParser" /> that can be used to parse source code.</span>
          </span>
          <span data-ttu-id="0bad6-209">Базовая реализация всегда возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-209">The base implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-210">Получает экземпляр <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> для заданного языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-210">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0bad6-211">Имя языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-211">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-212">Получает экземпляр <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> для заданного языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-212">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-213">Поставщик CodeDOM, реализованный для заданного имени языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-213">A CodeDOM provider that is implemented for the specified language name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-214">Этот метод наиболее часто используется для создания экземпляра поставщика кода в приложении, которое может использовать один из нескольких поставщиков.</span><span class="sxs-lookup"><span data-stu-id="0bad6-214">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="0bad6-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> можно указать поставщика кода, который вы хотите создать, во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="0bad6-215"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> allows you to specify at run time the code provider you wish to instantiate.</span></span> <span data-ttu-id="0bad6-216">Если известно во время разработки, какой код поставщика будет использоваться, вы должны создать экземпляр этого поставщика кода вместо использования <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0bad6-216">If you know at design time which code provider is to be used, you should create an instance of that code provider rather than use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method.</span></span>  
  
 <span data-ttu-id="0bad6-217"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Возвращает <xref:System.CodeDom.Compiler.CodeDomProvider> экземпляр имя конкретного языка; аналогично вызову <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метода с типом поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-217">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for a specific language name; it is similar to calling the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method with the language provider type.</span></span> <span data-ttu-id="0bad6-218">Используйте <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> при необходимости динамически определять реализацию настроенного поставщика имя языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-218">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> when you want to dynamically find a configured provider implementation for a language name.</span></span>  
  
 <span data-ttu-id="0bad6-219">Если несколько реализаций поставщика настроен на имя языка <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> возвращает экземпляр поставщика для сопоставления последнего элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-219">If more than one provider implementation is configured for the language name, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> returns a provider instance for the last matching configuration element.</span></span>  
  
 <span data-ttu-id="0bad6-220">Используйте <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> перегрузка метода, при необходимости реализации поставщика конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-220">Use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload when you want a specific language provider implementation.</span></span> <span data-ttu-id="0bad6-221">Например, использовать <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> метод, чтобы получить экземпляр поставщика, который поддерживает имя языка `"CSharp"`; использовать <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> перегрузка метода, чтобы получить экземпляр поставщика специально для <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-221">For example, use the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method to get a provider instance that supports the language name `"CSharp"`; use the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> method overload to get a provider instance specifically for the <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="0bad6-222">Следует использовать [\], CultureInfo, объект\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5b%5D%29?displayProperty=nameWithType > метод, если имеется несколько поставщиков кода для языка и которыми нужно создать экземпляр поставщика конкретного кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-222">You should use the [\], CultureInfo, Object\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method if you have multiple code providers for a language and you desire to instantiate a specific code provider.</span></span>  
  
 <span data-ttu-id="0bad6-223"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Метод проверяет, поддерживает ли хотя бы один поставщик реализации конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-223">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="0bad6-224">Вы можете проверить имя языка, используя <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> перед передачей <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-224">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>.</span></span> <span data-ttu-id="0bad6-225">Если передать имя язык не поддерживается для <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0bad6-225">If you pass an unsupported language name to <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> is thrown.</span></span>  
  
 <span data-ttu-id="0bad6-226"><xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> Метод может использоваться для определения всех <xref:System.CodeDom.Compiler.CodeDomProvider> реализации на компьютере, включая дополнительные реализованных разработчиками и поставщиками компиляторов, которые определены в [ &lt;system.codedom &gt; Элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в файле конфигурации компьютера (Machine.config).</span><span class="sxs-lookup"><span data-stu-id="0bad6-226">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method can be used to determine all <xref:System.CodeDom.Compiler.CodeDomProvider> implementations on a computer, including additional implementations provided by developers and compiler vendors that are identified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config).</span></span>  
  
 <span data-ttu-id="0bad6-227"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> Метод возвращает экземпляр класса <xref:System.CodeDom.Compiler.CodeDomProvider> реализации для конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-227">The <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> method returns an instance of a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a specific language.</span></span>  
  
 <span data-ttu-id="0bad6-228">Имена языков регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-228">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-229">В следующем примере кода определяется <xref:System.CodeDom.Compiler.CodeDomProvider> реализации языка ввода и отображает настроенные параметры для поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-229">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0bad6-230">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-230">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0bad6-231">Для языка, заданного в параметре <paramref name="language" />, на данном компьютере не настроен поставщик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-231">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0bad6-232">Значение параметра <paramref name="language" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-232">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-233">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-233">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-234">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-234">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-235">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-235">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0bad6-236">Имя языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-236">The language name.</span>
          </span>
        </param>
        <param name="providerOptions">
          <span data-ttu-id="0bad6-237">Коллекция параметров поставщика из файла конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-237">A collection of provider options from the configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-238">Получает экземпляр <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> для заданного языка и параметров поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-238">Gets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the specified language and provider options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-239">Поставщик CodeDOM, реализованный для заданного имени языка и параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-239">A CodeDOM provider that is implemented for the specified language name and options.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-240">Этот метод наиболее часто используется для создания экземпляра поставщика кода в приложении, которое может использовать один из нескольких поставщиков.</span><span class="sxs-lookup"><span data-stu-id="0bad6-240">This method is most commonly used to create an instance of a code provider in an application that may optionally use one of several providers.</span></span> <span data-ttu-id="0bad6-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> позволяет указать версию поставщика кода, который вы хотите создать, во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="0bad6-241"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> enables you to specify at run time the version of the code provider you want to instantiate.</span></span> <span data-ttu-id="0bad6-242">Если известно во время разработки, какой код поставщика будет использоваться, следует создавать экземпляры этого поставщика кода, вместо использования <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="0bad6-242">If you know at design time which code provider is to be used, you should create an instance of that code provider instead of using the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="0bad6-243">Используйте <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> при необходимости динамически определять реализации настроенного поставщика для конкретного языка и параметров.</span><span class="sxs-lookup"><span data-stu-id="0bad6-243">Use <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> when you want to dynamically find a configured provider implementation for a specific language and options.</span></span> <span data-ttu-id="0bad6-244">Имена языков регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-244">Language names are case-insensitive.</span></span> <span data-ttu-id="0bad6-245">Дополнительные сведения о поддерживаемых параметрах поставщика см. документацию поставщика CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="0bad6-245">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="0bad6-246">Сведения о проверке поставщика и вызов поставщика, если несколько реализаций поставщика настроена для имени языка, в разделе «Примечания» <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> метод.</span><span class="sxs-lookup"><span data-stu-id="0bad6-246">For information about validating a provider and calling a provider if more than one provider implementation is configured for the language name, see the Remarks section of the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-247">В следующем примере показано создание экземпляра поставщика с помощью `providerOptions` параметра.</span><span class="sxs-lookup"><span data-stu-id="0bad6-247">The following example shows how to create an instance of a provider by using the `providerOptions` parameter.</span></span>  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0bad6-248">Строка, для которой создается допустимый идентификатор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-248">The string for which to generate a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-249">Создает допустимый идентификатор для указанного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-249">Creates a valid identifier for the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-250">Допустимый идентификатор для указанного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-250">A valid identifier for the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> проверяет, является ли идентификатор вступает в конфликт с зарезервированными ключевыми словами языка, и если да, пытается вернуть допустимый идентификатор имя, которое не конфликтуют.</span><span class="sxs-lookup"><span data-stu-id="0bad6-251"><xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, attempts to return a valid identifier name that does not conflict.</span></span> <span data-ttu-id="0bad6-252">Обычно возвращаемый идентификатор лишь немного изменяется, чтобы отличать его от ключевого слова; например имя может предшествовать знак подчеркивания («_»).</span><span class="sxs-lookup"><span data-stu-id="0bad6-252">Usually the returned identifier is only slightly modified to differentiate the identifier from the keyword; for example, the name might be preceded by the underscore ("_") character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-253">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-253">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-254">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-254">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-255">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-255">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-256">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-256">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-257">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-257">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-258">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-258">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-259">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-259">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-260">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-260">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-261">Получает расширение имени файла по умолчанию для использования в файлах исходного кода в текущем языке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-261">Gets the default file name extension to use for source code files in the current language.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bad6-262">Расширение имени файла, соответствующее расширению исходных файлов текущего языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-262">A file name extension corresponding to the extension of the source files of the current language.</span>
          </span>
          <span data-ttu-id="0bad6-263">Базовая реализация всегда возвращает значение <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-263">The base implementation always returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-264">Это свойство используется генераторами и компиляторы кода для указания расширений файлов, которые следует создать или использовать.</span><span class="sxs-lookup"><span data-stu-id="0bad6-264">This property is used by code generators and code compilers to indicate what file extensions should be generated or used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-265">В следующем примере кода создается экземпляр <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-265">The following code example creates an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0bad6-266">В примере отображается имя поставщика, хэш код и по умолчанию расширение имени файла для нового экземпляра поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-266">The example displays the provider name, hash code and default file name extension for the new provider instance.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="compileUnit">
          <span data-ttu-id="0bad6-267">Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, для которого создается код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-267">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-268">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-268">The <see cref="T:System.IO.TextWriter" /> to which the output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-269">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-269">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-270">Создает код для указанной единицы компиляции объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-270">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-271">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-271">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-272">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-272">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-273">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-273">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-274">В следующем примере кода показано использование <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> метод для создания кода для приложения «Hello World» из <xref:System.CodeDom.CodeCompileUnit>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-274">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> method to generate code for a "Hello World" application from a <xref:System.CodeDom.CodeCompileUnit>.</span></span> <span data-ttu-id="0bad6-275">Данный пример является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CodeDomProvider> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-275">This example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span>  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-276">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-276">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-277">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-277">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-278">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-278">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-279">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-279">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-280">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-280">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="0bad6-281">Объект <see cref="T:System.CodeDom.CodeExpression" />, указывающий выражение, для которого создается код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-281">A <see cref="T:System.CodeDom.CodeExpression" /> object that indicates the expression for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-282">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-282">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-283">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-283">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-284">Создает код для указанного выражения объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-284">Generates code for the specified Code Document Object Model (CodeDOM) expression and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-285">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-285">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-286">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-286">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-287">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-287">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-288">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-288">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-289">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-289">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-290">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-290">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-291">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-291">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-292">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-292">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="0bad6-293">Объект <see cref="T:System.CodeDom.CodeTypeMember" />, указывающий член, для которого создается код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-293">A <see cref="T:System.CodeDom.CodeTypeMember" /> object that indicates the member for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-294">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-294">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-295">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-295">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-296">Создает код для указанного объявления члена объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-296">Generates code for the specified Code Document Object Model (CodeDOM) member declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-297">Вызывает реализацию базового класса <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-297">The base class implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="0bad6-298">В разделе <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> для документация, описывающая реализацию этого метода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-298">See <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> for documentation describing an implementation of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-299">В следующем примере кода показано использование <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> метод, реализуемый <xref:Microsoft.CSharp.CSharpCodeProvider> и <xref:Microsoft.VisualBasic.VBCodeProvider> классы.</span><span class="sxs-lookup"><span data-stu-id="0bad6-299">The following code example shows the use of the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method as implemented by the <xref:Microsoft.CSharp.CSharpCodeProvider> and <xref:Microsoft.VisualBasic.VBCodeProvider> classes.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-300">Этот метод не переопределяется в производном классе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-300">This method is not overridden in a derived class.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">
          <span data-ttu-id="0bad6-301">Объект <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен, для которого создается код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-301">A <see cref="T:System.CodeDom.CodeNamespace" /> object that indicates the namespace for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-302">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-302">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-303">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-303">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-304">Создает код для указанного пространства имен объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-304">Generates code for the specified Code Document Object Model (CodeDOM) namespace and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-305">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-305">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-306">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-306">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-307">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-307">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-308">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-308">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-309">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-309">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-310">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-310">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-311">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-311">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-312">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-312">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="statement">
          <span data-ttu-id="0bad6-313">Объект <see cref="T:System.CodeDom.CodeStatement" />, содержащий элементы CodeDOM, для которых генерируется код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-313">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-314">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-314">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-315">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-315">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-316">Создает код для указанного оператора языка объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-316">Generates code for the specified Code Document Object Model (CodeDOM) statement and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-317">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-317">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-318">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-318">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-319">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-319">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-320">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-320">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-321">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-321">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-322">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-322">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-323">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-323">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-324">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-324">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="codeType">
          <span data-ttu-id="0bad6-325">Объект <see cref="T:System.CodeDom.CodeTypeDeclaration" />, указывающий тип, для которого создается код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-325">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object that indicates the type for which to generate code.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="0bad6-326">Объект <see cref="T:System.IO.TextWriter" />, которому направляется выходной код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-326">The <see cref="T:System.IO.TextWriter" /> to which output code is sent.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="0bad6-327">Объект <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />, указывающий параметры для использования при создании кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-327">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-328">Создает код для указанного объявления типа объектной модели документов кода (CodeDOM) и направляет его указанному модулю записи текста, используя заданные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-328">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and sends it to the specified text writer, using the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-329">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-329">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-330">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-330">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-331">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-331">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-332">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-332">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-333">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-333">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-334">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-334">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-335">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-335">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-336">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-336">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-337">Возвращает параметры поставщика и компилятора языка для данного компьютера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-337">Returns the language provider and compiler configuration settings for this computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-338">Массив типа <see cref="T:System.CodeDom.Compiler.CompilerInfo" />, представляющий параметры всех настроенных реализаций <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-338">An array of type <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> representing the settings of all configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-339">Используйте <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> метод перечислить параметры поставщика языка на компьютере.</span><span class="sxs-lookup"><span data-stu-id="0bad6-339">Use the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> method to enumerate the language provider settings on a computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-340">В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], поставщиков языка по умолчанию, предоставляемых платформой .NET Framework не указаны в [ &lt;system.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) конфигурации компилятора статьи и не может быть удалена, поэтому эта метод возвращает сведения о поставщиков по умолчанию и заданные в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-340">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the default language providers supplied by the .NET Framework are not specified in the [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) compiler configuration section and cannot be removed, so this method returns information about the default providers and any specified in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-341">В следующем примере кода перечисляет поставщиков языка на компьютере и отображает параметры конфигурации и компилятора для каждого поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-341">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="0bad6-342">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-342">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-343">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-343">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-344">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-344">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-345">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-345">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0bad6-346">Имя языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-346">A language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-347">Возвращает параметры поставщика и компилятора языка для заданного языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-347">Returns the language provider and compiler configuration settings for the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-348">Объект <see cref="T:System.CodeDom.Compiler.CompilerInfo" />, заполненный параметрами настроенной реализации <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-348">A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object populated with settings of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-349">[ &lt;System.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в конфигурации компьютера файл содержит параметры для каждого языка поставщика и компилятора конфигурации <xref:System.CodeDom.Compiler.CodeDomProvider> реализации на компьютере.</span><span class="sxs-lookup"><span data-stu-id="0bad6-349">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0bad6-350">Сведения о файлах конфигурации компьютера см. в файлах конфигурации машины раздела [Настройка приложений](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span><span class="sxs-lookup"><span data-stu-id="0bad6-350">For information about machine configuration files, see the Machine Configuration Files section in [Configuring Apps](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f).</span></span> <span data-ttu-id="0bad6-351"><xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Метод выполняет поиск каждого элемента конфигурации поставщика для заданного имени языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-351">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method searches each provider configuration element for the specified language name.</span></span> <span data-ttu-id="0bad6-352">Возвращенный <xref:System.CodeDom.Compiler.CompilerInfo> экземпляр содержит настроенных языковых параметров поставщика и компилятора.</span><span class="sxs-lookup"><span data-stu-id="0bad6-352">The returned <xref:System.CodeDom.Compiler.CompilerInfo> instance contains the configured language provider and compiler settings.</span></span>  
  
 <span data-ttu-id="0bad6-353"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Метод проверяет, поддерживает ли хотя бы один поставщик реализации конкретного языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-353">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method checks whether at least one provider implementation supports a specific language.</span></span> <span data-ttu-id="0bad6-354">Вы можете проверить имя языка, используя <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> перед передачей <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-354">You can validate a language name using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>.</span></span> <span data-ttu-id="0bad6-355">Это предотвращает создание <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> при доступе к <xref:System.CodeDom.Compiler.CompilerInfo> экземпляра имени неподдерживаемый язык.</span><span class="sxs-lookup"><span data-stu-id="0bad6-355">This prevents throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> when you access the <xref:System.CodeDom.Compiler.CompilerInfo> instance for an unsupported language name.</span></span>  
  
 <span data-ttu-id="0bad6-356">Если несколько реализаций поставщика настроен на имя входного языка <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> Возвращает параметры из последний поставщик сопоставления элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-356">If more than one provider implementation is configured for the input language name, <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> returns the settings from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="0bad6-357">Имена языков регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-357">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-358">В следующем примере кода определяется <xref:System.CodeDom.Compiler.CodeDomProvider> реализации языка ввода и отображает настроенные параметры для поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-358">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0bad6-359">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-359">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="0bad6-360">Для языка, заданного в параметре <paramref name="language" />, на данном компьютере не настроен поставщик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-360">The <paramref name="language" /> does not have a configured provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0bad6-361">Значение параметра <paramref name="language" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-361">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-362">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-362">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-363">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-363">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-364">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-364">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0bad6-365">Тип объекта, для которого извлекается преобразователь типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-365">The type of object to retrieve a type converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-366">Получает <see cref="T:System.ComponentModel.TypeConverter" /> для указанного типа данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-366">Gets a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-367">
            <see cref="T:System.ComponentModel.TypeConverter" /> для указанного типа или <see langword="null" />, если <see cref="T:System.ComponentModel.TypeConverter" /> для указанного типа не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-367">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type, or <see langword="null" /> if a <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-368">Производный класс может переопределять этот метод для предоставления определенных типов преобразователей типов для определенных типов данных.</span><span class="sxs-lookup"><span data-stu-id="0bad6-368">A derived class can override this method to provide specific types of type converters for specific data types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="0bad6-369">Расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-369">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-370">Возвращает имя языка, связанное с определенным расширением имени файла, как настроено в разделе конфигурации компилятора <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-370">Returns a language name associated with the specified file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration section.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-371">Имя языка, связанное с определенным расширением имени файла, как настроено в параметрах конфигурации компилятора <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-371">A language name associated with the file name extension, as configured in the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> compiler configuration settings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-372">[ &lt;System.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в конфигурации компьютера (Machine.config) файл содержит языка параметры поставщика и компилятора для каждого <xref:System.CodeDom.Compiler.CodeDomProvider> внедрения компьютер.</span><span class="sxs-lookup"><span data-stu-id="0bad6-372">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0bad6-373"><xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> Метод выполняет поиск каждого элемента конфигурации поставщика для указанного расширения имени файла.</span><span class="sxs-lookup"><span data-stu-id="0bad6-373">The <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> method searches each provider configuration element for the specified file name extension.</span></span>  
  
 <span data-ttu-id="0bad6-374"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> Метод проверяет, поддерживает ли хотя бы один поставщик реализацию определенного расширения имен файлов.</span><span class="sxs-lookup"><span data-stu-id="0bad6-374">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method checks whether at least one provider implementation supports a specific file name extension.</span></span> <span data-ttu-id="0bad6-375">Вы можете проверить расширение имени файла с помощью <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> перед передачей <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="0bad6-375">You can validate a file name extension using <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> before passing it to <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>.</span></span> <span data-ttu-id="0bad6-376">Это предотвращает <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> выдавал <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> для расширение имени файла не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-376">This prevents <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> from throwing a <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> for an unsupported file name extension.</span></span>  
  
 <span data-ttu-id="0bad6-377">Если реализация поставщика поддерживает расширение имени входного файла, а также несколько поддерживаемых языков, настроенных для этого поставщика, затем <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> возвращает первое имя языка для данного поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-377">If a provider implementation supports the input file name extension, and there are multiple supported languages configured for that provider, then <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the first language name for that provider.</span></span> <span data-ttu-id="0bad6-378">Если несколько реализаций поставщика настроена для расширение имени входного файла, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> возвращает имя языка из последний поставщик сопоставления элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="0bad6-378">If more than one provider implementation is configured for the input file name extension, <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> returns the language name from the last matching provider configuration element.</span></span>  
  
 <span data-ttu-id="0bad6-379">Имена языков и расширения имен файлов регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-379">Language names and file name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-380">В следующем примере кода определяется <xref:System.CodeDom.Compiler.CodeDomProvider> реализации расширение имени входного файла и отображает настроенные параметры для поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-380">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0bad6-381">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-381">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">
          <span data-ttu-id="0bad6-382">Для языка, заданного в параметре <paramref name="extension" />, на данном компьютере не настроен поставщик языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-382">The <paramref name="extension" /> does not have a configured language provider on this computer.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="0bad6-383">Значение параметра <paramref name="extension" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-383">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-384">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-384">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-385">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-385">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-386">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-386">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0bad6-387">
            <see cref="T:System.CodeDom.CodeTypeReference" /> указывает возвращаемый тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-387">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-388">Получает тип, на который указывает заданный объект <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-388">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-389">Текстовое представление указанного типа, отформатированное для языка, на котором создается код данным генератором кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-389">A text representation of the specified type, formatted for the language in which code is generated by this code generator.</span>
          </span>
          <span data-ttu-id="0bad6-390">Например, в Visual Basic передача объекта <see cref="T:System.CodeDom.CodeTypeReference" /> для типа <see cref="T:System.Int32" /> вернет "Integer".</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-390">In Visual Basic, for example, passing in a <see cref="T:System.CodeDom.CodeTypeReference" /> for the <see cref="T:System.Int32" /> type will return "Integer".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-391">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-391">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-392">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-392">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-393">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-393">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-394">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-394">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-395">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-395">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-396">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-396">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-397">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-397">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-398">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-398">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="0bad6-399">Расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-399">A file name extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-400">Проверяет, имеется ли связанная ли с данным расширением имени файла реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, настроенная на данном компьютере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-400">Tests whether a file name extension has an associated <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-401">
            <see langword="true" />, если реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> настроена для определенного имени файла; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-401">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified file name extension; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-402">[ &lt;System.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в конфигурации компьютера (Machine.config) файл содержит языка параметры поставщика и компилятора для каждого <xref:System.CodeDom.Compiler.CodeDomProvider> внедрения компьютер.</span><span class="sxs-lookup"><span data-stu-id="0bad6-402">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0bad6-403"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> Метод выполняет поиск элементов конфигурации поставщика для указанного расширения имени файла.</span><span class="sxs-lookup"><span data-stu-id="0bad6-403">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> method searches the provider configuration elements for the specified file name extension.</span></span>  
  
 <span data-ttu-id="0bad6-404">Расширения имен файлов регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-404">File name extensions are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-405">В следующем примере кода определяется <xref:System.CodeDom.Compiler.CodeDomProvider> реализации расширение имени входного файла и отображает настроенные параметры для поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-405">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input file name extension and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0bad6-406">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-406">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0bad6-407">Значение параметра <paramref name="extension" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-407">The <paramref name="extension" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-408">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-408">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-409">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-409">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-410">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-410">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="0bad6-411">Имя языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-411">The language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-412">Проверяет, имеется ли связанная ли с данным языком реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, настроенная на данном компьютере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-412">Tests whether a language has a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation configured on the computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-413">
            <see langword="true" />, если реализация <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> настроена для заданного языка; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-413">
              <see langword="true" /> if a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation is configured for the specified language; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-414">[ &lt;System.codedom&gt; элемент](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) в конфигурации компьютера (Machine.config) файл содержит языка параметры поставщика и компилятора для каждого <xref:System.CodeDom.Compiler.CodeDomProvider> внедрения компьютер.</span><span class="sxs-lookup"><span data-stu-id="0bad6-414">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file (Machine.config) contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="0bad6-415"><xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> Метод выполняет поиск элементов конфигурации поставщика для заданного имени языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-415">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> method searches the provider configuration elements for the specified language name.</span></span>  
  
 <span data-ttu-id="0bad6-416">Имена языков регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="0bad6-416">Language names are case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bad6-417">В следующем примере кода определяется <xref:System.CodeDom.Compiler.CodeDomProvider> реализации языка ввода и отображает настроенные параметры для поставщика языка.</span><span class="sxs-lookup"><span data-stu-id="0bad6-417">The following code example determines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for an input language and displays the configured settings for the language provider.</span></span> <span data-ttu-id="0bad6-418">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CompilerInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="0bad6-418">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0bad6-419">Значение параметра <paramref name="language" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-419">The <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0bad6-420">У вызывающего объекта отсутствует необходимое разрешение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="0bad6-421">Для полного доверия для непосредственного вызывающего.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-421">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="0bad6-422">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-422">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0bad6-423">Значение для проверки на допустимый идентификатор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-423">The value to verify as a valid identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-424">Возвращает значение, показывающее, является ли указанное значение допустимым идентификатором для текущего языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-424">Returns a value that indicates whether the specified value is a valid identifier for the current language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-425">
            <see langword="true" />, если параметр <paramref name="value" /> является допустимым идентификатором; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-425">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-426">Этот метод проверяет, является ли идентификатор допустимым.</span><span class="sxs-lookup"><span data-stu-id="0bad6-426">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="0bad6-427"><xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> Метод зависит от поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-427">The <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> method is provider specific.</span></span> <span data-ttu-id="0bad6-428">Идентификаторы, допустимые для одного из поставщиков может оказаться недопустимым для других поставщиков.</span><span class="sxs-lookup"><span data-stu-id="0bad6-428">Identifiers that are valid for one provider might not be valid for other providers.</span></span> <span data-ttu-id="0bad6-429">Если `value` содержит символы вне диапазона символов ASCII, проверьте этот идентификатор для всех языков, которые могут использоваться для компиляции кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-429">If `value` contains characters outside of the ASCII character range, check the identifier for all the languages that might be used to compile the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-430">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-430">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-431">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-431">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-432">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-432">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-433">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-433">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-434">При переопределении метода <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> в производном классе, разработайте метод для возврата <see langword="true" /> только в том случае, если значение соответствует правилам языка и не конфликтует с зарезервированным словом.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-434">When overriding <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> in a derived class, design the method to return <see langword="true" /> only if the value fits the rules of the language and does not conflict with a keyword.</span>
            </span>
            <span data-ttu-id="0bad6-435">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-435">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-436">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-436">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-437">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-437">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-438">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-438">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bad6-439">Получает идентификатор возможностей языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-439">Gets a language features identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bad6-440">
            <see cref="T:System.CodeDom.Compiler.LanguageOptions" />, который указывает специальные функции языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-440">A <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> that indicates special features of the language.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="codeStream">
          <span data-ttu-id="0bad6-441">Объект <see cref="T:System.IO.TextReader" />, используемый для чтения анализируемого кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-441">A <see cref="T:System.IO.TextReader" /> object that is used to read the code to be parsed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bad6-442">Компилирует код, прочитанный из заданного текстового потока, в объект <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-442">Compiles the code read from the specified text stream into a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-443">Объект <see cref="T:System.CodeDom.CodeCompileUnit" />, содержащий представление анализируемого кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-443">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains a representation of the parsed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-444">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeParser> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-444">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeParser> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-445">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-445">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-446">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeParser> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-446">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeParser> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-447">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-447">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-448">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-448">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-449">Метод базового класса создает средство синтаксического анализа в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> метод для обеспечения совместимости с существующие ранее поставщики, использующие средства синтаксического анализа кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-449">The base-class method creates a parser in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> method for compatibility with preexisting providers that use code parsers.</span>
            </span>
            <span data-ttu-id="0bad6-450">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeParser" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-450">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeParser" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-451">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует средство синтаксического анализа кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-451">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code parser.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport">To be added.</param>
        <summary>
          <span data-ttu-id="0bad6-452">Возвращает значение, показывающее, обеспечивается ли указанная поддержка создания кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-452">Returns a value indicating whether the specified code generation support is provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0bad6-453">
            <see langword="true" />, если указанная поддержка создания кода осуществляется; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-453">
              <see langword="true" /> if the specified code generation support is provided; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bad6-454">Этот метод может вызываться с количеством <xref:System.CodeDom.Compiler.GeneratorSupport> флагами, чтобы проверить на несколько возможностей путем объединения набора соответствующих флагов возможностей с помощью двоичного `OR` оператор (&#124;).</span><span class="sxs-lookup"><span data-stu-id="0bad6-454">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary `OR` operator (&#124;).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0bad6-455">В .NET Framework версий 1.0 и 1.1, этот метод предоставляется <xref:System.CodeDom.Compiler.ICodeGenerator> реализацию, которая возвращается методом <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> метод поставщика.</span><span class="sxs-lookup"><span data-stu-id="0bad6-455">In the .NET Framework versions 1.0 and 1.1, this method is provided by the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation that is returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of the provider.</span></span> <span data-ttu-id="0bad6-456">В версии 2.0 этот метод может вызываться непосредственно на поставщика кода, даже если оно не переопределено поставщика кода.</span><span class="sxs-lookup"><span data-stu-id="0bad6-456">In version 2.0, this method can be called directly on the code provider even if it is not overridden by the code provider.</span></span> <span data-ttu-id="0bad6-457">Если код поставщика не переопределять этот метод <xref:System.CodeDom.Compiler.ICodeGenerator> реализация вызывается базовым классом.</span><span class="sxs-lookup"><span data-stu-id="0bad6-457">If the code provider does not override this method, the <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is called by the base class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="0bad6-458">В производном классе нельзя переопределить ни этот метод, ни метод <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bad6-458">Neither this method nor the <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method is overridden in a derived class.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0bad6-459">При переопределении этого метода не должна вызывать соответствующий метод базового класса.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-459">If you override this method, you must not call the corresponding method of the base class.</span>
            </span>
            <span data-ttu-id="0bad6-460">Метод базового класса создает генератор в производном классе, используя устаревшие <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> метод для обеспечения совместимости с существующие ранее, которые используют генераторы кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-460">The base-class method creates a generator in the derived class using the obsolete <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> method for compatibility with preexisting providers that use code generators.</span>
            </span>
            <span data-ttu-id="0bad6-461">Затем метод базового класса вызывает эквивалентный метод <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> реализацию для выполнения этой функции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-461">The base-class method then calls the equivalent method in the <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> implementation to perform this function.</span>
            </span>
            <span data-ttu-id="0bad6-462">Вы получите <see cref="T:System.NotImplementedException" /> при вызове метода базового класса из поставщика кода, который не использует генератора кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0bad6-462">You will get a <see cref="T:System.NotImplementedException" /> if you call the base-class method from a code provider that does not use a code generator.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>