<Type Name="CodeDefaultValueExpression" FullName="System.CodeDom.CodeDefaultValueExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4ee3f214756e16319b84d4a8811bdb5c6a67192" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36646668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeDefaultValueExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeDefaultValueExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeDefaultValueExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeDefaultValueExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDefaultValueExpression : System::CodeDom::CodeExpression" />
  <TypeSignature Language="F#" Value="type CodeDefaultValueExpression = class&#xA;    inherit CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="11abd-101">Представляет ссылку на значение по умолчанию.</span>
      <span class="sxs-lookup">
        <span data-stu-id="11abd-101">Represents a reference to a default value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11abd-102">Объект <xref:System.CodeDom.CodeDefaultValueExpression> может использоваться для представления ссылки на значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="11abd-102">A <xref:System.CodeDom.CodeDefaultValueExpression> can be used to represent a reference to a default value.</span></span>  
  
 <span data-ttu-id="11abd-103"><xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> Свойство определяет ссылку на тип значения.</span><span class="sxs-lookup"><span data-stu-id="11abd-103">The <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> property specifies the reference to the value type.</span></span> <span data-ttu-id="11abd-104"><xref:System.CodeDom.CodeDefaultValueExpression> Класс используется при генерировании кода на основе универсальных типов.</span><span class="sxs-lookup"><span data-stu-id="11abd-104">The <xref:System.CodeDom.CodeDefaultValueExpression> class is used in the generation of generics-based code.</span></span> <span data-ttu-id="11abd-105">Дополнительные сведения об универсальных шаблонах см. в разделе [универсальные шаблоны в библиотеке классов .NET Framework](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span><span class="sxs-lookup"><span data-stu-id="11abd-105">For more information on generics, see [Generics in the .NET Framework Class Library](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span></span> <span data-ttu-id="11abd-106">В этом разделе описывается использование дальнейшей предоставляются следующие шаги кода <xref:System.CodeDom.CodeDefaultValueExpression> класс, чтобы добавить новое значение по умолчанию в граф кода.</span><span class="sxs-lookup"><span data-stu-id="11abd-106">The following code steps are provided in this section to further describe the use of the <xref:System.CodeDom.CodeDefaultValueExpression> class to add a new default value to a code graph.</span></span>  
  
 <span data-ttu-id="11abd-107">Код в части 1 является частью большего примера, приведенного для <xref:System.CodeDom.CodeTypeParameter> класса.</span><span class="sxs-lookup"><span data-stu-id="11abd-107">The code in part 1 is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span> <span data-ttu-id="11abd-108">Этот код, при запуске через генератора кода C# вызывает в коде C#, который появляется в части 2.</span><span class="sxs-lookup"><span data-stu-id="11abd-108">This code, when run through the C# code generator, results in the C# code that appears in part 2.</span></span> <span data-ttu-id="11abd-109">При вызове этого кода в операторе в части 3 получается выводу, приведенному в часть 4.</span><span class="sxs-lookup"><span data-stu-id="11abd-109">When this code is called in the statement in part 3, the result is the output shown in part 4.</span></span>  
  
```  
// Part 1: Code to create a generic Print method.  
            CodeMemberMethod printMethod = new CodeMemberMethod();  
            CodeTypeParameter sType = new CodeTypeParameter("S");  
            sType.HasConstructorConstraint = true;  
            CodeTypeParameter tType = new CodeTypeParameter("T");  
            sType.HasConstructorConstraint = true;  
  
            printMethod.Name = "Print";  
            printMethod.TypeParameters.Add(sType);  
            printMethod.TypeParameters.Add(tType);  
            printMethod.Statements.Add(ConsoleWriteLineStatement(  
                new CodeDefaultValueExpression(new CodeTypeReference("T"))));  
            printMethod.Statements.Add(ConsoleWriteLineStatement(  
                new CodeDefaultValueExpression(new CodeTypeReference("S"))));  
```  
  
```  
// Part 2: Code generated by code in part 1.  
public virtual void Print<S, T>()  
            where S : new()  
         {  
            Console.WriteLine(default(T));  
            Console.WriteLine(default(S));  
        }  
```  
  
```  
// Part 3: Call to the generated method.  
dict.Print<System.Decimal, int>();  
```  
  
```  
// Part 4: Output of the generated method.  
0  
0  
  
```  
  
   
  
## Examples  
 <span data-ttu-id="11abd-110">В следующем примере кода показано использование <xref:System.CodeDom.CodeDefaultValueExpression> для создания значения по умолчанию для параметров десятичных и целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="11abd-110">The following code example shows the use of the <xref:System.CodeDom.CodeDefaultValueExpression> to create default values for decimal and integer parameters.</span></span> <span data-ttu-id="11abd-111">Данный пример является частью большего примера, приведенного для <xref:System.CodeDom.CodeTypeParameter> класса.</span><span class="sxs-lookup"><span data-stu-id="11abd-111">This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.</span></span>  
  
 [!code-csharp[System.CodeDOM.Generics.1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#7)]
 [!code-vb[System.CodeDOM.Generics.1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11abd-112">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeDefaultValueExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDefaultValueExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDefaultValueExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDefaultValueExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11abd-113">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeDefaultValueExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDefaultValueExpression(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeDefaultValueExpression : System.CodeDom.CodeTypeReference -&gt; System.CodeDom.CodeDefaultValueExpression" Usage="new System.CodeDom.CodeDefaultValueExpression type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="11abd-114">Свойство <see cref="T:System.CodeDom.CodeTypeReference" />, указывающее тип значения для ссылки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-114">A <see cref="T:System.CodeDom.CodeTypeReference" /> that specifies the reference to a value type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11abd-115">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeDefaultValueExpression" />, используя указанную ссылку типа кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> class using the specified code type reference.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeDefaultValueExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeDefaultValueExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11abd-116">Получает или задает ссылку типа данных для значения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-116">Gets or sets the data type reference for a default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11abd-117">Объект <see cref="T:System.CodeDom.CodeTypeReference" />, представляющий тип данных, имеющий значение по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11abd-117">A <see cref="T:System.CodeDom.CodeTypeReference" /> object representing a data type that has a default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>