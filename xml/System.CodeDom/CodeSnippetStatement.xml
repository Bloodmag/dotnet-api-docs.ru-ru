<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeSnippetStatement.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53d7525dc7049296dbadc04e5baa75170b9fae9db.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d7525dc7049296dbadc04e5baa75170b9fae9db</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>Represents a statement using a literal code fragment.</source>
          <target state="translated">Представляет оператор, использующий фрагмент исходного кода.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> can represent a statement using a literal code fragment that will be included directly in the source without modification.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> Представляет оператор, использующий фрагмент исходного кода, который будет включен непосредственно в источник без изменения.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> stores a section of code exactly in its original format as a string.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> сохраняет раздел кода в исходном формате в виде строки.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>The CodeDOM does not translate literal code fragments.</source>
          <target state="translated">CodeDOM не переводит фрагменты исходного кода.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>Literal code fragments are stored and output in their original format.</source>
          <target state="translated">Фрагменты исходного кода хранятся и выходные данные в их исходном формате.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</source>
          <target state="translated">Объекты codeDOM, содержащие исходный код, позволяют разработчикам инкапсулировать код, который уже находится в целевом языке.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt;</ph> property contains the literal code for the snippet statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement.Value%2A&gt;</ph> Свойство содержит исходный код для фрагмента кода.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> class using a literal code fragment.</source>
          <target state="translated">В следующем примере создается экземпляр <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> класса с помощью фрагмента исходного кода.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.CodeRegionDirective&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.CodeDom.CodeRegionDirective&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
          <source>The literal code fragment of the statement to represent.</source>
          <target state="translated">Фрагмент исходного кода оператора для представления.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph> class using the specified code fragment.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetStatement" /&gt;</ph>, используя указанный фрагмент кода.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> class using a literal code fragment.</source>
          <target state="translated">В следующем примере создается экземпляр <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetStatement&gt;</ph> класса с помощью фрагмента исходного кода.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.CodeRegionDirective&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.CodeDom.CodeRegionDirective&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeSnippetStatement.Value">
          <source>Gets or sets the literal code fragment statement.</source>
          <target state="translated">Получает или задает оператор фрагмента исходного кода.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeSnippetStatement.Value">
          <source>The literal code fragment statement.</source>
          <target state="translated">Оператор фрагмента исходного кода.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>