<Type Name="CodeSnippetTypeMember" FullName="System.CodeDom.CodeSnippetTypeMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49afdbf1212bcf7993a86460812d74372a7562e8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeSnippetTypeMember : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetTypeMember extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetTypeMember" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetTypeMember&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetTypeMember : System::CodeDom::CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6454a-101">Представляет элемент типа с помощью фрагмента исходного кода.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6454a-101">Represents a member of a type using a literal code fragment.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6454a-102"><xref:System.CodeDom.CodeSnippetTypeMember> представляет член типа с помощью фрагмента исходного кода, который включен непосредственно в источник без изменения.</span><span class="sxs-lookup"><span data-stu-id="6454a-102"><xref:System.CodeDom.CodeSnippetTypeMember> can represent a member of a type using a literal code fragment that is included directly in the source without modification.</span></span> <span data-ttu-id="6454a-103">Этот код может быть включен в объявлении типа.</span><span class="sxs-lookup"><span data-stu-id="6454a-103">This code can be included in the type declaration.</span></span>  
  
 <span data-ttu-id="6454a-104">Объект <xref:System.CodeDom.CodeSnippetTypeMember> сохраняет раздел кода, в исходном формате, в виде строки.</span><span class="sxs-lookup"><span data-stu-id="6454a-104">A <xref:System.CodeDom.CodeSnippetTypeMember> stores a section of code, exactly in its original format, as a string.</span></span> <span data-ttu-id="6454a-105">CodeDOM не переводит фрагменты исходного кода.</span><span class="sxs-lookup"><span data-stu-id="6454a-105">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="6454a-106">Фрагменты исходного кода хранятся и выходные данные в их исходном формате.</span><span class="sxs-lookup"><span data-stu-id="6454a-106">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="6454a-107">Объекты codeDOM, содержащие исходный код, позволяют разработчикам инкапсулировать код, который уже находится в целевом языке.</span><span class="sxs-lookup"><span data-stu-id="6454a-107">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="6454a-108"><xref:System.CodeDom.CodeSnippetTypeMember.Text%2A> Свойство содержит исходного кода для члена типа.</span><span class="sxs-lookup"><span data-stu-id="6454a-108">The <xref:System.CodeDom.CodeSnippetTypeMember.Text%2A> property contains the literal code for the type member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6454a-109">В следующем примере показано использование <xref:System.CodeDom.CodeSnippetTypeMember> класса для хранения исходного кода в строковом формате.</span><span class="sxs-lookup"><span data-stu-id="6454a-109">The following example demonstrates the use of the <xref:System.CodeDom.CodeSnippetTypeMember> class to store literal code in a string format.</span></span> <span data-ttu-id="6454a-110">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6454a-110">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6454a-111">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeSnippetTypeMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetTypeMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetTypeMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetTypeMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6454a-112">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeSnippetTypeMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetTypeMember (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetTypeMember(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="6454a-113">Фрагмент исходного кода для элемента типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-113">The literal code fragment for the type member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6454a-114">Инициализирует новый экземпляр класса <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> с помощью указанного текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-114">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> class using the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6454a-115">В следующем примере показано использование <xref:System.CodeDom.CodeSnippetTypeMember.%23ctor%2A> конструктор для создания экземпляра <xref:System.CodeDom.CodeSnippetTypeMember> класса.</span><span class="sxs-lookup"><span data-stu-id="6454a-115">The following example demonstrates the use of the <xref:System.CodeDom.CodeSnippetTypeMember.%23ctor%2A> constructor to create an instance of the <xref:System.CodeDom.CodeSnippetTypeMember> class.</span></span> <span data-ttu-id="6454a-116">Данный пример кода является частью большего примера, приведенного для <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6454a-116">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> method.</span></span>  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom_GenerateCodeFromMember#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetTypeMember.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6454a-117">Получает или задает фрагмент исходного кода для элемента типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-117">Gets or sets the literal code fragment for the type member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6454a-118">Фрагмент исходного кода для элемента типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6454a-118">The literal code fragment for the type member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>