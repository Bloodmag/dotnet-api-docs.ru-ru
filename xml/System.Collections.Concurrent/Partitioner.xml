<Type Name="Partitioner" FullName="System.Collections.Concurrent.Partitioner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db71d4337bb59a8502217d32d886fbb2098726a0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Partitioner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Partitioner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner" />
  <TypeSignature Language="VB.NET" Value="Public Class Partitioner" />
  <TypeSignature Language="C++ CLI" Value="public ref class Partitioner abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6a235-101">Предоставляет общие стратегии разделения для массивов, списков и перечислимых значений.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a235-101">Provides common partitioning strategies for arrays, lists, and enumerables.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-102">Дополнительные сведения см. в разделе [Пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-102">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a235-103">Создает модуль разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-103">Creates a partitioner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="6a235-104">Нижняя граница диапазона (включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-104">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="6a235-105">Верхняя граница диапазона (не включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-105">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-106">Создает модуль разделения, который осуществляет деление указанного пользователем диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-106">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-107">Модуль разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-107">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-108">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-108">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a235-109">Аргумент <paramref name="toExclusive" /> меньше или равен аргументу <paramref name="fromInclusive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-109">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="6a235-110">Нижняя граница диапазона (включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-110">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="6a235-111">Верхняя граница диапазона (не включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-111">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-112">Создает модуль разделения, который осуществляет деление указанного пользователем диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-112">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-113">Модуль разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-113">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-114">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-114">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a235-115">Аргумент <paramref name="toExclusive" /> меньше или равен аргументу <paramref name="fromInclusive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-115">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive, int32 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer, rangeSize As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="rangeSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="6a235-116">Нижняя граница диапазона (включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-116">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="6a235-117">Верхняя граница диапазона (не включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-117">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="6a235-118">Размер каждого поддиапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-118">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-119">Создает модуль разделения, который осуществляет деление указанного пользователем диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-119">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-120">Модуль разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-120">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-121">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-121">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a235-122">Аргумент <paramref name="toExclusive" /> меньше или равен аргументу <paramref name="fromInclusive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-122">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="6a235-123">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-123">-or-</span>
          </span>
          <span data-ttu-id="6a235-124">Аргумент <paramref name="rangeSize" /> меньше или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-124">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive, int64 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long, rangeSize As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="rangeSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="6a235-125">Нижняя граница диапазона (включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-125">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="6a235-126">Верхняя граница диапазона (не включительно).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-126">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="6a235-127">Размер каждого поддиапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-127">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-128">Создает модуль разделения, который осуществляет деление указанного пользователем диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-128">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-129">Модуль разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-129">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-130">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-130">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a235-131">Аргумент <paramref name="toExclusive" /> меньше или равен аргументу <paramref name="fromInclusive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-131">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="6a235-132">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-132">-or-</span>
          </span>
          <span data-ttu-id="6a235-133">Аргумент <paramref name="rangeSize" /> меньше или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-133">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource)) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="6a235-134">Тип элементов исходной перечисляемой коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-134">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="6a235-135">Разделяемая перечисляемая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-135">The enumerable to be partitioned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-136">Создает упорядочиваемый разделитель из экземпляра <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-136">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-137">Упорядочиваемый модуль разделения, созданный на основе входного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-137">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-138">Порядок, используемый в созданном модуле разделения определяется естественным порядком элементов по мере извлечения из исходного перечисления.</span><span class="sxs-lookup"><span data-stu-id="6a235-138">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span> <span data-ttu-id="6a235-139">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-139">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, valuetype System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource), partitionerOptions As EnumerablePartitionerOptions) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Collections::Concurrent::EnumerablePartitionerOptions partitionerOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="partitionerOptions" Type="System.Collections.Concurrent.EnumerablePartitionerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="6a235-140">Тип элементов исходной перечисляемой коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-140">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="6a235-141">Разделяемая перечисляемая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-141">The enumerable to be partitioned.</span>
          </span>
        </param>
        <param name="partitionerOptions">
          <span data-ttu-id="6a235-142">Параметры для управления поведением буферизации модуля разделения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-142">Options to control the buffering behavior of the partitioner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-143">Создает упорядочиваемый разделитель из экземпляра <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-143">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-144">Упорядочиваемый модуль разделения, созданный на основе входного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-144">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-145">Порядок, используемый в созданном модуле разделения определяется естественным порядком элементов по мере извлечения из исходного перечисления.</span><span class="sxs-lookup"><span data-stu-id="6a235-145">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a235-146">Аргумент <paramref name="partitionerOptions" /> задает недопустимое значение для <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-146">The <paramref name="partitionerOptions" /> argument specifies an invalid value for <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IList&lt;TSource&gt; list, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (list As IList(Of TSource), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IList&lt;TSource&gt; ^ list, bool loadBalance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="6a235-147">Тип элементов исходного списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-147">Type of the elements in source list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="6a235-148">Разделяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-148">The list to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="6a235-149">Логическое значение, которое указывает, должен ли созданный модуль разделения динамически распределять нагрузку между разделами или статически создавать разделы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-149">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-150">Создает упорядочиваемый разделитель из экземпляра <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-150">Creates an orderable partitioner from an <see cref="T:System.Collections.Generic.IList`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-151">Упорядочиваемый модуль разделения, созданный на основе входного списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-151">An orderable partitioner based on the input list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-152">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-152">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (TSource[] array, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(!!TSource[] array, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (array As TSource(), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(cli::array &lt;TSource&gt; ^ array, bool loadBalance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TSource[]" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="6a235-153">Тип элементов исходного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-153">Type of the elements in source array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="6a235-154">Разделяемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-154">The array to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="6a235-155">Логическое значение, которое указывает, должен ли созданный модуль разделения динамически распределять нагрузку между разделами или статически создавать разделы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-155">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a235-156">Создает упорядочиваемый разделитель из экземпляра <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-156">Creates an orderable partitioner from a <see cref="T:System.Array" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a235-157">Упорядочиваемый модуль разделения, созданный на основе входного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a235-157">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a235-158">Дополнительные сведения и примеры см. в разделе [пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="6a235-158">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>