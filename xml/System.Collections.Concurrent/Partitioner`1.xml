<Type Name="Partitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.Partitioner&lt;TSource&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1eaa3e485994bd8abd424dc8bacbaaf952b4a75" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Partitioner`1&lt;TSource&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class Partitioner abstract" />
  <TypeSignature Language="F#" Value="type Partitioner&lt;'Source&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource">Тип элементов коллекции.</typeparam>
    <summary>Представляет определенный способ разделения источника данных на несколько разделов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в разделе [Пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).  
  
   
  
## Examples  
 В следующем примере показана реализация разделителем, который возвращает один элемент за один раз:  
  
 [!code-csharp[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/cs/partitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/vb/partitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Статические методы <see cref="T:System.Collections.Concurrent.Partitioner`1" /> все поточно ориентированного и могут быть использованы одновременно из нескольких потоков. Однако во время использования созданного модуля разделения базового источника данных не может изменяться, как и в случае с одного потока, который использует разделитель, так и из отдельного потока.</threadsafe>
    <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
    <altmember cref="T:System.Collections.Concurrent.Partitioner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Partitioner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Partitioner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр модуля разделения.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;&#xA;override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="partitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект, который может разделить базовую коллекцию на переменное число разделов.</summary>
        <returns>Объект, который может создать разделы в базовом источнике данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемый объект реализует <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> интерфейса. Вызов <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> в объекте создается другой секции в последовательности.  
  
 <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A> Метод поддерживается только в том случае, если <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> свойство возвращает значение true. Дополнительные сведения см. в разделе [Пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Создание динамических разделов не поддерживается базовым классом. Это необходимо реализовать в производном классе.</exception>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="partitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount">Число создаваемых разделов.</param>
        <summary>Делит базовую коллекцию на указанное число разделов.</summary>
        <returns>Список, содержащий перечислители <paramref name="partitionCount" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс, реализующий этот метод должен вернуть ровно столько секций, которые указаны в `partitionCount`. Если раздел не содержит элементов, возвращается пустой перечислитель, а не значение null (Nothing в Visual Basic). Дополнительные сведения см. в разделе [Пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDynamicPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDynamicPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDynamicPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDynamicPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDynamicPartitions : bool" Usage="System.Collections.Concurrent.Partitioner&lt;'Source&gt;.SupportsDynamicPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, определяющее, могут ли быть динамически созданы дополнительные разделы.</summary>
        <value>Значение true, если объект <see cref="T:System.Collections.Concurrent.Partitioner`1" /> может динамически создавать разделы по запросу; значение false, если объект <see cref="T:System.Collections.Concurrent.Partitioner`1" /> может только статически выделять разделы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если производный класс не переопределять и реализовывать <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>, <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> должен возвращать значение false. Значение <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> не должен изменяться в течение времени существования этого экземпляра. Дополнительные сведения см. в разделе [Пользовательские разделители для PLINQ и TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
      </Docs>
    </Member>
  </Members>
</Type>