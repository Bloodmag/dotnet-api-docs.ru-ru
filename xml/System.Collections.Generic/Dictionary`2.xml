<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Dictionary`2.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac501d6c6007f8665d72bc06b2e847e42b64121d593.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01d6c6007f8665d72bc06b2e847e42b64121d593</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">Тип ключей в словаре.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">Тип значений в словаре.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Represents a collection of keys and values.</source>
          <target state="translated">Представляет коллекцию ключей и значений.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class provides a mapping from a set of keys to a set of values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Универсальный класс предоставляет сопоставление набора значений из набора ключей.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Each addition to the dictionary consists of a value and its associated key.</source>
          <target state="translated">Каждый элемент, добавляемый в словарь, состоит из значения и связанного с ним ключа.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Retrieving a value by using its key is very fast, close to O(1), because the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class is implemented as a hash table.</source>
          <target state="translated">Получение значения по его ключу — очень быстро, закройте O(1), так как <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класс реализован в виде хэш-таблицу.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The speed of retrieval depends on the quality of the hashing algorithm of the type specified for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">Скорость извлечения зависит от качества алгоритма хэширования типа, указанного для <ph id="ph1">`TKey`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As long as an object is used as a key in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, it must not change in any way that affects its hash value.</source>
          <target state="translated">При условии, что объект используется в качестве ключа <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, его нельзя изменять каким-либо образом влияет на его хэш-значение.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the dictionary's equality comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным в соответствии с компаратор проверки на равенство словаря.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Ключ не может быть <ph id="ph1">`null`</ph>, но значение может быть, если ввести значение <ph id="ph2">`TValue`</ph> является ссылочным типом.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify an implementation, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">Можно указать реализацию <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> универсальный интерфейс, используя конструктор, который принимает <ph id="ph2">`comparer`</ph> параметра; если не указать реализацию, универсальный компаратор по умолчанию <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> используется.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example, you can use the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Например, можно использовать функции сравнения строк без учета регистра, предоставляемые <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> класс для создания словарей со учитывающие регистр строковые ключи.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — число элементов <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> может содержать.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">При добавлении элементов к <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Для очень больших <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> объектов Максимальная емкость 2 миллиардов элементы в 64-разрядной системе можно повысить, указав <ph id="ph2">`enabled`</ph> атрибута элемента конфигурации для <ph id="ph3">`true`</ph> в среде выполнения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For purposes of enumeration, each item in the dictionary is treated as a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">В целях перечисления каждого элемента в словаре рассматривается как <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> структура, представляющая значение и ее ключа.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The order in which the items are returned is undefined.</source>
          <target state="translated">Порядок, в котором возвращаются элементы, не определено.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) возвращает объект типа элементов в коллекции.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Since the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a collection of keys and values, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Поскольку <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — коллекцию ключей и значений, тип элемента не является типом ключа или тип значения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Instead, the element type is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> of the key type and the value type.</source>
          <target state="translated">Вместо этого тип элемента — это <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> тип ключа и тип значения.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкция является оболочкой перечислителя, допускающей только чтение из коллекции, не запись в нее.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Поскольку ключи могут наследоваться и их поведение изменено, абсолютная уникальность не гарантируется при сравнении с <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">В следующем примере кода создается пустой <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> строк с строковых ключей и использует <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод, чтобы добавить некоторые элементы.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Пример показывает, что <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> при попытке добавить повторяющийся ключ.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство (индексатор в C#) для получения значений, демонстрации, <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> генерируется, если запрошенный параметр не указан, показывающий, что значение, связанное с ключом может быть заменен.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">В примере показано использование <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> метод как более эффективный способ получения значений, если в программе часто пытающейся значения ключей, которых нет в словаре, а также показано, как использовать <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> метод для проверки наличия ключа перед вызовом <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> настроек метод.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">В примере показано, как перечисление ключей и значений в словаре и как выполнить перечисление ключей и значений отдельно с использованием <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> свойство и <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Finally, the example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Наконец, в примере демонстрируется <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> может поддерживать несколько читающих параллельно, до тех пор, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Даже в этом случае перечисление коллекции само по себе не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>In the rare case where an enumeration contends with write accesses, the collection must be locked during the entire enumeration.</source>
          <target state="translated">В редких случаях, когда перечислению может с доступом для записи необходимо заблокировать коллекцию на все время перечисления.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>For thread-safe alternatives, see the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> class or <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Поточно ориентированного альтернативных вариантов, в разделе <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /&gt;</ph> класса или <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Открытые статические (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> в Visual Basic) члены этого типа являются потокобезопасными.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Dictionary`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Инициализирует новый пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, имеющий начальную емкость по умолчанию и использующий функцию сравнения по умолчанию, проверяющую равенство для данного типа ключа.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным согласно компаратору проверки на равенство по умолчанию.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Кроме того, можно указать реализацию <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> универсальный интерфейс, используя конструктор, который принимает <ph id="ph2">`comparer`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Если размер коллекции можно оценить, используя конструктор, который указывает начальную емкость избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">В следующем примере кода создается пустой <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> строк с строковых ключей и использует <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод, чтобы добавить некоторые элементы.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Пример показывает, что <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> при попытке добавить повторяющийся ключ.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, элементы которого копируются в новый объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the default equality comparer for the key type.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, который содержит элементы, скопированные из заданной коллекции <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, и использует функцию сравнения по умолчанию, проверяющую равенство для данного типа ключа.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the default equality comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должен быть уникальным по умолчанию компаратор проверки на равенство; аналогичным образом, каждый ключ в источнике <ph id="ph2">`dictionary`</ph> также должны быть уникальными согласно компаратору проверки на равенство по умолчанию.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">Начальная емкость нового <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> является достаточно велик, чтобы вместить все элементы в <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Кроме того, можно указать реализацию <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> универсальный интерфейс, используя конструктор, который принимает <ph id="ph2">`comparer`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with sorted content from another dictionary.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> конструктор для инициализации <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> с Сортировка содержимого в другом словаре.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">В примере кода создается <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> и заполняет ее данными в случайном порядке, а затем передает <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> для <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> конструктор, создание <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> , отсортирован.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Это полезно, если необходимо построить отсортированный словарь, который в определенный момент становится статическим. копирование данных из <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> для <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> увеличивает скорость извлечения.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> содержит один или несколько ключей-дубликатов.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении ключей, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если для данного типа ключа должна использоваться реализация <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> начальной емкостью по умолчанию, использующий указанную функцию сравнения <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Используйте этот конструктор, с помощью функции сравнения строк без учета регистра, предоставляемые <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> класс для создания словарей со учитывающие регистр строковые ключи.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным в соответствии с указанной функции сравнения.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">`comparer`</ph> — <ph id="ph2">`null`</ph>, этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>If you can estimate the size of the collection, using a constructor that specifies the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Если размер коллекции можно оценить, используя конструктор, который указывает начальную емкость избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">В следующем примере кода создается <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> с компаратор проверки на равенство без учета регистра для текущего языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">В примере добавляются четыре элемента, некоторые с ключами в нижнем регистре, а некоторые с ключами в верхнем регистре.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">Затем производится попытка добавить элемент с ключом, который отличается от существующего ключа только регистром, перехватывает результирующее исключение и отображает сообщение об ошибке.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Наконец выводится список элементов в словаре.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Начальное количество элементов, которое может содержать коллекция <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</source>
          <target state="translated">Инициализирует новый пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, имеющий заданную начальную емкость и использующий функцию сравнения по умолчанию, проверяющую равенство для данного типа ключа.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the default equality comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным согласно компаратору проверки на равенство по умолчанию.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — количество элементов, которые могут быть добавлены <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> до изменения размера не требуется.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">При добавлении элементов к <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Если размер коллекции можно оценить, целесообразно указать начальную емкость избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor uses the default generic equality comparer, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>Alternatively, you can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter.</source>
          <target state="translated">Кроме того, можно указать реализацию <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> универсальный интерфейс, используя конструктор, который принимает <ph id="ph2">`comparer`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source>The following code example creates a dictionary with an initial capacity of 4 and populates it with 4 entries.</source>
          <target state="translated">В следующем примере кода создается словарь с начальной емкостью 4 и заполняется 4 записями.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, элементы которого копируются в новый объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении ключей, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если для данного типа ключа должна использоваться реализация <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, который содержит элементы, скопированные из заданной коллекции <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, и использует указанный интерфейс <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Используйте этот конструктор, с помощью функции сравнения строк без учета регистра, предоставляемые <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> класс для создания словарей со учитывающие регистр строковые ключи.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the specified comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным в соответствии с указанной функции сравнения; аналогичным образом, каждый ключ в источнике <ph id="ph2">`dictionary`</ph> должно быть уникальным в соответствии с указанной функции сравнения.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>For example, duplicate keys can occur if <ph id="ph1">`comparer`</ph> is one of the case-insensitive string comparers provided by the <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> class and <ph id="ph3">`dictionary`</ph> does not use a case-insensitive comparer key.</source>
          <target state="translated">Например, может возникать повторяющиеся ключи, если <ph id="ph1">`comparer`</ph> является одним из функции сравнения строк без учета регистра, предоставляемые <ph id="ph2">&lt;xref:System.StringComparer&gt;</ph> класса и <ph id="ph3">`dictionary`</ph> не использует ключ сравнения без учета регистра.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is large enough to contain all the elements in <ph id="ph2">`dictionary`</ph>.</source>
          <target state="translated">Начальная емкость нового <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> является достаточно велик, чтобы вместить все элементы в <ph id="ph2">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">`comparer`</ph> — <ph id="ph2">`null`</ph>, этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`dictionary`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`dictionary`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor to initialize a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with case-insensitive sorted content from another dictionary.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> конструктор для инициализации <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> с без учета регистра отсортированный содержимого в другом словаре.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> with a case-insensitive comparer and populates it with data in random order, then passes the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor, along with a case-insensitive equality comparer, creating a <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> that is sorted.</source>
          <target state="translated">В примере кода создается <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> с сравнения без учета регистра и заполняет ее данными в случайном порядке, а затем передает <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> для <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> конструктор, а также компаратор проверки на равенство без учета регистра, создание <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> сортируются.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This is useful if you need to build a sorted dictionary that at some point becomes static; copying the data from a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> to a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> improves retrieval speed.</source>
          <target state="translated">Это полезно, если необходимо построить отсортированный словарь, который в определенный момент становится статическим. копирование данных из <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> для <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> увеличивает скорость извлечения.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source>When you create a new dictionary with a case-insensitive comparer and populate it with entries from a dictionary that uses a case-sensitive comparer, as in this example, an exception occurs if the input dictionary has keys that differ only by case.</source>
          <target state="translated">При создании нового словаря с сравнения без учета регистра и заполнить его записями из словарь, используемый для сравнения с учетом регистра, как показано в этом примере исключение возникает, если в словаре входных данных имеет ключи, которые различаются только регистром.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> содержит один или несколько ключей-дубликатов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> can contain.</source>
          <target state="translated">Начальное количество элементов, которое может содержать коллекция <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing keys, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении ключей, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если для данного типа ключа должна использоваться реализация <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> заданной начальной емкостью, использующий указанную функцию сравнения <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Use this constructor with the case-insensitive string comparers provided by the <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> class to create dictionaries with case-insensitive string keys.</source>
          <target state="translated">Используйте этот конструктор, с помощью функции сравнения строк без учета регистра, предоставляемые <ph id="ph1">&lt;xref:System.StringComparer&gt;</ph> класс для создания словарей со учитывающие регистр строковые ключи.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> должно быть уникальным в соответствии с указанной функции сравнения.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that can be added to the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> before resizing is necessary.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — количество элементов, которые могут быть добавлены <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> до изменения размера не требуется.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">При добавлении элементов к <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Если размер коллекции можно оценить, целесообразно указать начальную емкость избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, this constructor uses the default generic equality comparer, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">`comparer`</ph> — <ph id="ph2">`null`</ph>, этот конструктор использует по умолчанию универсальный компаратор, <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>If type <ph id="ph1">`TKey`</ph> implements the <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> generic interface, the default equality comparer uses that implementation.</source>
          <target state="translated">Если тип <ph id="ph1">`TKey`</ph> реализует <ph id="ph2">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> универсального интерфейса, компаратор по умолчанию использует эту реализацию.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> with an initial capacity of 5 and a case-insensitive equality comparer for the current culture.</source>
          <target state="translated">В следующем примере кода создается <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> с начальной емкостью 5, а компаратор проверки на равенство без учета регистра для текущего языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">В примере добавляются четыре элемента, некоторые с ключами в нижнем регистре, а некоторые с ключами в верхнем регистре.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">Затем производится попытка добавить элемент с ключом, который отличается от существующего ключа только регистром, перехватывает результирующее исключение и отображает сообщение об ошибке.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Finally, the example displays the elements in the dictionary.</source>
          <target state="translated">Наконец выводится список элементов в словаре.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object containing the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, который содержит сведения, требуемые для сериализации коллекции <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure containing the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, содержащая исходный объект и объект назначения для сериализованного потока, связанного с коллекцией <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> с сериализованными данными.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object transmitted over a stream.</source>
          <target state="translated">Данный конструктор вызывается в процессе десериализации для воссоздания объекта, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сериализации XML и SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">Ключ добавляемого элемента.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">Добавляемое значение элемента.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Для ссылочных типов допускается значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Добавляет указанные ключ и значение в словарь.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>; for example, <ph id="ph3">`myCollection[myKey] = myValue`</ph> (in Visual Basic, <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство для добавления новых элементов, задав значение ключа, который не существует в <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, например <ph id="ph3">`myCollection[myKey] = myValue`</ph> (в Visual Basic <ph id="ph4">`myCollection(myKey) = myValue`</ph>).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Тем не менее если указанный ключ уже существует в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, параметр <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство перезаписывает прежнее значение.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an exception if a value with the specified key already exists.</source>
          <target state="translated">Напротив <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод вызывает исключение, если значение с указанным ключом уже существует.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property value already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> значение свойства равно емкости, емкость <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> увеличивается на автоматического перераспределения внутреннего массива и существующие элементы копируются в новый массив перед добавлением нового элемента.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Ключ не может быть <ph id="ph1">`null`</ph>, но значение может быть, если <ph id="ph2">`TValue`</ph> является ссылочным типом.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> меньше, чем значение емкости, этот метод приближается операцией o(1).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Если необходимо увеличить емкость для размещения нового элемента, этот метод становится операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">В следующем примере кода создается пустой <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> строк с строковых ключей и использует <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод, чтобы добавить некоторые элементы.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">Пример показывает, что <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> при попытке добавить повторяющийся ключ.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Элемент с таким ключом уже существует в <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>Removes all keys and values from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Удаляет все ключи и значения из словаря <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> Задано значение 0, а также ссылки на другие объекты из элементов коллекции также освобождаются.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">Емкость не изменяется.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the capacity of the dictionary.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> емкость словаря.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> that is used to determine equality of keys for the dictionary.</source>
          <target state="translated">Возвращает интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, используемый для установления равенства ключей словаря.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface implementation that is used to determine equality of keys for the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> and to provide hash values for the keys.</source>
          <target state="translated">Реализация универсального интерфейса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, используемая для установления равенства ключей текущего словаря <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> и для задания хэш-кодов ключей.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> requires an equality implementation to determine whether keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> требуется реализация равенства для определения равенства ключей.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>You can specify an implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface by using a constructor that accepts a <ph id="ph2">`comparer`</ph> parameter; if you do not specify one, the default generic equality comparer <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> is used.</source>
          <target state="translated">Можно указать реализацию <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> универсальный интерфейс, используя конструктор, который принимает <ph id="ph2">`comparer`</ph> параметра; Если вы не укажете его, универсальный компаратор по умолчанию <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> используется.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Comparer">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Ключ, который требуется найти в <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains the specified key.</source>
          <target state="translated">Определяет, содержится ли указанный ключ в словаре <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> содержит элемент с указанным ключом, в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Этот метод применяется подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> метод для проверки наличия ключа до вызова метода <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</source>
          <target state="translated">Также показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> для получения значения, метод, который является эффективным способом для получения значения, если программа пытается часто ключи, отсутствующие в словаре.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>Finally, it shows the least efficient way to test whether keys exist, by using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">Наконец, он показывает наименее эффективным способом проверки ли разделы существуют, с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство (индексатор в C#).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса (<ph id="ph2">`openWith`</ph> имя словарь, используемый в этом примере).</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Значение, которое требуется найти в словаре <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Для ссылочных типов допускается значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Определяет, содержит ли коллекция <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> указанное значение.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> содержит элемент с указанным значением; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`TValue`</ph>, the type of values in the dictionary.</source>
          <target state="translated">Этот метод определяет равенство, используя компаратор проверки на равенство по умолчанию <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> для <ph id="ph2">`TValue`</ph>, тип значений в словаре.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод выполняет линейный поиск; Таким образом, среднее время выполнения пропорционально <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Возвращает число пар "ключ-значение", содержащихся в словаре <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Число пар "ключ-значение", содержащихся в словаре <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> can store.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — количество элементов, <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> можно сохранить.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> property is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> Свойство — количество элементов, фактически <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Емкость всегда больше или равно <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> превышает емкость при добавлении элементов, емкость увеличивается посредством автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Count">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Возвращает перечислитель, осуществляющий перебор элементов списка <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> structure for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /&gt;</ph> для <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">В целях перечисления каждый элемент — <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> структура, представляющая значение и ее ключа.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Для повышения производительности перечислителя, возвращенный этим свойством не вызывает исключение, если он расположен перед первым элементом или после последнего элемента и <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> доступ к свойству; значение <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> свойства не определено.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same element until the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> Свойство возвращает один и тот же элемент до <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> вызывается метод.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Значение свойства <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> не может быть повторно задано первому элементу коллекции; вместо этого следует создать новый экземпляр перечислителя.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, который содержит сведения, требуемые для сериализации экземпляра <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, содержащая исходный и конечный объекты сериализованного потока, связанного с экземпляром <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance.</source>
          <target state="translated">Реализует интерфейс <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> и возвращает данные, необходимые для сериализации экземпляра <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="info" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> действие по обеспечению безопасности: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The key of the value to get or set.</source>
          <target state="translated">Ключ, значение которого требуется получить или задать.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Возвращает или задает значение, связанное с указанным ключом.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">Значение, связанное с указанным ключом.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the specified key is not found, a get operation throws a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, and a set operation creates a new element with the specified key.</source>
          <target state="translated">Если указанный ключ не найден, операция получения создает исключение <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>, а операция задания значения создает новый элемент с указанным ключом.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса C#: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство для добавления новых элементов, задав значение ключа, который не существует в <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>When you set the property value, if the key is in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the value associated with that key is replaced by the assigned value.</source>
          <target state="translated">Если задано значение свойства, если ключ находится в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, присвоенное значение заменяется значение, связанное с этим ключом.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>If the key is not in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, the key and value are added to the dictionary.</source>
          <target state="translated">Если ключ не находится в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, добавить ключ и значение в словарь.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Напротив <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Add%2A&gt;</ph> метод не изменяет существующие элементы.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the value type <ph id="ph2">`TValue`</ph> is a reference type.</source>
          <target state="translated">Ключ не может быть <ph id="ph1">`null`</ph>, но значение может быть, если ввести значение <ph id="ph2">`TValue`</ph> является ссылочным типом.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Ключевое слово языка C# используется для определения индексаторов вместо реализации <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph>, предоставляющее те же возможности индексирования.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Получение или установка значения этого свойства подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">Следующий пример кода использует <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство (индексатор в C#) для получения значений, демонстрации, <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> генерируется, если запрошенный параметр не указан, показывающий, что значение, связанное с ключом может быть заменен.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">В примере также показано использование <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> метод как более эффективный способ получения значений в программе часто пытающейся значения ключей, которых нет в словаре.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example.</source>
          <target state="translated"><ph id="ph1">`openWith`</ph> — Это имя словарь, используемый в этом примере.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">Свойство получено, а <ph id="ph1">&lt;paramref name="key" /&gt;</ph> не существует в коллекции.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Возвращает коллекцию, содержащую ключи из словаря <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /&gt;</ph>, содержащий ключи из <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">Порядок следования ключей в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> не указан, но это отличном от порядка соответствующих значений в <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Возвращенный <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> не является статической копией; вместо этого <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> ссылается на ключи в исходной коллекции <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">Поэтому изменения в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> будут отражены в по-прежнему <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>The following code example shows how to enumerate the keys in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">В следующем примере кода показано, как выполнить перечисление ключей в словаре с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> свойство и как выполнить перечисление ключей и значений в словаре.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed (<ph id="ph1">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Данный пример кода является частью большего примера, который компилируется и выполняется (<ph id="ph1">`openWith`</ph> имя словарь, используемый в этом примере).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">См. раздел <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Источник события десериализации.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Реализует интерфейс <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> и вызывает событие десериализации при завершении десериализации.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> instance is invalid.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, связанный с текущим экземпляром класса <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, является недопустимым.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">Ключ элемента, который требуется удалить.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>Removes the value with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Удаляет значение с указанным ключом из <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если элемент был найден и удален; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Этот метод возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если ключ <ph id="ph2">&lt;paramref name="key" /&gt;</ph> не удалось найти в <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> remains unchanged.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> не содержит элемент с указанным ключом, <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> остается без изменений.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">Исключение не возникает.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Этот метод применяется подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from a dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере кода показано, как удалить пару ключ значение из словаря с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Remove%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса (<ph id="ph2">`openWith`</ph> имя словарь, используемый в этом примере).</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">Одномерный массив, в который копируются элементы из коллекции <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Индекс в массиве должен начинаться с нуля.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Отсчитываемый от нуля индекс в <bpt id="p1">&lt;c&gt;</bpt>массиве<ept id="p1">&lt;/c&gt;</ept> с которого начинается копирование.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> to an array, starting at the specified array index.</source>
          <target state="translated">Копирует элементы коллекции <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> в массив, начиная с указанного индекса массива.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Each element copied from a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">Все элементы, скопированные из <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> структура, представляющая значение и ее ключа.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Если тип источника <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> не может быть автоматически приведен к типу массива назначения <ph id="ph2">`array`</ph>, неуниверсальных реализаций <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, тогда как универсальный реализации вызывают <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated">Массив <ph id="ph1">&lt;paramref name="array" /&gt;</ph> является многомерным.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated">В массиве <ph id="ph1">&lt;paramref name="array" /&gt;</ph> не используется индексация, начинающаяся с нуля.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Число элементов в исходном массиве <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> больше доступного места от положения, заданного значением параметра <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, до конца массива назначения <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Тип исходного массива <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> не может быть автоматически приведен к типу массива назначения <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Возвращает значение, показывающее, является ли доступ к коллекции <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> синхронизированным (потокобезопасным).</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если доступ к классу <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> является синхронизированным (потокобезопасным); в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">В используемой по умолчанию реализации <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> это свойство всегда возвращает значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</source>
          <target state="translated">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что может привести к созданию исключения перечислителем.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Свойство возвращает объект, который может использоваться для синхронизации доступа к <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">Синхронизация действует только в том случае, если все потоки блокируют объект перед доступом к коллекции.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Объект, который может использоваться для синхронизации доступа к <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Свойство возвращает объект, который может использоваться для синхронизации доступа к <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">Синхронизация действует только в том случае, если все потоки блокируют объект перед доступом к коллекции.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">В следующем коде показано использование <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> свойство для C#, C++ и Visual Basic.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key.</source>
          <target state="translated">Объект, который используется в качестве ключа.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value.</source>
          <target state="translated">Объект, который используется в качестве значения.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds the specified key and value to the dictionary.</source>
          <target state="translated">Добавляет указанные ключ и значение в словарь.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> свойство для добавления новых элементов, задав значение ключа, который не существует в словаре, например, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Однако если указанный ключ уже существует в словаре, задание <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> свойство перезаписывает прежнее значение.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method throws an exception if the specified key already exists.</source>
          <target state="translated">Напротив <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> метод вызывает исключение, если указанный ключ уже существует.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> is less than the capacity, this method approaches an O(1) operation.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph> меньше, чем значение емкости, этот метод приближается операцией o(1).</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</source>
          <target state="translated">Если емкость требуется увеличить для размещения нового элемента, этот метод становится операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example shows how to access the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class through the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">В следующем примере кода показано, как получить доступ к <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса через <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">В примере кода создается пустой <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> строк с строковых ключей и использует <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод, чтобы добавить некоторые элементы.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</source>
          <target state="translated">Пример показывает, что <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> вызывает исключение <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> при попытке добавить повторяющийся ключ, или если ключ или значение неверного типа данных.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example demonstrates the use of several other members of the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">В примере кода показано использование других элементов пространства <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет тип, который не может быть назначен типу ключа <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> объекта <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph>, the type of values in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Тип параметра <ph id="ph1">&lt;paramref name="value" /&gt;</ph> не допускает присваивание типу значений <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> словаря <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>A value with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Значение с таким ключом уже существует в <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Ключ, который требуется найти в <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">Определяет, содержится ли элемент с указанным ключом в <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> содержит элемент с указанным ключом, в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method returns <ph id="ph1">`false`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Этот метод возвращает <ph id="ph1">`false`</ph> Если <ph id="ph2">`key`</ph> относится к типу, который не допускает присваивание типу ключа <ph id="ph3">`TKey`</ph> из <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Этот метод применяется подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> взаимодействовать с <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The example demonstrates that the method returns <ph id="ph1">`false`</ph> if a key of the wrong data type is supplied.</source>
          <target state="translated">В примере показано, что этот метод возвращает <ph id="ph1">`false`</ph> Если указан неверный тип данных является ключом.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Возвращает перечислитель <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> для словаря <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> для <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">В целях перечисления каждый элемент — <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> структура, представляющая значение и ее ключа.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> Метод также переводит перечислитель в эту позицию.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> Свойство возвращает тот же элемент, пока не <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывается метод.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы снова задать в качестве значения свойства <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> первый элемент коллекции, можно последовательно вызвать методы <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> и<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The following code example shows how to enumerate the key/value pairs in the dictionary by using the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++), which hides the use of the enumerator.</source>
          <target state="translated">В следующем примере кода показано, как перечислять пары "ключ значение" в словаре, используя <ph id="ph1">`foreach`</ph> инструкции (<ph id="ph2">`For Each`</ph> в Visual Basic <ph id="ph3">`for each`</ph> в C++), которое скрывает применение перечислителя.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>In particular, note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">В частности, обратите внимание, что перечислитель для <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> интерфейс возвращает <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> объектов вместо <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Получает значение, указывающее, имеет ли список <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> фиксированный размер.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если словарь <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> имеет фиксированный размер; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">В используемой по умолчанию реализации <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> это свойство всегда возвращает значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Коллекция фиксированного размера является просто коллекцией с оболочкой, препятствующей добавлению и удалению элементов; Поэтому если были внесены изменения в базовой коллекции, включая добавление или удаление элементов, эти изменения отражаются в коллекции фиксированного размера.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">Получает значение, указывающее, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> доступным только для чтения.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если интерфейс <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> доступен только для чтения; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">В используемой по умолчанию реализации <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> это свойство всегда возвращает значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Коллекции, доступной только для чтения является просто коллекцией с оболочкой, препятствующей изменению коллекции. Таким образом при внесении изменений в базовую коллекцию, доступную только для чтения коллекцию отражает эти изменения.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the value to get.</source>
          <target state="translated">Ключ значения, которое необходимо получить.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value with the specified key.</source>
          <target state="translated">Возвращает или задает значение с указанным ключом.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Значение, связанное с указанным ключом, или <ph id="ph1">&lt;see langword="null" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="key" /&gt;</ph> отсутствует в словаре или <ph id="ph3">&lt;paramref name="key" /&gt;</ph> имеет тип, который не допускает присваивание типу ключа <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> коллекции <ph id="ph5">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific value in the collection by using the following C# syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">Это свойство предоставляет возможность доступа к конкретное значение в коллекции с помощью следующего синтаксиса C#: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> свойство для добавления новых элементов, задав значение ключа, который не существует в словаре, например, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Однако если указанный ключ уже существует в словаре, задание <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> свойство перезаписывает прежнее значение.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Напротив <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> метод не изменяет существующие элементы.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property.</source>
          <target state="translated">В языке C# используется <bpt id="p1">[</bpt>это<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> ключевое слово для определения индексаторов вместо реализации <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph>, предоставляющее те же возможности индексирования.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Getting or setting the value of this property approaches an O(1) operation.</source>
          <target state="translated">Получение или установка значения этого свойства подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property (the indexer in C#) of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, and ways the property differs from the <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> свойство (индексатор в C#) <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> взаимодействовать с <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>и свойство отличается от способа <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example shows that, like the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</source>
          <target state="translated">В примере показано, как <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> свойства <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> свойство можно изменить значение, связанное с имеющимся ключом и может использоваться для добавьте новую пару ключ значение, если указанный ключ не существует в словаре.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example also shows that unlike the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property does not throw an exception if <ph id="ph3">`key`</ph> is not in the dictionary, returning a null reference instead.</source>
          <target state="translated">В примере также показано, что в отличие от <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A?displayProperty=nameWithType&gt;</ph> свойства <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> свойство не вызывает исключение, если <ph id="ph3">`key`</ph> в словаре, возвращает пустую ссылку вместо него.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Finally, the example demonstrates that getting the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property returns a null reference if <ph id="ph2">`key`</ph> is not the correct data type, and that setting the property throws an exception if <ph id="ph3">`key`</ph> is not the correct data type.</source>
          <target state="translated">Наконец, в примере показано, что начало <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> свойство возвращает пустую ссылку, если <ph id="ph2">`key`</ph> не является правильным типом данных и задать свойству вызывает исключение, если <ph id="ph3">`key`</ph> не является правильным типом данных.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Назначаемое значение и параметр <ph id="ph1">&lt;paramref name="key" /&gt;</ph> типа, который не может быть назначен типу ключа <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> объекта <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Значение присваивается, при этом тип параметра <ph id="ph1">&lt;paramref name="value" /&gt;</ph> не допускает присваивание типу значения <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> объекту <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Возвращает интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, содержащий ключи <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, содержащий ключи из <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">Порядок следования ключей в возвращаемом <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> не указан, но он гарантированно отличном от порядка соответствующих значений в <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the keys in the dictionary.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Keys%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> взаимодействовать с <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, чтобы вывести список ключей в словаре.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">В примере также показано для перечисления пар "ключ значение" в словаре; Обратите внимание, что перечислитель для <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> интерфейс возвращает <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> объектов вместо <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">Ключ элемента, который требуется удалить.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Удаляет элемент с указанным ключом из <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Этот метод применяется подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> из <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> взаимодействовать с <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Возвращает интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, содержащий значения из <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, содержащая значения из словаря <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Порядок значений в возвращенном <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> не указан, но он гарантированно отличном от порядка соответствующих ключей в <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, to list the values in the dictionary.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> взаимодействовать с <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, чтобы вывести список значений в словаре.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">В примере также показано для перечисления пар "ключ значение" в словаре; Обратите внимание, что перечислитель для <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> интерфейс возвращает <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> объектов вместо <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">Пример кода является частью большего примера, включая выходные данные, предоставленные для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, который может использоваться для итерации элементов коллекции.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For purposes of enumeration, each item is a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> structure representing a value and its key.</source>
          <target state="translated">В целях перечисления каждый элемент — <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> структура, представляющая значение и ее ключа.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> Метод также переводит перечислитель в эту позицию.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>For better performance, the enumerator returned by this property does not throw an exception if it is positioned before the first element or after the last element and the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is accessed; the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">Для повышения производительности перечислителя, возвращенный этим свойством не вызывает исключение, если он расположен перед первым элементом или после последнего элемента и <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> доступ к свойству; значение <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A&gt;</ph> свойства не определено.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same element until either the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Свойство возвращает тот же элемент, пока не <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывается метод.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы снова задать в качестве значения свойства <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> первый элемент коллекции, можно последовательно вызвать методы <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> и<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Перечислитель не имеет монопольного доступа к коллекции, поэтому перечисление элементов коллекции само по себе не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The key of the value to get.</source>
          <target state="translated">Ключ значения, которое необходимо получить.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Возвращаемое значение, связанное с указанном ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Этот параметр передается неинициализированным.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">Возвращает значение, связанное с заданным ключом.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> содержит элемент с указанным ключом, в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Этот метод объединяет функциональные возможности <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> метод и <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>; for example, 0 (zero) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">Если ключ не найден, то <ph id="ph1">`value`</ph> параметр возвращает соответствующее значение по умолчанию для типа <ph id="ph2">`TValue`</ph>, например 0 (нуль) для целочисленных типов <ph id="ph3">`false`</ph> для логических типов и <ph id="ph4">`null`</ph> для ссылочных типов.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method if your code frequently attempts to access keys that are not in the dictionary.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> метод, если код часто пытается получить доступ к разделам, которых нет в словаре.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>Using this method is more efficient than catching the <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> thrown by the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">Использование этого метода является более эффективным, чем перехват <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> выводится <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This method approaches an O(1) operation.</source>
          <target state="translated">Этот метод применяется подход к операцией o(1).</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</source>
          <target state="translated">В примере показано использование <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.TryGetValue%2A&gt;</ph> метод как более эффективный способ получения значений в программе, которая часто пытается ключи, отсутствующие в словаре.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>For contrast, the example also shows how the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">Для сравнения в примере также показано, как <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Item%2A&gt;</ph> свойство (индексатор в C#) создает исключения, при попытке получения несуществующей ключей.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса (<ph id="ph2">`openWith`</ph> имя словарь, используемый в этом примере).</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Gets a collection containing the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Возвращает коллекцию, содержащую значения из словаря <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /&gt;</ph>, содержащая значения из словаря <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">Порядок значений в коллекции <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> не указан, но он будет точно таким же, как и порядок соответствующих ключей в коллекции <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.KeyCollection&gt;</ph>, возвращаемой свойством <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602.Keys%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Возвращенный <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> не является статической копией; вместо этого <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph> ссылается на значения в исходной коллекции <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</source>
          <target state="translated">Поэтому изменения в <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> будут отражены в по-прежнему <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example shows how to enumerate the values in the dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> property, and how to enumerate the keys and values in the dictionary.</source>
          <target state="translated">Данный пример кода показано, как выполнить перечисление значений в словаре с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602.Values%2A&gt;</ph> свойство и как выполнить перечисление ключей и значений в словаре.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Dictionary`2.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class (<ph id="ph2">`openWith`</ph> is the name of the Dictionary used in this example).</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> класса (<ph id="ph2">`openWith`</ph> имя словарь, используемый в этом примере).</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>