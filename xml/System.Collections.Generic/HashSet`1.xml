<Type Name="HashSet&lt;T&gt;" FullName="System.Collections.Generic.HashSet&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class HashSet&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.ISet&lt;T&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HashSet`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.ISet`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.HashSet`1" />
  <TypeSignature Language="VB.NET" Value="Public Class HashSet(Of T)&#xA;Implements ICollection(Of T), IDeserializationCallback, IEnumerable(Of T), IReadOnlyCollection(Of T), ISerializable, ISet(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class HashSet : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::ISet&lt;T&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ISet&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.HashSetDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="aa3f6-101">Тип элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-101">The type of elements in the hash set.</span></span></typeparam>
    <summary><span data-ttu-id="aa3f6-102">Представляет набор значений.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-102">Represents a set of values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-103"><xref:System.Collections.Generic.HashSet%601> Класс предоставляет операции над множествами высокой производительности.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-103">The <xref:System.Collections.Generic.HashSet%601> class provides high-performance set operations.</span></span> <span data-ttu-id="aa3f6-104">Набор — это коллекция, которая не содержит повторяющихся элементов, и, элементы которого являются в произвольном порядке.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-104">A set is a collection that contains no duplicate elements, and whose elements are in no particular order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa3f6-105"><xref:System.Collections.Generic.HashSet%601> реализует <xref:System.Collections.Generic.IReadOnlyCollection%601> интерфейса, начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; в предыдущих версиях платформы .NET Framework, <xref:System.Collections.Generic.HashSet%601> не реализует этот интерфейс.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-105"><xref:System.Collections.Generic.HashSet%601> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Generic.HashSet%601> class did not implement this interface.</span></span>  
  
 <span data-ttu-id="aa3f6-106">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-106">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-107">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-107">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-108"><xref:System.Collections.Generic.HashSet%601> Класс основан на модели математических множеств и обеспечивает высокой производительности набор операций, аналогично доступ к ключам <xref:System.Collections.Generic.Dictionary%602> или <xref:System.Collections.Hashtable> коллекций.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-108">The <xref:System.Collections.Generic.HashSet%601> class is based on the model of mathematical sets and provides high-performance set operations similar to accessing the keys of the <xref:System.Collections.Generic.Dictionary%602> or <xref:System.Collections.Hashtable> collections.</span></span> <span data-ttu-id="aa3f6-109">Проще говоря <xref:System.Collections.Generic.HashSet%601> класса можно рассматривать как <xref:System.Collections.Generic.Dictionary%602> коллекции без значения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-109">In simple terms, the <xref:System.Collections.Generic.HashSet%601> class can be thought of as a <xref:System.Collections.Generic.Dictionary%602> collection without values.</span></span>  
  
 <span data-ttu-id="aa3f6-110">Объект <xref:System.Collections.Generic.HashSet%601> коллекции не сортируются и не может содержать повторяющиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-110">A <xref:System.Collections.Generic.HashSet%601> collection is not sorted and cannot contain duplicate elements.</span></span> <span data-ttu-id="aa3f6-111">Если упорядочивание или дублирование элементов является более важным, чем производительность приложения, рассмотрите возможность использования <xref:System.Collections.Generic.List%601> класса вместе с <xref:System.Collections.Generic.List%601.Sort%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-111">If order or element duplication is more important than performance for your application, consider using the <xref:System.Collections.Generic.List%601> class together with the <xref:System.Collections.Generic.List%601.Sort%2A> method.</span></span>  
  
 <span data-ttu-id="aa3f6-112"><xref:System.Collections.Generic.HashSet%601> предоставляет многие математические операции над множествами, такие как сложение (объединение) и вычитание множеств.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-112"><xref:System.Collections.Generic.HashSet%601> provides many mathematical set operations, such as set addition (unions) and set subtraction.</span></span> <span data-ttu-id="aa3f6-113">В следующей таблице перечислены возможные <xref:System.Collections.Generic.HashSet%601> операций и их математические эквиваленты.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-113">The following table lists the provided <xref:System.Collections.Generic.HashSet%601> operations and their mathematical equivalents.</span></span>  
  
|<span data-ttu-id="aa3f6-114">Операция HashSet (Of T)</span><span class="sxs-lookup"><span data-stu-id="aa3f6-114">HashSet(Of T) operation</span></span>|<span data-ttu-id="aa3f6-115">Математический эквивалент</span><span class="sxs-lookup"><span data-stu-id="aa3f6-115">Mathematical equivalent</span></span>|  
|-------------------------------|-----------------------------|  
|<xref:System.Collections.Generic.HashSet%601.UnionWith%2A>|<span data-ttu-id="aa3f6-116">Объединение или сложение множеств</span><span class="sxs-lookup"><span data-stu-id="aa3f6-116">Union or set addition</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.IntersectWith%2A>|<span data-ttu-id="aa3f6-117">пересечение</span><span class="sxs-lookup"><span data-stu-id="aa3f6-117">Intersection</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.ExceptWith%2A>|<span data-ttu-id="aa3f6-118">Вычитание множеств</span><span class="sxs-lookup"><span data-stu-id="aa3f6-118">Set subtraction</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A>|<span data-ttu-id="aa3f6-119">Симметричной разницы</span><span class="sxs-lookup"><span data-stu-id="aa3f6-119">Symmetric difference</span></span>|  
  
 <span data-ttu-id="aa3f6-120">Помимо перечисленных операций <xref:System.Collections.Generic.HashSet%601> класс также предоставляет методы для определения равенства множеств, перекрытия множеств и является ли набор подмножеством или множествами.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-120">In addition to the listed set operations, the <xref:System.Collections.Generic.HashSet%601> class also provides methods for determining set equality, overlap of sets, and whether a set is a subset or superset of another set.</span></span>  
  
 <span data-ttu-id="aa3f6-121">Для очень больших <xref:System.Collections.Generic.HashSet%601> объектов Максимальная емкость 2 миллиардов элементы в 64-разрядной системе можно повысить, указав `enabled` атрибута элемента конфигурации для `true` в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-121">For very large <xref:System.Collections.Generic.HashSet%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="aa3f6-122">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Collections.Generic.HashSet%601> класс реализует <xref:System.Collections.Generic.ISet%601> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-122">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Collections.Generic.HashSet%601> class implements the <xref:System.Collections.Generic.ISet%601> interface.</span></span>  
  
## <a name="hashset-and-linq-set-operations"></a><span data-ttu-id="aa3f6-123">Операции над множествами в HashSet и LINQ</span><span class="sxs-lookup"><span data-stu-id="aa3f6-123">HashSet and LINQ Set Operations</span></span>  
 <span data-ttu-id="aa3f6-124">Технология LINQ предоставляет доступ к `Distinct`, `Union`, `Intersect` и `Except` множествами на любом источнике данных, который реализует <xref:System.Collections.IEnumerable> или <xref:System.Linq.IQueryable> интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-124">LINQ provides access to the `Distinct`, `Union`, `Intersect` and `Except` set operations on any data source that implements the <xref:System.Collections.IEnumerable> or <xref:System.Linq.IQueryable> interfaces.</span></span>  <span data-ttu-id="aa3f6-125"><xref:System.Collections.Generic.HashSet%601> Предоставляет коллекцию большего размера и надежность операций.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-125"><xref:System.Collections.Generic.HashSet%601> provides a larger and more robust collection of set operations.</span></span> <span data-ttu-id="aa3f6-126">Например <xref:System.Collections.Generic.HashSet%601> предоставляет сравнения, такие как <xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A> и <xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-126">For example, <xref:System.Collections.Generic.HashSet%601> provides comparisons such as <xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A> and <xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A>.</span></span>  
  
 <span data-ttu-id="aa3f6-127">Операции над множествами основное различие между LINQ и <xref:System.Collections.Generic.HashSet%601> является операций, что операции над множествами LINQ всегда возвращают новый <xref:System.Collections.Generic.IEnumerable%601> коллекции, в то время как <xref:System.Collections.Generic.HashSet%601> эквивалентные методы используются для изменения текущей коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-127">The primary difference between LINQ set operations and <xref:System.Collections.Generic.HashSet%601> operations is that LINQ set operations always return a new <xref:System.Collections.Generic.IEnumerable%601> collection, whereas the <xref:System.Collections.Generic.HashSet%601> equivalent methods modify the current collection.</span></span>  
  
 <span data-ttu-id="aa3f6-128">Как правило, если нужно создать новый набор, или если приложению требуется доступ только к предоставленному множеству операций, с помощью LINQ операции над множествами для какого-либо <xref:System.Collections.Generic.IEnumerable%601> коллекции или массиве будет достаточно.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-128">Typically, if you must create a new set or if your application needs access only to the provided set operations, using LINQ set operations on any <xref:System.Collections.Generic.IEnumerable%601> collection or array will be sufficient.</span></span> <span data-ttu-id="aa3f6-129">Однако если приложению требуется доступ к операциям дополнительный набор или если это не желательно, или необходимо создать новую коллекцию, используйте <xref:System.Collections.Generic.HashSet%601> класса.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-129">However, if your application requires access to additional set operations, or if it is not desirable or necessary to create a new collection, use the <xref:System.Collections.Generic.HashSet%601> class.</span></span>  
  
 <span data-ttu-id="aa3f6-130">В следующей таблице показаны <xref:System.Collections.Generic.HashSet%601> операции над множествами операций и их эквивалентные LINQ.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-130">The following table shows the <xref:System.Collections.Generic.HashSet%601> operations and their equivalent LINQ set operations.</span></span>  
  
|<span data-ttu-id="aa3f6-131">Операция HashSet (Of T)</span><span class="sxs-lookup"><span data-stu-id="aa3f6-131">HashSet(Of T) operation</span></span>|<span data-ttu-id="aa3f6-132">Эквивалент LINQ</span><span class="sxs-lookup"><span data-stu-id="aa3f6-132">LINQ equivalent</span></span>|  
|-------------------------------|---------------------|  
|<xref:System.Collections.Generic.HashSet%601.UnionWith%2A>|<xref:System.Linq.Enumerable.Union%2A>|  
|<xref:System.Collections.Generic.HashSet%601.IntersectWith%2A>|<xref:System.Linq.Enumerable.Intersect%2A>|  
|<xref:System.Collections.Generic.HashSet%601.ExceptWith%2A>|<xref:System.Linq.Enumerable.Except%2A>|  
|<span data-ttu-id="aa3f6-133">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-133">Not provided.</span></span>|<xref:System.Linq.Enumerable.Distinct%2A>|  
|<xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A>|<span data-ttu-id="aa3f6-134">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-134">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.Overlaps%2A>|<span data-ttu-id="aa3f6-135">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-135">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A>|<span data-ttu-id="aa3f6-136">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-136">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.IsProperSubsetOf%2A>|<span data-ttu-id="aa3f6-137">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-137">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A>|<span data-ttu-id="aa3f6-138">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-138">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.IsProperSupersetOf%2A>|<span data-ttu-id="aa3f6-139">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-139">Not provided.</span></span>|  
|<xref:System.Collections.Generic.HashSet%601.SetEquals%2A>|<span data-ttu-id="aa3f6-140">Не указан.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-140">Not provided.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-141">Следующий пример демонстрирует слияние двух разнородных наборов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-141">The following example demonstrates how to merge two disparate sets.</span></span> <span data-ttu-id="aa3f6-142">В этом примере создаются два <xref:System.Collections.Generic.HashSet%601> объектов и заполняет их четные и нечетные цифры, соответственно.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-142">This example creates two <xref:System.Collections.Generic.HashSet%601> objects, and populates them with even and odd numbers, respectively.</span></span> <span data-ttu-id="aa3f6-143">В третьем <xref:System.Collections.Generic.HashSet%601> создать объект из набора, который содержит четные числа.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-143">A third <xref:System.Collections.Generic.HashSet%601> object is created from the set that contains the even numbers.</span></span> <span data-ttu-id="aa3f6-144">Затем в примере вызывается <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> метод, который добавляет нечетное число, заданное в третий набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-144">The example then calls the <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> method, which adds the odd number set to the third set.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#01)]
 [!code-vb[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/vb/Program.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.SortedSet`1" />
    <altmember cref="T:System.Collections.Generic.ISet`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa3f6-145">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-145">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-146">Инициализирует пустой экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который использует функцию сравнения по умолчанию для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-146">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that is empty and uses the default equality comparer for the set type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-147">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-147">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-148">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-148">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-149">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-149">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-150">Следующий пример демонстрирует создание и заполнение двух <xref:System.Collections.Generic.HashSet%601> объектов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-150">The following example demonstrates how to create and populate two <xref:System.Collections.Generic.HashSet%601> objects.</span></span> <span data-ttu-id="aa3f6-151">Данный пример является частью большего примера, приведенного для <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-151">This example is part of a larger example provided for the <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#03)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="aa3f6-152">Коллекция, элементы которой копируются в новый набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-152">The collection whose elements are copied to the new set.</span></span></param>
        <summary><span data-ttu-id="aa3f6-153">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который использует функцию сравнения по умолчанию для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-153">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-154">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-154">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-155">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-155">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-156">Если `collection` содержит повторяющиеся значения, набор может содержать один из каждого уникального элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-156">If `collection` contains duplicates, the set will contain one of each unique element.</span></span> <span data-ttu-id="aa3f6-157">Будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-157">No exception will be thrown.</span></span> <span data-ttu-id="aa3f6-158">Таким образом, размер результирующего набора не идентичен размер `collection`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-158">Therefore, the size of the resulting set is not identical to the size of `collection`.</span></span>  
  
 <span data-ttu-id="aa3f6-159">Этот конструктор является операцией O (`n`) операции, где `n` — число элементов в `collection` параметра.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-159">This constructor is an O(`n`) operation, where `n` is the number of elements in the `collection` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-160">В следующем примере показано, как создать <xref:System.Collections.Generic.HashSet%601> коллекции из существующего набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-160">The following example shows how to create a <xref:System.Collections.Generic.HashSet%601> collection from an existing set.</span></span> <span data-ttu-id="aa3f6-161">В этом примере два набора создаются с четные и нечетные целые числа, соответственно.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-161">In this example, two sets are created with even and odd integers, respectively.</span></span> <span data-ttu-id="aa3f6-162">В третьем <xref:System.Collections.Generic.HashSet%601> затем создается объект из набора даже целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-162">A third <xref:System.Collections.Generic.HashSet%601> object is then created from the even integer set.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_UnionWith#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-163">Свойство <paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-163"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet (System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet(System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="aa3f6-164">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении значений в наборе, или значение <see langword="null" />, чтобы использовать реализацию <see cref="T:System.Collections.Generic.EqualityComparer`1" /> по умолчанию для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-164">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> implementation for the set type.</span></span></param>
        <summary><span data-ttu-id="aa3f6-165">Инициализирует пустой экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который использует указанную функцию сравнения для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-165">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that is empty and uses the specified equality comparer for the set type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-166">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-166">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-167">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-167">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-168">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-168">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="aa3f6-169">Начальный размер <see cref="T:System.Collections.Generic.HashSet`1" /></span><span class="sxs-lookup"><span data-stu-id="aa3f6-169">The initial size of the <see cref="T:System.Collections.Generic.HashSet`1" /></span></span></param>
        <summary><span data-ttu-id="aa3f6-170">Инициализирует пустой экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, но резервирует пространство для элементов <paramref name="capacity" /> и использует функцию сравнения по умолчанию для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that is empty, but has reserved space for <paramref name="capacity" /> items and uses the default equality comparer for the set type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-171">Поскольку заполнит относительно требовательными к ресурсам (требует проведя пересчет контрольной суммы), это пытается свести к минимуму необходимость изменения размера, задав начальной емкостью, основанного на значении из `capacity`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-171">Since resizes are relatively expensive (require rehashing), this attempts to minimize the need to resize by setting the initial capacity based on the value of the `capacity`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet (System.Collections.Generic.IEnumerable&lt;T&gt; collection, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T), comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="aa3f6-172">Коллекция, элементы которой копируются в новый набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-172">The collection whose elements are copied to the new set.</span></span></param>
        <param name="comparer"><span data-ttu-id="aa3f6-173">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении значений в наборе, или значение <see langword="null" />, чтобы использовать реализацию <see cref="T:System.Collections.Generic.EqualityComparer`1" /> по умолчанию для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-173">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1" /> implementation for the set type.</span></span></param>
        <summary><span data-ttu-id="aa3f6-174">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который использует заданную функцию сравнения для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-175">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-175">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-176">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-176">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-177">Если `collection` содержит повторяющиеся значения, набор может содержать один из каждого уникального элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-177">If `collection` contains duplicates, the set will contain one of each unique element.</span></span> <span data-ttu-id="aa3f6-178">Будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-178">No exception will be thrown.</span></span> <span data-ttu-id="aa3f6-179">Таким образом, размер результирующего набора не идентичен размер `collection`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-179">Therefore, the size of the resulting set is not identical to the size of `collection`.</span></span>  
  
 <span data-ttu-id="aa3f6-180">Этот конструктор является операцией O (`n`) операции, где `n` — число элементов в `collection` параметра.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-180">This constructor is an O(`n`) operation, where `n` is the number of elements in the `collection` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-181">В следующем примере используется указанный <xref:System.Collections.Generic.IEqualityComparer%601> возможным сравнение без учета регистра на элементы <xref:System.Collections.Generic.HashSet%601> коллекцию типов транспортных средств.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-181">The following example uses a supplied <xref:System.Collections.Generic.IEqualityComparer%601> to allow case-insensitive comparisons on the elements of a  <xref:System.Collections.Generic.HashSet%601> collection of vehicle types.</span></span>  
  
 [!code-cpp[System.Collections.Generic.HashSet_ExceptWith#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/cpp/source2.cpp#03)]
 [!code-csharp[System.Collections.Generic.HashSet_ExceptWith#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/cs/source2.cs#03)]
 [!code-vb[System.Collections.Generic.HashSet_ExceptWith#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/vb/source2.vb#03)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-182">Свойство <paramref name="collection" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-182"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashSet (int capacity, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashSet(int capacity, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="aa3f6-183">Начальный размер <see cref="T:System.Collections.Generic.HashSet`1" /></span><span class="sxs-lookup"><span data-stu-id="aa3f6-183">The initial size of the <see cref="T:System.Collections.Generic.HashSet`1" /></span></span></param>
        <param name="comparer"><span data-ttu-id="aa3f6-184">Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении значений в наборе, или NULL (Nothing в Visual Basic), чтобы использовать реализацию <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> по умолчанию для типа набора.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-184">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or null (Nothing in Visual Basic) to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation for the set type.</span></span></param>
        <summary><span data-ttu-id="aa3f6-185">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который использует заданную функцию сравнения для типа набора и обладает достаточной емкостью для размещения элементов <paramref name="capacity" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-185">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class that uses the specified equality comparer for the set type, and has sufficient capacity to accommodate <paramref name="capacity" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-186">Поскольку заполнит относительно требовательными к ресурсам (требует проведя пересчет контрольной суммы), это пытается свести к минимуму необходимость изменения размера, задав начальной емкостью, основанного на значении из `capacity`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-186">Since resizes are relatively expensive (require rehashing), this attempts to minimize the need to resize by setting the initial capacity based on the value of the `capacity`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HashSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HashSet(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="aa3f6-187">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-187">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="aa3f6-188">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-188">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-189">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" /> с сериализованными данными.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-189">Initializes a new instance of the <see cref="T:System.Collections.Generic.HashSet`1" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-190">Данный конструктор вызывается в процессе десериализации для воссоздания объекта, переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-190">This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</span></span> <span data-ttu-id="aa3f6-191">Дополнительные сведения см. в разделе [сериализации XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-191">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="aa3f6-192">Элемент, добавляемый в набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-192">The element to add to the set.</span></span></param>
        <summary><span data-ttu-id="aa3f6-193">Добавляет указанный элемент в набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-193">Adds the specified element to a set.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-194">Значение <see langword="true" />, если элемент добавлен в объект <see cref="T:System.Collections.Generic.HashSet`1" />; значение <see langword="false" />, если элемент уже присутствует в нем.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-194"><see langword="true" /> if the element is added to the <see cref="T:System.Collections.Generic.HashSet`1" /> object; <see langword="false" /> if the element is already present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-195">Если <xref:System.Collections.Generic.HashSet%601.Count%2A> уже равна емкости <xref:System.Collections.Generic.HashSet%601> объекта емкость для размещения нового элемента автоматически изменяется.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-195">If <xref:System.Collections.Generic.HashSet%601.Count%2A> already equals the capacity of the <xref:System.Collections.Generic.HashSet%601> object, the capacity is automatically adjusted to accommodate the new item.</span></span>  
  
 <span data-ttu-id="aa3f6-196">Если <xref:System.Collections.Generic.HashSet%601.Count%2A> меньше, чем значение емкости внутреннего массива, этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-196">If <xref:System.Collections.Generic.HashSet%601.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="aa3f6-197">Если <xref:System.Collections.Generic.HashSet%601> необходимо изменять объект, этот метод становится операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-197">If the <xref:System.Collections.Generic.HashSet%601> object must be resized, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-198">Следующий пример демонстрирует создание и заполнение двух <xref:System.Collections.Generic.HashSet%601> объектов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-198">The following example demonstrates how to create and populate two <xref:System.Collections.Generic.HashSet%601> objects.</span></span> <span data-ttu-id="aa3f6-199">Данный пример является частью большего примера, приведенного для <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-199">This example is part of a larger example provided for the <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#03)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-200">Удаляет все элементы из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-200">Removes all elements from a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-201"><xref:System.Collections.Generic.HashSet%601.Count%2A> равен нулю и ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-201"><xref:System.Collections.Generic.HashSet%601.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="aa3f6-202">Емкость не изменяется до вызова <xref:System.Collections.Generic.HashSet%601.TrimExcess%2A> выполняется.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-202">The capacity remains unchanged until a call to <xref:System.Collections.Generic.HashSet%601.TrimExcess%2A> is made.</span></span>  
  
 <span data-ttu-id="aa3f6-203">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-203">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-204">Следующий пример создает и заполняет <xref:System.Collections.Generic.HashSet%601> коллекции, он удаляется и освобождает память, ссылается коллекция.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-204">The following example creates and populates a <xref:System.Collections.Generic.HashSet%601> collection, then clears it and releases the memory referenced by the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_Clear#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_Clear/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_Clear#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_Clear/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;T&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.HashSet`1.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa3f6-205">Возвращает объект <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для определения равенства значений в наборе.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-205">Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.</span></span></summary>
        <value><span data-ttu-id="aa3f6-206">Объект <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для определения равенства значений в наборе.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-206">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-207">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-207">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="aa3f6-208">Элемент, который нужно найти в объекте <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-208">The element to locate in the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-209">Определяет, содержит ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-209">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object contains the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-210">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> содержит указанный элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-210"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object contains the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-211">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-211">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-212">Следующий пример демонстрирует удаление значений из <xref:System.Collections.Generic.HashSet%601> коллекции с помощью <xref:System.Collections.Generic.HashSet%601.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-212">The following example demonstrates how to remove values from a <xref:System.Collections.Generic.HashSet%601> collection using the <xref:System.Collections.Generic.HashSet%601.Remove%2A> method.</span></span> <span data-ttu-id="aa3f6-213">В этом примере <xref:System.Collections.Generic.HashSet%601.Contains%2A> метод проверяет, что набор содержит значение, прежде чем удалять его.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-213">In this example, the <xref:System.Collections.Generic.HashSet%601.Contains%2A> method verifies that the set contains a value before removing it.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aa3f6-214">Копирует элементы коллекции <see cref="T:System.Collections.Generic.HashSet`1" /> в массив.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-214">Copies the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> collection to an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="aa3f6-215">Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-215">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span> <span data-ttu-id="aa3f6-216">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-216">The array must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="aa3f6-217">Копирует элементы объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-217">Copies the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-218">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-218">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-219">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-219"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="aa3f6-220">Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-220">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span> <span data-ttu-id="aa3f6-221">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-221">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="aa3f6-222">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-222">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="aa3f6-223">Копирует элементы объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив, начиная с указанного индекса массива.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-223">Copies the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-224">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-225">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-225"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aa3f6-226">Значение параметра <paramref name="arrayIndex" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-226"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aa3f6-227">Значение <paramref name="arrayIndex" /> больше длины массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-227"><paramref name="arrayIndex" /> is greater than the length of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="aa3f6-228">Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-228">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span> <span data-ttu-id="aa3f6-229">Индекс в массиве должен начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-229">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="aa3f6-230">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-230">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="aa3f6-231">Число элементов, копируемых в <c>массив</c>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-231">The number of elements to copy to <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="aa3f6-232">Копирует указанное количество элементов объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив, начиная с указанного индекса массива.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-232">Copies the specified number of elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to an array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-233">Этот метод является операцией O (`n`) операции, где `n` — `count`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-233">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-234">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-234"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="aa3f6-235">Значение параметра <paramref name="arrayIndex" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-235"><paramref name="arrayIndex" /> is less than 0.</span></span>  
  
 <span data-ttu-id="aa3f6-236">- или -</span><span class="sxs-lookup"><span data-stu-id="aa3f6-236">-or-</span></span>  
  
 <span data-ttu-id="aa3f6-237">Значение параметра <paramref name="count" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-237"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="aa3f6-238">Значение <paramref name="arrayIndex" /> больше длины массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-238"><paramref name="arrayIndex" /> is greater than the length of the destination <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="aa3f6-239">- или -</span><span class="sxs-lookup"><span data-stu-id="aa3f6-239">-or-</span></span>  
  
 <span data-ttu-id="aa3f6-240">Значение <paramref name="count" /> превышает доступное место, начиная с индекса <paramref name="index" /> и до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-240"><paramref name="count" /> is greater than the available space from the <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.HashSet`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa3f6-241">Возвращает число элементов, содержащихся в наборе.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-241">Gets the number of elements that are contained in a set.</span></span></summary>
        <value><span data-ttu-id="aa3f6-242">Число элементов, содержащихся в наборе.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-242">The number of elements that are contained in the set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-243">Емкость <xref:System.Collections.Generic.HashSet%601> равен числу элементов, которые могут храниться в объекте.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-243">The capacity of a <xref:System.Collections.Generic.HashSet%601> object is the number of elements that the object can hold.</span></span> <span data-ttu-id="aa3f6-244">Объект <xref:System.Collections.Generic.HashSet%601> объекта емкость автоматически увеличивается при добавлении элементов в объект.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-244">A <xref:System.Collections.Generic.HashSet%601> object's capacity automatically increases as elements are added to the object.</span></span>  
  
 <span data-ttu-id="aa3f6-245">Емкость всегда больше или равно <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-245">The capacity is always greater than or equal to <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span> <span data-ttu-id="aa3f6-246">Если <xref:System.Collections.Generic.HashSet%601.Count%2A> превышает емкость при добавлении элементов, емкость задается первого простого числа, которое больше, чем double прежнюю емкость.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-246">If <xref:System.Collections.Generic.HashSet%601.Count%2A> exceeds the capacity while adding elements, the capacity is set to the first prime number that is greater than double the previous capacity.</span></span>  
  
 <span data-ttu-id="aa3f6-247">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-247">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-248">В следующем примере показано, как для создания, заполнения и управлять двумя <xref:System.Collections.Generic.HashSet%601> объектов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-248">The following example demonstrates how to create, populate, and manipulate two <xref:System.Collections.Generic.HashSet%601> objects.</span></span> <span data-ttu-id="aa3f6-249">В этом примере содержимое набора и <xref:System.Collections.Generic.HashSet%601.Count%2A> вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-249">In this example, both the contents of the set and <xref:System.Collections.Generic.HashSet%601.Count%2A> display to the console.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#01)]
 [!code-vb[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/vb/Program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSetComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;T&gt;&gt; CreateSetComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEqualityComparer`1&lt;class System.Collections.Generic.HashSet`1&lt;!T&gt;&gt; CreateSetComparer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.CreateSetComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSetComparer () As IEqualityComparer(Of HashSet(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEqualityComparer&lt;System::Collections::Generic::HashSet&lt;T&gt; ^&gt; ^ CreateSetComparer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Collections.Generic.HashSet&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-250">Возвращает объект <see cref="T:System.Collections.IEqualityComparer" />, который можно использовать для проверки равенства объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-250">Returns an <see cref="T:System.Collections.IEqualityComparer" /> object that can be used for equality testing of a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-251">Объект <see cref="T:System.Collections.IEqualityComparer" />, который можно использовать для выполнения глубокой проверки равенства объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-251">An <see cref="T:System.Collections.IEqualityComparer" /> object that can be used for deep equality testing of the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-252"><xref:System.Collections.IEqualityComparer> Выполняет проверку на равенство только на одном уровне; тем не менее, можно соединить в цепочку вместе функции сравнения на дополнительных уровнях для выполнения более глубокой проверки равенства.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-252">The <xref:System.Collections.IEqualityComparer> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</span></span>  
  
 <span data-ttu-id="aa3f6-253">Вызов этого метода является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-253">Calling this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureCapacity">
      <MemberSignature Language="C#" Value="public int EnsureCapacity (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EnsureCapacity(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.EnsureCapacity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureCapacity (capacity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EnsureCapacity(int capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptWith">
      <MemberSignature Language="C#" Value="public void ExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-254">Коллекция элементов, удаляемая из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-254">The collection of items to remove from the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-255">Удаляет все элементы в указанной коллекции из текущего объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-255">Removes all elements in the specified collection from the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-256"><xref:System.Collections.Generic.HashSet%601.ExceptWith%2A> Метод является эквивалентом вычитание математических множеств.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-256">The <xref:System.Collections.Generic.HashSet%601.ExceptWith%2A> method is the equivalent of mathematical set subtraction.</span></span>  
  
 <span data-ttu-id="aa3f6-257">Этот метод является операцией O (`n`) операции, где `n` — число элементов в `other` параметра.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-257">This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-258">В следующем примере создается два <xref:System.Collections.Generic.HashSet%601> коллекций с перекрывающимися наборов данных.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-258">The following example creates two <xref:System.Collections.Generic.HashSet%601> collections with overlapping sets of data.</span></span> <span data-ttu-id="aa3f6-259">Нижним диапазоном значений, затем удаляется из большего набора с помощью <xref:System.Collections.Generic.HashSet%601.ExceptWith%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-259">The lower range of values is then removed from the larger set using the <xref:System.Collections.Generic.HashSet%601.ExceptWith%2A> method.</span></span>  
  
 [!code-cpp[System.Collections.Generic.HashSet_ExceptWith#02](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/cpp/program.cpp#02)]
 [!code-csharp[System.Collections.Generic.HashSet_ExceptWith#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_ExceptWith#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_ExceptWith/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-260">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-260"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.HashSet&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.HashSet`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As HashSet(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::HashSet&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.HashSet&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-261">Возвращает перечислитель, выполняющий итерацию элементов объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-261">Returns an enumerator that iterates through a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-262">Объект <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> для объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-262">A <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> object for the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-263">`foreach` Инструкции языка C# (`for each` в C++ `For Each` в Visual Basic) позволяет скрыть сложный перечислителей.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-263">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="aa3f6-264">Таким образом, использование `foreach` рекомендуется вместо непосредственного использования перечислителя.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-264">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="aa3f6-265">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-265">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="aa3f6-266">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-266">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="aa3f6-267">В этой позиции <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> свойство не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-267">At this position, the <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="aa3f6-268">Поэтому необходимо вызвать метод <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-268">Therefore, you must call the <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="aa3f6-269"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> Свойство возвращает тот же объект, пока <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-269">The <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="aa3f6-270"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> задает <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-270"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="aa3f6-271">Если <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-271">If <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="aa3f6-272">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-272">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="aa3f6-273">Если последний вызов метода <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-273">If the last call to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="aa3f6-274">Не удается задать <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> на первый элемент коллекции попытку; необходимо создать новый объект перечислителя вместо него.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-274">You cannot set <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="aa3f6-275">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-275">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="aa3f6-276">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> или <xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-276">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="aa3f6-277">Если коллекция изменяется в промежутке между вызовом метода <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> метод и получение значения <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> свойство <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-277">If the collection is modified between calling <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="aa3f6-278">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-278">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="aa3f6-279">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-279">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="aa3f6-280">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-280">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="aa3f6-281">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-281">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="aa3f6-282">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-282">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="aa3f6-283">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-283">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="aa3f6-284">Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-284">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-285">Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-285">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-286">Этот метод вызывается O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-286">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-287">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-287"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="aa3f6-288">для предоставления служб сериализации.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-288">for providing serialization services.</span></span> <span data-ttu-id="aa3f6-289">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="aa3f6-290">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="aa3f6-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IntersectWith">
      <MemberSignature Language="C#" Value="public void IntersectWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IntersectWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IntersectWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-291">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-291">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-292">Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" /> так, чтобы он содержал только элементы, которые имеются в этом объекте и в указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-292">Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain only elements that are present in that object and in the specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-293">Если представленный коллекции `other` параметр <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-293">If the collection represented by the `other` parameter is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-294">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A> и `m` — число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-294">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-295">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-295"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-296">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-296">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-297">Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим подмножеством указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-297">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper subset of the specified collection.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-298">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> является строгим подмножеством объекта <paramref name="other" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-298"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-299">Пустой набор является строгим подмножеством любой другой коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-299">An empty set is a proper subset of any other collection.</span></span> <span data-ttu-id="aa3f6-300">Таким образом, этот метод возвращает `true` если коллекции, представленный текущим <xref:System.Collections.Generic.HashSet%601> объект пуст Если `other` параметр также является пустой набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-300">Therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.HashSet%601> object is empty unless the `other` parameter is also an empty set.</span></span>  
  
 <span data-ttu-id="aa3f6-301">Этот метод всегда возвращает `false` Если <xref:System.Collections.Generic.HashSet%601.Count%2A> больше или равно количеству элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-301">This method always returns `false` if <xref:System.Collections.Generic.HashSet%601.Count%2A> is greater than or equal to the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="aa3f6-302">Если представленный коллекции `other` — <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, а затем этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-302">If the collection represented by `other` is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, then this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-303">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A> и `m` — число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-303">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-304">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-304">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each other.</span></span> <span data-ttu-id="aa3f6-305">В этом примере `lowNumbers` является подмножеством и строгим подмножеством объекта `allNumbers` до `allNumbers` изменяются, с помощью <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-305">In this example, `lowNumbers` is both a subset and a proper subset of `allNumbers` until `allNumbers` is modified, using the <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> method, to contain only values that are present in both sets.</span></span> <span data-ttu-id="aa3f6-306">Один раз `allNumbers` и `lowNumbers` идентичны, `lowNumbers` по-прежнему является подмножеством `allNumbers` , но больше не является строгим подмножеством.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-306">Once `allNumbers` and `lowNumbers` are identical, `lowNumbers` is still a subset of `allNumbers` but is no longer a proper subset.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-307">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-307"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsProperSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProperSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsProperSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProperSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-308">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-308">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-309">Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим супермножеством указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-309">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper superset of the specified collection.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-310">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> является строгим супермножеством <paramref name="other" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-310"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a proper superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-311">Пустой набор является строгим надмножеством любой другой коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-311">An empty set is a proper superset of any other collection.</span></span> <span data-ttu-id="aa3f6-312">Таким образом, этот метод возвращает `true` если представленный коллекции `other` параметр пуст пока текущий <xref:System.Collections.Generic.HashSet%601> также возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-312">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty unless the current <xref:System.Collections.Generic.HashSet%601> collection is also empty.</span></span>  
  
 <span data-ttu-id="aa3f6-313">Этот метод всегда возвращает `false` Если <xref:System.Collections.Generic.HashSet%601.Count%2A> меньше или равно числу элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-313">This method always returns `false` if <xref:System.Collections.Generic.HashSet%601.Count%2A> is less than or equal to the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="aa3f6-314">Если представленный коллекции `other` — <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-314">If the collection represented by `other` is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-315">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — число элементов в `other` и `m` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-315">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-316">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-316">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each other.</span></span> <span data-ttu-id="aa3f6-317">В этом примере `allNumbers` является надмножеством и строгим надмножеством объекта `lowNumbers` до `allNumbers` изменяются, с помощью <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-317">In this example, `allNumbers` is both a superset and a proper superset of `lowNumbers` until `allNumbers` is modified, using the <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> method, to contain only values that are present in both sets.</span></span> <span data-ttu-id="aa3f6-318">Один раз `allNumbers` и `lowNumbers` идентичны, `allNumbers` по-прежнему является надмножеством `lowNumbers` , но больше не является строгим надмножеством.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-318">Once `allNumbers` and `lowNumbers` are identical, `allNumbers` is still a superset of `lowNumbers` but is no longer a proper superset.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-319">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-319"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-320">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-320">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-321">Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> подмножеством указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-321">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a subset of the specified collection.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-322">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> является подмножеством <paramref name="other" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-322"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a subset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-323">Пустой набор является подмножеством любой другой коллекции, включая пустой набор; Таким образом, этот метод возвращает `true` если коллекции, представленный текущим <xref:System.Collections.Generic.HashSet%601> объект является пустым, даже если `other` параметр является пустой набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-323">An empty set is a subset of any other collection, including an empty set; therefore, this method returns `true` if the collection represented by the current <xref:System.Collections.Generic.HashSet%601> object is empty, even if the `other` parameter is an empty set.</span></span>  
  
 <span data-ttu-id="aa3f6-324">Этот метод всегда возвращает `false` Если <xref:System.Collections.Generic.HashSet%601.Count%2A> больше, чем число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-324">This method always returns `false` if <xref:System.Collections.Generic.HashSet%601.Count%2A> is greater than the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="aa3f6-325">Если представленный коллекции `other` — <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-325">If the collection represented by `other` is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-326">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A> и `m` — число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-326">Otherwise, this method is an O(`n` + `m`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A> and `m` is the number of elements in `other`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-327">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-327">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each other.</span></span> <span data-ttu-id="aa3f6-328">В этом примере `lowNumbers` является подмножеством и строгим подмножеством объекта `allNumbers` до `allNumbers` изменяются, с помощью <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-328">In this example, `lowNumbers` is both a subset and a proper subset of `allNumbers` until `allNumbers` is modified, using the <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> method, to contain only values that are present in both sets.</span></span> <span data-ttu-id="aa3f6-329">Один раз `allNumbers` и `lowNumbers` идентичны, `lowNumbers` по-прежнему является подмножеством `allNumbers` , но больше не является строгим подмножеством.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-329">Once `allNumbers` and `lowNumbers` are identical, `lowNumbers` is still a subset of `allNumbers` but is no longer a proper subset.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-330">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-330"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSupersetOf">
      <MemberSignature Language="C#" Value="public bool IsSupersetOf (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupersetOf(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupersetOf (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupersetOf(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-331">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-331">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-332">Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> супермножеством указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-332">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object is a superset of the specified collection.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-333">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим надмножеством <paramref name="other" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-333"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is a superset of <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-334">Все коллекции, включая пустой набор — множества пустой набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-334">All collections, including the empty set, are supersets of the empty set.</span></span> <span data-ttu-id="aa3f6-335">Таким образом, этот метод возвращает `true` если представленный коллекции `other` параметр пуст, даже если текущий <xref:System.Collections.Generic.HashSet%601> объект пуст.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-335">Therefore, this method returns `true` if the collection represented by the `other` parameter is empty, even if the current <xref:System.Collections.Generic.HashSet%601> object is empty.</span></span>  
  
 <span data-ttu-id="aa3f6-336">Этот метод всегда возвращает `false` Если <xref:System.Collections.Generic.HashSet%601.Count%2A> меньше, чем число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-336">This method always returns `false` if <xref:System.Collections.Generic.HashSet%601.Count%2A> is less than the number of elements in `other`.</span></span>  
  
 <span data-ttu-id="aa3f6-337">Если представленный коллекции `other` — <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-337">If the collection represented by `other` is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-338">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — число элементов в `other` и `m` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-338">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-339">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-339">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each other.</span></span> <span data-ttu-id="aa3f6-340">В этом примере `allNumbers` является надмножеством и строгим надмножеством объекта `lowNumbers` до `allNumbers` изменяются, с помощью <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-340">In this example, `allNumbers` is both a superset and a proper superset of `lowNumbers` until `allNumbers` is modified, using the <xref:System.Collections.Generic.HashSet%601.IntersectWith%2A> method, to contain only values that are present in both sets.</span></span> <span data-ttu-id="aa3f6-341">Один раз `allNumbers` и `lowNumbers` идентичны, `allNumbers` по-прежнему является надмножеством `lowNumbers` , но больше не является строгим надмножеством.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-341">Once `allNumbers` and `lowNumbers` are identical, `allNumbers` is still a superset of `lowNumbers` but is no longer a proper superset.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-342">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-342"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="aa3f6-343">Источник события десериализации.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-343">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="aa3f6-344">Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и вызывает событие десериализации при завершении десериализации.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-344">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-345">Этот метод вызывается O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-345">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="aa3f6-346">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, связанный с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />, является недействительным.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-346">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.HashSet`1" /> object is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Overlaps">
      <MemberSignature Language="C#" Value="public bool Overlaps (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Overlaps(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Overlaps (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Overlaps(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-347">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-347">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-348">Определяет, имеются ли общие элементы в текущем объекте <see cref="T:System.Collections.Generic.HashSet`1" /> и в указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-348">Determines whether the current <see cref="T:System.Collections.Generic.HashSet`1" /> object and a specified collection share common elements.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-349">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> и коллекция <paramref name="other" /> имеют по крайней мере один общий элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-349"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object and <paramref name="other" /> share at least one common element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-350">Этот метод является операцией O (`n`) операции, где `n` — число элементов в `other`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-350">This method is an O(`n`) operation, where `n` is the number of elements in `other`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-351">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-351">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each another.</span></span> <span data-ttu-id="aa3f6-352">В этом примере `allNumbers` и `lowNumbers` отображаются общие элементы с помощью <xref:System.Collections.Generic.HashSet%601.Overlaps%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-352">In this example, `allNumbers` and `lowNumbers` are shown to share common elements using the <xref:System.Collections.Generic.HashSet%601.Overlaps%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-353">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-353"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="aa3f6-354">Подлежащий удалению элемент.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-354">The element to remove.</span></span></param>
        <summary><span data-ttu-id="aa3f6-355">Удаляет указанный элемент из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-355">Removes the specified element from a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-356">Значение <see langword="true" />, если элемент был найден и удален; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-356"><see langword="true" /> if the element is successfully found and removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="aa3f6-357">Этот метод возвращает значение <see langword="false" />, если элемент <paramref name="item" /> не удалось найти в объекте <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-357">This method returns <see langword="false" /> if <paramref name="item" /> is not found in the <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-358">Если <xref:System.Collections.Generic.HashSet%601> объект не содержит указанный элемент, объект остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-358">If the <xref:System.Collections.Generic.HashSet%601> object does not contain the specified element, the object remains unchanged.</span></span> <span data-ttu-id="aa3f6-359">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-359">No exception is thrown.</span></span>  
  
 <span data-ttu-id="aa3f6-360">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-360">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-361">Следующий пример демонстрирует удаление значений из <xref:System.Collections.Generic.HashSet%601> коллекции с помощью <xref:System.Collections.Generic.HashSet%601.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-361">The following example demonstrates how to remove values from a <xref:System.Collections.Generic.HashSet%601> collection using the <xref:System.Collections.Generic.HashSet%601.Remove%2A> method.</span></span> <span data-ttu-id="aa3f6-362">В этом примере нуля произвольно удаляется из <xref:System.Collections.Generic.HashSet%601> коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-362">In this example, zero is arbitrarily removed from the <xref:System.Collections.Generic.HashSet%601> collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveWhere">
      <MemberSignature Language="C#" Value="public int RemoveWhere (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveWhere(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveWhere (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveWhere(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="aa3f6-363">Делегат <see cref="T:System.Predicate`1" />, определяющий условия удаления элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-363">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span></span></param>
        <summary><span data-ttu-id="aa3f6-364">Удаляет все элементы, удовлетворяющие условиям, которые были определены указанным предикатом из коллекции <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-364">Removes all elements that match the conditions defined by the specified predicate from a <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-365">Количество элементов, удаленных из коллекции <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-365">The number of elements that were removed from the <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-366">Этот метод вызывается O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-366">Calling this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-367">Следующий пример демонстрирует удаление значений из <xref:System.Collections.Generic.HashSet%601> коллекции с помощью <xref:System.Collections.Generic.HashSet%601.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-367">The following example demonstrates how to remove values from a <xref:System.Collections.Generic.HashSet%601> collection using the <xref:System.Collections.Generic.HashSet%601.Remove%2A> method.</span></span> <span data-ttu-id="aa3f6-368">В этом примере удаляются все нечетные целые числа из <xref:System.Collections.Generic.HashSet%601> коллекции в соответствии с `match` делегата.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-368">In this example, all odd integers are removed from the <xref:System.Collections.Generic.HashSet%601> collection as specified by the `match` delegate.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_RemoveWhere#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_RemoveWhere/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-369">Свойство <paramref name="match" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-369"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetEquals">
      <MemberSignature Language="C#" Value="public bool SetEquals (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEquals(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEquals (other As IEnumerable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetEquals(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-370">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-370">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-371">Определяет, содержат ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> и указанная коллекция одни и те же элементы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-371">Determines whether a <see cref="T:System.Collections.Generic.HashSet`1" /> object and the specified collection contain the same elements.</span></span></summary>
        <returns>
          <span data-ttu-id="aa3f6-372">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> равен <paramref name="other" />; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-372"><see langword="true" /> if the <see cref="T:System.Collections.Generic.HashSet`1" /> object is equal to <paramref name="other" />; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-373"><xref:System.Collections.Generic.HashSet%601.SetEquals%2A> Метод игнорирует повторяющиеся записи и порядок элементов в `other` параметра.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-373">The <xref:System.Collections.Generic.HashSet%601.SetEquals%2A> method ignores duplicate entries and the order of elements in the `other` parameter.</span></span>  
  
 <span data-ttu-id="aa3f6-374">Если представленный коллекции `other` — <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-374">If the collection represented by `other` is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-375">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — число элементов в `other` и `m` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-375">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-376">В следующем примере создается два различных <xref:System.Collections.Generic.HashSet%601> объектов и сравнивает их друг с другом.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-376">The following example creates two disparate <xref:System.Collections.Generic.HashSet%601> objects and compares them to each another.</span></span> <span data-ttu-id="aa3f6-377">Изначально двух наборов не равны, который продемонстрировать с использованием <xref:System.Collections.Generic.HashSet%601.SetEquals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-377">Initially, the two sets are not equal, which is demonstrated by using the <xref:System.Collections.Generic.HashSet%601.SetEquals%2A> method.</span></span> <span data-ttu-id="aa3f6-378">`allNumbers` <xref:System.Collections.Generic.HashSet%601> Объекта изменяется, после которого равны наборы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-378">The `allNumbers`<xref:System.Collections.Generic.HashSet%601> object is then modified, after which the sets are equal.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_boolMethods#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_boolMethods/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-379">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-379"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SymmetricExceptWith">
      <MemberSignature Language="C#" Value="public void SymmetricExceptWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SymmetricExceptWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SymmetricExceptWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SymmetricExceptWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-380">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-380">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-381">Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" /> так, чтобы он содержал только элементы, которые имеются либо в этом объекте, либо в указанной коллекции, но не одновременно в них обоих.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-381">Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain only elements that are present either in that object or in the specified collection, but not both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-382">Если `other` параметр <xref:System.Collections.Generic.HashSet%601> коллекции с того же компаратор проверки на равенство, что и текущий <xref:System.Collections.Generic.HashSet%601> объекта, этот метод является операцией O (`n`) операции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-382">If the `other` parameter is a <xref:System.Collections.Generic.HashSet%601> collection with the same equality comparer as the current <xref:System.Collections.Generic.HashSet%601> object, this method is an O(`n`) operation.</span></span> <span data-ttu-id="aa3f6-383">В противном случае этот метод является операцией O (`n` + `m`) операции, где `n` — число элементов в `other` и `m` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-383">Otherwise, this method is an O(`n` + `m`) operation, where `n` is the number of elements in `other` and `m` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-384">В следующем примере создается два <xref:System.Collections.Generic.HashSet%601> коллекций с перекрывающимися наборов данных.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-384">The following example creates two <xref:System.Collections.Generic.HashSet%601> collections with overlapping sets of data.</span></span> <span data-ttu-id="aa3f6-385">Набор, содержащий более низкие значения изменяется, с помощью <xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A> метода, чтобы содержать только значения, которые не присутствуют в обоих наборах.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-385">The set that contains the lower values is then modified, using the <xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A> method, to contain only the values that are not present in both sets.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_SymmetricExceptWith#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_SymmetricExceptWith/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_SymmetricExceptWith#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_SymmetricExceptWith/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-386">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-386"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="aa3f6-387">Объект, добавляемый в объект <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-387">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-388">Добавляет элемент в объект <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-388">Adds an item to an <see cref="T:System.Collections.Generic.ICollection`1" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-389">Если <xref:System.Collections.Generic.List%601.Count%2A> — меньше, чем <xref:System.Collections.Generic.List%601.Capacity%2A>, этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-389">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="aa3f6-390">Если необходимо увеличить емкость для размещения нового элемента, этот метод становится операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-390">If the capacity must be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="aa3f6-391">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-391">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa3f6-392">Возвращает значение, указывающее, доступна ли коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-392">Gets a value indicating whether a collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="aa3f6-393">Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-393"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-394">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-394">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-395">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-395">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-396">Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-396">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-397">`foreach` Инструкции языка C# (`for each` в C++ `For Each` в Visual Basic) позволяет скрыть сложный перечислителей.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-397">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="aa3f6-398">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-398">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="aa3f6-399">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-399">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="aa3f6-400">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-400">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="aa3f6-401">В этой позиции <xref:System.Collections.Generic.IEnumerator%601.Current%2A> свойство не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-401">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="aa3f6-402">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-402">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="aa3f6-403"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Свойство возвращает тот же объект, пока <xref:System.Collections.IEnumerator.MoveNext%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-403">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="aa3f6-404"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.Generic.IEnumerator%601.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-404"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="aa3f6-405">Если <xref:System.Collections.IEnumerator.MoveNext%2A> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-405">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="aa3f6-406">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-406">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="aa3f6-407">Если последний вызов метода <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-407">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="aa3f6-408">Не удается задать <xref:System.Collections.Generic.IEnumerator%601.Current%2A> на первый элемент коллекции попытку; необходимо создать новый объект перечислителя вместо него.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-408">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="aa3f6-409">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-409">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="aa3f6-410">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-410">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="aa3f6-411">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-411">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="aa3f6-412">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-412">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="aa3f6-413">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-413">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="aa3f6-414">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-414">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="aa3f6-415">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-415">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-416">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-416">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-417">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-417">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-418">`foreach` Инструкции языка C# (`for each` в C++ `For Each` в Visual Basic) позволяет скрыть сложный перечислителей.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-418">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="aa3f6-419">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-419">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="aa3f6-420">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-420">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="aa3f6-421">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-421">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="aa3f6-422">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-422"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="aa3f6-423">В этой позиции <xref:System.Collections.IEnumerator.Current%2A> свойство не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-423">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="aa3f6-424">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-424">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="aa3f6-425"><xref:System.Collections.IEnumerator.Current%2A> Свойство возвращает тот же объект, пока не <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-425">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="aa3f6-426"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-426"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="aa3f6-427">Если <xref:System.Collections.IEnumerator.MoveNext%2A> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-427">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="aa3f6-428">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-428">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="aa3f6-429">Если последний вызов метода <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-429">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="aa3f6-430">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-430">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="aa3f6-431">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-431">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="aa3f6-432">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-432">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="aa3f6-433">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-433">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="aa3f6-434">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-434">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="aa3f6-435">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-435">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="aa3f6-436">Используемые по умолчанию реализации коллекций в пространстве имен <xref:System.Collections.Generic?displayProperty=nameWithType> не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-436">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="aa3f6-437">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="aa3f6-437">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa3f6-438">Задает емкость объекта <see cref="T:System.Collections.Generic.HashSet`1" /> равной фактическому числу элементов, которые в нем содержатся, округленному в большую сторону ближайшего значения, зависящего от реализации.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-438">Sets the capacity of a <see cref="T:System.Collections.Generic.HashSet`1" /> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-439">Можно использовать <xref:System.Collections.Generic.HashSet%601.TrimExcess%2A> метод, чтобы свести к минимуму <xref:System.Collections.Generic.HashSet%601> издержки памяти объекта, если известно, что будет добавляться новые элементы.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-439">You can use the <xref:System.Collections.Generic.HashSet%601.TrimExcess%2A> method to minimize a <xref:System.Collections.Generic.HashSet%601> object's memory overhead once it is known that no new elements will be added.</span></span> <span data-ttu-id="aa3f6-440">Выполнить полную очистку <xref:System.Collections.Generic.HashSet%601> и освободить всю память, он ссылается, следует вызвать этот метод после вызова <xref:System.Collections.Generic.HashSet%601.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-440">To completely clear a <xref:System.Collections.Generic.HashSet%601> object and release all memory referenced by it, call this method after calling the <xref:System.Collections.Generic.HashSet%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="aa3f6-441">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-441">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.HashSet%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-442">Следующий пример создает и заполняет <xref:System.Collections.Generic.HashSet%601> коллекции, а затем очищает коллекцию и освобождает память, он ссылается.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-442">The following example creates and populates a <xref:System.Collections.Generic.HashSet%601> collection, and then clears the collection and releases the memory referenced by it.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_Clear#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_Clear/cs/Program.cs#02)]
 [!code-vb[System.Collections.Generic.HashSet_Clear#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_Clear/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (T equalValue, out T actualValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!T equalValue, [out] !T&amp; actualValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (equalValue As T, ByRef actualValue As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(T equalValue, [Runtime::InteropServices::Out] T % actualValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="equalValue" Type="T" />
        <Parameter Name="actualValue" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="equalValue"><span data-ttu-id="aa3f6-443">Значение, которое нужно найти.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-443">The value to search for.</span></span></param>
        <param name="actualValue"><span data-ttu-id="aa3f6-444">Значение, найденное в наборе, либо значение T по умолчанию, если поиск не вернул результатов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-444">The value from the set that the search found, or the default value of T when the search yielded no match.</span></span></param>
        <summary><span data-ttu-id="aa3f6-445">Выполняет поиск указанного значения в наборе и возвращает равное ему значение, если его удалось найти.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-445">Searches the set for a given value and returns the equal value it finds, if any.</span></span></summary>
        <returns><span data-ttu-id="aa3f6-446">Значение, указывающее, успешно ли был выполнен поиск.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-446">A value indicating whether the search was successful.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-447">Это может быть полезно, если необходимо повторно использовать ранее сохраненные ссылку вместо нового созданного (что может произойти несколько совместного использования ссылок) или искомое значение, которое имеет более полные данные, чем значение в настоящее время имеется, несмотря на то что их функции сравнения указать, что они равны.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-447">This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnionWith">
      <MemberSignature Language="C#" Value="public void UnionWith (System.Collections.Generic.IEnumerable&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnionWith(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnionWith (other As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnionWith(System::Collections::Generic::IEnumerable&lt;T&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="aa3f6-448">Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-448">The collection to compare to the current <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span></span></param>
        <summary><span data-ttu-id="aa3f6-449">Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" /> так, чтобы он содержал все элементы, имеющиеся в нем или в указанной коллекции либо как в нем, так и в указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-449">Modifies the current <see cref="T:System.Collections.Generic.HashSet`1" /> object to contain all elements that are present in itself, the specified collection, or both.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa3f6-450">Этот метод является операцией O (`n`) операции, где `n` — число элементов в `other` параметра.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-450">This method is an O(`n`) operation, where `n` is the number of elements in the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa3f6-451">Следующий пример демонстрирует слияние двух разнородных наборов.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-451">The following example demonstrates how to merge two disparate sets.</span></span> <span data-ttu-id="aa3f6-452">В этом примере создаются два <xref:System.Collections.Generic.HashSet%601> объектов и заполняет их четные и нечетные цифры, соответственно.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-452">This example creates two <xref:System.Collections.Generic.HashSet%601> objects, and populates them with even and odd numbers, respectively.</span></span> <span data-ttu-id="aa3f6-453">В третьем <xref:System.Collections.Generic.HashSet%601> создать объект из набора, который содержит четные числа.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-453">A third <xref:System.Collections.Generic.HashSet%601> object is created from the set that contains the even numbers.</span></span> <span data-ttu-id="aa3f6-454">Затем в примере вызывается <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> метод, который добавляет нечетное число, заданное в третий набор.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-454">The example then calls the <xref:System.Collections.Generic.HashSet%601.UnionWith%2A> method, which adds the odd number set to the third set.</span></span>  
  
 [!code-csharp[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/cs/Program.cs#01)]
 [!code-vb[System.Collections.Generic.HashSet_UnionWith#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Generic.HashSet_UnionWith/vb/Program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aa3f6-455">Свойство <paramref name="other" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="aa3f6-455"><paramref name="other" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>