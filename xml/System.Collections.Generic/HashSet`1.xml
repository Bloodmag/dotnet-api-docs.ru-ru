<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashSet`1.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">037e736f-f76f-422a-bcb7-5d2d599f851d80a00da304c112bae9b8a9e88874531b93b7e753.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80a00da304c112bae9b8a9e88874531b93b7e753</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fc53860cd2661bb7bde6e4b2858fcda4ec4c889</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The type of elements in the hash set.</source>
          <target state="translated">Тип элементов в коллекции.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Represents a set of values.</source>
          <target state="translated">Представляет набор значений.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class provides high-performance set operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Класс предоставляет операции над множествами высокой производительности.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A set is a collection that contains no duplicate elements, and whose elements are in no particular order.</source>
          <target state="translated">Набор — это коллекция, которая не содержит повторяющихся элементов, и, элементы которого являются в произвольном порядке.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interface starting with the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class did not implement this interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> реализует <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> интерфейса, начиная с <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; в предыдущих версиях платформы .NET Framework, <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> не реализует этот интерфейс.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class is based on the model of mathematical sets and provides high-performance set operations similar to accessing the keys of the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Класс основан на модели математических множеств и обеспечивает высокой производительности набор операций, аналогично доступ к ключам <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph> коллекций.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>In simple terms, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class can be thought of as a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> collection without values.</source>
          <target state="translated">Проще говоря <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> класса можно рассматривать как <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> коллекции без значения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection is not sorted and cannot contain duplicate elements.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции не сортируются и не может содержать повторяющиеся элементы.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>If order or element duplication is more important than performance for your application, consider using the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class together with the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> method.</source>
          <target state="translated">Если упорядочивание или дублирование элементов является более важным, чем производительность приложения, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> класса вместе с <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Sort%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides many mathematical set operations, such as set addition (unions) and set subtraction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> предоставляет многие математические операции над множествами, такие как сложение (объединение) и вычитание множеств.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following table lists the provided <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations and their mathematical equivalents.</source>
          <target state="translated">В следующей таблице перечислены возможные <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> операций и их математические эквиваленты.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet(Of T) operation</source>
          <target state="translated">Операция HashSet (Of T)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Mathematical equivalent</source>
          <target state="translated">Математический эквивалент</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Union or set addition</source>
          <target state="translated">Объединение или сложение множеств</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Intersection</source>
          <target state="translated">пересечение</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Set subtraction</source>
          <target state="translated">Вычитание множеств</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Symmetric difference</source>
          <target state="translated">Симметричной разницы</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>In addition to the listed set operations, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class also provides methods for determining set equality, overlap of sets, and whether a set is a subset or superset of another set.</source>
          <target state="translated">Помимо перечисленных операций <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> класс также предоставляет методы для определения равенства множеств, перекрытия множеств и является ли набор подмножеством или множествами.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">Для очень больших <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов Максимальная емкость 2 миллиардов элементы в 64-разрядной системе можно повысить, указав <ph id="ph2">`enabled`</ph> атрибута элемента конфигурации для <ph id="ph3">`true`</ph> в среде выполнения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class implements the <ph id="ph3">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated">Начиная с <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> класс реализует <ph id="ph3">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet and LINQ Set Operations</source>
          <target state="translated">Операции над множествами в HashSet и LINQ</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>LINQ provides access to the <ph id="ph1">`Distinct`</ph>, <ph id="ph2">`Union`</ph>, <ph id="ph3">`Intersect`</ph> and <ph id="ph4">`Except`</ph> set operations on any data source that implements the <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph6">&lt;xref:System.Linq.IQueryable&gt;</ph> interfaces.</source>
          <target state="translated">Технология LINQ предоставляет доступ к <ph id="ph1">`Distinct`</ph>, <ph id="ph2">`Union`</ph>, <ph id="ph3">`Intersect`</ph> и <ph id="ph4">`Except`</ph> множествами на любом источнике данных, который реализует <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> или <ph id="ph6">&lt;xref:System.Linq.IQueryable&gt;</ph> интерфейсов.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides a larger and more robust collection of set operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Предоставляет коллекцию большего размера и надежность операций.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>For example, <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> provides comparisons such as <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A&gt;</ph>.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> предоставляет сравнения, такие как <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.IsSubsetOf%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.IsSupersetOf%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The primary difference between LINQ set operations and <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations is that LINQ set operations always return a new <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> equivalent methods modify the current collection.</source>
          <target state="translated">Операции над множествами основное различие между LINQ и <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> является операций, что операции над множествами LINQ всегда возвращают новый <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> коллекции, в то время как <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> эквивалентные методы используются для изменения текущей коллекции.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Typically, if you must create a new set or if your application needs access only to the provided set operations, using LINQ set operations on any <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection or array will be sufficient.</source>
          <target state="translated">Как правило, если нужно создать новый набор, или если приложению требуется доступ только к предоставленному множеству операций, с помощью LINQ операции над множествами для какого-либо <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> коллекции или массиве будет достаточно.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>However, if your application requires access to additional set operations, or if it is not desirable or necessary to create a new collection, use the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> class.</source>
          <target state="translated">Однако если приложению требуется доступ к операциям дополнительный набор или если это не желательно, или необходимо создать новую коллекцию, используйте <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following table shows the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> operations and their equivalent LINQ set operations.</source>
          <target state="translated">В следующей таблице показаны <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> операции над множествами операций и их эквивалентные LINQ.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>HashSet(Of T) operation</source>
          <target state="translated">Операция HashSet (Of T)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>LINQ equivalent</source>
          <target state="translated">Эквивалент LINQ</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>Not provided.</source>
          <target state="translated">Не указан.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The following example demonstrates how to merge two disparate sets.</source>
          <target state="translated">Следующий пример демонстрирует слияние двух разнородных наборов.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>This example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, and populates them with even and odd numbers, respectively.</source>
          <target state="translated">В этом примере создаются два <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и заполняет их четные и нечетные цифры, соответственно.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is created from the set that contains the even numbers.</source>
          <target state="translated">В третьем <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> создать объект из набора, который содержит четные числа.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.HashSet`1">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method, which adds the odd number set to the third set.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> метод, который добавляет нечетное число, заданное в третий набор.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that is empty and uses the default equality comparer for the set type.</source>
          <target state="translated">Инициализирует пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, который использует функцию сравнения по умолчанию для типа набора.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>The following example demonstrates how to create and populate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">Следующий пример демонстрирует создание и заполнение двух <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method.</source>
          <target state="translated">Данный пример является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new set.</source>
          <target state="translated">Коллекция, элементы которой копируются в новый набор.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that uses the default equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, который использует функцию сравнения по умолчанию для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>If <ph id="ph1">`collection`</ph> contains duplicates, the set will contain one of each unique element.</source>
          <target state="translated">Если <ph id="ph1">`collection`</ph> содержит повторяющиеся значения, набор может содержать один из каждого уникального элемента.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, the size of the resulting set is not identical to the size of <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Таким образом, размер результирующего набора не идентичен размер <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`collection`</ph> parameter.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`collection`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection from an existing set.</source>
          <target state="translated">В следующем примере показано, как создать <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции из существующего набора.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, two sets are created with even and odd integers, respectively.</source>
          <target state="translated">В этом примере два набора создаются с четные и нечетные целые числа, соответственно.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is then created from the even integer set.</source>
          <target state="translated">В третьем <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> затем создается объект из набора даже целое число со знаком.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing values in the set, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> implementation for the set type.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении значений в наборе, или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, чтобы использовать реализацию <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> по умолчанию для типа набора.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that is empty and uses the specified equality comparer for the set type.</source>
          <target state="translated">Инициализирует пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, который использует указанную функцию сравнения для типа набора.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Этот конструктор является операцией o(1).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)">
          <source>The initial size of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph></source>
          <target state="translated">Начальный размер <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that is empty, but has reserved space for <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> items and uses the default equality comparer for the set type.</source>
          <target state="translated">Инициализирует пустой экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, но резервирует пространство для элементов <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> и использует функцию сравнения по умолчанию для типа набора.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)">
          <source>Since resizes are relatively expensive (require rehashing), this attempts to minimize the need to resize by setting the initial capacity based on the value of the <ph id="ph1">`capacity`</ph>.</source>
          <target state="translated">Поскольку заполнит относительно требовательными к ресурсам (требует проведя пересчет контрольной суммы), это пытается свести к минимуму необходимость изменения размера, задав начальной емкостью, основанного на значении из <ph id="ph1">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The collection whose elements are copied to the new set.</source>
          <target state="translated">Коллекция, элементы которой копируются в новый набор.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing values in the set, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> implementation for the set type.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении значений в наборе, или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, чтобы использовать реализацию <ph id="ph3">&lt;see cref="T:System.Collections.Generic.EqualityComparer`1" /&gt;</ph> по умолчанию для типа набора.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that uses the specified equality comparer for the set type, contains elements copied from the specified collection, and has sufficient capacity to accommodate the number of elements copied.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, который использует заданную функцию сравнения для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>If <ph id="ph1">`collection`</ph> contains duplicates, the set will contain one of each unique element.</source>
          <target state="translated">Если <ph id="ph1">`collection`</ph> содержит повторяющиеся значения, набор может содержать один из каждого уникального элемента.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Therefore, the size of the resulting set is not identical to the size of <ph id="ph1">`collection`</ph>.</source>
          <target state="translated">Таким образом, размер результирующего набора не идентичен размер <ph id="ph1">`collection`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`collection`</ph> parameter.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`collection`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The following example uses a supplied <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> to allow case-insensitive comparisons on the elements of a  <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection of vehicle types.</source>
          <target state="translated">В следующем примере используется указанный <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> возможным сравнение без учета регистра на элементы <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекцию типов транспортных средств.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The initial size of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph></source>
          <target state="translated">Начальный размер <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation to use when comparing values in the set, or null (Nothing in Visual Basic) to use the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> implementation for the set type.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, которую следует использовать при сравнении значений в наборе, или NULL (Nothing в Visual Basic), чтобы использовать реализацию <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> по умолчанию для типа набора.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class that uses the specified equality comparer for the set type, and has sufficient capacity to accommodate <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> elements.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, который использует заданную функцию сравнения для типа набора и обладает достаточной емкостью для размещения элементов <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Since resizes are relatively expensive (require rehashing), this attempts to minimize the need to resize by setting the initial capacity based on the value of the <ph id="ph1">`capacity`</ph>.</source>
          <target state="translated">Поскольку заполнит относительно требовательными к ресурсам (требует проведя пересчет контрольной суммы), это пытается свести к минимуму необходимость изменения размера, задав начальной емкостью, основанного на значении из <ph id="ph1">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, который содержит сведения, требуемые для сериализации объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> с сериализованными данными.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute an object that is transmitted over a stream.</source>
          <target state="translated">Данный конструктор вызывается в процессе десериализации для воссоздания объекта, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сериализации XML и SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">Элемент, добавляемый в набор.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>Adds the specified element to a set.</source>
          <target state="translated">Добавляет указанный элемент в набор.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is added to the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the element is already present.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если элемент добавлен в объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>; значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>, если элемент уже присутствует в нем.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> already equals the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, the capacity is automatically adjusted to accommodate the new item.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> уже равна емкости <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость для размещения нового элемента автоматически изменяется.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> меньше, чем значение емкости внутреннего массива, этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object must be resized, this method becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> необходимо изменять объект, этот метод становится операцией O (<ph id="ph2">`n`</ph>) операции, где <ph id="ph3">`n`</ph> — <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>The following example demonstrates how to create and populate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">Следующий пример демонстрирует создание и заполнение двух <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Add(`0)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method.</source>
          <target state="translated">Данный пример является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Удаляет все элементы из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> равен нулю и ссылки на другие объекты из элементов коллекции также освобождаются.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>The capacity remains unchanged until a call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> is made.</source>
          <target state="translated">Емкость не изменяется до вызова <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> выполняется.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Clear">
          <source>The following example creates and populates a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection, then clears it and releases the memory referenced by the collection.</source>
          <target state="translated">Следующий пример создает и заполняет <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции, он удаляется и освобождает память, ссылается коллекция.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> object that is used to determine equality for the values in the set.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, используемый для определения равенства значений в наборе.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> object that is used to determine equality for the values in the set.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>, используемый для определения равенства значений в наборе.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>The element to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Элемент, который нужно найти в объекте <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object contains the specified element.</source>
          <target state="translated">Определяет, содержит ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> указанный элемент.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object contains the specified element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> содержит указанный элемент; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Следующий пример демонстрирует удаление значений из <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с помощью <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Contains(`0)">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Contains%2A&gt;</ph> method verifies that the set contains a value before removing it.</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Contains%2A&gt;</ph> метод проверяет, что набор содержит значение, прежде чем удалять его.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.HashSet`1">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection to an array.</source>
          <target state="translated">Копирует элементы коллекции <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> в массив.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Одномерный массив, являющийся назначением элементов, копируемых из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Индекс в массиве должен начинаться с нуля.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array.</source>
          <target state="translated">Копирует элементы объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> в массив.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Одномерный массив, являющийся назначением элементов, копируемых из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Индекс в массиве должен начинаться с нуля.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Отсчитываемый от нуля индекс в <bpt id="p1">&lt;c&gt;</bpt>массиве<ept id="p1">&lt;/c&gt;</ept> с которого начинается копирование.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>Copies the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array, starting at the specified array index.</source>
          <target state="translated">Копирует элементы объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> в массив, начиная с указанного индекса массива.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is greater than the length of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> больше длины массива назначения <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Одномерный массив, являющийся назначением элементов, копируемых из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Индекс в массиве должен начинаться с нуля.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Отсчитываемый от нуля индекс в <bpt id="p1">&lt;c&gt;</bpt>массиве<ept id="p1">&lt;/c&gt;</ept> с которого начинается копирование.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>The number of elements to copy to <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Число элементов, копируемых в <bpt id="p1">&lt;c&gt;</bpt>массив<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>Copies the specified number of elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to an array, starting at the specified array index.</source>
          <target state="translated">Копирует указанное количество элементов объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> в массив, начиная с указанного индекса массива.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="count" /&gt;</ph> меньше 0.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is greater than the length of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> больше длины массива назначения <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the available space from the <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;paramref name="count" /&gt;</ph> превышает доступное место, начиная с индекса <ph id="ph2">&lt;paramref name="index" /&gt;</ph> и до конца массива назначения <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>Gets the number of elements that are contained in a set.</source>
          <target state="translated">Возвращает число элементов, содержащихся в наборе.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The number of elements that are contained in the set.</source>
          <target state="translated">Число элементов, содержащихся в наборе.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is the number of elements that the object can hold.</source>
          <target state="translated">Емкость <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> равен числу элементов, которые могут храниться в объекте.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's capacity automatically increases as elements are added to the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта емкость автоматически увеличивается при добавлении элементов в объект.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Емкость всегда больше или равно <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is set to the first prime number that is greater than double the previous capacity.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> превышает емкость при добавлении элементов, емкость задается первого простого числа, которое больше, чем double прежнюю емкость.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>The following example demonstrates how to create, populate, and manipulate two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects.</source>
          <target state="translated">В следующем примере показано, как для создания, заполнения и управлять двумя <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.Count">
          <source>In this example, both the contents of the set and <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> display to the console.</source>
          <target state="translated">В этом примере содержимое набора и <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> вывода на консоль.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used for equality testing of a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>, который можно использовать для проверки равенства объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph> object that can be used for deep equality testing of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.IEqualityComparer" /&gt;</ph>, который можно использовать для выполнения глубокой проверки равенства объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> object checks for equality at only one level; however, you can chain together comparers at additional levels to perform deeper equality testing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> Выполняет проверку на равенство только на одном уровне; тем не менее, можно соединить в цепочку вместе функции сравнения на дополнительных уровнях для выполнения более глубокой проверки равенства.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
          <source>Calling this method is an O(1) operation.</source>
          <target state="translated">Вызов этого метода является операцией o(1).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция элементов, удаляемая из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements in the specified collection from the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Удаляет все элементы в указанной коллекции из текущего объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> method is the equivalent of mathematical set subtraction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> Метод является эквивалентом вычитание математических множеств.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`other`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collections with overlapping sets of data.</source>
          <target state="translated">В следующем примере создается два <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекций с перекрывающимися наборов данных.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The lower range of values is then removed from the larger set using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> method.</source>
          <target state="translated">Нижним диапазоном значений, затем удаляется из большего набора с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.ExceptWith%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Возвращает перечислитель, выполняющий итерацию элементов объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /&gt;</ph> для объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Таким образом, использование <ph id="ph1">`foreach`</ph> рекомендуется вместо непосредственного использования перечислителя.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> Свойство возвращает тот же объект, пока <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Не удается задать <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> на первый элемент коллекции попытку; необходимо создать новый объект перечислителя вместо него.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A&gt;</ph> вызывает <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> method and obtaining the value of the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Если коллекция изменяется в промежутке между вызовом метода <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A&gt;</ph> метод и получение значения <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> свойство <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A&gt;</ph> возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that contains the information required to serialize the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, который содержит сведения, требуемые для сериализации объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Реализует интерфейс <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> и возвращает данные, необходимые для сериализации объекта <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод вызывается O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="info" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">Действие по обеспечению безопасности: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></source>
          <target state="translated">Связанное перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain only elements that are present in that object and in the specified collection.</source>
          <target state="translated">Изменяет текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> так, чтобы он содержал только элементы, которые имеются в этом объекте и в указанной коллекции.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> параметр <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> и <ph id="ph6">`m`</ph> — число элементов в <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper subset of the specified collection.</source>
          <target state="translated">Определяет, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> строгим подмножеством указанной коллекции.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> является строгим подмножеством объекта <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper subset of any other collection.</source>
          <target state="translated">Пустой набор является строгим подмножеством любой другой коллекции.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty unless the <ph id="ph3">`other`</ph> parameter is also an empty set.</source>
          <target state="translated">Таким образом, этот метод возвращает <ph id="ph1">`true`</ph> если коллекции, представленный текущим <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объект пуст Если <ph id="ph3">`other`</ph> параметр также является пустой набор.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is greater than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Этот метод всегда возвращает <ph id="ph1">`false`</ph> Если <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> больше или равно количеству элементов в <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, then this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, а затем этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> и <ph id="ph6">`m`</ph> — число элементов в <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`lowNumbers`</ph> is both a subset and a proper subset of <ph id="ph2">`allNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">В этом примере <ph id="ph1">`lowNumbers`</ph> является подмножеством и строгим подмножеством объекта <ph id="ph2">`allNumbers`</ph> до <ph id="ph3">`allNumbers`</ph> изменяются, с помощью <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`lowNumbers`</ph> is still a subset of <ph id="ph4">`allNumbers`</ph> but is no longer a proper subset.</source>
          <target state="translated">Один раз <ph id="ph1">`allNumbers`</ph> и <ph id="ph2">`lowNumbers`</ph> идентичны, <ph id="ph3">`lowNumbers`</ph> по-прежнему является подмножеством <ph id="ph4">`allNumbers`</ph> , но больше не является строгим подмножеством.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper superset of the specified collection.</source>
          <target state="translated">Определяет, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> строгим супермножеством указанной коллекции.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a proper superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> является строгим супермножеством <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a proper superset of any other collection.</source>
          <target state="translated">Пустой набор является строгим надмножеством любой другой коллекции.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty unless the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection is also empty.</source>
          <target state="translated">Таким образом, этот метод возвращает <ph id="ph1">`true`</ph> если представленный коллекции <ph id="ph2">`other`</ph> параметр пуст пока текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> также возвращается пустая коллекция.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than or equal to the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Этот метод всегда возвращает <ph id="ph1">`false`</ph> Если <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> меньше или равно числу элементов в <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — число элементов в <ph id="ph5">`other`</ph> и <ph id="ph6">`m`</ph> — <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> is both a superset and a proper superset of <ph id="ph2">`lowNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">В этом примере <ph id="ph1">`allNumbers`</ph> является надмножеством и строгим надмножеством объекта <ph id="ph2">`lowNumbers`</ph> до <ph id="ph3">`allNumbers`</ph> изменяются, с помощью <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`allNumbers`</ph> is still a superset of <ph id="ph4">`lowNumbers`</ph> but is no longer a proper superset.</source>
          <target state="translated">Один раз <ph id="ph1">`allNumbers`</ph> и <ph id="ph2">`lowNumbers`</ph> идентичны, <ph id="ph3">`allNumbers`</ph> по-прежнему является надмножеством <ph id="ph4">`lowNumbers`</ph> , но больше не является строгим надмножеством.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a subset of the specified collection.</source>
          <target state="translated">Определяет, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> подмножеством указанной коллекции.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a subset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> является подмножеством <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>An empty set is a subset of any other collection, including an empty set; therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the current <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty, even if the <ph id="ph3">`other`</ph> parameter is an empty set.</source>
          <target state="translated">Пустой набор является подмножеством любой другой коллекции, включая пустой набор; Таким образом, этот метод возвращает <ph id="ph1">`true`</ph> если коллекции, представленный текущим <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объект является пустым, даже если <ph id="ph3">`other`</ph> параметр является пустой набор.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is greater than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Этот метод всегда возвращает <ph id="ph1">`false`</ph> Если <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> больше, чем число элементов в <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> and <ph id="ph6">`m`</ph> is the number of elements in <ph id="ph7">`other`</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — <ph id="ph5">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> и <ph id="ph6">`m`</ph> — число элементов в <ph id="ph7">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`lowNumbers`</ph> is both a subset and a proper subset of <ph id="ph2">`allNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">В этом примере <ph id="ph1">`lowNumbers`</ph> является подмножеством и строгим подмножеством объекта <ph id="ph2">`allNumbers`</ph> до <ph id="ph3">`allNumbers`</ph> изменяются, с помощью <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`lowNumbers`</ph> is still a subset of <ph id="ph4">`allNumbers`</ph> but is no longer a proper subset.</source>
          <target state="translated">Один раз <ph id="ph1">`allNumbers`</ph> и <ph id="ph2">`lowNumbers`</ph> идентичны, <ph id="ph3">`lowNumbers`</ph> по-прежнему является подмножеством <ph id="ph4">`allNumbers`</ph> , но больше не является строгим подмножеством.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a superset of the specified collection.</source>
          <target state="translated">Определяет, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> супермножеством указанной коллекции.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is a superset of <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> строгим надмножеством <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>All collections, including the empty set, are supersets of the empty set.</source>
          <target state="translated">Все коллекции, включая пустой набор — множества пустой набор.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Therefore, this method returns <ph id="ph1">`true`</ph> if the collection represented by the <ph id="ph2">`other`</ph> parameter is empty, even if the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is empty.</source>
          <target state="translated">Таким образом, этот метод возвращает <ph id="ph1">`true`</ph> если представленный коллекции <ph id="ph2">`other`</ph> параметр пуст, даже если текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объект пуст.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>This method always returns <ph id="ph1">`false`</ph> if <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> is less than the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Этот метод всегда возвращает <ph id="ph1">`false`</ph> Если <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph> меньше, чем число элементов в <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — число элементов в <ph id="ph5">`other`</ph> и <ph id="ph6">`m`</ph> — <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each other.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> is both a superset and a proper superset of <ph id="ph2">`lowNumbers`</ph> until <ph id="ph3">`allNumbers`</ph> is modified, using the <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> method, to contain only values that are present in both sets.</source>
          <target state="translated">В этом примере <ph id="ph1">`allNumbers`</ph> является надмножеством и строгим надмножеством объекта <ph id="ph2">`lowNumbers`</ph> до <ph id="ph3">`allNumbers`</ph> изменяются, с помощью <ph id="ph4">&lt;xref:System.Collections.Generic.HashSet%601.IntersectWith%2A&gt;</ph> метода, чтобы содержать только те значения, которые присутствуют в обоих наборах.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Once <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are identical, <ph id="ph3">`allNumbers`</ph> is still a superset of <ph id="ph4">`lowNumbers`</ph> but is no longer a proper superset.</source>
          <target state="translated">Один раз <ph id="ph1">`allNumbers`</ph> и <ph id="ph2">`lowNumbers`</ph> идентичны, <ph id="ph3">`allNumbers`</ph> по-прежнему является надмножеством <ph id="ph4">`lowNumbers`</ph> , но больше не является строгим надмножеством.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>The source of the deserialization event.</source>
          <target state="translated">Источник события десериализации.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">Реализует интерфейс <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> и вызывает событие десериализации при завершении десериализации.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод вызывается O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object associated with the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is invalid.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, связанный с текущим объектом <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>, является недействительным.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and a specified collection share common elements.</source>
          <target state="translated">Определяет, имеются ли общие элементы в текущем объекте <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> и в указанной коллекции.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> и коллекция <ph id="ph3">&lt;paramref name="other" /&gt;</ph> имеют по крайней мере один общий элемент; в противном случае — значение <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`other`</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each another.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>In this example, <ph id="ph1">`allNumbers`</ph> and <ph id="ph2">`lowNumbers`</ph> are shown to share common elements using the <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Overlaps%2A&gt;</ph> method.</source>
          <target state="translated">В этом примере <ph id="ph1">`allNumbers`</ph> и <ph id="ph2">`lowNumbers`</ph> отображаются общие элементы с помощью <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Overlaps%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">Подлежащий удалению элемент.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>Removes the specified element from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Удаляет указанный элемент из объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если элемент был найден и удален; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>This method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is not found in the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Этот метод возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если элемент <ph id="ph2">&lt;paramref name="item" /&gt;</ph> не удалось найти в объекте <ph id="ph3">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object does not contain the specified element, the object remains unchanged.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объект не содержит указанный элемент, объект остается без изменений.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>No exception is thrown.</source>
          <target state="translated">Исключение не возникает.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Следующий пример демонстрирует удаление значений из <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с помощью <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.Remove(`0)">
          <source>In this example, zero is arbitrarily removed from the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection.</source>
          <target state="translated">В этом примере нуля произвольно удаляется из <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph> delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Predicate`1" /&gt;</ph>, определяющий условия удаления элемента.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Removes all elements that match the conditions defined by the specified predicate from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Удаляет все элементы, удовлетворяющие условиям, которые были определены указанным предикатом из коллекции <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The number of elements that were removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> collection.</source>
          <target state="translated">Количество элементов, удаленных из коллекции <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>Calling this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод вызывается O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>The following example demonstrates how to remove values from a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection using the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Следующий пример демонстрирует удаление значений из <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с помощью <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Remove%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source>In this example, all odd integers are removed from the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection as specified by the <ph id="ph2">`match`</ph> delegate.</source>
          <target state="translated">В этом примере удаляются все нечетные целые числа из <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции в соответствии с <ph id="ph2">`match`</ph> делегата.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="match" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object and the specified collection contain the same elements.</source>
          <target state="translated">Определяет, содержат ли объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> и указанная коллекция одни и те же элементы.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object is equal to <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; otherwise, false.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> равен <ph id="ph3">&lt;paramref name="other" /&gt;</ph>; в противном случае — значение false.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> method ignores duplicate entries and the order of elements in the <ph id="ph2">`other`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> Метод игнорирует повторяющиеся записи и порядок элементов в <ph id="ph2">`other`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection represented by <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если представленный коллекции <ph id="ph1">`other`</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — число элементов в <ph id="ph5">`other`</ph> и <ph id="ph6">`m`</ph> — <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two disparate <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects and compares them to each another.</source>
          <target state="translated">В следующем примере создается два различных <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и сравнивает их друг с другом.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Initially, the two sets are not equal, which is demonstrated by using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> method.</source>
          <target state="translated">Изначально двух наборов не равны, который продемонстрировать с использованием <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SetEquals%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">`allNumbers`</ph><ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is then modified, after which the sets are equal.</source>
          <target state="translated"><ph id="ph1">`allNumbers`</ph> <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> Объекта изменяется, после которого равны наборы.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain only elements that are present either in that object or in the specified collection, but not both.</source>
          <target state="translated">Изменяет текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> так, чтобы он содержал только элементы, которые имеются либо в этом объекте, либо в указанной коллекции, но не одновременно в них обоих.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>If the <ph id="ph1">`other`</ph> parameter is a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection with the same equality comparer as the current <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object, this method is an O(<ph id="ph4">`n`</ph>) operation.</source>
          <target state="translated">Если <ph id="ph1">`other`</ph> параметр <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции с того же компаратор проверки на равенство, что и текущий <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объекта, этот метод является операцией O (<ph id="ph4">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Otherwise, this method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements in <ph id="ph5">`other`</ph> and <ph id="ph6">`m`</ph> is <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">В противном случае этот метод является операцией O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) операции, где <ph id="ph4">`n`</ph> — число элементов в <ph id="ph5">`other`</ph> и <ph id="ph6">`m`</ph> — <ph id="ph7">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collections with overlapping sets of data.</source>
          <target state="translated">В следующем примере создается два <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекций с перекрывающимися наборов данных.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The set that contains the lower values is then modified, using the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A&gt;</ph> method, to contain only the values that are not present in both sets.</source>
          <target state="translated">Набор, содержащий более низкие значения изменяется, с помощью <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.SymmetricExceptWith%2A&gt;</ph> метода, чтобы содержать только значения, которые не присутствуют в обоих наборах.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Объект, добавляемый в объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> object.</source>
          <target state="translated">Добавляет элемент в объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> is less than <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, this method is an O(1) operation.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph> — меньше, чем <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Capacity%2A&gt;</ph>, этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>If the capacity must be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Если необходимо увеличить емкость для размещения нового элемента, этот метод становится операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> доступен только для чтения.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether a collection is read-only.</source>
          <target state="translated">Возвращает значение, указывающее, доступна ли коллекция только для чтения.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если коллекция доступна только для чтения; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Возвращает перечислитель, который осуществляет итерацию по коллекции.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>, который используется для прохода по коллекции.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Свойство возвращает тот же объект, пока <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator object instead.</source>
          <target state="translated">Не удается задать <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> на первый элемент коллекции попытку; необходимо создать новый объект перечислителя вместо него.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Возвращает перечислитель, который осуществляет итерацию по коллекции.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, который используется для прохода по коллекции.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Инструкции языка C# (<ph id="ph2">`for each`</ph> в C++ <ph id="ph3">`For Each`</ph> в Visual Basic) позволяет скрыть сложный перечислителей.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> также переводит перечислитель в эту позицию.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> Свойство возвращает тот же объект, пока не <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы снова задать в качестве значения свойства <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> первый элемент коллекции, можно последовательно вызвать методы <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> и<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated">Используемые по умолчанию реализации коллекций в пространстве имен <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> не синхронизированы.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>Sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to the actual number of elements it contains, rounded up to a nearby, implementation-specific value.</source>
          <target state="translated">Задает емкость объекта <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> равной фактическому числу элементов, которые в нем содержатся, округленному в большую сторону ближайшего значения, зависящего от реализации.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> method to minimize a <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object's memory overhead once it is known that no new elements will be added.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.TrimExcess%2A&gt;</ph> метод, чтобы свести к минимуму <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> издержки памяти объекта, если известно, что будет добавляться новые элементы.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>To completely clear a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object and release all memory referenced by it, call this method after calling the <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Выполнить полную очистку <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> и освободить всю память, он ссылается, следует вызвать этот метод после вызова <ph id="ph2">&lt;xref:System.Collections.Generic.HashSet%601.Clear%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.Generic.HashSet%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TrimExcess">
          <source>The following example creates and populates a <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> collection, and then clears the collection and releases the memory referenced by it.</source>
          <target state="translated">Следующий пример создает и заполняет <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> коллекции, а затем очищает коллекцию и освобождает память, он ссылается.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
          <source>The value to search for.</source>
          <target state="translated">Значение, которое нужно найти.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
          <source>The value from the set that the search found, or the default value of T when the search yielded no match.</source>
          <target state="translated">Значение, найденное в наборе, либо значение T по умолчанию, если поиск не вернул результатов.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
          <source>Searches the set for a given value and returns the equal value it finds, if any.</source>
          <target state="translated">Выполняет поиск указанного значения в наборе и возвращает равное ему значение, если его удалось найти.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
          <source>A value indicating whether the search was successful.</source>
          <target state="translated">Значение, указывающее, успешно ли был выполнен поиск.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
          <source>This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</source>
          <target state="translated">Это может быть полезно, если необходимо повторно использовать ранее сохраненные ссылку вместо нового созданного (что может произойти несколько совместного использования ссылок) или искомое значение, которое имеет более полные данные, чем значение в настоящее время имеется, несмотря на то что их функции сравнения указать, что они равны.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object.</source>
          <target state="translated">Коллекция для сравнения с текущим объектом <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> object to contain all elements that are present in itself, the specified collection, or both.</source>
          <target state="translated">Изменяет текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> так, чтобы он содержал все элементы, имеющиеся в нем или в указанной коллекции либо как в нем, так и в указанной коллекции.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`other`</ph> parameter.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`other`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The following example demonstrates how to merge two disparate sets.</source>
          <target state="translated">Следующий пример демонстрирует слияние двух разнородных наборов.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This example creates two <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> objects, and populates them with even and odd numbers, respectively.</source>
          <target state="translated">В этом примере создаются два <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> объектов и заполняет их четные и нечетные цифры, соответственно.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>A third <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> object is created from the set that contains the even numbers.</source>
          <target state="translated">В третьем <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601&gt;</ph> создать объект из набора, который содержит четные числа.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> method, which adds the odd number set to the third set.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Collections.Generic.HashSet%601.UnionWith%2A&gt;</ph> метод, который добавляет нечетное число, заданное в третий набор.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="other" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="other" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>