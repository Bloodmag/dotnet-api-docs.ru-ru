<Type Name="ImmutableList&lt;T&gt;+Builder" FullName="System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="306457b56ab4b2273eb07eecea5c4f9fbc8b4028" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImmutableList&lt;T&gt;.Builder : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ImmutableList`1/Builder&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList`1.Builder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImmutableList(Of T).Builder&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ImmutableList&lt;T&gt;::Builder sealed : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5a238-101">Представляет список, для изменения которого не требуется выделение памяти (или выделяется небольшой объем) и с помощью которого можно эффективно создавать или конструировать экземпляры неизменяемых списков.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a238-101">Represents a list that mutates with little or no memory allocations and that can produce or build on immutable list instances very efficiently.</span>
      </span>
      <span data-ttu-id="5a238-102">**Пакет NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">сведения о неизменяемых коллекциях и способах их установки</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a238-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-103">Несмотря на то что <xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType> и другие методы уже обеспечивают быстрый массовых операций изменения в списке <xref:System.Collections.Immutable.ImmutableList%601.Builder> класс позволяет вносить изменения в список с равно эффективность несколько комбинаций.</span><span class="sxs-lookup"><span data-stu-id="5a238-103">Although <xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A?displayProperty=nameWithType> and other methods already provide fast bulk change operations on the list, the <xref:System.Collections.Immutable.ImmutableList%601.Builder> class allows multiple combinations of changes to be made to a list with equal efficiency.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-104">Элемент, который нужно добавить в список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-104">The item to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-105">Добавляет элемент в неизменяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-105">Adds an item to the immutable list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="5a238-106">Элементы, которые нужно добавить в конец списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-106">The elements to add to the end of the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-107">Добавляет ряд элементов в конец списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-107">Adds a series of elements to the end of this list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-108">Искомый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-108">The object to locate.</span>
          </span>
          <span data-ttu-id="5a238-109">Для ссылочных типов допускается значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-109">The value can be null for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-110">Выполняет поиск элемента по всему списку <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, используя функцию сравнения по умолчанию, и возвращает его индекс, отсчитываемый от нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-110">Searches the entire <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-111">Отсчитываемый от нуля индекс элемента в списке <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-111">The zero-based index of item in the <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-112">Если <xref:System.Collections.Immutable.ImmutableList%601.Builder> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="5a238-112">If the <xref:System.Collections.Immutable.ImmutableList%601.Builder> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="5a238-113">Можно применить побитовую операцию дополнения (~) для этого отрицательное целое число, возвращается индекс первого элемента, большего, чем искомое значение.</span><span class="sxs-lookup"><span data-stu-id="5a238-113">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="5a238-114">При вставке значения в <xref:System.Collections.Immutable.ImmutableList%601.Builder>, следует использовать этот индекс позиции для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="5a238-114">When inserting the value into the <xref:System.Collections.Immutable.ImmutableList%601.Builder>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-115">Искомый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-115">The object to locate.</span>
          </span>
          <span data-ttu-id="5a238-116">Для ссылочных типов допускается значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-116">This value can be null for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="5a238-117">Реализация, которую нужно использовать при сравнении элементов, или <see langword="null" />, если следует использовать функцию сравнения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-117">The implementation to use when comparing elements, or <see langword="null" /> for the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-118">Выполняет поиск элемента по всему списку <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, используя указанную функцию сравнения, и возвращает его индекс, отсчитываемый от нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-118">Searches the entire <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-119">Отсчитываемый от нуля индекс элемента в списке <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-119">The zero-based index of item in the <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-120">Если <xref:System.Collections.Immutable.ImmutableList%601.Builder> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="5a238-120">If the <xref:System.Collections.Immutable.ImmutableList%601.Builder> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="5a238-121">Можно применить побитовую операцию дополнения (~) для этого отрицательное целое число, возвращается индекс первого элемента, большего, чем искомое значение.</span><span class="sxs-lookup"><span data-stu-id="5a238-121">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="5a238-122">При вставке значения в <xref:System.Collections.Immutable.ImmutableList%601.Builder>, следует использовать этот индекс позиции для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="5a238-122">When inserting the value into the <xref:System.Collections.Immutable.ImmutableList%601.Builder>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-123">Отсчитываемый от нуля индекс начала диапазона поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-123">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-124">Длина диапазона поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-124">The length of the range to search.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="5a238-125">Искомый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-125">The object to locate.</span>
          </span>
          <span data-ttu-id="5a238-126">Для ссылочных типов допускается значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-126">This value can be null for reference types.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="5a238-127">Реализация, которую нужно использовать при сравнении элементов, или <see langword="null" />, если следует использовать функцию сравнения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-127">The implementation to use when comparing elements, or <see langword="null" /> for the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-128">Выполняет поиск элемента в указанном диапазоне списка <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, используя указанную функцию сравнения, и возвращает его индекс, отсчитываемый от нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-128">Searches the specified range of the <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-129">Отсчитываемый от нуля индекс элемента в списке <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, если он найден; в противном случае — отрицательное число, которое является поразрядным дополнением индекса следующего элемента, большего, чем <paramref name="item" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-129">The zero-based index of item in the <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-130">Если <xref:System.Collections.Immutable.ImmutableList%601.Builder> не содержит указанное значение, метод возвращает отрицательное целое число.</span><span class="sxs-lookup"><span data-stu-id="5a238-130">If the <xref:System.Collections.Immutable.ImmutableList%601.Builder> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="5a238-131">Можно применить побитовую операцию дополнения (~) для этого отрицательное целое число, возвращается индекс первого элемента, большего, чем искомое значение.</span><span class="sxs-lookup"><span data-stu-id="5a238-131">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="5a238-132">При вставке значения в <xref:System.Collections.Immutable.ImmutableList%601.Builder>, следует использовать этот индекс позиции для сохранения порядка сортировки.</span><span class="sxs-lookup"><span data-stu-id="5a238-132">When inserting the value into the <xref:System.Collections.Immutable.ImmutableList%601.Builder>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-133">Удаляет все элементы из неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-133">Removes all items from the immutable list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-134">Объект, который нужно найти в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-134">The object to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-135">Определяет, содержит ли неизменяемый список указанное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-135">Determines whether the immutable list contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-136">Значение <see langword="true" />, если элемент найден в списке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-136">
              <see langword="true" /> if item is found in the list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableList&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Func&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableList`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Func`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.ConvertAll``1(System.Func{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Func(Of T, TOutput)) As ImmutableList(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Immutable::ImmutableList&lt;TOutput&gt; ^ ConvertAll(Func&lt;T, TOutput&gt; ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Func&lt;T,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput">
          <span data-ttu-id="5a238-137">Тип выходных данных делегированной функции преобразователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-137">The type of the output of the delegate converter function.</span>
          </span>
        </typeparam>
        <param name="converter">
          <span data-ttu-id="5a238-138">Функция преобразователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-138">The converter function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-139">Создает новый неизменяемый список на основе списка, представленного этим построителем, с использованием функции преобразователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-139">Creates a new immutable list from the list represented by this builder by using the converter function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-140">Новый неизменяемый список на основе списка, представленного этим построителем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-140">A new immutable list from the list represented by this builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5a238-141">Одномерный массив, в который копируются элементы неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-141">The one-dimensional array that is the destination of the elements copied from the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-142">Индекс в массиве должен начинаться с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-142">The array must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-143">Копирует весь неизменяемый список в совместимый одномерный массив начиная с начала целевого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-143">Copies the entire immutable list to a compatible one-dimensional array, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5a238-144">Одномерный массив, в который копируются элементы неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-144">The one-dimensional array that is the destination of the elements copied from the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-145">Индекс в массиве должен начинаться с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-145">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="5a238-146">Отсчитываемый от нуля индекс в массиве, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-146">The zero-based index in array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-147">Копирует весь неизменяемый список в совместимый одномерный массив начиная с указанного индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-147">Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-148">Отсчитываемый от нуля индекс исходного списка, с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-148">The zero-based index in the source immutable list at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="5a238-149">Одномерный массив, в который копируются элементы неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-149">The one-dimensional array that is the destination of the elements copied from the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-150">Индекс в массиве должен начинаться с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-150">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="5a238-151">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-151">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-152">Число элементов для копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-152">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-153">Копирует весь неизменяемый список в совместимый одномерный массив начиная с указанного индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-153">Copies the entire immutable list to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-154">Возвращает количество элементов в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-154">Gets the number of elements in this immutable list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-155">Количество элементов в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-155">The number of elements in this list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-156">Делегат, определяющий условия поиска элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-156">The delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-157">Определяет, содержит ли неизменяемый список элементы, удовлетворяющие условиям указанного предиката.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-157">Determines whether the immutable list contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-158">Значение <see langword="true" />, если неизменяемый список содержит один или несколько элементов, удовлетворяющих условиям указанного предиката; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-158">
              <see langword="true" /> if the immutable list contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-159">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-159">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-160">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает первое найденное вхождение в пределах всего неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-160">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-161">Первый элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-161">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableList&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableList`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableList&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-162">Делегат, определяющий условия поиска элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-162">The delegate that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-163">Извлекает все элементы, удовлетворяющие условиям указанного предиката.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-163">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-164">Неизменяемый список, который содержит все элементы, удовлетворяющие условиям указанного предиката, если такие элементы найдены; в противном случае — пустой неизменяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-164">An immutable list containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty immutable list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-165">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-165">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-166">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах всего неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-166">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-167">Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-167">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="5a238-168">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-168">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5a238-169">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-169">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-170">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов неизменяемого списка, начинающемся с заданного индекса и заканчивающимся последним элементом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-170">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-171">Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-171">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="5a238-172">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-172">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-173">Число элементов в диапазоне, в котором выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-173">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5a238-174">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-174">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-175">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов неизменяемого списка, начинающемся с заданного индекса и содержащем указанное число элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-175">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-176">Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-176">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-177">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-177">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-178">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает последнее найденное вхождение в пределах всего неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-178">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-179">Последний элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-179">The last element that matches the conditions defined by the specified predicate, found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-180">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-180">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-181">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего найденного вхождения в пределах всего неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-181">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-182">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-182">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="5a238-183">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-183">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5a238-184">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-184">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-185">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс его последнего вхождения в диапазоне элементов неизменяемого списка, начинающемся с первого элемента и заканчивающимся указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-185">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-186">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-186">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="5a238-187">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-187">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-188">Число элементов в диапазоне, в котором выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-188">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="5a238-189">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-189">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-190">Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов неизменяемого списка, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-190">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-191">Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-191">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="5a238-192">Делегат, выполняемый для каждого элемента списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-192">The delegate to perform on each element of the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-193">Выполняет указанное действие с каждым элементом списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-193">Performs the specified action on each element of the list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableList&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableList`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableList(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableList&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-194">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-194">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-195">Перечислитель, который можно использовать для перечисления элементов списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-195">An enumerator that can be used to iterate through the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableList&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableList`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableList&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-196">Отсчитываемый от нуля индекс, с которого начинается диапазон.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-196">The zero-based index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-197">Число элементов в диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-197">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-198">Создает неполную копию диапазона элементов исходного неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-198">Creates a shallow copy of a range of elements in the source immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-199">Неполная копия диапазона элементов исходного неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-199">A shallow copy of a range of elements in the source immutable list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-200">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-200">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-201">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-201">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-202">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-202">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-203">Отсчитываемый от нуля индекс первого вхождения элемента <paramref name="item" /> в диапазоне элементов неизменяемого списка, если элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-203">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-204">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-204">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-205">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-205">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5a238-206">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-206">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="5a238-207">Значение 0 (ноль) действительно в пустом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-207">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-208">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов неизменяемого списка начиная с заданного индекса и до последнего элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-208">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-209">Отсчитываемый от нуля индекс первого вхождения элемента в диапазоне элементов неизменяемого списка начиная с позиции <paramref name="index" /> и до конца списка, если элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-209">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from <paramref name="index" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-210">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-210">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-211">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-211">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5a238-212">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-212">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="5a238-213">Значение 0 (ноль) действительно в пустом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-213">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-214">Число элементов в диапазоне, в котором выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-214">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-215">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его первого вхождения в диапазоне элементов неизменяемого списка, начинающемся с заданного индекса и содержащем указанное число элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-215">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-216">Отсчитываемый от нуля индекс первого вхождения элемента в диапазоне элементов неизменяемого списка, который начинается с позиции <paramref name="index" /> и содержит <paramref name="count" /> элементов, если искомый объект найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-216">The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-217">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-217">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-218">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-218">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5a238-219">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-219">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="5a238-220">Значение 0 (ноль) действительно в пустом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-220">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-221">Число искомых элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-221">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="5a238-222">Функция сравнения значений, которую нужно использовать для проверки элементов на предмет равенства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-222">The value comparer to use for comparing elements for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-223">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" />, начинающемся с заданного индекса и содержащем указанное число элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-223">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Immutable.ImmutableList`1.Builder" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-224">Отсчитываемый от нуля индекс первого вхождения элемента в диапазоне элементов неизменяемого списка, который начинается с позиции <paramref name="index" /> и содержит <paramref name="count" /> элементов, если искомый объект найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-224">The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-225">Отсчитываемый от нуля индекс, по которому следует вставить <c>элемент</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-225">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="5a238-226">Объект, который нужно вставить в неизменяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-226">The object to insert into the immutable list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-227">Вставляет элемент в неизменяемый список по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-227">Inserts an item to the immutable list at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-228">Отсчитываемый от нуля индекс места вставки новых элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-228">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="5a238-229">Коллекция, элементы которой нужно вставить в неизменяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-229">The collection whose elements should be inserted into the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-230">Коллекция не может быть задана значением <see langword="null" />, но может содержать пустые элементы, если тип <c>T</c> является ссылочным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-230">The collection itself cannot be <see langword="null" />, but it can contain elements that are null, if type <c>T</c> is a reference type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-231">Вставляет элементы коллекции в неизменяемый список в позиции с указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-231">Inserts the elements of a collection into the immutable list at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-232">Индекс элемента, который нужно получить или установить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-232">The index of the item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-233">Возвращает или устанавливает значение в списке по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-233">Gets or sets the value for a given index in the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-234">Значение по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-234">The value at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemRef">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.T&amp; ItemRef (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.T&amp; modreq(System.Runtime.InteropServices.InAttribute) ItemRef(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.ItemRef(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemRef (index As Integer) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::T&amp; ^ ItemRef(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.T&amp;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-235">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-235">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-236">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-236">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-237">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его последнего вхождения в пределах всего неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-237">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-238">Отсчитываемый от нуля индекс последнего вхождения <paramref name="item" /> в пределах всего неизменяемого списка, если элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-238">The zero-based index of the last occurrence of <paramref name="item" /> within the entire immutable list, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-239">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-239">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-240">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-240">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="5a238-241">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-241">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-242">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс его последнего вхождения в диапазоне элементов неизменяемого списка начиная с первого элемента и до заданного индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-242">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-243">Отсчитываемый от нуля индекс последнего вхождения элемента <paramref name="item" /> в диапазоне элементов неизменяемого списка начиная с первого элемента и до позиции <paramref name="index" />, если элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-243">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the immutable list that extends from the first element to <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-244">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-244">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-245">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-245">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="5a238-246">Индекс (с нуля) начала диапазона поиска в обратном направлении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-246">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-247">Число элементов в диапазоне, в котором выполняется поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-247">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-248">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов неизменяемого списка, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-248">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-249">Отсчитываемый от нуля индекс последнего вхождения объекта <paramref name="item" /> в диапазоне элементов неизменяемого списка, состоящем из <paramref name="count" /> элементов и заканчивающемся в позиции <paramref name="index" />, если элемент найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-249">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the immutable list that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-250">Объект, который нужно найти в неизменяемом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-250">The object to locate in the immutable list.</span>
          </span>
          <span data-ttu-id="5a238-251">Для ссылочных типов допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-251">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="5a238-252">Индекс (с нуля) начальной позиции поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-252">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="5a238-253">Значение 0 (ноль) действительно в пустом списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-253">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-254">Число искомых элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-254">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="5a238-255">Функция сравнения значений, которую нужно использовать для проверки элементов на предмет равенства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-255">The value comparer to use for comparing elements for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-256">Выполняет поиск указанного объекта и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов неизменяемого списка, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-256">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-257">Отсчитываемый от нуля индекс первого вхождения элемента в диапазоне элементов неизменяемого списка, который начинается с позиции <paramref name="index" /> и содержит <paramref name="count" /> элементов, если искомый объект найден; в противном случае — значение –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-257">The zero-based index of the first occurrence of item within the range of elements in the immutable list that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, –1</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="5a238-258">Объект, который нужно удалить из списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-258">The object to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-259">Удаляет первое вхождение указанного объекта из неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-259">Removes the first occurrence of a specific object from the immutable list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-260">Значение <see langword="true" />, если элемент был успешно удален из списка; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-260">
              <see langword="true" /> if item was successfully removed from the list; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5a238-261">Этот метод также возвращает значение <see langword="false" />, если элемент не найден в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-261">This method also returns <see langword="false" /> if item is not found in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-262">Делегат, определяющий условия удаления элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-262">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-263">Удаляет все элементы, удовлетворяющие условиям указанного предиката.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-263">Removes all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-264">Количество элементов, удаляемых из неизменяемого списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-264">The number of elements removed from the immutable list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-265">Отсчитываемый от нуля индекс элемента, удаляемого из списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-265">The zero-based index of the item to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-266">Удаляет из неизменяемого списка элемент с указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-266">Removes the item at the specified index of the immutable list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-267">Изменяет порядок элементов во всем неизменяемом списке на обратный.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-267">Reverses the order of the elements in the entire immutable list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-268">Отсчитываемый от нуля индекс начала диапазона, порядок элементов которого требуется изменить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-268">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-269">Число элементов в диапазоне, порядок сортировки в котором требуется изменить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-269">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-270">Изменяет порядок элементов неизменяемого списка в указанном диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-270">Reverses the order of the elements in the specified range of the immutable list.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-271">Сортирует элементы во всем неизменяемом списке с помощью функции сравнения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-271">Sorts the elements in the entire immutable list by using the default comparer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="5a238-272">Реализация, которую нужно использовать при сравнении элементов, или <see langword="null" />, если следует использовать функцию сравнения по умолчанию (<see cref="P:System.Collections.Generic.Comparer`1.Default" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-272">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer (<see cref="P:System.Collections.Generic.Comparer`1.Default" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-273">Сортирует элементы во всем неизменяемом списке с помощью указанной функции сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-273">Sorts the elements in the entire immutable list by using the specified comparer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="5a238-274">Объект, используемый при сравнении элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-274">The object to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-275">Сортирует элементы во всем неизменяемом списке с помощью указанного объекта сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-275">Sorts the elements in the entire immutable list by using the specified comparison object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-276">Индекс (с нуля) начала диапазона, который требуется отсортировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-276">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5a238-277">Длина диапазона сортировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-277">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="5a238-278">Реализация, которую нужно использовать при сравнении элементов, или <see langword="null" />, если следует использовать функцию сравнения по умолчанию (<see cref="P:System.Collections.Generic.Comparer`1.Default" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-278">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer (<see cref="P:System.Collections.Generic.Comparer`1.Default" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-279">Сортирует элементы в диапазоне неизменяемого списка с помощью указанной функции сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-279">Sorts the elements in a range of elements in the immutable list  by using the specified comparer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-280">Возвращает значение, указывающее, доступен ли этот экземпляр только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-280">Gets a value indicating whether this instance is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-281">Всегда <c>false</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-281">Always <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-282">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-282">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-283">Перечислитель, который можно использовать для итерации по коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-283">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-284">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-284">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-285">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="5a238-285">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5a238-286">Одномерный массив, в который копируются элементы из списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-286">The one-dimensional array that is the destination of the elements copied from the list.</span>
          </span>
          <span data-ttu-id="5a238-287">Индекс в массиве должен начинаться с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-287">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="5a238-288">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-288">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-289">Копирует элементы списка в массив начиная с определенного индекса массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-289">Copies the elements of the list to an array, starting at a particular array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-290">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-291">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="5a238-291">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-292">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-292">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-293">Значение true, если доступ к коллекции <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-293">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-294">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-294">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-295">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-295">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-296">Возвращает перечислитель, выполняющий перебор элементов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-296">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-297">Перечислитель, который можно использовать для итерации по коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-297">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-298">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-298">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-299">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="5a238-299">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5a238-300">Объект, который нужно добавить в список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-300">The object to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-301">Добавляет элемент в список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-301">Adds an item to the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-302">Позиция, в которую вставлен новый элемент, или значение -1, если элемент не вставлен в коллекцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-302">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-303">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-303">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-304">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-304">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-305">Удаляет все элементы из списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-305">Removes all items from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-306">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-307">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-307">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5a238-308">Объект, который нужно найти в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-308">The object to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-309">Определяет, содержит ли список указанное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-309">Determines whether the list contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-310">Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в списке; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-310">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the list; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-311">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-312">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-312">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5a238-313">Объект, который нужно найти в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-313">The object to locate in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-314">Определяет индекс указанного элемента в списке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-314">Determines the index of a specific item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-315">Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-315">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-316">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-316">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-317">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-317">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-318">Отсчитываемый от нуля индекс, по которому необходимо вставить <c>значение</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-318">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5a238-319">Объект, который нужно вставить в список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-319">The object to insert into the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-320">Вставляет элемент в список по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-320">Inserts an item to the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-321">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-322">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-322">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-323">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-323">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-324">Значение true, если коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-324">true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a238-325">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-325">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a238-326">Значение true, если коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> доступна только для чтения; в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-326">true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5a238-327">Индекс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-327">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-328">Возвращает или задает объект <see cref="T:System.Object" /> с заданным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-328">Gets or sets the <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5a238-329">Объект, который нужно удалить из списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-329">The object to remove from the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-330">Удаляет из списка первый экземпляр указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-330">Removes the first occurrence of a specific object from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-331">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="5a238-331">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5a238-332">Он может использоваться, только если экземпляр <xref:System.Collections.Immutable.ImmutableList%601.Builder> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="5a238-332">It can be used only when the <xref:System.Collections.Immutable.ImmutableList%601.Builder> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException" />
      </Docs>
    </Member>
    <Member MemberName="ToImmutable">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableList&lt;T&gt; ToImmutable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableList`1&lt;!T&gt; ToImmutable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.ToImmutable" />
      <MemberSignature Language="VB.NET" Value="Public Function ToImmutable () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableList&lt;T&gt; ^ ToImmutable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a238-333">Создает неизменяемый список на основе содержимого исходного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-333">Creates an immutable list based on the contents of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-334">Неизменяемый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-334">An immutable list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a238-335">Этот метод является операцией O(n) и подход к O(1) время как количество фактических гарантированного в набор с момента последнего вызова этого метода подходов 0.</span><span class="sxs-lookup"><span data-stu-id="5a238-335">This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList`1.Builder.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="5a238-336">Делегат, который определяет условия, проверяемые для элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-336">The delegate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a238-337">Определяет, все ли элементы неизменяемого списка удовлетворяют условиям указанного предиката.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-337">Determines whether every element in the immutable list matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a238-338">Значение <see langword="true" />, если каждый элемент неизменяемого списка удовлетворяет условиям указанного предиката; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-338">
              <see langword="true" /> if every element in the immutable list matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5a238-339">Если в списке нет элементов, возвращается <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a238-339">If the list has no elements, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>