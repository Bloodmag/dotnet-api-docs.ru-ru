<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3375080ab008f35379a851d18f700db732edfd23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="21ad7-101">Тип ключей в коллекции.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21ad7-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="21ad7-102">Тип элементов в коллекции.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21ad7-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="21ad7-103">Предоставляет абстрактный базовый класс для коллекции, ключи которой внедрены в значения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21ad7-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-104"><xref:System.Collections.ObjectModel.KeyedCollection%602> Класс предоставляет оба O(1) индексированное извлечение и ключом является получение которого приближается O(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="21ad7-105">Это абстрактный тип, или точнее бесконечное множество абстрактных типов, поскольку каждый из его сконструированных универсальных типов является абстрактным базовым классом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="21ad7-106">Чтобы использовать <xref:System.Collections.ObjectModel.KeyedCollection%602>, наследуют соответствующего типа сконструированного типа коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="21ad7-107"><xref:System.Collections.ObjectModel.KeyedCollection%602> Класс — это гибрид коллекции на основании <xref:System.Collections.Generic.IList%601> универсального интерфейса и коллекции на основе <xref:System.Collections.Generic.IDictionary%602> универсальный интерфейс.</span><span class="sxs-lookup"><span data-stu-id="21ad7-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="21ad7-108">На основе коллекций, например <xref:System.Collections.Generic.IList%601> универсальный интерфейс <xref:System.Collections.ObjectModel.KeyedCollection%602> является индексированным списком элементов.</span><span class="sxs-lookup"><span data-stu-id="21ad7-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="21ad7-109">На основе коллекций, например <xref:System.Collections.Generic.IDictionary%602> универсальный интерфейс <xref:System.Collections.ObjectModel.KeyedCollection%602> имеет ключ, связанный с каждым элементом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="21ad7-110">В отличие от словари, элемент <xref:System.Collections.ObjectModel.KeyedCollection%602> не пару ключ значение; вместо этого весь элемент представляет собой значение и ключ внедряется в пределах значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="21ad7-111">Например, элемента коллекции, производного от `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` в Visual Basic) может быть «Младший John Doe».</span><span class="sxs-lookup"><span data-stu-id="21ad7-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="21ad7-112">где значение — «John Doe младший»</span><span class="sxs-lookup"><span data-stu-id="21ad7-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="21ad7-113">и ключ — «Doe»; или коллекцию записей сотрудников, содержащих целочисленные ключи может быть получен из `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="21ad7-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="21ad7-114">Абстрактный <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метод извлекает ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="21ad7-115">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, которую можно получить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="21ad7-116">При добавлении элемента <xref:System.Collections.ObjectModel.KeyedCollection%602>, извлекаются один раз и сохраняется в словарь поиска для ускорения поиска ключа элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="21ad7-117">Это поведение переопределяется путем указания порог создания словаря при создании <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-118">Словарь поиска создается впервые, количество элементов превышает пороговое значение.</span><span class="sxs-lookup"><span data-stu-id="21ad7-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="21ad7-119">Если указать пороговое значение – 1, словарь поиска никогда не создается.</span><span class="sxs-lookup"><span data-stu-id="21ad7-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-120">Когда используется внутренний словарь поиска, он содержит ссылки на все элементы в коллекции, если `TItem` является ссылочным типом или копирование всех элементов в коллекции, если `TItem` является типом значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="21ad7-121">Таким образом, использование словаря поиска может быть неприемлемо, если `TItem` является типом значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="21ad7-122">Доступ к элементу по его индексу или ключу с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="21ad7-123">Можно добавить элементы без ключа, но эти элементы впоследствии может осуществляться только по индексу.</span><span class="sxs-lookup"><span data-stu-id="21ad7-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-124">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-124">This section contains two code examples.</span></span> <span data-ttu-id="21ad7-125">В первом примере минимальный код, необходимый для являются производными от <xref:System.Collections.ObjectModel.KeyedCollection%602>и показывается, многие из унаследованных методов.</span><span class="sxs-lookup"><span data-stu-id="21ad7-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="21ad7-126">Во втором примере показан способ переопределения защищенных методов <xref:System.Collections.ObjectModel.KeyedCollection%602> для предоставления пользовательского поведения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="21ad7-127">**Пример 1.**</span><span class="sxs-lookup"><span data-stu-id="21ad7-127">**Example 1**</span></span>  
  
 <span data-ttu-id="21ad7-128">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-129">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-130">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-131">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-132">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="21ad7-133">**Пример 2**</span><span class="sxs-lookup"><span data-stu-id="21ad7-133">**Example 2**</span></span>  
  
 <span data-ttu-id="21ad7-134">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-135">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-136">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-137">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-138">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-139">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-140">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-141">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="21ad7-142">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21ad7-143">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, в котором используется компаратор по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-144">Объект <xref:System.Collections.ObjectModel.KeyedCollection%602> с этим конструктор использует универсальный компаратор по умолчанию для типа ключа, полученный от <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21ad7-145">Чтобы указать другой универсальный компаратор, используйте <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> конструктор или <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="21ad7-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="21ad7-146">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="21ad7-147">При добавлении элемента <xref:System.Collections.ObjectModel.KeyedCollection%602>, извлекаются один раз и сохраняется в словарь поиска для ускорения поиска ключа элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="21ad7-148">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор и указав порог создания словаря.</span><span class="sxs-lookup"><span data-stu-id="21ad7-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-149">Поскольку <xref:System.Collections.ObjectModel.KeyedCollection%602> класс является абстрактным (`MustInherit` в Visual Basic), необходимо создать производный от него для использования.</span><span class="sxs-lookup"><span data-stu-id="21ad7-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="21ad7-150">В конструкторе производного типа вызова соответствующего <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="21ad7-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="21ad7-151">Необязательно для предоставления функциональных возможностей, таких как компаратор или порог создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="21ad7-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="21ad7-152">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-153">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-154">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-155">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-156">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-157">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="21ad7-158">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которая может использоваться при сравнении ключей, или <see langword="null" />, чтобы использовать компаратор по умолчанию для типа ключа, полученного из <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-159">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, в котором используется заданный компаратор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-160">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="21ad7-161">При добавлении элемента <xref:System.Collections.ObjectModel.KeyedCollection%602>, извлекаются один раз и сохраняется в словарь поиска для ускорения поиска ключа элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="21ad7-162">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор и указав порог создания словаря.</span><span class="sxs-lookup"><span data-stu-id="21ad7-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-163">Поскольку <xref:System.Collections.ObjectModel.KeyedCollection%602> класс является абстрактным (`MustInherit` в Visual Basic), необходимо создать производный от него для использования.</span><span class="sxs-lookup"><span data-stu-id="21ad7-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="21ad7-164">В конструкторе производного типа вызова соответствующего <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="21ad7-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="21ad7-165">Необязательно для предоставления функциональных возможностей, таких как компаратор или порог создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="21ad7-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="21ad7-166">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="21ad7-167">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которая может использоваться при сравнении ключей, или <see langword="null" />, чтобы использовать компаратор по умолчанию для типа ключа, полученного из <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="21ad7-168">Количество элементов, которое может содержать коллекция без создания словаря поиска (при значении 0 словарь поиска создается при добавлении первого элемента), или –1, чтобы определить, что словарь поиска не будет создаться никогда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-169">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, который использует заданный компаратор и создает словарь поиска при превышении заданного порога.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-170">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="21ad7-171">При добавлении элемента <xref:System.Collections.ObjectModel.KeyedCollection%602>, извлекаются один раз и сохраняется в словарь поиска для ускорения поиска ключа элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="21ad7-172">Этот конструктор позволяет переопределить это поведение.</span><span class="sxs-lookup"><span data-stu-id="21ad7-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="21ad7-173">Укажите 0, чтобы создать словарь при добавлении первого элемента, 1, чтобы создать словарь при добавлении второго элемента и т. д.</span><span class="sxs-lookup"><span data-stu-id="21ad7-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="21ad7-174">Если указать пороговое значение – 1, словарь поиска никогда не создается.</span><span class="sxs-lookup"><span data-stu-id="21ad7-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="21ad7-175">Для небольших коллекций повышение скорости получения данных, предоставляемые словарь поиска не может быть стоит дополнительную память, необходимую для словаря.</span><span class="sxs-lookup"><span data-stu-id="21ad7-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="21ad7-176">Задание порога позволяет определить, когда такой компромисс.</span><span class="sxs-lookup"><span data-stu-id="21ad7-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-177">Поскольку <xref:System.Collections.ObjectModel.KeyedCollection%602> класс является абстрактным (`MustInherit` в Visual Basic), необходимо создать производный от него для использования.</span><span class="sxs-lookup"><span data-stu-id="21ad7-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="21ad7-178">В конструкторе производного типа вызова соответствующего <xref:System.Collections.ObjectModel.KeyedCollection%602> конструктор.</span><span class="sxs-lookup"><span data-stu-id="21ad7-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="21ad7-179">Необязательно для предоставления функциональных возможностей, таких как компаратор или порог создания словаря в конструкторах.</span><span class="sxs-lookup"><span data-stu-id="21ad7-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="21ad7-180">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-181">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-182">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-183">В примере кода используется <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор с пороговым значением 0, чтобы внутренний словарь создается в первый раз, когда объект добавляется в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="21ad7-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="21ad7-184">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-185">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-186">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-187">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-188">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-189">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="21ad7-190">Значение параметра <paramref name="dictionaryCreationThreshold" /> меньше –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="21ad7-191">Элемент, ключ которого требуется изменить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="21ad7-192">Новый ключ для <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-193">Изменяет ключ, связанный с указанным элементом в словаре поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-194">Этот метод не изменяет ключ, внедренных в `item`; он просто заменяет ключ, сохраненный в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="21ad7-195">Таким образом Если `newKey` отличается от ключа, которая встроена в `item`, не может получить доступ к `item` с помощью ключа, возвращенных <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="21ad7-196">Этот метод не выполняет никаких действий при <xref:System.Collections.ObjectModel.KeyedCollection%602> имеет словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="21ad7-197">Каждый ключ в <xref:System.Collections.ObjectModel.KeyedCollection%602> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="21ad7-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="21ad7-198">Ключ не может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="21ad7-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="21ad7-199">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-200">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-200">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-201">Перед изменением ключа внедрены в элемент, необходимо вызвать этот метод, чтобы обновить ключ в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="21ad7-202">Если порог создания словаря равен – 1, вызов этого метода не требуется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="21ad7-203">Не предоставляйте <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метода в качестве открытого метода производного класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="21ad7-204">Неправильное использование этого метода помещает словарь поиска не синхронизировано с ключами элементов.</span><span class="sxs-lookup"><span data-stu-id="21ad7-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="21ad7-205">Например, установите значение ключа `null` и задав другое значение добавляет несколько ключей для элемента в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="21ad7-206">Предоставляйте этот метод внутренним образом, чтобы разрешить изменяемые ключи элементов: при изменении ключа для элемента, этот метод используется для изменения ключа в словаре поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-207">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-208">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-209">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-210">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-211">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-212">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-213">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-214">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21ad7-215">Свойство <paramref name="item" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="21ad7-216">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-216">-or-</span>
          </span>
          <span data-ttu-id="21ad7-217">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-217">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="21ad7-218">
            <paramref name="item" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-218">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="21ad7-219">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-219">-or-</span>
          </span>
          <span data-ttu-id="21ad7-220">Указанный параметр <paramref name="key" /> уже существует в <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-220">
              <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21ad7-221">Удаляет из коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> все элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-221">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-222">Если словарь поиска, этот метод очищает его, но не удаляет его.</span><span class="sxs-lookup"><span data-stu-id="21ad7-222">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="21ad7-223">Если количество элементов превысило порог создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> — с помощью словарь поиска, она будет продолжать использование, даже если количество элементов снова находится ниже порогового значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-223">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="21ad7-224">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-225">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-225">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-226">Переопределите этот метод, чтобы предоставить настраиваемое поведение для <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> метод, унаследованный от <xref:System.Collections.ObjectModel.Collection%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-226">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="21ad7-227">Вызовите реализацию базового класса этого метода для очистки коллекции и очистить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-227">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-228">Этот раздел содержит два примера кода, демонстрирующие переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> метод, чтобы предоставить пользовательское поведение для очистки всех объектов из коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-228">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="21ad7-229">В первом примере добавляется настраиваемое событие уведомления и второй обеспечивает поддержку для коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-229">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="21ad7-230">Пример 1</span><span class="sxs-lookup"><span data-stu-id="21ad7-230">Example 1</span></span>  
  
 <span data-ttu-id="21ad7-231">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-231">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-232">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-232">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-233">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-233">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-234">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-234">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-235">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-235">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-236">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-236">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-237">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-237">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-238">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-238">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="21ad7-239">Пример 2</span><span class="sxs-lookup"><span data-stu-id="21ad7-239">Example 2</span></span>  
  
 <span data-ttu-id="21ad7-240">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-240">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-241">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-241">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-242">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-242">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-243">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-243">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-244">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-244">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-245">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-245">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-246">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-246">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-247">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-247">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21ad7-248">Получает универсальный компаратор, используемый для определения равенства ключей в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-248">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21ad7-249">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемого для определения равенства ключей в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-249">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-250">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="21ad7-251">Ключ, который требуется найти в <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-251">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-252">Определяет, содержится ли в коллекции элемент с указанным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-252">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21ad7-253">
            <see langword="true" />, если <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-253">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-254">Если <xref:System.Collections.ObjectModel.KeyedCollection%602> словарь поиска, `key` будет использоваться для поиска в словаре.</span><span class="sxs-lookup"><span data-stu-id="21ad7-254">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="21ad7-255">Если отсутствует словарь поиска, ключа каждого элемента извлекается с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метод и сравнивается с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-255">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="21ad7-256">Этот метод является операцией o(1), если <xref:System.Collections.ObjectModel.KeyedCollection%602> словарь поиска; в противном случае это O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-256">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-257">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-257">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-258">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-258">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-259">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-259">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-260">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-260">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-261">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-261">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21ad7-262">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-262">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21ad7-263">Получает словарь поиска <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-263">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21ad7-264">Словарь поиска коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, если он существует; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-264">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-265">По умолчанию <xref:System.Collections.ObjectModel.KeyedCollection%602> включает словарь поиска, который создается при добавлении первого элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-265">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="21ad7-266">При добавлении элемента <xref:System.Collections.ObjectModel.KeyedCollection%602>, извлекаются один раз и сохраняется в словарь поиска для ускорения поиска ключа элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-266">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="21ad7-267">Это поведение можно переопределить с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> конструктор и указав порог создания словаря.</span><span class="sxs-lookup"><span data-stu-id="21ad7-267">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="21ad7-268">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-268">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-269">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-269">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-270">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-270">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-271">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-271">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-272">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-272">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-273">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-273">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-274">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-274">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-275">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-275">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-276">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-276">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="21ad7-277">Элемент, из которого нужно извлечь ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-277">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-278">При реализации в производном классе извлекает ключ из указанного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-278">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21ad7-279">Ключ для указанного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-279">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-280">Если ключ в словаре поиска отличается от ключа, который внедряется в `item`, не может получить доступ к `item` с помощью ключа, возвращенных <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-280">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="21ad7-281">Можно реализовать этот метод для возврата `null` для коллекции, содержащей элементы без ключей, в этом случае элементы может осуществляться только по индексу.</span><span class="sxs-lookup"><span data-stu-id="21ad7-281">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="21ad7-282">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-282">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-283">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-283">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-284">Необходимо переопределить этот метод, чтобы предоставить для словаря способ извлечения ключей из элементов в словаре.</span><span class="sxs-lookup"><span data-stu-id="21ad7-284">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="21ad7-285">Этот метод вызывается внутренним образом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-285">This method is called internally.</span></span> <span data-ttu-id="21ad7-286">Необязательно для него должен быть открытым.</span><span class="sxs-lookup"><span data-stu-id="21ad7-286">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-287">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-287">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-288">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-288">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-289">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-289">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-290">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-290">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-291">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-291">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="21ad7-292">Отсчитываемый от нуля индекс, по которому следует вставить <c>элемент</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-292">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="21ad7-293">Вставляемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-293">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-294">Вставляет элемент в коллекцию <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-294">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-295">Если `index` равен <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` добавляется в конец <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-295">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="21ad7-296">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-296">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="21ad7-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> вызывается методом <xref:System.Collections.ObjectModel.Collection%601.Add%2A> и <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-298">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-298">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-299">Переопределите этот метод, чтобы предоставить настраиваемое поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A> и <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> методы, унаследованные от <xref:System.Collections.ObjectModel.Collection%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-299">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="21ad7-300">Вызовите реализацию базового класса этого метода для вставки элемента в коллекции и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-300">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-301">Этот раздел содержит два примера кода, демонстрирующие переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод, чтобы предоставить пользовательское поведение для добавления или вставке объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-301">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="21ad7-302">В первом примере добавляется настраиваемое событие уведомления и второй обеспечивает поддержку для коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-302">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="21ad7-303">Пример 1</span><span class="sxs-lookup"><span data-stu-id="21ad7-303">Example 1</span></span>  
  
 <span data-ttu-id="21ad7-304">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-304">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-305">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-305">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-306">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-306">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-307">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-307">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-308">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-308">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-309">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-309">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-310">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-310">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-311">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-311">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="21ad7-312">Пример 2</span><span class="sxs-lookup"><span data-stu-id="21ad7-312">Example 2</span></span>  
  
 <span data-ttu-id="21ad7-313">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-313">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-314">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-314">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-315">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-315">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-316">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-316">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-317">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-317">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-318">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-318">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-319">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-319">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-320">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-320">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="21ad7-321">Значение параметра <paramref name="index" /> меньше 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-321">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="21ad7-322">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-322">-or-</span>
          </span>
          <span data-ttu-id="21ad7-323">Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-323">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="21ad7-324">Ключ элемента, который требуется получить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-324">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-325">Получает элемент с указанным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-325">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21ad7-326">Элемент с указанным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-326">The element with the specified key.</span>
          </span>
          <span data-ttu-id="21ad7-327">Если элемент с указанным ключом не найден, выдается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-327">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-328">Это свойство предоставляет возможность доступа к указанному элементу коллекции с помощью следующего синтаксиса: `myCollection[key]` (`myCollection(key)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="21ad7-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-329">Это свойство отличается от наследуемого <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> свойство, которое возвращает и задает элементов по числовому индексу.</span><span class="sxs-lookup"><span data-stu-id="21ad7-329">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="21ad7-330">Однако если `TKey` типа <xref:System.Int32>, это свойство маскирует наследуемое свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-330">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="21ad7-331">В этом случае можно получить унаследованное свойство путем приведения <xref:System.Collections.ObjectModel.KeyedCollection%602> со своим базовым типом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-331">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="21ad7-332">Например `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` в Visual Basic `KeyedCollection<int, MyType^>` в C++) может быть приведен к `Collection<MyType>` (`Collection(Of MyType)` в Visual Basic `Collection<MyType^>` в C++).</span><span class="sxs-lookup"><span data-stu-id="21ad7-332">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="21ad7-333">Если <xref:System.Collections.ObjectModel.KeyedCollection%602> словарь поиска, `key` используется для извлечения элемента из словаря.</span><span class="sxs-lookup"><span data-stu-id="21ad7-333">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="21ad7-334">Если отсутствует словарь поиска, ключа каждого элемента извлекается с помощью <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метод и сравнивается с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-334">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="21ad7-335">Ключевое слово языка C# используется для определения индексаторов вместо реализации <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-335">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="21ad7-336">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="21ad7-336">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="21ad7-337">Получение значения данного свойства является операцией o(1), если <xref:System.Collections.ObjectModel.KeyedCollection%602> словарь поиска; в противном случае это O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-337">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-338">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-338">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-339">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-339">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-340">Пример кода вызывает и <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> свойство, которое доступно только для чтения и извлекает ключом, и <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> свойство, которое можно задать и извлекает по индексу.</span><span class="sxs-lookup"><span data-stu-id="21ad7-340">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="21ad7-341">Показано, как получить доступ к последнему свойству, когда объекты в производной коллекции имеет целочисленный ключ, не отличается от целых чисел, используемый для получения элементов по индексу.</span><span class="sxs-lookup"><span data-stu-id="21ad7-341">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="21ad7-342">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-342">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-343">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-343">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-344">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-344">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21ad7-345">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-345">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="21ad7-346">Элемент с указанным ключом отсутствует в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-346">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="21ad7-347">Ключ элемента, который требуется удалить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-347">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-348">Удаляет элемент с указанным ключом из <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-348">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21ad7-349">Значение <see langword="true" />, если элемент успешно удален; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-349">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="21ad7-350">Этот метод также возвращает <see langword="false" />, если элемент <paramref name="key" /> не найден в коллекции <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-350">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-351">Ключ элемента также удаляется из словаря поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-351">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="21ad7-352">Если количество элементов превысило порог создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> — с помощью словарь поиска, она будет продолжать использование, даже если количество элементов снова находится ниже порогового значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-352">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-353">Чтобы настроить поведение данного метода, переопределите <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-353">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="21ad7-354">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-355">Этот пример кода показывает минимальный код, необходимо унаследовать класс коллекции <xref:System.Collections.ObjectModel.KeyedCollection%602>: переопределения <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> метода, а также предоставлять открытый конструктор, который выполняет делегирование конструктор базового класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-355">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="21ad7-356">В примере кода также демонстрируется ряд свойств и методов, унаследованных из <xref:System.Collections.ObjectModel.KeyedCollection%602> и <xref:System.Collections.ObjectModel.Collection%601> классы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-356">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="21ad7-357">В примере показано <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> метод наследуется от <xref:System.Collections.ObjectModel.KeyedCollection%602>, который удаляет элемент с указанным ключом, а также <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> и <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> методами, унаследованными от <xref:System.Collections.ObjectModel.Collection%601>, удаляющие объектом и индексу соответственно.</span><span class="sxs-lookup"><span data-stu-id="21ad7-357">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="21ad7-358">`SimpleOrder` Класс является очень простым списком заявки, содержащий `OrderItem` объектов, каждый из которых представляет элемент строки в порядке.</span><span class="sxs-lookup"><span data-stu-id="21ad7-358">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="21ad7-359">Ключ `OrderItem` является неизменяемым, особенно важно для классов, производных от <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-359">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="21ad7-360">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-360">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="21ad7-361">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-361">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="21ad7-362">Индекс элемента, который должен быть удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-362">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-363">Удаляет элемент списка <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> с указанным индексом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-363">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-364">Ключ элемента также удаляется из словаря поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-364">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="21ad7-365">Если количество элементов превысило порог создания словаря и <xref:System.Collections.ObjectModel.KeyedCollection%602> — с помощью словарь поиска, она будет продолжать использование, даже если количество элементов снова находится ниже порогового значения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-365">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="21ad7-366">Этот метод является операцией O (`n`) операции, где `n` — <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-366">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-367">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-367">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-368">Переопределите этот метод, чтобы предоставить настраиваемое поведение для <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> и <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> методы, унаследованные от <xref:System.Collections.ObjectModel.Collection%601> универсального класса и <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-368">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="21ad7-369">Вызовите реализацию базового класса этого метода для удаления элемента из базовой коллекции и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-369">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-370">Этот раздел содержит два примера кода, демонстрирующие переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> метод, чтобы предоставить пользовательское поведение для удаления объектов из коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-370">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="21ad7-371">В первом примере добавляется настраиваемое событие уведомления и второй обеспечивает поддержку для коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-371">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="21ad7-372">Пример 1</span><span class="sxs-lookup"><span data-stu-id="21ad7-372">Example 1</span></span>  
  
 <span data-ttu-id="21ad7-373">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-373">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-374">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-374">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-375">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-375">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-376">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-376">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-377">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-377">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-378">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-378">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-379">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-379">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-380">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-380">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="21ad7-381">Пример 2</span><span class="sxs-lookup"><span data-stu-id="21ad7-381">Example 2</span></span>  
  
 <span data-ttu-id="21ad7-382">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-382">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-383">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-383">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-384">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-384">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-385">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-385">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-386">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-386">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-387">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-387">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-388">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-388">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-389">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-389">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="21ad7-390">Индекс (с нуля) заменяемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-390">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="21ad7-391">Новый элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-391">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21ad7-392">Заменяет элемент по заданному индексу указанным элементом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21ad7-392">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21ad7-393">Словарь поиска обновляется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="21ad7-393">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="21ad7-394">То есть ключ элемента, который заменяется удаляется из словаря поиска и добавляется ключ нового элемента.</span><span class="sxs-lookup"><span data-stu-id="21ad7-394">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="21ad7-395">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="21ad7-395">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="21ad7-396">Примечания для разработчиков</span><span class="sxs-lookup"><span data-stu-id="21ad7-396">Notes for Implementers</span></span>  
 <span data-ttu-id="21ad7-397">Переопределите этот метод, чтобы предоставить настраиваемое поведение параметра <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство унаследовано от <xref:System.Collections.ObjectModel.Collection%601> универсального класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-397">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21ad7-398">Этот метод не влияет на поведение <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> свойство, которое доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="21ad7-398">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="21ad7-399">Вызовите реализацию базового класса этот метод, чтобы задать элемент в базовой коллекции и обновить словарь поиска.</span><span class="sxs-lookup"><span data-stu-id="21ad7-399">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21ad7-400">Этот раздел содержит два примера кода, демонстрирующие переопределение <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> метод, чтобы предоставить пользовательское поведение для параметра <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-400">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="21ad7-401">В первом примере добавляется настраиваемое событие уведомления и второй обеспечивает поддержку для коллекции объектов с изменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-401">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="21ad7-402">Пример 1</span><span class="sxs-lookup"><span data-stu-id="21ad7-402">Example 1</span></span>  
  
 <span data-ttu-id="21ad7-403">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методы, чтобы обеспечить пользовательское поведение для <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, и <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> методы, а также для Настройка заданного по умолчанию <xref:System.Collections.ObjectModel.Collection%601.Item%2A> свойство (индексатор в C#).</span><span class="sxs-lookup"><span data-stu-id="21ad7-403">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="21ad7-404">В этом примере пользовательское поведение является событие уведомления с именем `Changed`, который вызывается в конце каждого переопределенного метода.</span><span class="sxs-lookup"><span data-stu-id="21ad7-404">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="21ad7-405">В примере кода создается `SimpleOrder` класс, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602> и представляет порядок простой формы.</span><span class="sxs-lookup"><span data-stu-id="21ad7-405">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="21ad7-406">Форма заказа `OrderItem` объекты, представляющие элементы упорядочены.</span><span class="sxs-lookup"><span data-stu-id="21ad7-406">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="21ad7-407">В примере кода также создает `SimpleOrderChangedEventArgs` класс, содержащий сведения о событии, а также перечисление для определения типа изменений.</span><span class="sxs-lookup"><span data-stu-id="21ad7-407">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="21ad7-408">В примере кода показано настраиваемое поведение, путем вызова свойства и методы производного класса в `Main` метод `Demo` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-408">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="21ad7-409">Данный пример кода использует объекты с неизменяемыми ключами.</span><span class="sxs-lookup"><span data-stu-id="21ad7-409">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="21ad7-410">Пример кода, в котором используются изменяемые ключи см. в разделе <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="21ad7-410">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="21ad7-411">Пример 2</span><span class="sxs-lookup"><span data-stu-id="21ad7-411">Example 2</span></span>  
  
 <span data-ttu-id="21ad7-412">В следующем примере кода показано, как переопределить защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> метод для поддержки изменяемые ключи и переопределение защищенный <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, и <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> методов для обеспечения целостности ключей и Коллекция.</span><span class="sxs-lookup"><span data-stu-id="21ad7-412">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="21ad7-413">В примере кода создается `MutableKeys` коллекции, который является производным от <xref:System.Collections.ObjectModel.KeyedCollection%602>и `MutableKey` класса.</span><span class="sxs-lookup"><span data-stu-id="21ad7-413">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="21ad7-414">`MutableKey` Класс имеет устанавливаемое `Key` свойство.</span><span class="sxs-lookup"><span data-stu-id="21ad7-414">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="21ad7-415">При назначении нового ключа к свойству метод задания свойства вызывает `internal` (`Friend` в Visual Basic) `ChangeKey` метода для проверки нового ключа может конфликтовать с существующим ключом в коллекции.</span><span class="sxs-lookup"><span data-stu-id="21ad7-415">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="21ad7-416">В этом случае создается исключение, и значение свойства не изменяется.</span><span class="sxs-lookup"><span data-stu-id="21ad7-416">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="21ad7-417">Чтобы поддерживать соединение между `MutableKey` объекта и `MutableKeys` коллекции и предотвращения объекта, вставляемого в двух коллекций, `MutableKey` класс имеет `internal` (`Friend` в Visual Basic) `Collection`поля.</span><span class="sxs-lookup"><span data-stu-id="21ad7-417">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="21ad7-418">Защищенные методы, которые предоставляют пользовательское поведение для добавления и удаления элементов из коллекции, такие как достигается это поле <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="21ad7-418">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="21ad7-419">Это поле имеет значение, если элемент добавляется в коллекцию и очищается, когда элемент удален.</span><span class="sxs-lookup"><span data-stu-id="21ad7-419">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>