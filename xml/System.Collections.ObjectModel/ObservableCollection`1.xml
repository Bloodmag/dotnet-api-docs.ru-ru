<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObservableCollection`1.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eaa22977009257753fbc64752753fc05cd2ab76d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa22977009257753fbc64752753fc05cd2ab76d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Тип элементов в коллекции.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Represents a dynamic data collection that provides notifications when items get added, removed, or when the whole list is refreshed.</source>
          <target state="translated">Представляет динамическую коллекцию данных, которая выдает уведомления при добавлении и удалении элементов, а также при обновлении списка.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>In many cases the data that you work with is a collection of objects.</source>
          <target state="translated">Во многих случаях данные, которые работают с является коллекцией объектов.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For example, a common scenario in data binding is to use an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> such as a <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> to display a collection of records.</source>
          <target state="translated">Например, общие сценарии, привязка данных является использование <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> например <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.ListView&gt;</ph>, или <ph id="ph4">&lt;xref:System.Windows.Controls.TreeView&gt;</ph> для отображения на набор записей.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You can enumerate over any collection that implements the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Можно перечислить любой коллекции, реализующей <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, to set up dynamic bindings so that insertions or deletions in the collection update the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automatically, the collection must implement the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated">Тем не менее чтобы настроить динамические привязки, чтобы обновить вставки и удаления элементов в коллекции <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> автоматически, необходимо реализовать коллекции <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>This interface exposes the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event, an event that should be raised whenever the underlying collection changes.</source>
          <target state="translated">Этот интерфейс предоставляет <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> события, событие, которое должно вызываться при каждом изменении базовой коллекции.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which is a built-in implementation of a data collection that implements the <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> предоставляет <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> класса, который является встроенной реализацией коллекции данных, которая реализует <ph id="ph3">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Before implementing your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> or one of the existing collection classes, such as <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, among many others.</source>
          <target state="translated">Перед реализацией свою собственную коллекцию, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> или один из существующей коллекции классов, таких как <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, и <ph id="ph4">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>, многие другие.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>If you have an advanced scenario and want to implement your own collection, consider using <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, which provides a non-generic collection of objects that can be individually accessed by index.</source>
          <target state="translated">Если имеется расширенный сценарий и требуется реализовать свою собственную коллекцию, рассмотрите возможность использования <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, который предоставляет неуниверсальную коллекцию объектов, которые можно получить индивидуальный доступ по индексу.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> provides the best performance with the data binding engine.</source>
          <target state="translated">Реализация <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> обеспечивает самую высокую производительность с механизм привязки данных.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>To fully support transferring data values from binding source objects to binding targets, each object in your collection that supports bindable properties must implement an appropriate property changed notification mechanism such as the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">Для полной поддержки передачи значений данных от объектов источника привязки для привязки целевых объектов, каждый объект в коллекции, который поддерживает свойства связывания необходимо реализовать механизм уведомлений соответствующие изменения свойств например <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> интерфейс.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>For more information, see "Binding to Collections" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе «Привязка к коллекции» в <bpt id="p1">[</bpt>Общие сведения о привязке данных<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Notes on XAML Usage</source>
          <target state="translated">Примечания об использовании XAML</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> can be used as a XAML object element in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, in versions 3.0 and 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> можно использовать в качестве элемента объекта XAML в <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, в версии 3.0 и 3.5.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>However, the usage has substantial limitations.</source>
          <target state="translated">Однако использование имеет существенные ограничения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> must be the root element, because the  that must be used to specify the constrained type of the generic <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is only supported on the object element for the root element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> должен быть корневой элемент, поскольку, который должен использоваться для указания ограниченного типа универсального <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> поддерживается только в элементе объекта для корневого элемента.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must declare an  (which entails that the build action for this XAML file must be <ph id="ph1">`Page`</ph> or some other build action that compiles the XAML).</source>
          <target state="translated">Необходимо объявить (какие влечет за собой, которые должны быть действие построения для XAML-файл <ph id="ph1">`Page`</ph> или некоторые другие сборки действия, который компилирует код XAML).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> is in a namespace and assembly that are not initially mapped to the default XML namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> — из пространства имен и сборку, которая изначально не сопоставляются с пространством имен XML по умолчанию.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>You must map a prefix for the namespace and assembly, and then use that prefix on the object element tag for <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</source>
          <target state="translated">Необходимо сопоставить префикс пространства имен и сборки и затем использовать этот префикс теге элемента объекта для <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>A more straightforward way to use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> capabilities from XAML in an application is to declare your own non-generic custom collection class that derives from <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, and constrains it to a specific type.</source>
          <target state="translated">Более простой способ использования <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> возможности из XAML-кода в приложении — объявить свои собственные неуниверсальных настраиваемый класс коллекции, наследуемый от <ph id="ph2">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>, и он ограничивает для определенного типа.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Then map the assembly that contains this class, and reference it as an object element in your XAML.</source>
          <target state="translated">Затем сопоставить сборку, содержащую этот класс и ссылаться на него как элемент объекта в XAML.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.ObservableCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection from which the elements are copied.</source>
          <target state="translated">Коллекция, из которой копируются элементы.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>, который содержит элементы, скопированные из указанной коллекции.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the collection.</source>
          <target state="translated">Элементы копируются на <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> в том же порядке, они доступны для чтения с помощью перечислителя коллекции.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> не может иметь значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The list from which the elements are copied.</source>
          <target state="translated">Список, из которого копируются элементы.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph> class that contains elements copied from the specified list.</source>
          <target state="translated">Инициализирует новый экземпляр <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /&gt;</ph>, который содержит элементы, скопированные из указанного списка.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> in the same order they are read by the enumerator of the list.</source>
          <target state="translated">Элементы копируются на <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> в том же порядке, они доступны для чтения с помощью перечислителя из списка.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
          <source>The <ph id="ph1">&lt;paramref name="list" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="list" /&gt;</ph> не может иметь значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>Disallows reentrant attempts to change this collection.</source>
          <target state="translated">Запрещает выполнение повторных попыток изменения этой коллекции.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that can be used to dispose of the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>, который может быть использован для уничтожения объекта.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
          <source>The typical usage is to wrap an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> call within a <ph id="ph2">`using`</ph> scope, as in the following example:</source>
          <target state="translated">Обычно используется для создания оболочки <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.OnCollectionChanged%2A&gt;</ph> вызываемой <ph id="ph2">`using`</ph> области, как показано в следующем примере:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Checks for reentrant attempts to change this collection.</source>
          <target state="translated">Проводит проверку на реентерабельные попытки изменения этой коллекции.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>If there was a call to <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph> of which the <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> return value has not yet been disposed of.</source>
          <target state="translated">Если был выполнен вызов метода <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>, возвращаемое значение <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph> которого ещё не было уничтожено.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>Typically, this means when there are additional attempts to change this collection during a <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated">Как правило, это означает проведение дополнительных попыток изменения этой коллекции во время события <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
          <source>However, it depends on when derived classes choose to call <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</source>
          <target state="translated">Однако это зависит от того, когда производные классы осуществляют вызов метода <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>Removes all items from the collection.</source>
          <target state="translated">Удаляет все элементы из коллекции.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>The base class calls this method when the list is being cleared.</source>
          <target state="translated">Базовый класс вызывает этот метод, когда список очищается.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Эта реализация вызывает <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> базового класса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
          <source>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</source>
          <target state="translated">Происходит при добавлении, удалении, изменении или перемещении элемента либо при обновлении всего списка.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">Отсчитываемый от нуля индекс, по которому следует вставить <bpt id="p1">&lt;c&gt;</bpt>элемент<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">Вставляемый объект.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an item into the collection at the specified index.</source>
          <target state="translated">Вставляет элемент в коллекцию по указанному индексу.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>The base class calls this method when an item is added to the collection.</source>
          <target state="translated">Базовый класс вызывает этот метод, когда элемент добавляется в коллекцию.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Эта реализация вызывает <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.InsertItem%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> базового класса.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Отсчитываемый от нуля индекс, указывающий положение перемещаемого элемента.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Отсчитываемый от нуля индекс, указывающий новое положение элемента.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Перемещает элемент в новое положение в коллекции по указанному индексу.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
          <source>Subclasses can override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> method to provide custom behavior for this method.</source>
          <target state="translated">Подклассы могут переопределить <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.MoveItem%2A&gt;</ph> метод, чтобы предоставить пользовательское поведение для этого метода.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the location of the item to be moved.</source>
          <target state="translated">Отсчитываемый от нуля индекс, указывающий положение перемещаемого элемента.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>The zero-based index specifying the new location of the item.</source>
          <target state="translated">Отсчитываемый от нуля индекс, указывающий новое положение элемента.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Moves the item at the specified index to a new location in the collection.</source>
          <target state="translated">Перемещает элемент в новое положение в коллекции по указанному индексу.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Эта реализация вызывает <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
          <source>Subclasses can override this protected method to provide custom behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> method.</source>
          <target state="translated">Подклассы могут переопределить защищенный метод, чтобы предоставить пользовательское поведение для <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.Move%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Аргументы вызываемого события.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /&gt;</ph> с предоставленными аргументами.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>Properties and methods that modify this collection raise the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> event through this <ph id="ph2">`virtual`</ph> method.</source>
          <target state="translated">Свойства и методы, позволяющие изменять этот вызов коллекции <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.CollectionChanged&gt;</ph> события с помощью этого <ph id="ph2">`virtual`</ph> метод.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <source>When overriding this method, either call the base implementation or use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> method to handle reentrant collection changes, as in the following example:</source>
          <target state="translated">При переопределении этого метода, либо вызвать базовую реализацию, либо используйте <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601.BlockReentrancy%2A&gt;</ph> изменяется метод для обработки коллекции реентерабельным, как показано в следующем примере:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">Аргументы вызываемого события.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /&gt;</ph> с предоставленными аргументами.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">Возникает при смене значения свойства.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">Индекс (с нуля) элемента, который требуется удалить.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>Removes the item at the specified index of the collection.</source>
          <target state="translated">Удаляет элемент по указанному индексу коллекции.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>The base class calls this method when an item is removed from the collection.</source>
          <target state="translated">Базовый класс вызывает этот метод при удалении элемента из коллекции.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Эта реализация вызывает <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> базового класса.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">Индекс (с нуля) элемента, который требуется заменить.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">Новое значение элемента по указанному индексу.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">Заменяет элемент по указанному индексу.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>The base class calls this method when an item is set in the collection.</source>
          <target state="translated">Базовый класс вызывает этот метод, если элемент имеет значение в коллекции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>This implementation raises the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event.</source>
          <target state="translated">Эта реализация вызывает <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> base class.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> базового класса.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>