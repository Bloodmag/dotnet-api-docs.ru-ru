<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BitArray.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5056363895a01ed4f3d85a3d6c19a8aa8cb07f553.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">056363895a01ed4f3d85a3d6c19a8aa8cb07f553</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.BitArray">
          <source>Manages a compact array of bit values, which are represented as Booleans, where <ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that the bit is on (1) and <ph id="ph2">&lt;see langword="false" /&gt;</ph> indicates the bit is off (0).</source>
          <target state="translated">Управляет компактным массивом двоичных значений, представленных логическими значениями, где значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> соответствует включенному биту (1), а значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> соответствует отключенному биту (0).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> class is a collection class in which the capacity is always the same as the count.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> Класс коллекции, в котором емкость — всегда совпадает с количеством элементов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Elements are added to a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> by increasing the <ph id="ph2">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> property; elements are deleted by decreasing the <ph id="ph3">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> property.</source>
          <target state="translated">При добавлении элементов <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> увеличив <ph id="ph2">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> свойства; удаление элементов осуществляется за счет уменьшения <ph id="ph3">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The size of a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> is controlled by the client; indexing past the end of the <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.The <ph id="ph4">&lt;xref:System.Collections.BitArray&gt;</ph> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <ph id="ph5">&lt;xref:System.Collections.BitArray.And%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.BitArray.Or%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.BitArray.Xor%2A&gt;</ph> , <ph id="ph8">&lt;xref:System.Collections.BitArray.Not%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.BitArray.SetAll%2A&gt;</ph>.</source>
          <target state="translated">Размер <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> управляется клиентом; индексирования после конца <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> вызывает <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>. <ph id="ph4">&lt;xref:System.Collections.BitArray&gt;</ph> Класс предоставляет методы, которые не найдены в других коллекциях, включая те, которые позволяют изменять с помощью фильтра, такие как несколько элементов <ph id="ph5">&lt;xref:System.Collections.BitArray.And%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Collections.BitArray.Or%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.BitArray.Xor%2A&gt;</ph> , <ph id="ph8">&lt;xref:System.Collections.BitArray.Not%2A&gt;</ph>и <ph id="ph9">&lt;xref:System.Collections.BitArray.SetAll%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> class is a structure that provides the same functionality as <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, but with faster performance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> Класс — это структура, обеспечивающий ту же функциональность, что <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, но с лучшей производительностью.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> is faster because it is a value type and therefore allocated on the stack, whereas <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> is a reference type and, therefore, allocated on the heap.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> выполняется быстрее, поскольку он является типом значения и поэтому размещаются в стеке, тогда как <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> является ссылочным типом и, следовательно, размещенных в куче.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> can store exactly 32 bits, whereas <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> can store a variable number of bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> можно хранить ровно 32 бита, в то время как <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph> может хранить переменное число бит.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> хранит и битовые флаги и двухбайтовые целые числа, тем самым идеально подходит для данных, которые не предоставляются пользователю.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> instead.</source>
          <target state="translated">Однако, если число требуемых битовых флагов неизвестно, является переменной или больше, чем 32, используйте <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> вместо него.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> is in the <ph id="ph2">&lt;xref:System.Collections&gt;</ph> namespace; <ph id="ph3">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> is in the <ph id="ph4">&lt;xref:System.Collections.Specialized&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> в <ph id="ph2">&lt;xref:System.Collections&gt;</ph> пространству имен; <ph id="ph3">&lt;xref:System.Collections.Specialized.BitVector32&gt;</ph> в <ph id="ph4">&lt;xref:System.Collections.Specialized&gt;</ph> пространства имен.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Элементы в этой коллекции осуществляется с помощью целочисленного индекса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Индексы в этой коллекции отсчитываются от нуля.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> and how to print out its values.</source>
          <target state="translated">В следующем примере кода показано, как создать и инициализировать <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> и способ вывода его значений.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Открытые статические (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> в Visual Basic) члены этого типа являются потокобезопасными.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Потокобезопасность членов экземпляров не гарантируется.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Эта реализация не предоставляет синхронизированным (потокобезопасным) оболочку для <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.BitArray">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Collections.BitArray">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class whose capacity and initial values can be specified.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, для которого могут быть указаны емкость и начальные значения.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>An array of Booleans to copy.</source>
          <target state="translated">Массив логических значений, который нужно скопировать.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of Booleans.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, который содержит битовые значения, скопированные из заданного массива логических значений.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`values`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`values`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Boolean[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="values" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</source>
          <target state="translated">Массив байтов, содержащий копируемые значения, где каждый байт представляет собой восемь последовательных битов.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of bytes.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, который содержит битовые значения, скопированные из указанного массива байтов.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</source>
          <target state="translated">Первый байт в массиве представляет биты 0-7, второй байт — биты с 8 по 15 и т. д.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The Least Significant Bit of each byte represents the lowest index value: " <ph id="ph1">`bytes`</ph> [0] &amp; 1" represents bit 0, " <ph id="ph2">`bytes`</ph> [0] &amp; 2" represents bit 1, " <ph id="ph3">`bytes`</ph> [0] &amp; 4" represents bit 2, and so on.</source>
          <target state="translated">Наименьший значащий бит каждого байта представляет наименьшее значение индекса: " <ph id="ph1">`bytes`</ph> [0] &amp; 1" представляет бит 0, « <ph id="ph2">`bytes`</ph> [0] &amp; 2"— бит 1, « <ph id="ph3">`bytes`</ph> [0] &amp; 4" представляет бит 2 и т. д.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`bytes`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`bytes`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Byte[])">
          <source>The length of <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Длина значения <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> больше, чем <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to copy.</source>
          <target state="translated">Копируемый массив <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, содержащий битовые значения, скопированные из указанного массива <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`bits`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`bits`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="bits" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="bits" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>The number of bit values in the new <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Число битовых значений в новом массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that can hold the specified number of bit values, which are initially set to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, который может содержать указанное количество битов с первоначально заданным значением <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`length`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">`length`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="length" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</source>
          <target state="translated">Массив целых чисел, содержащий копируемые значения, где каждое целое число представлено 32 последовательными битами.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that contains bit values copied from the specified array of 32-bit integers.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, который содержит двоичные значения, скопированные из указанного массива 32-битовых целых чисел.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The number in the first <ph id="ph1">`values`</ph> array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</source>
          <target state="translated">Число в первом <ph id="ph1">`values`</ph> элемент массива представляет биты 0 до 31, второе число в массиве — бит 32 по 63 и т. д.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The Least Significant Bit of each integer represents the lowest index value: " <ph id="ph1">`values`</ph> [0] &amp; 1" represents bit 0, " <ph id="ph2">`values`</ph> [0] &amp; 2" represents bit 1, " <ph id="ph3">`values`</ph> [0] &amp; 4" represents bit 2, and so on.</source>
          <target state="translated">Наименьший значащий бит каждого целого числа представляет наименьшее значение индекса: " <ph id="ph1">`values`</ph> [0] &amp; 1" представляет бит 0, « <ph id="ph2">`values`</ph> [0] &amp; 2"— бит 1, « <ph id="ph3">`values`</ph> [0] &amp; 4" представляет бит 2 и т. д.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`values`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — число элементов в <ph id="ph3">`values`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="values" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32[])">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></source>
          <target state="translated">Длина значения <ph id="ph1">&lt;paramref name="values" /&gt;</ph> больше, чем <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>The number of bit values in the new <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Число битовых значений в новом массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>The Boolean value to assign to each bit.</source>
          <target state="translated">Логическое значение, присваиваемое каждому биту.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> class that can hold the specified number of bit values, which are initially set to the specified value.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, который может содержать определенное количество битовых значений, для которых установлены заданные начальные значения.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`length`</ph>.</source>
          <target state="translated">Этот конструктор является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">`length`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="length" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise AND operation.</source>
          <target state="translated">Массив, в котором выполняется битовая операция И.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>Performs the bitwise AND operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object and the corresponding elements in the specified array.</source>
          <target state="translated">Выполняет битовую операцию И между элементами текущего объекта <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> с соответствующими элементами указанного массива.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise AND operation.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> объект будет изменен для хранения результата битовой операции И.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise AND operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Массив, содержащий результат битовой операции И, который представляет собой ссылку на текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The bitwise AND operation returns <ph id="ph1">`true`</ph> if both operands are <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if one or both operands are <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Побитовую операцию и возвращает <ph id="ph1">`true`</ph> Если оба операнда имеют <ph id="ph2">`true`</ph>и возвращает <ph id="ph3">`false`</ph> один или оба операнда представляют собой <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source>The following code example shows how to perform the bitwise AND operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">В следующем примере кода показано, как выполнить побитовую операцию и между двумя <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.And(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated">Число элементов в <ph id="ph1">&lt;paramref name="value" /&gt;</ph> и текущем <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> не совпадает.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Создает неполную копию <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Неполная копия <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Неполная копия коллекции копируются только элементы коллекции, они являются ссылочными типами или типами значений, но не копирует объекты, которые ссылаются на.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Ссылки в новой коллекции указывают на те же объекты, на которые указывают ссылки в исходной коллекции.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Напротив глубокую копию коллекции копирует элементы и все, что прямо или косвенно ссылаются элементы.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Одномерный массив <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, в который копируются элементы из интерфейса <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">Массив <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> должен иметь индексацию, начинающуюся с нуля.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Отсчитываемый от нуля индекс в <bpt id="p1">&lt;c&gt;</bpt>массиве<ept id="p1">&lt;/c&gt;</ept> с которого начинается копирование.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Копирует целый массив <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> в совместимый одномерный массив <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, начиная с заданного индекса целевого массива.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">Указанный массив должен иметь совместимый тип.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>Only <ph id="ph1">`bool`</ph>, <ph id="ph2">`int`</ph>, and <ph id="ph3">`byte`</ph> types of arrays are supported.</source>
          <target state="translated">Только <ph id="ph1">`bool`</ph>, <ph id="ph2">`int`</ph>, и <ph id="ph3">`byte`</ph> поддерживаются типы массивов.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Этот метод использует <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> копируются элементы.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как скопировать <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> в одномерный <ph id="ph2">&lt;xref:System.Array&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated">Массив <ph id="ph1">&lt;paramref name="array" /&gt;</ph> является многомерным.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Число элементов в исходной коллекции <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> больше доступного места от положения, заданного значением параметра <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, до конца массива назначения <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Тип исходного массива <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> не может быть автоматически приведен к типу массива назначения <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Получает число элементов, содержащихся в интерфейсе <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Число элементов, содержащихся в интерфейсе <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> return the same value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> возвращают одинаковое значение.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> can be set to a specific value, but <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> может быть присвоено конкретное значение, но <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> доступно только для чтения.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">Отсчитываемый от нуля индекс значения, которое нужно получить.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>Gets the value of the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Получает значение бита в указанной позиции в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The value of the bit at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Значение бита в позиции <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как задать и получить конкретные элементы <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Get(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> больше или равно количеству элементов в массиве <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Возвращает перечислитель, осуществляющий перебор элементов списка <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> для массива <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Инструкция <ph id="ph1">`foreach`</ph> языка C# (<ph id="ph2">`for each`</ph> в Visual Basic) позволяет скрыть сложный механизм перечислителей.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> также переводит перечислитель в эту позицию.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">В этой позиции значение свойства <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> возвращает тот же объект, пока не будет вызван метод <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы снова задать в качестве значения свойства <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> первый элемент коллекции, можно последовательно вызвать методы <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> и<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is read-only.</source>
          <target state="translated">Получает значение, указывающее, является ли объект <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> доступным только для чтения.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>This property is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Данное свойство всегда имеет значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.BitArray.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> реализует <ph id="ph2">&lt;xref:System.Collections.BitArray.IsReadOnly%2A&gt;</ph> свойства, так как она затребована <ph id="ph3">&lt;xref:System.Collections.IList?displayProperty=nameWithType&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Коллекции, доступной только для чтения является просто коллекцией с оболочкой, препятствующей изменению коллекции. Таким образом при внесении изменений в базовую коллекцию, доступную только для чтения коллекцию отражает эти изменения.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsReadOnly">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Возвращает значение, показывающее, является ли доступ к коллекции <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> синхронизированным (потокобезопасным).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>This property is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Данное свойство всегда имеет значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.BitArray.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> реализует <ph id="ph2">&lt;xref:System.Collections.BitArray.IsSynchronized%2A&gt;</ph> свойства, так как она затребована <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">В следующем примере кода показано, как заблокировать коллекции с помощью <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> на все время перечисления.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.IsSynchronized">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The zero-based index of the value to get or set.</source>
          <target state="translated">Отсчитываемый от нуля индекс возвращаемого или задаваемого значения.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Gets or sets the value of the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Получает или задает значение в указанной позиции в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The value of the bit at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Значение бита в позиции <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> property.</source>
          <target state="translated">Ключевое слово языка C# используется для определения индексаторов вместо реализации <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <ph id="ph1">&lt;xref:System.Collections.BitArray.Item%2A&gt;</ph>, предоставляющее те же возможности индексирования.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией o(1). Задание этого свойства также является операцией o(1).</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.BitArray.Count" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> больше или равно значению свойства <ph id="ph2">&lt;see cref="P:System.Collections.BitArray.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Length">
          <source>Gets or sets the number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Получает или задает число элементов в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>The number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Число элементов в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> return the same value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> возвращают одинаковое значение.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> can be set to a specific value, but <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> может быть присвоено конкретное значение, но <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph> доступно только для чтения.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>If <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph> is truncated and the elements after the index <ph id="ph4">`value`</ph> -1 are deleted.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> присвоено значение меньше, чем <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph> усекается, а также элементы после индекса <ph id="ph4">`value`</ph> значение -1, будут удалены.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>If <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> is set to a value that is greater than <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, the new elements are set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.BitArray.Length%2A&gt;</ph> присваивается значение, которое больше значения <ph id="ph2">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>, присваиваются новые элементы <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.Length">
          <source>Setting this property is an O(<ph id="ph1">`n`</ph>) operation.</source>
          <target state="translated">Задание этого свойства является операцией O (<ph id="ph1">`n`</ph>) операции.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.Length">
          <source>The property is set to a value that is less than zero.</source>
          <target state="translated">Свойству присвоено значение меньше нуля.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Not">
          <source>Inverts all the bit values in the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>, so that elements set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> are changed to <ph id="ph3">&lt;see langword="false" /&gt;</ph>, and elements set to <ph id="ph4">&lt;see langword="false" /&gt;</ph> are changed to <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Обращает все двоичные значения в текущем массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> таким образом, чтобы каждому элементу со значением <ph id="ph2">&lt;see langword="true" /&gt;</ph> было присвоено значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>, а каждому элементу со значением <ph id="ph4">&lt;see langword="false" /&gt;</ph> было присвоено значение <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Not">
          <source>The current instance with inverted bit values.</source>
          <target state="translated">Текущие экземпляры с обращенными двоичными значениями.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Not">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Not">
          <source>The following code example shows how to apply NOT to a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как применяются не к <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise OR operation.</source>
          <target state="translated">Массив, в котором выполняется битовая операция ИЛИ.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>Performs the bitwise OR operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object and the corresponding elements in the specified array.</source>
          <target state="translated">Выполняет побитовую операцию ИЛИ для элементов текущего объекта <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> и соответствующих элементов указанного массива.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise OR operation.</source>
          <target state="translated">В текущем объекте <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> будет сохранен результат побитовой операции ИЛИ.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise OR operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Массив, содержащий результат побитовой операции ИЛИ, который представляет собой ссылку на текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The bitwise OR operation returns <ph id="ph1">`true`</ph> if one or both operands are <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if both operands are <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Возвращает битовую операцию OR <ph id="ph1">`true`</ph> один или оба операнда представляют собой <ph id="ph2">`true`</ph>и возвращает <ph id="ph3">`false`</ph> Если оба операнда имеют <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source>The following code example shows how to perform the OR operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">В следующем примере кода показано, как выполнять операцию или между двумя <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated">Число элементов в <ph id="ph1">&lt;paramref name="value" /&gt;</ph> и текущем <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> не совпадает.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The zero-based index of the bit to set.</source>
          <target state="translated">Отсчитываемый от нуля индекс задаваемого бита.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The Boolean value to assign to the bit.</source>
          <target state="translated">Логическое значение, которое требуется присвоить биту.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>Sets the bit at a specific position in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to the specified value.</source>
          <target state="translated">Задает указанное значение бита в указанной позиции в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Этот метод является операцией o(1).</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как задать и получить конкретные элементы <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше нуля.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="index" /&gt;</ph> больше или равно количеству элементов в массиве <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>The Boolean value to assign to all bits.</source>
          <target state="translated">Логическое значение, которое требуется присвоить всем битам.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>Sets all bits in the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> to the specified value.</source>
          <target state="translated">Задает указанное значение всем битам в массиве <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.SetAll(System.Boolean)">
          <source>The following code example shows how to set and get specific elements in a <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">В следующем примере кода показано, как задать и получить конкретные элементы <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</source>
          <target state="translated">Объект, который может использоваться для синхронизации доступа к <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Производные классы могут предоставлять собственную синхронизированную версию <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> с помощью <ph id="ph2">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph>.</source>
          <target state="translated">Синхронизированный код должен выполнять операции на <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> из <ph id="ph2">&lt;xref:System.Collections.BitArray&gt;</ph>, но не с самим <ph id="ph3">&lt;xref:System.Collections.BitArray&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> object.</source>
          <target state="translated">В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения в <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">В следующем примере кода показано, как заблокировать коллекции с помощью <ph id="ph1">&lt;xref:System.Collections.BitArray.SyncRoot%2A&gt;</ph> на все время перечисления.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.BitArray.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Получение значения данного свойства является операцией порядка сложности O(1).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The array with which to perform the bitwise exclusive OR operation.</source>
          <target state="translated">Массив, с которым производится битовая операция исключающего ИЛИ.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>Performs the bitwise exclusive OR operation between the elements of the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object against the corresponding elements in the specified array.</source>
          <target state="translated">Выполняет побитовую операцию исключающего ИЛИ применительно к элементам текущего объекта <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> и соответствующим элементам указанного массива.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object will be modified to store the result of the bitwise exclusive OR operation.</source>
          <target state="translated">В текущем <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> объекте будет сохранен результат побитовой операции исключающего ИЛИ.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> object.</source>
          <target state="translated">Массив, содержащий результат побитовой операции исключающего ИЛИ, который представляет собой ссылку на текущий объект <ph id="ph1">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The bitwise exclusive OR operation returns <ph id="ph1">`true`</ph> if exactly one operand is <ph id="ph2">`true`</ph>, and returns <ph id="ph3">`false`</ph> if both operands have the same Boolean value.</source>
          <target state="translated">Возвращает побитовую исключающую операцию или <ph id="ph1">`true`</ph> ровно один из операндов имеет <ph id="ph2">`true`</ph>и возвращает <ph id="ph3">`false`</ph> Если оба операнда имеют одинаковые логические значения.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</source>
          <target state="translated">Этот метод является операцией O (<ph id="ph1">`n`</ph>) операции, где <ph id="ph2">`n`</ph> — <ph id="ph3">&lt;xref:System.Collections.BitArray.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source>The following code example shows how to perform the XOR operation between two <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> objects.</source>
          <target state="translated">В следующем примере кода показано, как выполнить операцию исключающего или между двумя <ph id="ph1">&lt;xref:System.Collections.BitArray&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> and the current <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> do not have the same number of elements.</source>
          <target state="translated">Число элементов в <ph id="ph1">&lt;paramref name="value" /&gt;</ph> и текущем <ph id="ph2">&lt;see cref="T:System.Collections.BitArray" /&gt;</ph> не совпадает.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>