<Type Name="CollectionBase" FullName="System.Collections.CollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4088a35f327406878400ee2ab2c80bf26516b132" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39841179" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CollectionBase : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CollectionBase&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionBase abstract : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type CollectionBase = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50a1d-101">Предоставляет базовый класс <see langword="abstract" /> для строго типизированной коллекции.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-101">Provides the <see langword="abstract" /> base class for a strongly typed collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-102">Объект <xref:System.Collections.CollectionBase> экземпляр всегда доступна для изменения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-102">A <xref:System.Collections.CollectionBase> instance is always modifiable.</span></span> <span data-ttu-id="50a1d-103">См. в разделе <xref:System.Collections.ReadOnlyCollectionBase> только для чтения версию этого класса.</span><span class="sxs-lookup"><span data-stu-id="50a1d-103">See <xref:System.Collections.ReadOnlyCollectionBase> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="50a1d-104">Емкость <xref:System.Collections.CollectionBase> — количество элементов <xref:System.Collections.CollectionBase> может содержать.</span><span class="sxs-lookup"><span data-stu-id="50a1d-104">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="50a1d-105">При добавлении элементов к <xref:System.Collections.CollectionBase>, емкость автоматически увеличивается должным образом посредством перераспределения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-105">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="50a1d-106">Емкость можно уменьшить, задав <xref:System.Collections.CollectionBase.Capacity%2A> свойство явным образом.</span><span class="sxs-lookup"><span data-stu-id="50a1d-106">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-107">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-107">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="50a1d-108">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="50a1d-109">Потокобезопасность членов экземпляров не гарантируется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-109">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="50a1d-110">Эта реализация не поддерживает синхронизированную (потокобезопасную) оболочку для <see cref="T:System.Collections.CollectionBase" />, но производные классы могут создавать свои собственные синхронизованные версии <see cref="T:System.Collections.CollectionBase" /> с помощью <see cref="P:System.Collections.ICollection.SyncRoot" /> свойство.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-110">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.CollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.CollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="50a1d-111">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-111">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="50a1d-112">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="50a1d-113">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="50a1d-114">
        <para>Этот базовый класс предоставляется для упрощения реализации пользовательского строго типизированной коллекции. Разработчики, рекомендуется расширить этот базовый класс, вместо того чтобы создавать свои собственные.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="50a1d-114">
          <para>This base class is provided to make it easier for implementers to create a strongly typed custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.ReadOnlyCollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-115">Инициализирует новый экземпляр класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-115">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-116">Инициализирует новый экземпляр класса <see cref="T:System.Collections.CollectionBase" /> с начальной емкостью по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-116">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-117">Емкость <xref:System.Collections.CollectionBase> — количество элементов, <xref:System.Collections.CollectionBase> может содержать.</span><span class="sxs-lookup"><span data-stu-id="50a1d-117">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="50a1d-118">При добавлении элементов к <xref:System.Collections.CollectionBase>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="50a1d-118">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="50a1d-119">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-119">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="50a1d-120">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-120">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.CollectionBase : int -&gt; System.Collections.CollectionBase" Usage="new System.Collections.CollectionBase capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="50a1d-121">Число элементов, которые может изначально вместить новый список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-121">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-122">Инициализирует новый экземпляр класса <see cref="T:System.Collections.CollectionBase" /> с указанной емкостью.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-122">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the specified capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-123">Емкость <xref:System.Collections.CollectionBase> — количество элементов, <xref:System.Collections.CollectionBase> может содержать.</span><span class="sxs-lookup"><span data-stu-id="50a1d-123">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="50a1d-124">При добавлении элементов к <xref:System.Collections.CollectionBase>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="50a1d-124">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="50a1d-125">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-125">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="50a1d-126">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity`.</span><span class="sxs-lookup"><span data-stu-id="50a1d-126">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.CollectionBase.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-127">Возвращает или задает число элементов, которое может содержать список <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-127">Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-128">Количество элементов, которое может содержать коллекция <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-128">The number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-129"><xref:System.Collections.CollectionBase.Capacity%2A> — количество элементов, <xref:System.Collections.CollectionBase> можно хранить.</span><span class="sxs-lookup"><span data-stu-id="50a1d-129"><xref:System.Collections.CollectionBase.Capacity%2A> is the number of elements that the <xref:System.Collections.CollectionBase> can store.</span></span> <span data-ttu-id="50a1d-130"><xref:System.Collections.CollectionBase.Count%2A> число элементов, которые фактически являются <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-130"><xref:System.Collections.CollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="50a1d-131"><xref:System.Collections.CollectionBase.Capacity%2A> всегда равно, больше или равно <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-131"><xref:System.Collections.CollectionBase.Capacity%2A> is always greater than or equal to <xref:System.Collections.CollectionBase.Count%2A>.</span></span> <span data-ttu-id="50a1d-132">Если <xref:System.Collections.CollectionBase.Count%2A> превышает <xref:System.Collections.CollectionBase.Capacity%2A> при добавлении элементов, емкость автоматически увеличивается за счет перераспределения внутреннего массива перед копированием старых элементов и добавление новых элементов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-132">If <xref:System.Collections.CollectionBase.Count%2A> exceeds <xref:System.Collections.CollectionBase.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="50a1d-133">Емкость можно уменьшить, задав <xref:System.Collections.CollectionBase.Capacity%2A> свойство явным образом.</span><span class="sxs-lookup"><span data-stu-id="50a1d-133">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="50a1d-134">Если значение <xref:System.Collections.CollectionBase.Capacity%2A> задано явным образом, также внутренний массив перераспределяется с соответствии с указанной емкостью.</span><span class="sxs-lookup"><span data-stu-id="50a1d-134">When the value of <xref:System.Collections.CollectionBase.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="50a1d-135">Получение значения этого свойства является операцией o(1). Задание этого свойства является операцией O (`n`) операции, где `n` — новое значение емкости.</span><span class="sxs-lookup"><span data-stu-id="50a1d-135">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="50a1d-136">Для <see cref="P:System.Collections.CollectionBase.Capacity" /> установлено значение, которое меньше <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-136">
              <see cref="P:System.Collections.CollectionBase.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="50a1d-137">Не хватает памяти в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-137">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collectionBase.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-138">Удаляет все объекты из экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-138">Removes all objects from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="50a1d-139">Этот метод не может быть переопределен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-139">This method cannot be overridden.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-140"><xref:System.Collections.CollectionBase.Count%2A> присваивается нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-140"><xref:System.Collections.CollectionBase.Count%2A> is set to zero.</span></span>  
  
 <span data-ttu-id="50a1d-141">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-141">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-142">Для выполнения пользовательских действий до или после очистки коллекции, Переопределите защищенный <xref:System.Collections.CollectionBase.OnClear%2A> или <xref:System.Collections.CollectionBase.OnClearComplete%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="50a1d-142">To perform custom actions before or after the collection is cleared, override the protected <xref:System.Collections.CollectionBase.OnClear%2A> or <xref:System.Collections.CollectionBase.OnClearComplete%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.CollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-143">Получает число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-143">Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="50a1d-144">Это свойство нельзя переопределить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-144">This property cannot be overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-145">Число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-145">The number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="50a1d-146">Получение значения данного свойства является операцией порядка сложности O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-146">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50a1d-147">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-147">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-148">Возвращает перечислитель, перебирающий элементы экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-148">Returns an enumerator that iterates through the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a1d-149">Перечислитель <see cref="T:System.Collections.IEnumerator" /> для экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-149">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-150">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="50a1d-150">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="50a1d-151">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="50a1d-151">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="50a1d-152">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="50a1d-152">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="50a1d-153">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-153">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="50a1d-154">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="50a1d-154">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="50a1d-155">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="50a1d-155"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="50a1d-156">В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-156">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="50a1d-157">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-157">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-158"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-158"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="50a1d-159"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-159"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="50a1d-160">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="50a1d-160">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="50a1d-161">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="50a1d-161">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="50a1d-162">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-162">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="50a1d-163">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-163">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-164">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="50a1d-164">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="50a1d-165">При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-165">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="50a1d-166">Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="50a1d-166">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="50a1d-167">Перечислитель не имеет монопольного доступа к коллекции, поэтому перечисление элементов коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="50a1d-168">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-168">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="50a1d-169">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="50a1d-169">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="50a1d-170">Хотя <xref:System.Collections.CollectionBase.GetEnumerator%2A> метод не является видимым для COM-клиентам, по умолчанию, наследование <xref:System.Collections.CollectionBase> представить его в класс и может привести к нежелательному поведению в COM-клиентам.</span><span class="sxs-lookup"><span data-stu-id="50a1d-170">While the <xref:System.Collections.CollectionBase.GetEnumerator%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.CollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="50a1d-171">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-171">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-172">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-172">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerList : System.Collections.ArrayList" Usage="System.Collections.CollectionBase.InnerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-173">Возвращает объект <see cref="T:System.Collections.ArrayList" />, в котором хранится список элементов экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-173">Gets an <see cref="T:System.Collections.ArrayList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-174">Класс <see cref="T:System.Collections.ArrayList" />, предоставляющий экземпляр класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-174">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
          <span data-ttu-id="50a1d-175">Получение значения данного свойства является операцией порядка сложности O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-175">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-176">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-176">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.List" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Collections.CollectionBase.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-177">Возвращает объект <see cref="T:System.Collections.IList" />, в котором хранится список элементов экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-177">Gets an <see cref="T:System.Collections.IList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-178">Класс <see cref="T:System.Collections.IList" />, предоставляющий экземпляр класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-178">An <see cref="T:System.Collections.IList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-179">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-179">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-180">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-180">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-181">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-181">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="collectionBase.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-182">Осуществляет дополнительные пользовательские действия при удалении содержимого экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-182">Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-183">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций перед очисткой коллекции.</span><span class="sxs-lookup"><span data-stu-id="50a1d-183">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="50a1d-184">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-184">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-185">Если процесс завершается ошибкой, коллекция возвращается обратно в предыдущее состояние.</span><span class="sxs-lookup"><span data-stu-id="50a1d-185">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="50a1d-186">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-186">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-187">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены перед удалением всех элементов из базового <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnClear" /> вызывается перед стандартной операцией очистки, тогда как <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> вызывается после стандартной операцией очистки.  Например разработчики могут предотвращать удаление по глобальной четкий определенных элементов.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-187">
              <para>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.  For example, implementers can exempt certain elements from deletion by a global Clear.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="collectionBase.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-188">Осуществляет дополнительные пользовательские действия после удаления содержимого экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-188">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-189">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций после очистки коллекции.</span><span class="sxs-lookup"><span data-stu-id="50a1d-189">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="50a1d-190">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-190">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-191">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-191">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-192">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены после удаления всех элементов из базового <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnClear" /> вызывается перед стандартной операцией очистки, тогда как <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> вызывается после стандартной операцией очистки.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-192">
              <para>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : int * obj -&gt; unit&#xA;override this.OnInsert : int * obj -&gt; unit" Usage="collectionBase.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-193">Отсчитываемый от нуля индекс, по которому следует вставить <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-193">The zero-based index at which to insert <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50a1d-194">Новое значение элемента по <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-194">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-195">Выполняет дополнительные пользовательские действия перед вставкой нового элемента в экземпляр класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-195">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-196">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций перед вставкой указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-196">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="50a1d-197">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-197">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-198">Если процесс завершается ошибкой, коллекция возвращается обратно в предыдущее состояние.</span><span class="sxs-lookup"><span data-stu-id="50a1d-198">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="50a1d-199">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-199">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-200">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-200">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-201">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены перед вставкой элемента в основной <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> вызов осуществляется перед стандартное поведение вставки, тогда как <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> вызывается после стандартной операцией вставки.  Например, разработчики могут ограничить типы объектов, которые могут быть вставлены в <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> вызывается до этого метода.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-201">
              <para>This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.  For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : int * obj -&gt; unit&#xA;override this.OnInsertComplete : int * obj -&gt; unit" Usage="collectionBase.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-202">Отсчитываемый от нуля индекс, по которому следует вставить <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-202">The zero-based index at which to insert <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50a1d-203">Новое значение элемента по <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-203">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-204">Выполняет дополнительные пользовательские действия после вставки нового элемента в экземпляр класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-204">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-205">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций после вставки указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-205">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="50a1d-206">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-206">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-207">Коллекция возвращается обратно в предыдущее состояние, если выполняется одно из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="50a1d-207">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="50a1d-208">Процесс завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-208">The process fails.</span></span>  
  
-   <span data-ttu-id="50a1d-209">Этот метод переопределяется для создания исключения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-209">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="50a1d-210">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-210">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-211">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены после вставки элемента в основной <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> вызов осуществляется перед стандартное поведение вставки, тогда как <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> вызывается после стандартной операцией вставки.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-211">
              <para>This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : int * obj -&gt; unit&#xA;override this.OnRemove : int * obj -&gt; unit" Usage="collectionBase.OnRemove (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-212">Отсчитываемый от нуля индекс, по которому может находиться значение <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-212">The zero-based index at which <c>value</c> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50a1d-213">Значение элемента, удаляемого из <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-213">The value of the element to remove from <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-214">Осуществляет дополнительные пользовательские действия при удалении элемента из экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-214">Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-215">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций перед удалением указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-215">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="50a1d-216">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-216">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-217">Если процесс завершается ошибкой, коллекция возвращается обратно в предыдущее состояние.</span><span class="sxs-lookup"><span data-stu-id="50a1d-217">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="50a1d-218">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-218">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-219">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-219">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-220">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены перед удалением элемента из основного <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> вызывается перед стандартной операцией удаления, тогда как <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> вызывается после стандартной операцией удаления.  Например, разработчики могут предотвратить удаление элементов, всегда создается исключение <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> вызывается до этого метода.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-220">
              <para>This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.  For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : int * obj -&gt; unit&#xA;override this.OnRemoveComplete : int * obj -&gt; unit" Usage="collectionBase.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-221">Отсчитываемый от нуля индекс, по которому может находиться значение <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-221">The zero-based index at which <c>value</c> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50a1d-222">Значение элемента, удаляемого из <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-222">The value of the element to remove from <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-223">Осуществляет дополнительные пользовательские действия после удаления элемента из экземпляра класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-223">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-224">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций после удаления указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-224">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="50a1d-225">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-225">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-226">Коллекция возвращается обратно в предыдущее состояние, если выполняется одно из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="50a1d-226">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="50a1d-227">Процесс завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-227">The process fails.</span></span>  
  
-   <span data-ttu-id="50a1d-228">Этот метод переопределяется для создания исключения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-228">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="50a1d-229">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-229">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-230">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены после удаления элемента из основного <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> вызывается перед стандартной операцией удаления, тогда как <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> вызывается после стандартной операцией удаления.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-230">
              <para>This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSet : int * obj * obj -&gt; unit&#xA;override this.OnSet : int * obj * obj -&gt; unit" Usage="collectionBase.OnSet (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-231">Отсчитываемый от нуля индекс, по которому может находиться значение <c>oldValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-231">The zero-based index at which <c>oldValue</c> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="50a1d-232">Значение, которое нужно заменить значением <c>newValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-232">The value to replace with <c>newValue</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="50a1d-233">Новое значение элемента по <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-233">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-234">Выполняет дополнительные пользовательские действия перед заданием значения в экземпляре класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-234">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-235">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций перед заданием указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-235">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="50a1d-236">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-236">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-237">Если процесс завершается ошибкой, коллекция возвращается обратно в предыдущее состояние.</span><span class="sxs-lookup"><span data-stu-id="50a1d-237">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="50a1d-238">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-238">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-239">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-239">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-240">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены перед заданием указанного элемента в базовом <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> вызов осуществляется перед стандартное поведение набора, тогда как <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> вызывается после стандартное поведение набора.  Например, разработчики могут ограничить значения, которые может быть перезаписана при выполнении проверки внутри <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> вызывается до этого метода.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-240">
              <para>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.  For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSetComplete : int * obj * obj -&gt; unit&#xA;override this.OnSetComplete : int * obj * obj -&gt; unit" Usage="collectionBase.OnSetComplete (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-241">Отсчитываемый от нуля индекс, по которому может находиться значение <c>oldValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-241">The zero-based index at which <c>oldValue</c> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="50a1d-242">Значение, которое нужно заменить значением <c>newValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-242">The value to replace with <c>newValue</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="50a1d-243">Новое значение элемента по <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-243">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-244">Выполняет дополнительные пользовательские действия после задания значения в экземпляре класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-244">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-245">Реализация по умолчанию этот метод предназначен для переопределения в производном классе для выполнения некоторых операций после указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-245">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="50a1d-246">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-246">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-247">Коллекция возвращается обратно в предыдущее состояние, если выполняется одно из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="50a1d-247">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="50a1d-248">Процесс завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-248">The process fails.</span></span>  
  
-   <span data-ttu-id="50a1d-249">Этот метод переопределяется для создания исключения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-249">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="50a1d-250">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-250">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-251">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены после задания указанного элемента в базовом <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> вызов осуществляется перед стандартное поведение набора, тогда как <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> вызывается после стандартное поведение набора.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-251">
              <para>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj -&gt; unit&#xA;override this.OnValidate : obj -&gt; unit" Usage="collectionBase.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50a1d-252">Объект для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-252">The object to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-253">Выполняет дополнительные пользовательские операции при проверке значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-253">Performs additional custom processes when validating a value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-254">Реализация по умолчанию этот метод определяет, является ли `value` — `null`и если да, вызывается <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-254">The default implementation of this method determines whether `value` is `null`, and, if so, throws <xref:System.ArgumentNullException>.</span></span> <span data-ttu-id="50a1d-255">Он предназначен для переопределения в производном классе для выполнения дополнительных действий при проверке указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-255">It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="50a1d-256">Методы On \* вызываются только на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.List%2A> свойство, но не на экземпляр, возвращаемый <xref:System.Collections.CollectionBase.InnerList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-256">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-257">Реализация по умолчанию этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-257">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-258">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-258">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="50a1d-259">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-259">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-260">
            <para>Этот метод позволяет разработчику определить действия, которые должны быть выполнены при выполнении стандартное поведение базового <see cref="T:System.Collections.ArrayList" />. Определив этот метод, разработчики могут добавить функциональные возможности для унаследованных методов без необходимости переопределения всех других методов.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> может использоваться для накладывают ограничения на типы объектов, которые принимаются в коллекцию. Реализация по умолчанию предотвращает <see langword="null" /> препятствия добавляемые или удаляемые из основного <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> вызывается до <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-260">
              <para>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection. The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collectionBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-261">Индекс (с нуля) элемента, который требуется удалить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-261">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-262">Удаляет элемент по указанному индексу в экземпляре класса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-262">Removes the element at the specified index of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="50a1d-263">Этот метод нельзя переопределить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-263">This method is not overridable.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-264">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="50a1d-264">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="50a1d-265">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="50a1d-265">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="50a1d-266">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="50a1d-266">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="50a1d-267">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-267">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="50a1d-268">Значение параметра <paramref name="index" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-268">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="50a1d-269">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-269">-or-</span>
          </span>
          <span data-ttu-id="50a1d-270">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-270">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-271">
            <para>Этот метод вызывает метод <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-271">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="50a1d-272">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-272">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
          <span data-ttu-id="50a1d-273">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-273">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="50a1d-274">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-274">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-275">Копирует целый массив <see cref="T:System.Collections.CollectionBase" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с заданного индекса целевого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-275">Copies the entire <see cref="T:System.Collections.CollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-276">Указанный массив должен иметь совместимый тип.</span><span class="sxs-lookup"><span data-stu-id="50a1d-276">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="50a1d-277">Этот метод использует <xref:System.Array.Copy%2A?displayProperty=nameWithType> копируются элементы.</span><span class="sxs-lookup"><span data-stu-id="50a1d-277">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="50a1d-278">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-278">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="50a1d-279">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-279">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="50a1d-280">Значение параметра <paramref name="index" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-280">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50a1d-281">Массив <paramref name="array" /> является многомерным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-281">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="50a1d-282">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-282">-or-</span>
          </span>
          <span data-ttu-id="50a1d-283">Число элементов в исходной коллекции <see cref="T:System.Collections.CollectionBase" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-283">The number of elements in the source <see cref="T:System.Collections.CollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="50a1d-284">Тип исходного массива <see cref="T:System.Collections.CollectionBase" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-284">The type of the source <see cref="T:System.Collections.CollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-285">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.CollectionBase" /> синхронизированным (потокобезопасным).</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-285">Gets a value indicating whether access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-286">
            <see langword="true" />, если доступ к классу <see cref="T:System.Collections.CollectionBase" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-286">
              <see langword="true" /> if access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50a1d-287">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-287">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-288">Объект <xref:System.Collections.CollectionBase> экземпляра не синхронизированы.</span><span class="sxs-lookup"><span data-stu-id="50a1d-288">A <xref:System.Collections.CollectionBase> instance is not synchronized.</span></span> <span data-ttu-id="50a1d-289">Производные классы могут предоставлять синхронизированную версию <xref:System.Collections.CollectionBase> с помощью <xref:System.Collections.ICollection.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-289">Derived classes can provide a synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="50a1d-290">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-290">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="50a1d-291">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-291">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="50a1d-292">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="50a1d-292">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="50a1d-293">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.ICollection.SyncRoot%2A> на все время перечисления:</span><span class="sxs-lookup"><span data-stu-id="50a1d-293">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="50a1d-294">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-294">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-295">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-295">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-296">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-296">An object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-297">Производные классы могут предоставлять собственную синхронизированную версию <xref:System.Collections.CollectionBase> с помощью <xref:System.Collections.ICollection.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="50a1d-297">Derived classes can provide their own synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="50a1d-298">Синхронизированный код должен выполнять операции над <xref:System.Collections.ICollection.SyncRoot%2A> из <xref:System.Collections.CollectionBase>, но не с самим <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-298">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.CollectionBase>, not directly on the <xref:System.Collections.CollectionBase>.</span></span> <span data-ttu-id="50a1d-299">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-299">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="50a1d-300">В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения <xref:System.Collections.CollectionBase> объекта.</span><span class="sxs-lookup"><span data-stu-id="50a1d-300">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.CollectionBase> object.</span></span>  
  
 <span data-ttu-id="50a1d-301">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="50a1d-301">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="50a1d-302">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="50a1d-302">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="50a1d-303">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="50a1d-303">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="50a1d-304">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.ICollection.SyncRoot%2A> на все время перечисления:</span><span class="sxs-lookup"><span data-stu-id="50a1d-304">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="50a1d-305">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-305">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50a1d-306">Объект <see cref="T:System.Object" />, добавляемый в конец коллекции <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-306">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-307">Добавляет объект в конец очереди <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-307">Adds an object to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a1d-308">Индекс <see cref="T:System.Collections.CollectionBase" />, по которому добавлен параметр <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-308">The <see cref="T:System.Collections.CollectionBase" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-309">Если <xref:System.Collections.CollectionBase.Count%2A> уже равна емкости, емкость удваивается автоматически перераспределения внутреннего массива и копирование существующих элементов в новый массив, перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-309">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="50a1d-310">Если <xref:System.Collections.CollectionBase.Count%2A> меньше, чем значение емкости, этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-310">If <xref:System.Collections.CollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="50a1d-311">Если емкость требуется увеличить для размещения нового элемента, этот метод становится операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-311">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-312">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-312">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="50a1d-313">Объект <see cref="T:System.Collections.CollectionBase" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-313">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="50a1d-314">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-314">-or-</span>
          </span>
          <span data-ttu-id="50a1d-315">
            <see cref="T:System.Collections.CollectionBase" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-315">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-316">
            <para>Этот метод вызывает метод <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-316">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50a1d-317">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-317">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-318">Определяет, содержит ли интерфейс <see cref="T:System.Collections.CollectionBase" /> определенный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-318">Determines whether the <see cref="T:System.Collections.CollectionBase" /> contains a specific element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a1d-319">Значение <see langword="true" />, если коллекция <see cref="T:System.Collections.CollectionBase" /> содержит заданный объект <paramref name="value" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-319">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> contains the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-320">Этот метод выполняет линейный поиск; Таким образом, этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-320">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-321">Этот метод определяет равенство, вызвав <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-321">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="50a1d-322">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения ли `item` существует.</span><span class="sxs-lookup"><span data-stu-id="50a1d-322">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="50a1d-323">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="50a1d-323">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-324">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-324">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50a1d-325">Объект <see cref="T:System.Object" />, который требуется найти в коллекции <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-325">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-326">Осуществляет поиск указанного объекта <see cref="T:System.Object" /> и возвращает отсчитываемый от нуля индекс первого вхождения в коллекцию <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-326">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50a1d-327">Индекс (с нуля) первого вхождения параметра <paramref name="value" />, если оно найдено в коллекции <see cref="T:System.Collections.CollectionBase" />; в противном случае -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-327">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.CollectionBase" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-328">Этот метод выполняет линейный поиск; Таким образом, этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-328">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-329">Этот метод определяет равенство, вызвав <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-329">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="50a1d-330">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения ли `item` существует.</span><span class="sxs-lookup"><span data-stu-id="50a1d-330">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="50a1d-331">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="50a1d-331">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-332">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-332">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-333">Отсчитываемый от нуля индекс, по которому необходимо вставить <c>значение</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-333">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="50a1d-334">Вставляемый объект <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-334">The <see cref="T:System.Object" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-335">Вставляет элемент в коллекцию <see cref="T:System.Collections.CollectionBase" /> по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-335">Inserts an element into the <see cref="T:System.Collections.CollectionBase" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-336">Если <xref:System.Collections.CollectionBase.Count%2A> уже равна емкости, емкость удваивается автоматически перераспределения внутреннего массива перед вставкой нового элемента.</span><span class="sxs-lookup"><span data-stu-id="50a1d-336">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</span></span>  
  
 <span data-ttu-id="50a1d-337">Если `index` равен <xref:System.Collections.CollectionBase.Count%2A>, `value` добавляется в конец <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-337">If `index` is equal to <xref:System.Collections.CollectionBase.Count%2A>, `value` is added to the end of <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="50a1d-338">В коллекциях с непрерывным набором элементов, таких как списки, чтобы выделить место новому элементу, следующие за точкой вставки элементы перемещаются вниз.</span><span class="sxs-lookup"><span data-stu-id="50a1d-338">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="50a1d-339">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="50a1d-339">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="50a1d-340">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="50a1d-340">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="50a1d-341">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-341">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-342">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-342">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="50a1d-343">Значение параметра <paramref name="index" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-343">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="50a1d-344">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-344">-or-</span>
          </span>
          <span data-ttu-id="50a1d-345">Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-345">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="50a1d-346">Объект <see cref="T:System.Collections.CollectionBase" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-346">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="50a1d-347">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-347">-or-</span>
          </span>
          <span data-ttu-id="50a1d-348">
            <see cref="T:System.Collections.CollectionBase" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-348">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-349">
            <para>Этот метод вызывает метод <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-349">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-350">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.CollectionBase" /> фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-350">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-351">Значение <see langword="true" />, если словарь <see cref="T:System.Collections.CollectionBase" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-351">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50a1d-352">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-352">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-353">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="50a1d-353">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="50a1d-354">Коллекция с фиксированным размером является просто коллекцией с оболочкой, предотвращает добавление и удаление элементов; Поэтому если были внесены изменения в базовую коллекцию, включая добавление или удаление элементов, эти изменения отражаются в коллекции фиксированного размера.</span><span class="sxs-lookup"><span data-stu-id="50a1d-354">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="50a1d-355">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-355">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50a1d-356">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.CollectionBase" /> доступным только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-356">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-357">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.CollectionBase" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-357">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="50a1d-358">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-358">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-359">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="50a1d-359">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="50a1d-360">Коллекция, которая доступна только для чтения — это просто коллекция с оболочкой, предотвращает изменение коллекции; Таким образом при внесении изменений в базовую коллекцию, эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="50a1d-360">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="50a1d-361">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-361">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="50a1d-362">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-362">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-363">Возвращает или задает элемент по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-363">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50a1d-364">Элемент, расположенный по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-364">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-365">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="50a1d-365">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="50a1d-366">Получение значения этого свойства является операцией o(1). Задание этого свойства также является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="50a1d-366">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-367">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-367">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="50a1d-368">Значение параметра <paramref name="index" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-368">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="50a1d-369">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-369">-or-</span>
          </span>
          <span data-ttu-id="50a1d-370">Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-370">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-371">
            <para>Если это свойство имеет значение, методы <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> вызываются.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-371">
              <para>When this property is set, the methods <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> are called.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="50a1d-372">Элемент <see cref="T:System.Object" />, который требуется удалить из <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-372">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a1d-373">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-373">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a1d-374">Если <xref:System.Collections.CollectionBase> не содержит указанный объект <xref:System.Collections.CollectionBase> остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="50a1d-374">If the <xref:System.Collections.CollectionBase> does not contain the specified object, the <xref:System.Collections.CollectionBase> remains unchanged.</span></span> <span data-ttu-id="50a1d-375">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="50a1d-375">No exception is thrown.</span></span>  
  
 <span data-ttu-id="50a1d-376">Этот метод выполняет линейный поиск; Таким образом, этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.CollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-376">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="50a1d-377">Этот метод определяет равенство, вызвав <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="50a1d-377">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="50a1d-378">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="50a1d-378">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="50a1d-379">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="50a1d-379">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="50a1d-380">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="50a1d-380">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a1d-381">В следующем коде реализуется пример <xref:System.Collections.CollectionBase> класса и использует эту реализацию для создания коллекции, содержащей <xref:System.Int16> объектов.</span><span class="sxs-lookup"><span data-stu-id="50a1d-381">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50a1d-382">Значение параметра <paramref name="value" /> не найдено в объекте <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-382">The <paramref name="value" /> parameter was not found in the <see cref="T:System.Collections.CollectionBase" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="50a1d-383">Объект <see cref="T:System.Collections.CollectionBase" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-383">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="50a1d-384">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-384">-or-</span>
          </span>
          <span data-ttu-id="50a1d-385">
            <see cref="T:System.Collections.CollectionBase" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-385">The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="50a1d-386">
            <para>Этот метод вызывает метод <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, и <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="50a1d-386">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>