<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumerable.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe072b174fa23a4232cd0583f55c9377b122c0b4e183.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b174fa23a4232cd0583f55c9377b122c0b4e183</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IEnumerable">
          <source>Exposes an enumerator, which supports a simple iteration over a non-generic collection.</source>
          <target state="translated">Предоставляет перечислитель, который поддерживает простой перебор элементов неуниверсальной коллекции.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> is the base interface for all non-generic collections that can be enumerated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> является базовым интерфейсом для всех неуниверсальных коллекций, которые могут быть перечислены.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>For the generic version of this interface see <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Универсальная версия этого интерфейса в разделе <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> contains a single method, <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>, which returns an <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> содержит только один метод <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>, который возвращает <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> provides the ability to iterate through the collection by exposing a <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property and <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> позволяет выполнять итерации по коллекции, предоставляя <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> свойство и <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> и <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>It is a best practice to implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> on your collection classes to enable the <ph id="ph3">`foreach`</ph> (<ph id="ph4">`For Each`</ph> in Visual Basic) syntax, however implementing <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> is not required.</source>
          <target state="translated">Рекомендуется реализовать <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> на пользовательские классы коллекций, чтобы включить <ph id="ph3">`foreach`</ph> (<ph id="ph4">`For Each`</ph> в Visual Basic) синтаксис, однако реализация <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph> не является обязательным.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>If your collection does not implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, you must still follow the iterator pattern to support this syntax by providing a <ph id="ph2">`GetEnumerator`</ph> method that returns an interface, class or struct.</source>
          <target state="translated">Если вашей коллекции не реализован <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, по-прежнему необходимо выполнить шаблон итератор для поддержки этого синтаксиса, предоставляя <ph id="ph2">`GetEnumerator`</ph> метод, возвращающий интерфейса, класса или структуры.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>When using Visual Basic, you must provide an <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> implementation, which is returned by <ph id="ph2">`GetEnumerator`</ph>.</source>
          <target state="translated">При использовании Visual Basic, необходимо указать <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> реализации, который возвращается методом <ph id="ph2">`GetEnumerator`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>When developing with C# you must provide a class that contains a <ph id="ph1">`Current`</ph> property, and <ph id="ph2">`MoveNext`</ph> and <ph id="ph3">`Reset`</ph> methods as described by <ph id="ph4">&lt;xref:System.Collections.IEnumerator&gt;</ph>, but the class does not have to implement <ph id="ph5">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</source>
          <target state="translated">При разработке с помощью C# необходимо указать класс, содержащий <ph id="ph1">`Current`</ph> свойство, и <ph id="ph2">`MoveNext`</ph> и <ph id="ph3">`Reset`</ph> методов, описанный <ph id="ph4">&lt;xref:System.Collections.IEnumerator&gt;</ph>, но класс не имеет реализации <ph id="ph5">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>The following code example demonstrates the best practice for iterating a custom collection by implementing the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interfaces.</source>
          <target state="translated">В следующем примере кода показано, рекомендуется для выполнения итерации пользовательскую коллекцию, реализовав <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейсов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of <ph id="ph1">`foreach`</ph> (<ph id="ph2">`For Each`</ph> in Visual Basic) to iterate through the collection.</source>
          <target state="translated">В этом примере элементы этого интерфейса явно не вызываются, однако они реализуются для поддержки использования <ph id="ph1">`foreach`</ph> (<ph id="ph2">`For Each`</ph> в Visual Basic) для выполнения итерации по коллекции.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>This example is a complete Console app.</source>
          <target state="translated">Данный пример является полное консольное приложение.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>To compile the Visual Basic app, change the <bpt id="p1">**</bpt>Startup object<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Sub Main<ept id="p2">**</ept> in the project’s <bpt id="p3">**</bpt>Properties<ept id="p3">**</ept> page.</source>
          <target state="translated">Чтобы скомпилировать приложение Visual Basic, измените <bpt id="p1">**</bpt>автоматически запускаемый объект<ept id="p1">**</ept> для <bpt id="p2">**</bpt>Sub Main<ept id="p2">**</ept> в проекте <bpt id="p3">**</bpt>свойства<ept id="p3">**</ept> страницы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerable">
          <source>For a sample that shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface, see <bpt id="p1">[</bpt>Implementing the IEnumerable Interface in a Collection Class<ept id="p1">](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</ept></source>
          <target state="translated">Пример, в котором показано, как реализовать <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> интерфейса см. в разделе <bpt id="p1">[</bpt>реализации интерфейса IEnumerable в классе коллекции<ept id="p1">](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Возвращает перечислитель, который осуществляет итерацию по коллекции.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that can be used to iterate through the collection.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, который используется для прохода по коллекции.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Инструкция <ph id="ph1">`foreach`</ph> языка C# (<ph id="ph2">`For Each`</ph> в Visual Basic) позволяет скрыть сложный механизм перечислителей.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово <ph id="ph1">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> Метод также переводит перечислитель в эту позицию.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">В этой позиции <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> свойство не определено.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо вызвать метод <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> возвращает тот же объект, пока не будет вызван метод <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы снова задать в качестве значения свойства <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> первый элемент коллекции, можно последовательно вызвать методы <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> и<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>The following code example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interfaces for a custom collection.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> интерфейсы для настраиваемой коллекции.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>In this example, <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> is not explicitly called, but it is implemented to support the use of <ph id="ph2">`foreach`</ph> (<ph id="ph3">`For Each`</ph> in Visual Basic).</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> не вызывается явно, но реализуется для поддержки использования <ph id="ph2">`foreach`</ph> (<ph id="ph3">`For Each`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerable.GetEnumerator">
          <source>This code example is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Данный пример кода является частью большего примера для <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> интерфейса.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>