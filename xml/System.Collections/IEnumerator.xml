<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumerator.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f899d5b30819887e359cfccfb19a232983dfc83f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f899d5b30819887e359cfccfb19a232983dfc83f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IEnumerator">
          <source>Supports a simple iteration over a non-generic collection.</source>
          <target state="translated">Поддерживает простой перебор по неуниверсальной коллекции.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> is the base interface for all non-generic enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> является базовым интерфейсом для всех неуниверсальных перечислителей.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>For the generic version of this interface see <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>.</source>
          <target state="translated">Универсальная версия этого интерфейса в разделе <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">Инструкция <ph id="ph1">`foreach`</ph> языка C# (<ph id="ph2">`for each`</ph> в Visual Basic) позволяет скрыть сложный механизм перечислителей.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">Таким образом, использование <ph id="ph1">`foreach`</ph> рекомендуется вместо непосредственного использования перечислителя.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> Метод предоставляется для COM-взаимодействие и необязательно должен быть полностью реализованы; вместо этого разработчик может вызывать <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Изначально перечислитель располагается перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>You must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>; otherwise, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Необходимо вызвать <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>; в противном случае <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> возвращает тот же объект, пока не будет вызван метод <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Если последний вызов метода <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, вызов <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> приводит к возникновению исключения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>, if it’s implemented, followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Чтобы задать <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> на первый элемент коллекции еще раз, можно вызвать <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>, если она реализована следуют <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> — не реализован, необходимо создать новый экземпляр перечислителя, чтобы вернуться к первому элементу коллекции.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывает <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Если коллекция изменяется в промежутке между <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>The following code example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> interfaces for a custom collection.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> и <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейсы для настраиваемой коллекции.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IEnumerator">
          <source>In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of <ph id="ph1">`foreach`</ph> (<ph id="ph2">`for each`</ph> in Visual Basic) to iterate through the collection.</source>
          <target state="translated">В этом примере элементы этого интерфейса явно не вызываются, однако они реализуются для поддержки использования <ph id="ph1">`foreach`</ph> (<ph id="ph2">`for each`</ph> в Visual Basic) для выполнения итерации по коллекции.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Collections.IEnumerator.Current">
          <source>Gets the element in the collection at the current position of the enumerator.</source>
          <target state="translated">Возвращает элемент коллекции, соответствующий текущей позиции перечислителя.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>The element in the collection at the current position of the enumerator.</source>
          <target state="translated">Элемент коллекции, соответствующий текущей позиции перечислителя.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не определено ни в одном из следующих условий:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</source>
          <target state="translated">Перечислитель располагается перед первым элементом в коллекции, сразу же после создания перечислителя.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> необходимо вызвать, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">Последнего вызова <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращается <ph id="ph2">`false`</ph>, который указывает конец коллекции.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
          <target state="translated">Перечислитель становится недействительным из-за изменений в коллекции, такие как добавление, изменение или удаление элементов.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> возвращает тот же объект, пока не будет вызван метод <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> задает <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> в качестве значения для следующего элемента.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>The following code example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interfaces for a custom collection.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейсы для настраиваемой коллекции.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>In this example, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is not explicitly called, but it is implemented to support the use of <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> in Visual Basic).</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> не вызывается явно, но реализуется для поддержки использования <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IEnumerator.Current">
          <source>This code example is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">Данный пример кода является частью большего примера для <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Перемещает перечислитель к следующему элементу коллекции.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если перечислитель был успешно перемещен к следующему элементу; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если перечислитель достиг конца коллекции.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method moves the enumerator over the first element of the collection.</source>
          <target state="translated">После создания перечислителя или после <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывается метод, перечислитель располагается перед первым элементом коллекции, и первый вызов <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> метод перемещает перечислитель на первый элемент коллекции.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> проходит в конец коллекции, перечислитель помещается за последним элементом в коллекции и <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Если перечислитель находится в этой позиции, последующие вызовы <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> также возвращают <ph id="ph2">`false`</ph> до <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывает <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>The following code example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interfaces for a custom collection.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейсы для настраиваемой коллекции.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>In this example, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is not explicitly called, but it is implemented to support the use of <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> in Visual Basic).</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> не вызывается явно, но реализуется для поддержки использования <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>This code example is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">Данный пример кода является частью большего примера для <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">После создания перечислителя семейство было изменено.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Перечислитель остается действительным, пока коллекция не изменяется.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> вызывает исключение <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is provided for COM interoperability.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> Метод предоставляется для COM-взаимодействия.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>It does not necessarily need to be implemented; instead, the implementer can simply throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Он не обязательно должны быть реализованы; Вместо этого разработчик может просто создать <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>The following code example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interfaces for a custom collection.</source>
          <target state="translated">В следующем примере кода демонстрируется реализация <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейсы для настраиваемой коллекции.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>In this example, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is not explicitly called, but it is implemented to support the use of <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> in Visual Basic).</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> не вызывается явно, но реализуется для поддержки использования <ph id="ph2">`foreach`</ph> (<ph id="ph3">`for each`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>This code example is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface.</source>
          <target state="translated">Данный пример кода является частью большего примера для <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.IEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">После создания перечислителя семейство было изменено.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>All calls to <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerator.Reset" /&gt;</ph> must result in the same state for the enumerator.</source>
          <target state="translated">Все вызовы <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerator.Reset" /&gt;</ph> необходимо привести в том же состоянии перечислителя.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>The preferred implementation is to move the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">Предпочтительная реализация заключается в том, чтобы переместить перечислитель в начало коллекции, перед первым элементом.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IEnumerator.Reset">
          <source>This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerator.MoveNext" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>.</source>
          <target state="translated">Этот перечислитель становится недействительным, если коллекция была изменена с момента создания перечислитель, который согласуется с <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerator.MoveNext" /&gt;</ph> и <ph id="ph2">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>