<Type Name="ReadOnlyCollectionBase" FullName="System.Collections.ReadOnlyCollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aba480e564e1d4519383a79f60400a97d7ee89d5" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48610919" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ReadOnlyCollectionBase : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ReadOnlyCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReadOnlyCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyCollectionBase abstract : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ReadOnlyCollectionBase = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e2a2a-101">Предоставляет базовый класс <see langword="abstract" /> для неуниверсальной коллекции со строгим типом, которая доступна только для чтения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-101">Provides the <see langword="abstract" /> base class for a strongly typed non-generic read-only collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-102">Объект <xref:System.Collections.ReadOnlyCollectionBase> экземпляр всегда доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-102">A <xref:System.Collections.ReadOnlyCollectionBase> instance is always read-only.</span></span> <span data-ttu-id="e2a2a-103">См. в разделе <xref:System.Collections.CollectionBase> для версии изменяемыми этого класса.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-103">See <xref:System.Collections.CollectionBase> for a modifiable version of this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2a2a-104">В следующем коде реализуется пример <xref:System.Collections.ReadOnlyCollectionBase> класса.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-104">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e2a2a-105">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-105">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="e2a2a-106">Потокобезопасность членов экземпляров не гарантируется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-106">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="e2a2a-107">Эта реализация не поддерживает синхронизированную (потокобезопасную) оболочку для <see cref="T:System.Collections.ReadOnlyCollectionBase" />, но производные классы могут создавать свои собственные синхронизованные версии <see cref="T:System.Collections.ReadOnlyCollectionBase" /> с помощью <see cref="P:System.Collections.ICollection.SyncRoot" /> свойство.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-107">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.ReadOnlyCollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="e2a2a-108">Перечисление коллекции не является потокобезопасной процедурой.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-108">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="e2a2a-109">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-109">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="e2a2a-110">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2a2a-110">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e2a2a-111">Этот базовый класс предоставляется для упрощения реализации строго типизированные только для чтения пользовательской коллекции.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e2a2a-111">This base class is provided to make it easier for implementers to create a strongly typed read-only custom collection.</span>
        </span>
        <span data-ttu-id="e2a2a-112">Разработчики, рекомендуется расширить этот базовый класс, вместо того чтобы создавать свои собственные.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e2a2a-112">Implementers are encouraged to extend this base class instead of creating their own.</span>
        </span>
        <span data-ttu-id="e2a2a-113">Члены этого базового класса защищены и предназначены для использования через только производный класс.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e2a2a-113">Members of this base class are protected and are intended to be used through a derived class only.</span>
        </span>
        <span data-ttu-id="e2a2a-114">Этот класс предоставляет базовую коллекцию посредством <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> свойство, которое предназначено для использования только с помощью классов, производных от <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e2a2a-114">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
        </span>
        <span data-ttu-id="e2a2a-115">Производного класса необходимо убедиться, что их пользователей не может изменить базовую коллекцию.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e2a2a-115">The derived class must ensure that its own users cannot modify the underlying collection.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.CollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReadOnlyCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReadOnlyCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-116">Инициализирует новый экземпляр класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-116">Initializes a new instance of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-117">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="e2a2a-117">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ReadOnlyCollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-118">Получает число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-118">Gets the number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2a2a-119">Число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-119">The number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="e2a2a-120">Получение значения данного свойства является операцией порядка сложности O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-120">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2a2a-121">В следующем коде реализуется пример <xref:System.Collections.ReadOnlyCollectionBase> класса.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-121">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="readOnlyCollectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-122">Возвращает перечислитель, перебирающий элементы экземпляра класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-122">Returns an enumerator that iterates through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e2a2a-123">Перечислитель <see cref="T:System.Collections.IEnumerator" /> для экземпляра класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-123">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-124">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-124">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="e2a2a-125">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-125">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e2a2a-126">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-126">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e2a2a-127">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-127">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e2a2a-128">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-128"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="e2a2a-129">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-129">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e2a2a-130">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-130">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e2a2a-131"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-131"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e2a2a-132"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-132"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e2a2a-133">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-133">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e2a2a-134">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-134">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e2a2a-135">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-135">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e2a2a-136">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-136">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e2a2a-137">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-137">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e2a2a-138">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-138">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="e2a2a-139">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-139">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="e2a2a-140">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-140">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e2a2a-141">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-141">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e2a2a-142">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="e2a2a-142">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2a2a-143">В следующем коде реализуется пример <xref:System.Collections.ReadOnlyCollectionBase> класса.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-143">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerList : System.Collections.ArrayList" Usage="System.Collections.ReadOnlyCollectionBase.InnerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-144">Получает список элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-144">Gets the list of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2a2a-145">Класс <see cref="T:System.Collections.ArrayList" />, предоставляющий экземпляр класса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-145">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-146">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e2a2a-146">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2a2a-147">В следующем коде реализуется пример <xref:System.Collections.ReadOnlyCollectionBase> класса.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-147">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e2a2a-148">Этот класс предоставляет базовую коллекцию посредством <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> свойство, которое предназначено для использования только с помощью классов, производных от <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e2a2a-148">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
            </span>
            <span data-ttu-id="e2a2a-149">Производного класса необходимо убедиться, что их пользователей не может изменить базовую коллекцию.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e2a2a-149">The derived class must ensure that its own users cannot modify the underlying collection.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="e2a2a-150">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-150">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          </span>
          <span data-ttu-id="e2a2a-151">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-151">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="e2a2a-152">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-152">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e2a2a-153">Копирует целый массив <see cref="T:System.Collections.ReadOnlyCollectionBase" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с заданного индекса целевого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-153">Copies the entire <see cref="T:System.Collections.ReadOnlyCollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-154">Указанный массив должен иметь совместимый тип.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-154">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="e2a2a-155">Этот метод использует <xref:System.Array.Copy%2A?displayProperty=nameWithType> копируются элементы.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-155">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="e2a2a-156">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-156">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e2a2a-157">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-157">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e2a2a-158">Значение параметра <paramref name="index" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-158">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e2a2a-159">Массив <paramref name="array" /> является многомерным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-159">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="e2a2a-160">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-160">-or-</span>
          </span>
          <span data-ttu-id="e2a2a-161">Число элементов в исходной коллекции <see cref="T:System.Collections.ReadOnlyCollectionBase" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-161">The number of elements in the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e2a2a-162">Тип исходного массива <see cref="T:System.Collections.ReadOnlyCollectionBase" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-162">The type of the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-163">Возвращает значение, указывающее на то, является ли доступ к объекту <see cref="T:System.Collections.ReadOnlyCollectionBase" /> синхронизированным (потокобезопасным).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-163">Gets a value indicating whether access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2a2a-164">Значение <see langword="true" />, если доступ к объекту <see cref="T:System.Collections.ReadOnlyCollectionBase" /> является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-164">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e2a2a-165">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-166">Объект <xref:System.Collections.ReadOnlyCollectionBase> объект не синхронизируется.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-166">A <xref:System.Collections.ReadOnlyCollectionBase> object is not synchronized.</span></span> <span data-ttu-id="e2a2a-167">Производные классы могут предоставлять синхронизированную версию <xref:System.Collections.ReadOnlyCollectionBase> используя <xref:System.Collections.ICollection.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-167">Derived classes can provide a synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="e2a2a-168">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-168">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e2a2a-169">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-169">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e2a2a-170">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-170">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2a2a-171">В следующем примере кода показано, как заблокировать коллекцию, используя <xref:System.Collections.ICollection.SyncRoot%2A> свойство на все время перечисления.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-171">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="e2a2a-172">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e2a2a-172">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2a2a-173">Получает объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-173">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e2a2a-174">Объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2a2a-174">An object that can be used to synchronize access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2a2a-175">Производные классы могут предоставлять собственную синхронизированную версию <xref:System.Collections.ReadOnlyCollectionBase> используя <xref:System.Collections.ICollection.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-175">Derived classes can provide their own synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="e2a2a-176">Синхронизированный код должен выполнять операции над <xref:System.Collections.ICollection.SyncRoot%2A> свойство <xref:System.Collections.ReadOnlyCollectionBase> объекта, не непосредственно на <xref:System.Collections.ReadOnlyCollectionBase> объекта.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-176">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.ReadOnlyCollectionBase> object, not directly on the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span> <span data-ttu-id="e2a2a-177">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-177">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="e2a2a-178">В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения <xref:System.Collections.ReadOnlyCollectionBase> объекта.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-178">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span>  
  
 <span data-ttu-id="e2a2a-179">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-179">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e2a2a-180">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-180">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e2a2a-181">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-181">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2a2a-182">В следующем примере кода показано, как заблокировать коллекцию, используя <xref:System.Collections.ICollection.SyncRoot%2A> свойство на все время перечисления.</span><span class="sxs-lookup"><span data-stu-id="e2a2a-182">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="e2a2a-183">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e2a2a-183">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>