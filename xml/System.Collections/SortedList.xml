<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ef58cc883582aa422d11b8c93787c25816a7937" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39952027" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedList = class&#xA;    interface IDictionary&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0cad3-101">Предоставляет коллекцию пар "ключ-значение", упорядоченных по ключам. Доступ к парам можно получить по ключу и по индексу.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-102">Универсальная версия этой коллекции, см. в разделе <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-102">For the generic version of this collection, see <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0cad3-103">Объект <xref:System.Collections.SortedList> можно получить доступ к элементу по его ключу, такие как элемент в любом <xref:System.Collections.IDictionary> реализации, или по индексу, как элемент в любом <xref:System.Collections.IList> реализации.</span><span class="sxs-lookup"><span data-stu-id="0cad3-103">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  
  
 <span data-ttu-id="0cad3-104">Объект <xref:System.Collections.SortedList> внутри поддерживается два массива для хранения элементов списка; то есть один массив для ключей и другой массив для них значения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-104">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="0cad3-105">Каждый элемент является парой ключ/значение, доступны в виде <xref:System.Collections.DictionaryEntry> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-105">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="0cad3-106">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-106">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="0cad3-107">Емкость <xref:System.Collections.SortedList> равно числу элементов <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-107">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-108">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается должным образом посредством перераспределения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-108">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="0cad3-109">Емкость можно уменьшить путем вызова <xref:System.Collections.SortedList.TrimToSize%2A> или задав <xref:System.Collections.SortedList.Capacity%2A> свойство явным образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-109">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="0cad3-110">Для очень больших <xref:System.Collections.SortedList> объектов, можно увеличить максимальную емкость с элементами 2 миллиарда на 64-разрядной системе, задав `enabled` атрибута элемента конфигурации для `true` в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-110">For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="0cad3-111">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-111">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="0cad3-112">В любом случае <xref:System.Collections.SortedList> не допускают наличия повторяющихся ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-112">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="0cad3-113">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-113">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-114">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-114">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-115">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-115">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-116">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-116">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-117">Операции с <xref:System.Collections.SortedList> объект как правило, медленнее, чем операции над <xref:System.Collections.Hashtable> объект из-за сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-117">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="0cad3-118">Тем не менее <xref:System.Collections.SortedList> обеспечивает большую гибкость, разрешив доступ к значениям либо с помощью связанные ключи, либо с помощью индексов.</span><span class="sxs-lookup"><span data-stu-id="0cad3-118">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="0cad3-119">В этой коллекции может осуществляться с помощью целочисленного индекса.</span><span class="sxs-lookup"><span data-stu-id="0cad3-119">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="0cad3-120">Индексы в данной коллекции отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="0cad3-120">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="0cad3-121">`foreach` Инструкции языка C# (`for each` в Visual Basic) возвращает объект типа элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-121">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="0cad3-122">Так как каждый элемент из <xref:System.Collections.SortedList> объект представляет собой пару ключ/значение, тип элемента не является типом ключа или тип значения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-122">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="0cad3-123">Вместо этого тип элемента — это <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-123">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="0cad3-124">Примеры.</span><span class="sxs-lookup"><span data-stu-id="0cad3-124">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="0cad3-125">`foreach` Инструкция — это оболочка вокруг перечислитель, который допускает только чтение из, не запись в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-125">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-126">В следующем примере кода показано, как создать и инициализировать <xref:System.Collections.SortedList> объект и способ вывода его ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="0cad3-126">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0cad3-127">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="0cad3-128">Потокобезопасность членов экземпляров не гарантируется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="0cad3-129">Объект <see cref="T:System.Collections.SortedList" /> объект может поддерживать несколько читателей параллельно, до тех пор, пока коллекция не изменяется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-129">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="0cad3-130">Чтобы гарантировать потокобезопасность объекта <see cref="T:System.Collections.SortedList" />, все операции должны осуществляться через оболочку, возвращенную <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> метод.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-130">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span>
      </span>
      <span data-ttu-id="0cad3-131">Перечисление коллекции не является потокобезопасной процедурой.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-131">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="0cad3-132">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-132">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="0cad3-133">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cad3-133">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-134">Инициализирует новый экземпляр класса <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-134">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-135">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с начальной емкостью по умолчанию, упорядоченный в соответствии с интерфейсом <see cref="T:System.IComparable" />, который реализован каждым ключом, добавленным в объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-135">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-136">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-136">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-137">Элементы сортируются в соответствии с <xref:System.IComparable> реализацию каждым ключом, добавленным <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-137">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-138">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-138">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-139">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-139">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-140">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-141">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-141">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-142">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-142">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="0cad3-143">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-143">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="0cad3-144">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-144">-or-</span>
          </span>
          <span data-ttu-id="0cad3-145">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-145">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-146">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с начальной емкостью по умолчанию, упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-146">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-147">Элементы сортируются в соответствии с указанным <xref:System.Collections.IComparer> реализации.</span><span class="sxs-lookup"><span data-stu-id="0cad3-147">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="0cad3-148">Если `comparer` параметр `null`, <xref:System.IComparable> используется реализация каждого ключа; таким образом, каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-148">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-149">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-149">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-150">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-150">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-151">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-151">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-152">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-153">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-153">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="0cad3-154">Реализация интерфейса <see cref="T:System.Collections.IDictionary" /> для копирования в новый объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-154">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-155">Инициализирует новый экземпляр <see cref="T:System.Collections.SortedList" />, содержащий элементы, скопированные из указанного словаря, обладающий начальной емкостью, равной количеству скопированных элементов и упорядоченный в соответствии с реализацией интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-155">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-156">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-156">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-157">Элементы сортируются в соответствии с <xref:System.IComparable> реализацию каждым ключом, добавленным <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-157">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-158">Объект <xref:System.Collections.Hashtable> объект является примером <xref:System.Collections.IDictionary> реализации, который может быть передан в конструктор.</span><span class="sxs-lookup"><span data-stu-id="0cad3-158">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="0cad3-159">Новый <xref:System.Collections.SortedList> объект содержит копию ключей и значений, хранящихся в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-159">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="0cad3-160">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-160">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-161">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-161">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-162">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-162">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-163">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-163">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-164">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-164">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-165">
            <paramref name="d" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-165">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cad3-166">Один или несколько элементов в массиве <paramref name="d" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-166">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">
          <span data-ttu-id="0cad3-167">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-167">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-168">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с указанной начальной емкостью, упорядоченный в соответствии с интерфейсом <see cref="T:System.IComparable" />, который реализован каждым ключом, добавленным в объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-168">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-169">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-169">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-170">Элементы сортируются в соответствии с <xref:System.IComparable> реализацию каждым ключом, добавленным <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-170">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-171">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-171">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-172">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-172">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-173">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-174">Этот конструктор является операцией O (`n`) операции, где `n` является `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-174">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-175">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-175">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-176">Значение параметра <paramref name="initialCapacity" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-176">
              <paramref name="initialCapacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="0cad3-177">Недостаточно свободной памяти для создания объекта <see cref="T:System.Collections.SortedList" /> с указанным значением параметра <paramref name="initialCapacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-177">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer * int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (comparer, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="0cad3-178">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-178">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="0cad3-179">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-179">-or-</span>
          </span>
          <span data-ttu-id="0cad3-180">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-180">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="0cad3-181">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-181">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-182">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с указанной начальной емкостью, упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-182">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-183">Элементы сортируются в соответствии с указанным <xref:System.Collections.IComparer> реализации.</span><span class="sxs-lookup"><span data-stu-id="0cad3-183">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="0cad3-184">Если `comparer` параметр `null`, <xref:System.IComparable> используется реализация каждого ключа; таким образом, каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-184">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-185">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-185">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-186">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-186">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-187">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-187">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-188">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-188">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-189">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-189">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-190">Значение параметра <paramref name="capacity" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-190">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="0cad3-191">Недостаточно свободной памяти для создания объекта <see cref="T:System.Collections.SortedList" /> с указанным значением параметра <paramref name="capacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-191">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary * System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (d, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="0cad3-192">Реализация интерфейса <see cref="T:System.Collections.IDictionary" /> для копирования в новый объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-192">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cad3-193">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-193">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="0cad3-194">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-194">-or-</span>
          </span>
          <span data-ttu-id="0cad3-195">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-195">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-196">Инициализирует новый экземпляр <see cref="T:System.Collections.SortedList" />, содержащий элементы, скопированные из указанного словаря, обладающий начальной емкостью, равной количеству скопированных элементов и упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-196">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-197">Элементы сортируются в соответствии с указанным <xref:System.Collections.IComparer> реализации.</span><span class="sxs-lookup"><span data-stu-id="0cad3-197">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="0cad3-198">Если `comparer` параметр `null`, <xref:System.IComparable> используется реализация каждого ключа; таким образом, каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы можно было сравнивать с любым другим ключом в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-198">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-199">Объект <xref:System.Collections.Hashtable> объект является примером <xref:System.Collections.IDictionary> реализации, который может быть передан в конструктор.</span><span class="sxs-lookup"><span data-stu-id="0cad3-199">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="0cad3-200">Новый <xref:System.Collections.SortedList> объект содержит копию ключей и значений, хранящихся в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-200">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="0cad3-201">Емкость <xref:System.Collections.SortedList> равно числу элементов, <xref:System.Collections.SortedList> может содержать.</span><span class="sxs-lookup"><span data-stu-id="0cad3-201">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="0cad3-202">При добавлении элементов к <xref:System.Collections.SortedList>, емкость автоматически увеличивается, если это требуется перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="0cad3-202">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="0cad3-203">Если размер коллекции можно оценить, указав начальную емкость по избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-203">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-204">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-204">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-205">В следующем примере кода создает коллекций с помощью разных <xref:System.Collections.SortedList> конструкторы и демонстрирует различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="0cad3-205">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-206">
            <paramref name="d" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-206">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cad3-207">Значение параметра <paramref name="comparer" /> — <see langword="null" />, а один или несколько элементов в параметре <paramref name="d" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-207">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-208">Ключ добавляемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-208">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cad3-209">Добавляемое значение элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-209">The value of the element to add.</span>
          </span>
          <span data-ttu-id="0cad3-210">Допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-210">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-211">Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-211">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-212">Точка вставки определяется на основе функции сравнения, выбран, явно или по умолчанию, когда <xref:System.Collections.SortedList> был создан объект.</span><span class="sxs-lookup"><span data-stu-id="0cad3-212">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="0cad3-213">Если <xref:System.Collections.SortedList.Count%2A> равно <xref:System.Collections.SortedList.Capacity%2A>, емкости из <xref:System.Collections.SortedList> объекта увеличивается автоматически перераспределения внутреннего массива и существующие элементы копируются в новый массив, перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-213">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="0cad3-214">Можно также использовать <xref:System.Collections.SortedList.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в <xref:System.Collections.SortedList> объекта (например, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="0cad3-214">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="0cad3-215">Тем не менее если указанный ключ уже существует в <xref:System.Collections.SortedList>, задание <xref:System.Collections.SortedList.Item%2A> свойство перезаписывает прежнее значение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-215">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="0cad3-216">Напротив <xref:System.Collections.SortedList.Add%2A> метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="0cad3-216">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="0cad3-217">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-217">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="0cad3-218">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-218">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="0cad3-219">Этот метод является операцией O (`n`) операции без сортировки данных, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-219">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="0cad3-220">Он является операцией O (log `n`) операции, если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="0cad3-220">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="0cad3-221">Вставка происходит изменение размера, является ли операция O (`n`).</span><span class="sxs-lookup"><span data-stu-id="0cad3-221">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-222">В следующем примере кода показано, как добавить элементы в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-222">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-223">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-223">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cad3-224">Элемент с указанным значением параметра <paramref name="key" /> уже существует в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-224">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="0cad3-225">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-225">-or-</span>
          </span>
          <span data-ttu-id="0cad3-226">Для объекта <see cref="T:System.Collections.SortedList" /> задано использование интерфейса <see cref="T:System.IComparable" />, а параметр <paramref name="key" /> не реализует интерфейс <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-226">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-227">Список <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-227">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-228">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-228">-or-</span>
          </span>
          <span data-ttu-id="0cad3-229">Коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-229">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="0cad3-230">Недостаточно свободной памяти для добавления элемента в объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-230">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cad3-231">Средство сравнения выдает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-231">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.SortedList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-232">Возвращает или задает емкость объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-232">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-233">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-233">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-234"><xref:System.Collections.SortedList.Capacity%2A> — количество элементов, <xref:System.Collections.SortedList> объект может хранить.</span><span class="sxs-lookup"><span data-stu-id="0cad3-234"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="0cad3-235"><xref:System.Collections.SortedList.Count%2A> число элементов, которые фактически являются <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-235"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-236"><xref:System.Collections.SortedList.Capacity%2A> всегда равно, больше или равно <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-236"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="0cad3-237">Если <xref:System.Collections.SortedList.Count%2A> превышает <xref:System.Collections.SortedList.Capacity%2A> при добавлении элементов, емкость автоматически увеличивается за счет перераспределения внутреннего массива перед копированием старых элементов и добавление новых элементов.</span><span class="sxs-lookup"><span data-stu-id="0cad3-237">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="0cad3-238">Емкость можно уменьшить путем вызова <xref:System.Collections.SortedList.TrimToSize%2A> или задав <xref:System.Collections.SortedList.Capacity%2A> свойство явным образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-238">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="0cad3-239">Если значение <xref:System.Collections.SortedList.Capacity%2A> задано явным образом, также внутренний массив перераспределяется с соответствии с указанной емкостью.</span><span class="sxs-lookup"><span data-stu-id="0cad3-239">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="0cad3-240">Получение значения этого свойства является операцией o(1). Задание этого свойства является операцией O (`n`) операции, где `n` — новое значение емкости.</span><span class="sxs-lookup"><span data-stu-id="0cad3-240">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-241">Присваиваемое значение меньше, чем текущее число элементов в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-241">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="0cad3-242">Недостаточно свободной памяти в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-242">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-243">Удаляет все элементы из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-243">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-244"><xref:System.Collections.SortedList.Count%2A> равным нулю и ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="0cad3-244"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="0cad3-245"><xref:System.Collections.SortedList.Capacity%2A> остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="0cad3-245"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="0cad3-246">Чтобы сбросить емкость <xref:System.Collections.SortedList> , вызовите <xref:System.Collections.SortedList.TrimToSize%2A> или задать <xref:System.Collections.SortedList.Capacity%2A> непосредственно.</span><span class="sxs-lookup"><span data-stu-id="0cad3-246">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="0cad3-247">Удаление пустой <xref:System.Collections.SortedList> задает емкость объекта <xref:System.Collections.SortedList> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-247">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="0cad3-248">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-249">В следующем примере кода показано, как удалить неиспользуемую часть из <xref:System.Collections.SortedList> объекта и очистка значений <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-249">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-250">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-250">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-251">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-251">-or-</span>
          </span>
          <span data-ttu-id="0cad3-252">Коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-252">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="sortedList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-253">Создает неполную копию объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-253">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-254">Неполная копия объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-254">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-255">Неполная копия коллекции копируются только элементы коллекции, они являются ссылочными типами или типами, но не копирует объекты, которые ссылаются на.</span><span class="sxs-lookup"><span data-stu-id="0cad3-255">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="0cad3-256">Ссылки в новой коллекции указывают на те же объекты, которые указывают ссылки в исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-256">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="0cad3-257">Напротив глубокую копию коллекции копирует элементы и все, что прямо или косвенно ссылаются элементы.</span><span class="sxs-lookup"><span data-stu-id="0cad3-257">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cad3-258">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="sortedList.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-259">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-259">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-260">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-260">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-261">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="key" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-261">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-262">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-262">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="0cad3-263">Объект <xref:System.Collections.SortedList.Contains%2A> реализует интерфейс <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-263"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0cad3-264">Он ведет себя точно так, как <xref:System.Collections.SortedList.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-264">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-265">Этот метод использует алгоритм двоичного поиска; Таким образом, этот метод является операцией O (log `n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-265">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-266">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-266">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="0cad3-267">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-268">В следующем примере кода показано, как определить, является ли <xref:System.Collections.SortedList> объект содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="0cad3-268">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-269">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-269">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cad3-270">Средство сравнения выдает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-270">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-271">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-271">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-272">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-272">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-273">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="key" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-273">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-274">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-274">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="0cad3-275">Этот метод работает точно так, как <xref:System.Collections.SortedList.Contains%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0cad3-275">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="0cad3-276">Этот метод использует алгоритм двоичного поиска; Таким образом, этот метод является операцией O (log `n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-276">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-277">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-277">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="0cad3-278">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-278">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-279">В следующем примере кода показано, как определить, является ли <xref:System.Collections.SortedList> объект содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="0cad3-279">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-280">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-280">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cad3-281">Средство сравнения выдает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-281">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cad3-282">Значение, которое требуется найти в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-282">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="0cad3-283">Допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-283">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-284">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-284">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-285">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="value" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-285">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-286">Значения элементов <xref:System.Collections.SortedList> объекта сравниваются с указанным значением с помощью <xref:System.Object.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0cad3-286">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="0cad3-287">Этот метод выполняет линейный поиск; Таким образом, среднее время выполнения пропорционально <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="0cad3-288">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-289">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-289">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="0cad3-290">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-290">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-291">В следующем примере кода показано, как определить, является ли <xref:System.Collections.SortedList> объект содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="0cad3-291">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="sortedList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cad3-292">Одномерный объект <see cref="T:System.Array" />, который является конечным объектом для объектов <see cref="T:System.Collections.DictionaryEntry" />, копируемых из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-292">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span>
          </span>
          <span data-ttu-id="0cad3-293">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-293">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="0cad3-294">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-294">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-295">Копирует элементы объекта <see cref="T:System.Collections.SortedList" /> в одномерный объект <see cref="T:System.Array" /> начиная с указанного значения индекса массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-295">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-296">Пары "ключ значение" копируются <xref:System.Array> объекта в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-296">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-297">Чтобы скопировать только ключи в <xref:System.Collections.SortedList>, используйте `SortedList.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-297">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="0cad3-298">Чтобы скопировать нужные значения в <xref:System.Collections.SortedList>, используйте `SortedList.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-298">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="0cad3-299">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-300">В следующем примере кода показано, как скопировать значения в <xref:System.Collections.SortedList> объект в одномерный <xref:System.Array> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-300">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-301">
            <paramref name="array" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-302">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-302">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cad3-303">Массив <paramref name="array" /> является многомерным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-303">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cad3-304">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-304">-or-</span>
          </span>
          <span data-ttu-id="0cad3-305">Количество элементов в исходном объекте <see cref="T:System.Collections.SortedList" /> превышает размер доступного места, начиная с индекса массива <paramref name="arrayIndex" /> и до конца массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-305">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cad3-306">Тип исходной коллекции <see cref="T:System.Collections.SortedList" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-306">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.SortedList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-307">Получает количество элементов, содержащихся в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-307">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-308">Количество элементов, содержащихся в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-308">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-309">Каждый элемент является парой ключ/значение, доступны в виде <xref:System.Collections.DictionaryEntry> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-309">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="0cad3-310"><xref:System.Collections.SortedList.Capacity%2A> — количество элементов, <xref:System.Collections.SortedList> объект может хранить.</span><span class="sxs-lookup"><span data-stu-id="0cad3-310"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="0cad3-311"><xref:System.Collections.SortedList.Count%2A> число элементов, которые фактически являются <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-311"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-312"><xref:System.Collections.SortedList.Capacity%2A> всегда равно, больше или равно <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-312"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="0cad3-313">Если <xref:System.Collections.SortedList.Count%2A> превышает <xref:System.Collections.SortedList.Capacity%2A> при добавлении элементов, емкость автоматически увеличивается за счет перераспределения внутреннего массива перед копированием старых элементов и добавление новых элементов.</span><span class="sxs-lookup"><span data-stu-id="0cad3-313">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="0cad3-314">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-314">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetByIndex : int -&gt; obj&#xA;override this.GetByIndex : int -&gt; obj" Usage="sortedList.GetByIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cad3-315">Индекс (с нуля) получаемого значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-315">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-316">Получает значение с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-316">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-317">Возвращает значение по указанному индексу в классе <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-317">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-318">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-318">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-319">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-319">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-320">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-320">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-321">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-321">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-322">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-322">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-323">В следующем примере кода показано, как получить один или все ключи и значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-323">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-324">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-324">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="sortedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-325">Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" />, осуществляющий перебор элементов объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-325">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-326">Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-326">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-327">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-327">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="0cad3-328">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-328">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="0cad3-329">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-329">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0cad3-330">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-330">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="0cad3-331">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-331"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="0cad3-332">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="0cad3-332">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="0cad3-333">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-333">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-334"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-334"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="0cad3-335"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-335"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="0cad3-336">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-336">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0cad3-337">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-337">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="0cad3-338">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="0cad3-338">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="0cad3-339">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-339">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-340">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="0cad3-340">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0cad3-341">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="0cad3-341">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="0cad3-342">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="0cad3-342">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="0cad3-343">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="0cad3-343">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="0cad3-344">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-344">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="0cad3-345">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; obj&#xA;override this.GetKey : int -&gt; obj" Usage="sortedList.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cad3-346">Индекс (с нуля) получаемого ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-346">The zero-based index of the key to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-347">Получает ключ с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-347">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-348">Ключ с указанным значением индекса из объекта<see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-348">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-349">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-349">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-350">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-350">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-351">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-351">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-352">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-352">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-353">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-353">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-354">В следующем примере кода показано, как получить один или все ключи и значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-354">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-355">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-355">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberSignature Language="F#" Value="abstract member GetKeyList : unit -&gt; System.Collections.IList&#xA;override this.GetKeyList : unit -&gt; System.Collections.IList" Usage="sortedList.GetKeyList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-356">Получает ключи из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-356">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-357">Объект <see cref="T:System.Collections.IList" />, содержащий ключи из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-357">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-358">Возвращенный <xref:System.Collections.IList> объект является представлением только для чтения ключей <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-358">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-359">Изменения, внесенные в базовом <xref:System.Collections.SortedList> немедленно отражаются в <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-359">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="0cad3-360">Элементы возвращенного <xref:System.Collections.IList> сортируются в том же порядке, в качестве ключей <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-360">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-361">Этот метод аналогичен методу <xref:System.Collections.SortedList.Keys%2A> свойство, но возвращает <xref:System.Collections.IList> вместо объекта <xref:System.Collections.ICollection> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-361">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="0cad3-362">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-362">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-363">В следующем примере кода показано, как получить один или все ключи и значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-363">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberSignature Language="F#" Value="abstract member GetValueList : unit -&gt; System.Collections.IList&#xA;override this.GetValueList : unit -&gt; System.Collections.IList" Usage="sortedList.GetValueList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-364">Получает значения из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-364">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-365">Объект <see cref="T:System.Collections.IList" />, содержащий значения из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-365">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-366">Возвращенный <xref:System.Collections.IList> объект является представлением только для чтения значений <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-366">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-367">Изменения, внесенные в базовом <xref:System.Collections.SortedList> немедленно отражаются в <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-367">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="0cad3-368">Элементы возвращенного <xref:System.Collections.IList> сортируются в том же порядке, что значения <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-368">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-369">Этот метод аналогичен методу <xref:System.Collections.SortedList.Values%2A> свойство, но возвращает <xref:System.Collections.IList> вместо объекта <xref:System.Collections.ICollection> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-369">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="0cad3-370">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-370">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-371">В следующем примере кода показано, как получить один или все ключи и значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-371">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : obj -&gt; int&#xA;override this.IndexOfKey : obj -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-372">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-372">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-373">Возвращает индекс (с нуля) указанного ключа в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-373">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-374">Индекс (с нуля) параметра <paramref name="key" />, если параметр <paramref name="key" /> найден в объекте <see cref="T:System.Collections.SortedList" />; в противном случае — значение -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-374">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-375">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> — созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-375">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="0cad3-376">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-376">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-377">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-377">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-378">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-378">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-379">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-379">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-380">Этот метод использует алгоритм двоичного поиска; Таким образом, этот метод является операцией O (log `n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-380">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-381">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-381">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="0cad3-382">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-382">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-383">В следующем примере кода показано, как определить индекс ключа или значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-383">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-384">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-384">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cad3-385">Средство сравнения выдает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-385">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfValue : obj -&gt; int&#xA;override this.IndexOfValue : obj -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cad3-386">Значение, которое требуется найти в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-386">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="0cad3-387">Допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-387">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-388">Индекс (с нуля) первого вхождения указанного значения в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-388">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-389">Индекс (с нуля) первого вхождения значения параметра <paramref name="value" />, если значение <paramref name="value" /> найдено в объекте <see cref="T:System.Collections.SortedList" />; в противном случае — значение -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-389">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-390">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-390">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-391">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-391">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-392">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-392">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-393">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-393">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-394">Значения элементов <xref:System.Collections.SortedList> сравниваются с указанным значением с помощью <xref:System.Object.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0cad3-394">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="0cad3-395">Этот метод использует линейный поиск; Таким образом, этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-395">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-396">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-396">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="0cad3-397">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-397">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-398">В следующем примере кода показано, как определить индекс ключа или значения в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-398">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.SortedList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-399">Получает значение, показывающее, имеет ли объект <see cref="T:System.Collections.SortedList" /> фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-399">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-400">
            <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-400">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0cad3-401">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-401">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-402">Коллекции фиксированного размера не разрешается добавление или удаление элементов после создания коллекции, но допускает изменение существующих элементов.</span><span class="sxs-lookup"><span data-stu-id="0cad3-402">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="0cad3-403">Коллекция с фиксированным размером является просто коллекцией с оболочкой, предотвращает добавление и удаление элементов; Поэтому если были внесены изменения в базовую коллекцию, включая добавление или удаление элементов, эти изменения отражаются в коллекции фиксированного размера.</span><span class="sxs-lookup"><span data-stu-id="0cad3-403">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="0cad3-404">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-404">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.SortedList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-405">Возвращает значение, указывающее, является ли объект <see cref="T:System.Collections.SortedList" /> доступным только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-405">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-406">
            <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-406">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0cad3-407">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-407">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-408">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="0cad3-408">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="0cad3-409">Коллекция, которая доступна только для чтения — это просто коллекция с оболочкой, предотвращает изменение коллекции; Таким образом при внесении изменений в базовую коллекцию, эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-409">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="0cad3-410">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-410">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.SortedList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-411">Возвращает значение, указывающее на то, является ли доступ к объекту <see cref="T:System.Collections.SortedList" /> синхронизированным (потокобезопасным).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-411">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-412">Значение <see langword="true" />, если доступ к объекту <see cref="T:System.Collections.SortedList" /> является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-412">
              <see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0cad3-413">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-413">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-414">Чтобы гарантировать потокобезопасность объекта <xref:System.Collections.SortedList> объекта, все операции должны осуществляться через оболочку, возвращенную <xref:System.Collections.SortedList.Synchronized%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0cad3-414">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="0cad3-415">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="0cad3-415">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0cad3-416">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-416">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cad3-417">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="0cad3-417">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-418">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.SortedList.SyncRoot%2A> свойство на все время перечисления.</span><span class="sxs-lookup"><span data-stu-id="0cad3-418">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="0cad3-419">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="0cad3-420">В следующем примере кода показано, как синхронизировать <xref:System.Collections.SortedList> определить, следует ли <xref:System.Collections.SortedList> синхронизированным и использовать синхронизированный <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-420">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.SortedList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-421">Ключ, связанный с задаваемым или возвращаемым значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-421">The key associated with the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-422">Возвращает или задает значение, связанное с указанным ключом в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-422">Gets and sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-423">Значение, связанное с параметром <paramref name="key" /> в объекте <see cref="T:System.Collections.SortedList" />, если ключ <paramref name="key" /> найден; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-423">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-424">Можно использовать <xref:System.Collections.SortedList.Item%2A> свойство для доступа к определенному элементу в коллекции, указав следующий синтаксис: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-424">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="0cad3-425">Это свойство можно также использовать для добавления новых элементов, задав значение ключа, который не существует в <xref:System.Collections.SortedList> объекта (например, `myCollection["myNonexistentKey"] = myValue)`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-425">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="0cad3-426">Тем не менее если указанный ключ уже существует в <xref:System.Collections.SortedList>, задание <xref:System.Collections.SortedList.Item%2A> свойство перезаписывает прежнее значение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-426">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="0cad3-427">Напротив <xref:System.Collections.SortedList.Add%2A> метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="0cad3-427">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="0cad3-428">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-428">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="0cad3-429">Чтобы различать `null` , возвращается, так как указанный ключ не найден и `null` , возвращается, так как значение указанного ключа `null`, использовать <xref:System.Collections.SortedList.Contains%2A> метод или <xref:System.Collections.SortedList.ContainsKey%2A> метод на предмет ключ существует в списке.</span><span class="sxs-lookup"><span data-stu-id="0cad3-429">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="0cad3-430">Элементы <xref:System.Collections.SortedList> сортируются по ключам зависимости от определенной <xref:System.Collections.IComparer> реализации, указанное при <xref:System.Collections.SortedList> созданный или соответствии <xref:System.IComparable> реализацию, предоставляемую самих ключей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-430">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="0cad3-431">В языке C# ключевое слово используется для определения индексаторов вместо реализации <xref:System.Collections.SortedList.Keys%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0cad3-431">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="0cad3-432">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.SortedList.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="0cad3-432">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="0cad3-433">Получение значения этого свойства является операцией O (log `n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-433">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="0cad3-434">Задание этого свойства является операцией O (log `n`) операции, если ключ уже <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-434">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="0cad3-435">Если ключ отсутствует в списке, задание этого свойства является операцией O (`n`) операции без сортировки данных или O (log `n`) Если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="0cad3-435">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="0cad3-436">Вставка происходит изменение размера, является ли операция O (`n`).</span><span class="sxs-lookup"><span data-stu-id="0cad3-436">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-437">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-437">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-438">Свойство задано, и объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-438">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-439">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-439">-or-</span>
          </span>
          <span data-ttu-id="0cad3-440">Свойство задано, ключ <paramref name="key" /> не существует в коллекции, и коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-440">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="0cad3-441">Недостаточно свободной памяти для добавления элемента в объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-441">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cad3-442">Средство сравнения выдает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-442">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.SortedList.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-443">Получает ключи из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-443">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-444">Объект <see cref="T:System.Collections.ICollection" />, содержащий ключи из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-444">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-445"><xref:System.Collections.ICollection> Объект является представлением только для чтения ключей <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-445">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-446">Изменения, внесенные в базовом <xref:System.Collections.SortedList> немедленно отражаются в <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-446">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="0cad3-447">Элементы <xref:System.Collections.ICollection> сортируются в том же порядке, в качестве ключей <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-447">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-448">Это свойство похоже на <xref:System.Collections.SortedList.GetKeyList%2A> метод, но возвращает <xref:System.Collections.ICollection> вместо объекта <xref:System.Collections.IList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-448">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="0cad3-449">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-449">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0cad3-450">Ключ удаляемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-450">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-451">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-451">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-452">Если объект <xref:System.Collections.SortedList> не содержит элемент с указанным ключом, объект <xref:System.Collections.SortedList> не изменяется.</span><span class="sxs-lookup"><span data-stu-id="0cad3-452">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="0cad3-453">Исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="0cad3-453">No exception is thrown.</span></span>  
  
 <span data-ttu-id="0cad3-454">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-454">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="0cad3-455">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="0cad3-455">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="0cad3-456">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="0cad3-456">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="0cad3-457">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-457">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-458">В следующем примере кода показано, как для удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-458">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-459">
            <paramref name="key" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-459">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-460">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-460">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-461">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-461">-or-</span>
          </span>
          <span data-ttu-id="0cad3-462">Коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-462">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cad3-463">Индекс (с нуля) элемента, который требуется удалить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-463">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-464">Удаляет элемент с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-464">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-465">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-465">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-466">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-466">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-467">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-467">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-468">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-468">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-469">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-469">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="0cad3-470">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="0cad3-470">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="0cad3-471">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="0cad3-471">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="0cad3-472">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-472">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-473">В следующем примере кода показано, как для удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-473">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-474">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-474">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-475">Список <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-475">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-476">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-476">-or-</span>
          </span>
          <span data-ttu-id="0cad3-477">Коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-477">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetByIndex : int * obj -&gt; unit&#xA;override this.SetByIndex : int * obj -&gt; unit" Usage="sortedList.SetByIndex (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cad3-478">Отсчитываемый от нуля индекс, по которому необходимо сохранить параметр <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-478">The zero-based index at which to save <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cad3-479">Объект <see cref="T:System.Object" />, сохраняемый в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-479">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="0cad3-480">Допускается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-480">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-481">Заменяет значение по указанному индексу в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-481">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-482">Порядковый индекс основан на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="0cad3-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="0cad3-483">При добавлении элемента, он автоматически вставляется в <xref:System.Collections.SortedList> в сортировке правильный порядок и индексирование настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="0cad3-484">При удалении элемента индексация также настраивается соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="0cad3-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="0cad3-485">Таким образом, индекс пару определенных ключ/значение может измениться, как элементы добавляются или удаляются из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-486">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-486">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-487">В следующем примере кода показано, как заменить значение существующего элемента в <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-487">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cad3-488">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-488">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.SortedList -&gt; System.Collections.SortedList" Usage="System.Collections.SortedList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="0cad3-489">Синхронизируемый объект <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-489">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cad3-490">Возвращает синхронизированную (потокобезопасную) оболочку объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-490">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-491">Синхронизированная (потокобезопасная) оболочка объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-491">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-492">Чтобы гарантировать потокобезопасность объекта <xref:System.Collections.SortedList> объекта, все операции должны осуществляться только через эту оболочку.</span><span class="sxs-lookup"><span data-stu-id="0cad3-492">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="0cad3-493">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="0cad3-493">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0cad3-494">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-494">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cad3-495">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="0cad3-495">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-496">В следующем примере кода показано, как заблокировать коллекцию, используя <xref:System.Collections.SortedList.SyncRoot%2A> свойство на все время перечисления.</span><span class="sxs-lookup"><span data-stu-id="0cad3-496">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="0cad3-497">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-497">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="0cad3-498">В следующем примере кода показано, как синхронизировать <xref:System.Collections.SortedList> определить, следует ли <xref:System.Collections.SortedList> синхронизированным и использовать синхронизированный <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-498">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cad3-499">
            <paramref name="list" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-499">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.SortedList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-500">Получает объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-500">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-501">Объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-501">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-502">Чтобы создать синхронизированную версию <xref:System.Collections.SortedList> , используйте <xref:System.Collections.SortedList.Synchronized%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="0cad3-502">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="0cad3-503">Однако производные классы могут предоставлять собственную синхронизированную версию <xref:System.Collections.SortedList> с помощью <xref:System.Collections.SortedList.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0cad3-503">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="0cad3-504">Синхронизированный код должен выполнять операции над <xref:System.Collections.SortedList.SyncRoot%2A> из <xref:System.Collections.SortedList>, но не с самим <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-504">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="0cad3-505">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="0cad3-505">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="0cad3-506">В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-506">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="0cad3-507">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="0cad3-507">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0cad3-508">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-508">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cad3-509">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="0cad3-509">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-510">В следующем примере кода показано, как заблокировать коллекцию, используя <xref:System.Collections.SortedList.SyncRoot%2A> свойство на все время перечисления.</span><span class="sxs-lookup"><span data-stu-id="0cad3-510">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="0cad3-511">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-512">Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-512">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cad3-513">
            <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-513">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-514">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="0cad3-514">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="0cad3-515">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="0cad3-515">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="0cad3-516">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-516">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="0cad3-517">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-517">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0cad3-518">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="0cad3-518">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="0cad3-519">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-519"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="0cad3-520">В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-520">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0cad3-521">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-521">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-522"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-522"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="0cad3-523"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="0cad3-523"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="0cad3-524">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-524">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0cad3-525">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="0cad3-525">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="0cad3-526">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-526">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0cad3-527">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-527">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="0cad3-528">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="0cad3-528">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0cad3-529">При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-529">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="0cad3-530">Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="0cad3-530">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="0cad3-531">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="0cad3-531">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0cad3-532">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="0cad3-532">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cad3-533">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="0cad3-533">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="0cad3-534">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-534">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="sortedList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-535">Задает значение емкости, равное действительному количеству элементов в объекте <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-535">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-536">Этот метод можно свести к минимуму издержки коллекцией памяти, если новые элементы добавляются в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-536">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="0cad3-537">Чтобы сбросить <xref:System.Collections.SortedList> объект в исходное состояние, вызов <xref:System.Collections.SortedList.Clear%2A> метод перед вызовом <xref:System.Collections.SortedList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-537">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="0cad3-538">Удаление пустой <xref:System.Collections.SortedList> задает емкость объекта <xref:System.Collections.SortedList> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0cad3-538">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="0cad3-539">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-539">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cad3-540">В следующем примере кода показано, как удалить неиспользуемую часть из <xref:System.Collections.SortedList> и очистить его значения.</span><span class="sxs-lookup"><span data-stu-id="0cad3-540">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cad3-541">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-541">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="0cad3-542">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-542">-or-</span>
          </span>
          <span data-ttu-id="0cad3-543">Коллекция <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-543">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.SortedList.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cad3-544">Получает значения из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-544">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cad3-545">Объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cad3-545">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cad3-546"><xref:System.Collections.ICollection> Объект является представлением только для чтения значений <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-546">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="0cad3-547">Изменения, внесенные в базовом <xref:System.Collections.SortedList> немедленно отражаются в <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-547">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="0cad3-548">Элементы <xref:System.Collections.ICollection> сортируются в том же порядке, что значения <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="0cad3-548">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="0cad3-549">Это свойство похоже на <xref:System.Collections.SortedList.GetValueList%2A> метод, но возвращает <xref:System.Collections.ICollection> вместо объекта <xref:System.Collections.IList> объекта.</span><span class="sxs-lookup"><span data-stu-id="0cad3-549">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="0cad3-550">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="0cad3-550">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
      </Docs>
    </Member>
  </Members>
</Type>