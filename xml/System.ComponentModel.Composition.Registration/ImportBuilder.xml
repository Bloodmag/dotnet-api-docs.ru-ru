<Type Name="ImportBuilder" FullName="System.ComponentModel.Composition.Registration.ImportBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87cb7deee09e94e80721a131e8d27b9af06c4bdb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Registration.ImportBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет сведения о конфигурации для импорта на основе правил.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Registration.ImportBuilder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AllowDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AllowDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function AllowDefault () As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ AllowDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, что при импорте должно допускаться значение по умолчанию.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AllowRecomposition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AllowRecomposition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Function AllowRecomposition () As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ AllowRecomposition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, что для импорта должна быть разрешена рекомпозиция.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">Имя контракта.</param>
        <summary>Указывает, что импортируемые данные должны иметь заданное имя контракта.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="contractName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="contractName" /> равен пустой строке.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsContractType">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AsContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AsContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ AsContractType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип контракта, который будет использоваться.</param>
        <summary>Указывает, что при импорте должен использоваться заданный тип контракта.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsContractType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AsContractType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AsContractType&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractType(Of T) () As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ AsContractType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Тип контракта для использования.</typeparam>
        <summary>Указывает, что при импорте должен использоваться заданный тип контракта.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder AsMany (bool isMany = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder AsMany(bool isMany) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany (Optional isMany As Boolean = true) As ImportBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isMany" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isMany">
          Значение <see langword="true" />, чтобы задать несколько импортов; значение <see langword="false" />, чтобы задать один импорт. Значение по умолчанию: <see langword="true" />.</param>
        <summary>Определяет количество элементов импорта.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder RequiredCreationPolicy (System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder RequiredCreationPolicy(valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Function RequiredCreationPolicy (requiredCreationPolicy As CreationPolicy) As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ RequiredCreationPolicy(System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="requiredCreationPolicy">Политика создания, которую требует импорт.</param>
        <summary>Указывает требуемую политику создания импорта.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Registration.ImportBuilder Source (System.ComponentModel.Composition.ImportSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Composition.Registration.ImportBuilder Source(valuetype System.ComponentModel.Composition.ImportSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function Source (source As ImportSource) As ImportBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Composition::Registration::ImportBuilder ^ Source(System::ComponentModel::Composition::ImportSource source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition.Registration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Registration.ImportBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.Composition.ImportSource" />
      </Parameters>
      <Docs>
        <param name="source">Значение, указывающее области, из которых импорт может быть удовлетворен.</param>
        <summary>Задает значение, указывающее области, из которых данный импорт может быть удовлетворен.</summary>
        <returns>Текущий объект для разрешения построения цепочки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>