<Type Name="DisplayFormatAttribute" FullName="System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36ce18c644010fe08a66658a7a22945f4fc89388" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DisplayFormatAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DisplayFormatAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class DisplayFormatAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DisplayFormatAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="55055-101">Задает способ отображения и форматирования полей данных в платформе динамических данных ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="55055-101">Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55055-102">При применении этого атрибута к полю данных, необходимо следовать указаниям по для использования атрибутов.</span><span class="sxs-lookup"><span data-stu-id="55055-102">When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes.</span></span> <span data-ttu-id="55055-103">Дополнительные сведения см. в разделе [ASP.NET динамические данные правила](http://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192).</span><span class="sxs-lookup"><span data-stu-id="55055-103">For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192).</span></span>  

## Examples  
 <span data-ttu-id="55055-104">Пример документации по этой причине: [запуска](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).</span><span class="sxs-lookup"><span data-stu-id="55055-104">See an online example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).</span></span>  
  
 <span data-ttu-id="55055-105">В следующем примере показано, как использовать <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> для настройки форматирования для поля данных.</span><span class="sxs-lookup"><span data-stu-id="55055-105">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to customize formatting for a data field.</span></span> <span data-ttu-id="55055-106">В примере выполняется следующее:</span><span class="sxs-lookup"><span data-stu-id="55055-106">The example performs the following steps:</span></span>  
  
-   <span data-ttu-id="55055-107">Реализует разделяемый и связанного класса метаданных.</span><span class="sxs-lookup"><span data-stu-id="55055-107">Implements a metadata partial class and an associated metadata class.</span></span>  
  
-   <span data-ttu-id="55055-108">В связанном классе метаданных, оно применяется <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> атрибут, чтобы задать следующие результаты:</span><span class="sxs-lookup"><span data-stu-id="55055-108">In the associated metadata class, it applies the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute to specify the following results:</span></span>  
  
    -   <span data-ttu-id="55055-109">Отображать текст «[Null]», при пустом поле данных.</span><span class="sxs-lookup"><span data-stu-id="55055-109">Display the text "[Null]" when a data field is empty.</span></span>  
  
    -   <span data-ttu-id="55055-110">Данные о валюте отображаются в формате валюты языкового стандарта.</span><span class="sxs-lookup"><span data-stu-id="55055-110">Display currency data in locale specific currency format.</span></span>  
  
    -   <span data-ttu-id="55055-111">Отображение дат в кратком формате (мм/дд/гг).</span><span class="sxs-lookup"><span data-stu-id="55055-111">Display date information in short format (mm/dd/yy).</span></span> <span data-ttu-id="55055-112">Этот формат также применяется в режиме редактирования.</span><span class="sxs-lookup"><span data-stu-id="55055-112">This format also applies in edit mode.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#1)]  
  
 <span data-ttu-id="55055-113">Чтобы скомпилировать этот пример, необходимо следующее:</span><span class="sxs-lookup"><span data-stu-id="55055-113">To compile the example, you need the following:</span></span>  
  
-   <span data-ttu-id="55055-114">Любой выпуск Visual Studio 2010 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="55055-114">Any edition of Visual Studio 2010 or later.</span></span>
  
-   <span data-ttu-id="55055-115">Образец базы данных AdventureWorksLT.</span><span class="sxs-lookup"><span data-stu-id="55055-115">The AdventureWorksLT sample database.</span></span> <span data-ttu-id="55055-116">Сведения о том, как загрузить и установить образец базы данных SQL Server см. в разделе [Microsoft SQL Server Product Samples: база данных](https://github.com/Microsoft/sql-server-samples/releases) на GitHub.</span><span class="sxs-lookup"><span data-stu-id="55055-116">For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](https://github.com/Microsoft/sql-server-samples/releases) on GitHub.</span></span> <span data-ttu-id="55055-117">Установите правильную версию образца базы данных для используемой версии SQL Server, которое выполняется.</span><span class="sxs-lookup"><span data-stu-id="55055-117">Make sure that you install the correct version of the sample database for the version of SQL Server that you are running.</span></span>
  
-   <span data-ttu-id="55055-118">Управляемые данными веб-сайта.</span><span class="sxs-lookup"><span data-stu-id="55055-118">A data-driven Web site.</span></span> <span data-ttu-id="55055-119">Это позволяет создать контекст данных для базы данных и класс, содержащий настраиваемое поле данных.</span><span class="sxs-lookup"><span data-stu-id="55055-119">This enables you to create a data context for the database and the class that contains the data field to customize.</span></span> <span data-ttu-id="55055-120">Дополнительные сведения см. в разделе `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span><span class="sxs-lookup"><span data-stu-id="55055-120">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DisplayFormatAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DisplayFormatAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55055-121">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-121">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55055-122">Возвращает или задает значение, указывающее, применимо ли свойство <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> к значению поля, если поле данных находится в режиме редактирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-122">Gets or sets a value that indicates whether the formatting string that is specified by the <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> property is applied to the field value when the data field is in edit mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55055-123">Значение <see langword="true" />, если строка форматирования применяется к значениям поля в режиме редактирования; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-123">
              <see langword="true" /> if the formatting string applies to the field value in edit mode; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="55055-124">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-124">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55055-125">По умолчанию, строка форматирования, который задается параметром <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> свойство применяется к значениям полей только в том случае, когда элемент управления с привязкой к данным находится в режиме только для чтения.</span><span class="sxs-lookup"><span data-stu-id="55055-125">By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55055-126">В следующем примере показано, как использовать <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> свойство, чтобы задать формат отображения сведений о дате, когда поле данных в режиме редактирования.</span><span class="sxs-lookup"><span data-stu-id="55055-126">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> property to set the display format for date information when the data field is in edit mode.</span></span> <span data-ttu-id="55055-127">Формат данных поля для поля данных задается параметром <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="55055-127">The data field format to use for the data field is specified by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55055-128">Возвращает или задает значение, показывающее, выполняется ли автоматическое преобразование пустых строковых значений ("")в значения <see langword="null" /> при обновлении поля данных в источнике данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-128">Gets or sets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> when the data field is updated in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55055-129">Значение <see langword="true" />, если пустые строковые значения автоматически преобразуются в значения <see langword="null" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-129">
              <see langword="true" /> if empty string values are automatically converted to <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="55055-130">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-130">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55055-131">Пользователи могут ввести пустую строку в качестве значения поля.</span><span class="sxs-lookup"><span data-stu-id="55055-131">Users might enter an empty string for a field value.</span></span> <span data-ttu-id="55055-132">Используйте <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> свойство, чтобы указать, является ли пустое строковое значение автоматически преобразуется в `null` при обновлении поля данных в базе данных.</span><span class="sxs-lookup"><span data-stu-id="55055-132">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55055-133">По умолчанию <xref:System.Web.DynamicData.DynamicField> отображаемые объектом `null` значения как пустые строки.</span><span class="sxs-lookup"><span data-stu-id="55055-133">By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings.</span></span> <span data-ttu-id="55055-134">Чтобы отобразить другое значение, задайте <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="55055-134">To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55055-135">В следующем примере показано, как использовать <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> для преобразования строковых значений в `null`.</span><span class="sxs-lookup"><span data-stu-id="55055-135">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> to enable the conversion of empty string values to `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55055-136">Возвращает или задает формат отображения значения поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-136">Gets or sets the display format for the field value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55055-137">Строка форматирования, определяющая формат отображения поля данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-137">A formatting string that specifies the display format for the value of the data field.</span>
          </span>
          <span data-ttu-id="55055-138">По умолчанию это пустая строка (""), указывающая на неприменение к значению поля специального форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-138">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55055-139">Используйте <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> свойство, чтобы указать пользовательский формат отображения для значений, которые отображаются в <xref:System.Web.DynamicData.DynamicField> объекта.</span><span class="sxs-lookup"><span data-stu-id="55055-139">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="55055-140">Если <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> свойство не задано, значение поля отображается без форматирования.</span><span class="sxs-lookup"><span data-stu-id="55055-140">If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.</span></span> <span data-ttu-id="55055-141">Дополнительные сведения см. в статье [Типы форматирования в .NET](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="55055-141">For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55055-142">Когда <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> свойство `true`, значение поля имеет кодировку в строковое представление, перед применением строка форматирования HTML.</span><span class="sxs-lookup"><span data-stu-id="55055-142">When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied.</span></span> <span data-ttu-id="55055-143">Для некоторых объектов, например дат можно управлять отображением объект при форматировании строки.</span><span class="sxs-lookup"><span data-stu-id="55055-143">For some objects, such as dates, you might want to control how the object is displayed with a formatting string.</span></span> <span data-ttu-id="55055-144">В таких случаях необходимо установить <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> свойства `false`.</span><span class="sxs-lookup"><span data-stu-id="55055-144">In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property to `false`.</span></span>  
  
 <span data-ttu-id="55055-145">По умолчанию строка форматирования применяется к значениям полей только в том случае, если элемент управления с привязкой к данным, содержащий <xref:System.Web.DynamicData.DynamicField> объект находится в режиме только для чтения.</span><span class="sxs-lookup"><span data-stu-id="55055-145">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode.</span></span> <span data-ttu-id="55055-146">Чтобы применить строка форматирования к значениям полей, если они находятся в режиме редактирования, установите <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="55055-146">To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="55055-147">Строка форматирования может быть любая символьная строка и обычно имеется заполнитель для значения поля.</span><span class="sxs-lookup"><span data-stu-id="55055-147">The formatting string can be any literal string and usually includes a placeholder for the field's value.</span></span> <span data-ttu-id="55055-148">Например, в строке форматирования «значение элемента: {0}», в поле значение заменяется заполнителем при отображении строки в <xref:System.Web.DynamicData.DynamicField> объекта.</span><span class="sxs-lookup"><span data-stu-id="55055-148">For example, in the formatting string "Item Value: {0}", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="55055-149">Остальная часть строки формата отображается как обычный текст.</span><span class="sxs-lookup"><span data-stu-id="55055-149">The remainder of the formatting string is displayed as literal text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55055-150">Если строка формата не содержит заполнитель, значение поля из источника данных не включается в отображаемый текст.</span><span class="sxs-lookup"><span data-stu-id="55055-150">If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55055-151">В следующих примерах показано использование <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> свойство, чтобы задать формат отображения поля данных.</span><span class="sxs-lookup"><span data-stu-id="55055-151">The following examples show how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to set the display format of data fields.</span></span> <span data-ttu-id="55055-152">В первом примере задается формат отображения для поля данных типа валюты.</span><span class="sxs-lookup"><span data-stu-id="55055-152">The first example sets the display format for a currency type data field.</span></span> <span data-ttu-id="55055-153">Во втором примере задает формат отображения для поля данных типа date.</span><span class="sxs-lookup"><span data-stu-id="55055-153">The second example sets the display format for a date type data field.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#3)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#3)]  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNullDisplayText">
      <MemberSignature Language="C#" Value="public string GetNullDisplayText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNullDisplayText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNullDisplayText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNullDisplayText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55055-154">Получает или задает значение, указывающее, должно ли поле кодироваться в формате HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-154">Gets or sets a value that indicates whether the field should be HTML-encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55055-155">Значение <see langword="true" />, если поле следует кодировать в формате HTML; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-155">
              <see langword="true" /> if the field should be HTML-encoded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55055-156">Возвращает или задает текст, отображаемый в поле, значение которого равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-156">Gets or sets the text that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55055-157">Текст, отображаемый в поле, значение которого равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-157">The text that is displayed for a field when the field's value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="55055-158">По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55055-158">The default is an empty string (""), which indicates that this property is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55055-159">Иногда значение поля данных хранится в виде значений null в источнике.</span><span class="sxs-lookup"><span data-stu-id="55055-159">Sometimes a data field's value is stored as null values in the source.</span></span> <span data-ttu-id="55055-160">Можно указать пользовательский текст, отображаемый для поля данных, имеющих значение null, установив <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="55055-160">You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span> <span data-ttu-id="55055-161">Если это свойство не задано, полей со значением null значения отображаются как пустые строки (»»).</span><span class="sxs-lookup"><span data-stu-id="55055-161">If this property is not set, null field values are displayed as empty strings ("").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55055-162">Чтобы преобразовать поле пустое строковое значение в значение null, необходимо задать <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="55055-162">To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55055-163">В следующем примере показано, как использовать <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> для определения заголовка для отображения поля данных `null`.</span><span class="sxs-lookup"><span data-stu-id="55055-163">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> to define a caption to display when the data field is `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayTextResourceType">
      <MemberSignature Language="C#" Value="public Type NullDisplayTextResourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NullDisplayTextResourceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayTextResourceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NullDisplayTextResourceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>