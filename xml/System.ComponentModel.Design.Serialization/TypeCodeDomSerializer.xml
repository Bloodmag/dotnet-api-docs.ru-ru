<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f1aeaf0a9b80e31cd73b52250bfcaa781f8eb58" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39869321" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2a649-101">Выполняет сериализацию объекта нового типа.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a649-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a649-102"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Класс выполняет те же задачи, что <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, но сериализация объекта через этот класс определен новый тип.</span><span class="sxs-lookup"><span data-stu-id="2a649-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a649-103">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="2a649-104">Диспетчер сериализации для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="2a649-105">Объявление типа для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a649-106">Выполняет десериализацию объявления заданного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a649-107">Корневой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a649-108"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> Метод выполняет десериализацию объявления типа ранее сериализованного кода.</span><span class="sxs-lookup"><span data-stu-id="2a649-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="2a649-109">В следующей таблице показаны выполняет задачи реализация по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2a649-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="2a649-110">Задача</span><span class="sxs-lookup"><span data-stu-id="2a649-110">Task</span></span>|<span data-ttu-id="2a649-111">Описание</span><span class="sxs-lookup"><span data-stu-id="2a649-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="2a649-112">Проверка чувствительности к регистру</span><span class="sxs-lookup"><span data-stu-id="2a649-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="2a649-113">В реализации поиск <xref:System.CodeDom.Compiler.CodeDomProvider> службы, чтобы определить, если его следует считать члены с учетом регистра или без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="2a649-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="2a649-114">Оператор сортировки</span><span class="sxs-lookup"><span data-stu-id="2a649-114">Statement Sorting</span></span>|<span data-ttu-id="2a649-115">Все переменные-члены и локальные переменные из методов init, хранятся в таблице.</span><span class="sxs-lookup"><span data-stu-id="2a649-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="2a649-116">Затем каждая инструкция в методе init добавляется к коллекции операторов, сгруппированных в соответствии с его левой части окна, поэтому все инструкции, назначение, а также ОС на отдельную переменную группируются под этой переменной.</span><span class="sxs-lookup"><span data-stu-id="2a649-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="2a649-117">Переменные без инструкций, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="2a649-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="2a649-118">Десериализация</span><span class="sxs-lookup"><span data-stu-id="2a649-118">Deserialization</span></span>|<span data-ttu-id="2a649-119">Коллекции инструкций для каждой переменной десериализуются в соответствии с переменной.</span><span class="sxs-lookup"><span data-stu-id="2a649-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="2a649-120">В следующей таблице показаны службы <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> требует метод.</span><span class="sxs-lookup"><span data-stu-id="2a649-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="2a649-121">Служба</span><span class="sxs-lookup"><span data-stu-id="2a649-121">Service</span></span>|<span data-ttu-id="2a649-122">Описание</span><span class="sxs-lookup"><span data-stu-id="2a649-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="2a649-123">Не является строго обязательным, службы, если он доступен, используется для определения, нужно ли сериализации с учетом регистра или без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="2a649-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="2a649-124">Если объект не существует в таблице имен во время десериализации запроса для <xref:System.ComponentModel.IContainer> выполняется.</span><span class="sxs-lookup"><span data-stu-id="2a649-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="2a649-125">Если запрос выполнен успешно, контейнер проверяется для объекта.</span><span class="sxs-lookup"><span data-stu-id="2a649-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="2a649-126">Контейнер также используется в качестве заменителя для любого аргумента контейнера, необходимые компонентам.</span><span class="sxs-lookup"><span data-stu-id="2a649-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a649-127">Значение параметра <paramref name="manager" /> или <paramref name="typeDecl" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="2a649-128">Диспетчер сериализации для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="2a649-129">Объявление типа, которое должно использоваться для сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2a649-130">Значение, предназначенное для выполнения сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a649-131">Возвращает метод, в котором хранятся инструкции, используемые для сериализации элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a649-132">Метод, используемый для создания всех кодов инициализации для заданного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a649-133"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> Метод возвращает метод для создания всех кодов инициализации для заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="2a649-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="2a649-134">Реализация по умолчанию возвращает пустой конструктор.</span><span class="sxs-lookup"><span data-stu-id="2a649-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="2a649-135">Если тот же метод возвращается для нескольких значений, должны возвращаться один и тот же экземпляр метода.</span><span class="sxs-lookup"><span data-stu-id="2a649-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="2a649-136">Можно использовать <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> словарь запоминать методы создания.</span><span class="sxs-lookup"><span data-stu-id="2a649-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="2a649-137">`typeDecl` Параметр можно также использовать для добавления методов инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="2a649-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="2a649-138">Например если вы хотите создать отдельный метод для каждого объекта, необходимо один метод, который в свою очередь вызывает все эти методы.</span><span class="sxs-lookup"><span data-stu-id="2a649-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="2a649-139">Этот метод можно добавить объявление типа кода, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="2a649-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a649-140">Значение параметра <paramref name="manager" />, <paramref name="typeDecl" /> или <paramref name="value" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="2a649-141">Диспетчер сериализации для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="2a649-142">Объявление типа для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a649-143">Возвращает массив методов, предназначенных для интерпретации в процессе десериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a649-144">Массив <see cref="T:System.CodeDom.CodeMemberMethod" /> методов, предназначенных для интерпретации в процессе десериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a649-145">Реализация по умолчанию возвращает одноэлементный массив, с помощью конструктора, в нем.</span><span class="sxs-lookup"><span data-stu-id="2a649-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a649-146">Значение параметра <paramref name="manager" /> или <paramref name="typeDecl" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="2a649-147">Диспетчер сериализации для использования при выполнении сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="2a649-148">Объект для сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="2a649-149">Необязательная коллекция элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="2a649-150">Возможно значение <see langword="null" /> или пустое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a649-151">Выполняет сериализацию корня объекта путем создания объявления нового типа, определяющего корень.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a649-152">
            <see cref="T:System.CodeDom.CodeTypeDeclaration" />, определяющий корневой объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a649-153"><xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> Метод выполняет сериализацию заданного корневого объекта и необязательная коллекция элементов, чтобы создать новое определение типа.</span><span class="sxs-lookup"><span data-stu-id="2a649-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="2a649-154">Если `members` коллекция содержит значения, эти значения сериализуются.</span><span class="sxs-lookup"><span data-stu-id="2a649-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="2a649-155">К самим значениям могут сериализовать как локальные переменные или переменные-члены.</span><span class="sxs-lookup"><span data-stu-id="2a649-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="2a649-156">Определяет это делается путем поиска свойство средства расширения в объекте с именем `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="2a649-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="2a649-157">Если `true`, создается членом.</span><span class="sxs-lookup"><span data-stu-id="2a649-157">If `true`, a member is generated.</span></span> <span data-ttu-id="2a649-158">В противном случае создается локальная переменная.</span><span class="sxs-lookup"><span data-stu-id="2a649-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="2a649-159">Для удобства `members` корневой объект может содержать коллекция.</span><span class="sxs-lookup"><span data-stu-id="2a649-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="2a649-160">В этом случае корневой объект не также добавляется как участник или локальной переменной.</span><span class="sxs-lookup"><span data-stu-id="2a649-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="2a649-161">Имя возвращаемого типа берется из имени корневого объекта, если он был именованный объект.</span><span class="sxs-lookup"><span data-stu-id="2a649-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="2a649-162">В противном случае имя создается из корневого класса имя простого типа.</span><span class="sxs-lookup"><span data-stu-id="2a649-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="2a649-163">В следующей таблице показаны задачи, выполняемые с использованием реализации по умолчанию <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2a649-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="2a649-164">Задача</span><span class="sxs-lookup"><span data-stu-id="2a649-164">Task</span></span>|<span data-ttu-id="2a649-165">Описание</span><span class="sxs-lookup"><span data-stu-id="2a649-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="2a649-166">Контекст заполнение</span><span class="sxs-lookup"><span data-stu-id="2a649-166">Context Seeding</span></span>|<span data-ttu-id="2a649-167">Контекст сериализации инициализируется с данным, включая <xref:System.ComponentModel.Design.Serialization.RootContext> и <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="2a649-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="2a649-168">Сериализация члена</span><span class="sxs-lookup"><span data-stu-id="2a649-168">Member Serialization</span></span>|<span data-ttu-id="2a649-169">Далее, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> проходит все элементы и вызовы <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a649-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="2a649-170">Поскольку сериализация выполняется в рационально <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, это гарантирует, что сериализация не выполнена дважды.</span><span class="sxs-lookup"><span data-stu-id="2a649-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="2a649-171">Корневая сериализация</span><span class="sxs-lookup"><span data-stu-id="2a649-171">Root Serialization</span></span>|<span data-ttu-id="2a649-172">Далее корневой объект сериализуется и ее инструкции добавляются в коллекцию инструкций.</span><span class="sxs-lookup"><span data-stu-id="2a649-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="2a649-173">Инструкции по интеграции</span><span class="sxs-lookup"><span data-stu-id="2a649-173">Statement Integration</span></span>|<span data-ttu-id="2a649-174">После все объекты сериализуются, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> метод упорядочивает операторы и добавляет их к методу, возвращенные <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a649-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="2a649-175">Наконец, который вызывает все методы, возвращаемые создается конструктор <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a649-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="2a649-176">В следующей таблице показаны объекты <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> метод помещает в стек контекста.</span><span class="sxs-lookup"><span data-stu-id="2a649-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="2a649-177">Экземпляр</span><span class="sxs-lookup"><span data-stu-id="2a649-177">Instance</span></span>|<span data-ttu-id="2a649-178">Описание</span><span class="sxs-lookup"><span data-stu-id="2a649-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="2a649-179">Данный сериализатор.</span><span class="sxs-lookup"><span data-stu-id="2a649-179">This serializer.</span></span> <span data-ttu-id="2a649-180">Наследование классов может оказаться полезным добавить открытые свойства этого класса.</span><span class="sxs-lookup"><span data-stu-id="2a649-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="2a649-181">Тип, который создается.</span><span class="sxs-lookup"><span data-stu-id="2a649-181">The type being created.</span></span> <span data-ttu-id="2a649-182">Большинство объектов не обязательно прямой доступ к этому.</span><span class="sxs-lookup"><span data-stu-id="2a649-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a649-183">Значение параметра <paramref name="manager" /> или <paramref name="root" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a649-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>