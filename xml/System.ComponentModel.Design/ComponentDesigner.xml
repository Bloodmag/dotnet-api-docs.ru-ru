<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c23cc3c344fae82d2864903c570f250f1777d5d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Расширяет поведение компонента в режиме разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ComponentDesigner> Базовый класс конструктора предоставляет простой конструктор, который может расширить поведение связанных компонентов в режиме конструктора.  
  
 <xref:System.ComponentModel.Design.ComponentDesigner> Предоставляет пустой <xref:System.ComponentModel.Design.IDesignerFilter> интерфейс реализацию, методы которого можно переопределить, чтобы настроить атрибуты, свойства и события, связанного компонента во время разработки.  
  
 Конструктор можно связать с типом с помощью <xref:System.ComponentModel.DesignerAttribute>. Обзор настройки поведения во время разработки см. в разделе [расширения поддержки времени разработки](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).  
  
 <xref:System.ComponentModel.Design.ComponentDesigner> Класс реализует особое поведение для дескрипторов свойств для унаследованных компонентов. Внутренний тип с именем `InheritedPropertyDescriptor` используется по умолчанию <xref:System.ComponentModel.Design.ComponentDesigner> реализацию вместо свойства, наследуемые от базового класса. Существует два случая, в которых добавляются эти дескрипторы свойств.  
  
1.  На сам объект корневой возвращаемая <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> свойства, так как наследуемое от своего базового класса.  
  
2.  В поля, найденные в базовом классе корневого объекта. Открытые и защищенные поля из базового класса добавляются в конструктор, чтобы их можно управлять со стороны пользователя.  
  
 `InheritedPropertyDescriptor` Класс изменяет значение свойства по умолчанию, чтобы значение по умолчанию — это текущее значение во время создания экземпляра объекта. Это потому, что свойство наследуется от другого экземпляра. Конструктор определяет сброс значения свойства, как задать его значение, которое было задано с помощью унаследованного класса. Это значение может отличаться от значения по умолчанию, хранящееся в метаданных.  
  
   
  
## Examples  
 В следующем примере кода приведен пример <xref:System.ComponentModel.Design.ComponentDesigner> реализации и примеры компонента, связанного с конструктором. В конструкторе реализовано переопределение <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> метод, который вызывает базовый `Initialize` метод, переопределенный <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> метод, отображающий <xref:System.Windows.Forms.MessageBox> при двойном щелчке компонента и наследование <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> метод доступа свойства, предоставляющего настраиваемые <xref:System.ComponentModel.Design.DesignerVerb> команды меню в контекстное меню для компонента.  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает списки действий времени разработки, поддерживаемые компонентом, сопоставленным конструктору.</summary>
        <value>Списки действий времени разработки, поддерживаемые компонентом, сопоставленным конструктору.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию компонентов, сопоставленных компоненту, который управляется конструктором.</summary>
        <value>Компоненты, сопоставленные компоненту, который управляется конструктором.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство указывает компоненты для копирования или перемещения вместе с компонентом, управляемым с помощью конструктора во время копирования, перетаскивания или перемещения операции.  
  
 Если эта коллекция содержит ссылки на другие компоненты текущего документа в режиме разработки, эти компоненты будут копироваться вместе с компонентом, управляемым с помощью конструктора во время операции копирования.  
  
 При выборе компонента, управляемый конструктором, эта коллекция заполняется всеми вложенными элементами управления. Эта коллекция может также включать другие компоненты, такие как кнопки панели инструментов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает основной компонент, создаваемый данным конструктором.</summary>
        <value>Компонент, управляемый конструктором.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> Метод <xref:System.ComponentModel.Design.ComponentDesigner> задает это свойство.  
  
> [!NOTE]
>  При переопределении метода <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> метод, необходимо вызвать метод базового класса <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> метод перед использованием этого свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> по окончании использования класса <xref:System.ComponentModel.Design.ComponentDesigner>. Метод <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> оставляет класс <xref:System.ComponentModel.Design.ComponentDesigner> в непригодном для использования состоянии. После вызова метода <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, необходимо освободить все ссылки на <xref:System.ComponentModel.Design.ComponentDesigner> , сборщик мусора мог освободить память, <xref:System.ComponentModel.Design.ComponentDesigner> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.ComponentModel.Design.ComponentDesigner>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.ComponentModel.Design.ComponentDesigner> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод. `Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.  
  
 При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.ComponentModel.Design.ComponentDesigner> ссылки. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает в файле с исходным кодом подпись метода для события по умолчанию для компонента и устанавливает курсор в позицию, где была создана эта подпись.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В конструкторе Windows Forms и Web Forms этот метод вызывается, когда пользователь дважды щелкает компонента.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">Попытка извлечь файл, возвращенный в программу управления исходным кодом, не удалась.</exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Пытается освободить ресурсы путем вызова метода <see langword="Dispose(false)" /> перед уничтожением объекта во время сборки мусора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет <xref:System.Object.Finalize%2A?displayProperty=nameWithType> и очищает ресурсы, вызывая метод `Dispose(false)`. Переопределите метод `Dispose(Boolean)`, чтобы настроить очистку.  
  
 Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метод.  
  
 Дополнительные сведения см. в разделе [методы Finalize и деструкторы](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md), и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Тип запрашиваемой службы.</param>
        <summary>Пытается извлечь службу заданного типа с узла режима разработки компонента конструктора.</summary>
        <returns>Объект, реализующий запрошенную службу, либо значение <see langword="null" />, если служба не может быть реализована.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию данного метода запрашивает службу с узла компонента.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> метод для доступа к службам конструктора.  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает атрибут, обозначающий тип наследования связанного компонента.</summary>
        <value>Атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> связанного компонента.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, наследуется ли этот компонент или нет.</summary>
        <value>
          Значение <see langword="true" />, если компонент наследуется; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Компонент для данного конструктора.</param>
        <summary>Подготавливает конструктор к просмотру, редактированию или разработке заданного компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел конструктора вызывает этот метод, когда она готова для использования конструктора.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть значением <see langword="null" />, если значения по умолчанию не указаны.</param>
        <summary>Выполняет повторную инициализацию существующего компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> Метод вызывается при повторной инициализации существующий компонент. Например это может произойти после перетаскивания пользователем компонента в другой контейнер.  
  
 Вы можете использовать `defaultValues` словарь для применения рекомендуется значения по умолчанию для свойства, однако не следует изменять свойства компонента, помимо тех, которые хранятся в словаре, так как этот существующий компонент уже могут быть заданы на нем.  
  
 Реализация по умолчанию этот метод не выполняет никаких действий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">Словарь значений и имен по умолчанию для применения к свойствам. Может быть значением <see langword="null" />, если значения по умолчанию не указаны.</param>
        <summary>Инициализирует только что созданный компонент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> Метод вызывается, когда компонент сначала инициализируется, обычно после добавления сначала в рабочую область конструирования.  
  
 Можно выполнить любую необходимую инициализацию этого компонента, и можно проигнорировать `defaultValues` словарь вообще.  
  
 Реализация по умолчанию этот метод не выполняет никаких действий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует параметры импортированного компонента, параметры которого уже были инициализированы с использованием параметров, отличных от заданных по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда конструктор связан с элементом управления, не находится в состоянии по умолчанию, такие как элемент управления, который нужно вставить или переместить с помощью операции перетаскивания и вставки в конструктор. Этот метод дает возможность разработчику изменить или скрывать свойства компонента вместо того чтобы инициализировать свойства компонента по умолчанию. Этот метод вызывается после других функций инициализации.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke">Объект <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, атрибут наследования которого должен быть извлечен.</param>
        <summary>Возвращает атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> заданного объекта <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
        <returns>Атрибут <see cref="T:System.ComponentModel.InheritanceAttribute" /> заданного конструктора.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Задает для компонента свойства по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> вызывается при инициализации конструктора. Это позволяет конструктору задавать значения по умолчанию для базового компонента.  
  
 Этот метод вызывается только один раз: при первом создании компонента, перетащив его из области элементов в область конструктора. Последующие операции инициализации конструктора, этот метод не вызывается.  
  
 Реализация по умолчанию этот метод задает свойство по умолчанию компонента имя компонента, в том случае, если свойство по умолчанию является строкой, а свойство уже не установлено. Этот метод может быть реализован в производном классе, чтобы настроить процесс инициализации компонента, который данным конструктором.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский компонент этого конструктора.</summary>
        <value>Родительский компонент этого конструктора либо значение <see langword="null" />, если этот конструктор является корневым компонентом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство предоставляет универсальный механизм обнаружения иерархические отношения в конструкторах и используется <xref:System.ComponentModel.Design.ComponentDesigner> объекта <xref:System.ComponentModel.Design.ITreeDesigner> реализацию интерфейса. Это свойство должно возвращать только `null` при этот конструктор является корневым компонентом. Реализация по умолчанию это свойство возвращает корневой компонент для всех компонентов, которые не являются корневым компонентом, и возвращает `null` для корневого компонента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Атрибуты класса компонента.</param>
        <summary>Позволяет конструктору изменять или удалять элементы из набора атрибутов, предоставленных через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов словаря атрибутов, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре атрибутов являются идентификаторы типов атрибутов, определяемое по значению их <xref:System.Attribute.TypeId%2A> свойство. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно напрямую выполнить фильтрацию словаря, доступного по <paramref name="attributes" /> параметра, или оставить его без изменений. При переопределении этого метода после выполнения фильтрации необходимо вызовите базовую реализацию. Кроме того, не следует удалять элементы в <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> метод. Вместо этого следует измените атрибуты, чтобы скрыть элементы. Может также удалить элементы из <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> метод.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">События класса компонента.</param>
        <summary>Позволяет конструктору изменять или удалять элементы из набора событий, предоставленных через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов словаря событий, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий являются имена событий. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно напрямую выполнить фильтрацию словаря, доступного по <paramref name="events" /> параметра, или оставить его без изменений. При переопределении этого метода после выполнения фильтрации необходимо вызовите базовую реализацию. Кроме того, не следует удалять элементы в <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> метод. Вместо этого следует измените атрибуты, чтобы скрыть элементы. Может также удалить элементы из <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> метод.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Свойства класса компонента.</param>
        <summary>Позволяет конструктору изменять или удалять элементы из набора свойств, предоставленных с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ изменения или удаления элементов словаря свойств, предоставляемых через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается сразу после <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно напрямую выполнить фильтрацию словаря, доступного по <paramref name="properties" /> параметра, или оставить его без изменений. При переопределении этого метода после выполнения фильтрации необходимо вызовите базовую реализацию. Кроме того, не следует удалять элементы в <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> метод. Вместо этого следует измените атрибуты, чтобы скрыть элементы. Может также удалить элементы из <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> метод.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Атрибуты класса компонента.</param>
        <summary>Позволяет конструктору добавлять элементы к набору атрибутов, предоставленному с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь атрибутов, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре атрибутов являются идентификаторы типов атрибутов, определяемое по значению их <xref:System.Attribute.TypeId%2A> свойство. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно непосредственно изменить словарь, который доступен через <paramref name="attributes" /> параметра, или оставить его без изменений. При переопределении этого метода следует вызовите базовую реализацию, перед выполнением фильтрации.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">События класса компонента.</param>
        <summary>Позволяет конструктору добавлять элементы к набору событий, предоставленных с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь событий, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре событий являются имена событий. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно непосредственно изменить словарь, который доступен через <paramref name="events" /> параметра, или оставить его без изменений. При переопределении этого метода следует вызовите базовую реализацию, перед выполнением фильтрации.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Свойства класса компонента.</param>
        <summary>Позволяет конструктору добавлять элементы к набору свойств, предоставленному с использованием класса <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предоставляет способ добавления элементов в словарь свойств, предоставляемых конструктором через <xref:System.ComponentModel.TypeDescriptor>.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>. Этот метод вызывается непосредственно перед <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно непосредственно изменить словарь, который доступен через <paramref name="properties" /> параметра, или оставить его без изменений. При переопределении этого метода следует вызовите базовую реализацию, перед выполнением фильтрации.</para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">Идентификатор <see cref="T:System.ComponentModel.MemberDescriptor" />, обозначающий измененный элемент.</param>
        <param name="oldValue">Прежнее значение элемента.</param>
        <param name="newValue">Новое значение элемента.</param>
        <summary>Уведомляет службу <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> о том, что данный компонент был изменен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует вызывать только после изменения свойств компонента напрямую, а не с помощью средства доступа, предоставляемого <xref:System.ComponentModel.MemberDescriptor>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member">Идентификатор <see cref="T:System.ComponentModel.MemberDescriptor" />, который обозначает изменяемый элемент.</param>
        <summary>Уведомляет службу <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> о том, что компонент будет изменен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует вызывать только после изменения свойств компонента напрямую, а не с помощью средства доступа, предоставляемого <xref:System.ComponentModel.MemberDescriptor>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию значений свойств, переопределяющих параметры пользователя.</summary>
        <value>Коллекция <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />, содержащая теневые свойства документа проекта.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Объекты <see cref="T:System.Attribute" /> класса компонента. Ключи в словаре атрибутов являются значениями <see cref="P:System.Attribute.TypeId" /> атрибутов.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Объекты <see cref="T:System.ComponentModel.EventDescriptor" />, представляющие события класса компонента. Ключи в словаре событий являются именами событий.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Объекты <see cref="T:System.ComponentModel.PropertyDescriptor" />, представляющие свойства класса компонента. Ключи в словаре свойств являются именами свойств.</param>
        <summary>Описание этого элемента содержится в методе <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.IDesignerFilter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого элемента см. в свойстве <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
        <value>Коллекция <see cref="T:System.Collections.ICollection" />, содержащая коллекцию конструкторов <see cref="T:System.ComponentModel.Design.IDesigner" />, включенных в текущий родительский конструктор.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.ITreeDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого элемента см. в свойстве <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
        <value>Интерфейс <see cref="T:System.ComponentModel.Design.IDesigner" />, представляющий родительский интерфейс, либо интерфейс <see langword="null" />, если родительский объект отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.ComponentModel.Design.ComponentDesigner> приведен к типу интерфейса <xref:System.ComponentModel.Design.ITreeDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает команды в режиме конструктора, поддерживаемые компонентом, связанным с конструктором.</summary>
        <value>Коллекция <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> объектов <see cref="T:System.ComponentModel.Design.DesignerVerb" /> или значение <see langword="null" />, если команды конструктора недоступны. Данная реализация по умолчанию всегда возвращает значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает `null` Если отсутствуют команды времени разработки компонента.  
  
 Среда разработки обычно отображает команды, возвращаемый этим методом, в контекстном меню. При выборе одной из команд, <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> метод соответствующего <xref:System.ComponentModel.Design.DesignerVerb> вызывается.  
  
> [!NOTE]
>  Среда разработки обычно предоставляет **свойства** компонента контекстном меню. Поэтому не рекомендуется включать такую запись в коллекцию команд конструктора.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>