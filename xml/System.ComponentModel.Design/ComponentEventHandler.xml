<Type Name="ComponentEventHandler" FullName="System.ComponentModel.Design.ComponentEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ComponentEventHandler(object sender, ComponentEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ComponentEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ComponentEventHandler(sender As Object, e As ComponentEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ComponentEventHandler(System::Object ^ sender, ComponentEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="cf40a-101">Источник события.</span><span class="sxs-lookup"><span data-stu-id="cf40a-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="cf40a-102">Объект <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="cf40a-102">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="cf40a-103">Представляет метод, предназначенный для обработки событий <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> и <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />, вызываемых для событий уровня компонентов.</span><span class="sxs-lookup"><span data-stu-id="cf40a-103">Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />, <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />, and <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> events raised for component-level events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf40a-104">При создании делегата <xref:System.ComponentModel.Design.ComponentEventHandler> необходимо указать метод, обрабатывающий событие.</span><span class="sxs-lookup"><span data-stu-id="cf40a-104">When you create a <xref:System.ComponentModel.Design.ComponentEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="cf40a-105">Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="cf40a-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="cf40a-106">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="cf40a-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="cf40a-107">Дополнительные сведения о делегатах-обработчиках событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="cf40a-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf40a-108">В следующем примере демонстрируется регистрация <xref:System.ComponentModel.Design.ComponentEventHandler> и обработка <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved> и <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving> события.</span><span class="sxs-lookup"><span data-stu-id="cf40a-108">The following example demonstrates registering a <xref:System.ComponentModel.Design.ComponentEventHandler> and handling the <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved> and <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving> events.</span></span>  
  
 [!code-cpp[ComponentEventHandlerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentEventHandlerExample/CPP/componenteventhandlerexample.cpp#1)]
 [!code-csharp[ComponentEventHandlerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentEventHandlerExample/CS/componenteventhandlerexample.cs#1)]
 [!code-vb[ComponentEventHandlerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentEventHandlerExample/VB/componenteventhandlerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentEventArgs" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
  </Docs>
</Type>