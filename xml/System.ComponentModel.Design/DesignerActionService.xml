<Type Name="DesignerActionService" FullName="System.ComponentModel.Design.DesignerActionService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a00ce2feccd9bba63525680d0cb158f25785e5a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707502" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerActionService : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionService extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionService" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionService&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionService : IDisposable" />
  <TypeSignature Language="F#" Value="type DesignerActionService = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Устанавливает службу времени разработки, которая управляет коллекцией объектов <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> для компонентов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService> Класс отвечает за управление коллекцию <xref:System.ComponentModel.Design.DesignerActionItem> объекты для каждого экземпляра компонента, который существует в форме во время разработки. Этот класс позволяет использовать технологии direct push модель создания элемента и в основном предназначен для использования разработчиками средство разработки, несмотря на то, что он может также использоваться компонента и разработчики пользовательских элементов управления.  
  
 Разработчики инструментов разработки, необходимо определить список элементов для отображения для компонента и определите, при изменении этого списка. Они также могут создавать надстройки, которые работают совместно с объектами панель смарт-тега.  
  
 Дополнительных компонентов, разработчикам может потребоваться динамически управлять элементы, связанные с компонентом, заменяя или дополняя стандартную модель внедрения. Например панель команд может изменяться в зависимости от контекста их использования и состояния времени разработки компонента.  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.DesignerActionService> Фактически является определяющим службой за push и pull моделей, однако в последнем случае она действует неявно.  
  
 <xref:System.ComponentModel.Design.DesignerActionService> предоставляет простой интерфейс для доступа и управления элементами для каждого компонента, включая следующие методы и события.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> Метод определяет, является ли <xref:System.ComponentModel.Design.DesignerActionService> управляет отдельного компонента.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Метод поддерживает перечисление списки элементов.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Метод разрешает добавление <xref:System.ComponentModel.Design.DesignerActionList> или <xref:System.ComponentModel.Design.DesignerActionListCollection> для набора существующих элементов для экземпляра компонента. Напротив <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> метод удаляет одно или все списки элементов, связанных с компонентом.  
  
    > [!NOTE]
    >  <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Метод представляет технология direct push модели сопоставления элементы панели с компонентом. В отличие от этого зависит переопределение модели по запросу <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> свойства конструктора класса для этого компонента. В среде разработки отвечает за добавление эти элементы в текущую <xref:System.ComponentModel.Design.DesignerActionService> при создании компонента в рабочей области конструирования.  
  
    > [!IMPORTANT]
    >  <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, И <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> методы только рекомендуется или повлиять на элементы модели внедрения.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Указывает событие при изменении коллекции элементов для компонента.  
  
 Большие степень взаимодействия, поскольку часто желательно использовать некоторые же панели элементов компонента времени разработки контекстное меню и панель, существует между <xref:System.ComponentModel.Design.DesignerActionItem> объекты и команды конструктора.  
  
 Если конструктор компонентов не указывает явно <xref:System.ComponentModel.Design.DesignerActionList> (то есть, он не содержит переопределенный <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> свойства), то будет создан список из существующих команд конструктора. Эти команды задаются <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> свойство. В этом случае внутреннем классе списка команд используется для хранения коллекции записей области элементов команд.  
  
 Если вы хотите <xref:System.ComponentModel.Design.DesignerActionMethodItem> для использования в качестве входа панели и запись во время разработки контекстное меню можно задавать `includeAsDesignerVerb` параметра в конструктор элемента.  
  
 Используйте <xref:System.ComponentModel.Design.DesignerActionUIService> для управления отображением конструктора <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionUIService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionService(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionService : IServiceProvider -&gt; System.ComponentModel.Design.DesignerActionService" Usage="new System.ComponentModel.Design.DesignerActionService serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Поставщик службы для текущей среды времени разработки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик услуг необходима для отслеживания выбора и изменения компонентов. Он должен поддерживать <xref:System.ComponentModel.Design.IDesignerHost> и <xref:System.ComponentModel.Design.IComponentChangeService> типов. <xref:System.ComponentModel.Design.DesignerActionService> Класс использует внутреннюю таблицу для управления, компоненты и связанные с ними <xref:System.ComponentModel.Design.DesignerActionList> смарт-теги.  
  
 Как правило разработчики компонентов не нужно будет создать экземпляр этого класса; Вместо этого они могли получить экземпляр посредством вызова <xref:System.ComponentModel.Component.GetService%2A?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="M:System.ComponentModel.Component.GetService(System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет один или несколько объектов <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в текущую коллекцию управляемых смарт-тегов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Add (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, которому будут сопоставлены смарт-теги.</param>
        <param name="actionList">Список <see cref="T:System.ComponentModel.Design.DesignerActionList" />, содержащий новые элементы смарт-тега, которые должны быть добавлены.</param>
        <summary>Добавляет список <see cref="T:System.ComponentModel.Design.DesignerActionList" /> в текущую коллекцию управляемых смарт-тегов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Метод представляет модель принудительной добавления элементов смарт-тегов. Альтернативный запросу модель основывается на переопределение <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> свойства в конструкторе для соответствующего компонента.  
  
 При вызове этого метода, проверяются на наличие любых списки должны быть добавлены <xref:System.ComponentModel.Design.DesignerActionMethodItem> с <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> свойство `true`. Эти элементы добавляются в список команд конструктора для этого компонента путем вызова <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> метод.  
  
 Смарт-тегами осуществляется на уровне экземпляра компонента. Управляемая коллекция может содержать повторяющиеся записи.  
  
 Этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы один параметр имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionListCollection ^ designerActionListCollection);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.Add (comp, designerActionListCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerActionListCollection" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="comp">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, которому будут сопоставлены смарт-теги.</param>
        <param name="designerActionListCollection">Список <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, содержащий новые элементы смарт-тега, которые должны быть добавлены.</param>
        <summary>Добавляет список <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> в текущую коллекцию управляемых смарт-тегов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Метод представляет модель принудительной добавления элементов смарт-тегов. Альтернативный запросу модель основывается на переопределение <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> свойства в конструкторе для соответствующего компонента.  
  
 При вызове этого метода, проверяются на наличие любых списки должны быть добавлены <xref:System.ComponentModel.Design.DesignerActionMethodItem> с <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> свойство `true`. Эти элементы добавляются в список команд конструктора для этого компонента путем вызова <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> метод.  
  
 Смарт-тегами осуществляется на уровне экземпляра компонента. Управляемая коллекция может содержать повторяющиеся записи.  
  
 Этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы один параметр имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="designerActionService.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все компоненты от управления и очищает все списки смарт-тегов модели внедрения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> Метод очищает Внутренняя таблица, используемая для хранения сведений о компонентах и их модель принудительной отправки смарт-тег списки.  
  
> [!CAUTION]
>  Так как этот метод влияет на все компоненты, управляемые текущей службой, а не только на текущий компонент, этот метод следует использовать осмотрительно. Как правило средство разработки разработчик использует его при сбросе рабочей области конструирования. Разработчикам компонентов следует использовать один из <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> методов вместо удаление отдельных смарт-тег файлов или списков.  
  
 Объект <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событие вызывается для каждого компонента, который ранее был под управлением текущей службы.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (comp As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.ComponentModel.IComponent -&gt; bool" Usage="designerActionService.Contains comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Объект <see cref="T:System.ComponentModel.IComponent" />, который требуется найти.</param>
        <summary>Определяет, управляет ли текущая служба смарт-тегов списками действий для указанного компонента.</summary>
        <returns>Значение <see langword="true" />, если компонент управляется текущей службой; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> Метод распознает только модель принудительной отправки смарт-тегов, которые связаны в компонент с <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> метод.  
  
 Несмотря на то, что нет структурных ограничений на количество одновременных <xref:System.ComponentModel.Design.DesignerActionService> экземпляров, созданных с помощью средства разработки, обычно только один экземпляр службы создается на область конструктора.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      </Docs>
    </Member>
    <Member MemberName="DesignerActionListsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignerActionListsChanged As DesignerActionListsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerActionListsChangedEventHandler ^ DesignerActionListsChanged;" />
      <MemberSignature Language="F#" Value="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " Usage="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при удалении списка <see cref="T:System.ComponentModel.Design.DesignerActionList" /> или его добавлении для любого компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны набор специализированные классы, связанные с <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
|Особый тип|Описание:|  
|----------------------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|Добавляет сведения, относящиеся к управлению список смарт-тега. Этот класс является специальным из <xref:System.EventArgs>.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|Подключается <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> с его обработчиком.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|Указывает, ли список были добавлены или удалены.|  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designerActionService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые классом <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Метод является реализацией единственный метод, предусмотренные в <xref:System.IDisposable> интерфейса. Этот метод следует вызвать по завершении использования класса <xref:System.ComponentModel.Design.DesignerActionService>. Он выполняет два основных действия:  
  
-   Удаление текущей службы из списка служб, доступных в среде разработки посредством вызова <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> метод.  
  
-   Отменяет подписку на события изменения компонента связанного <xref:System.ComponentModel.Design.IComponentChangeService> интерфейса.  
  
 Вызовите метод <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> по окончании использования класса <xref:System.ComponentModel.Design.DesignerActionService>. Метод <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> оставляет класс <xref:System.ComponentModel.Design.DesignerActionService> в непригодном для использования состоянии. После вызова метода <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, необходимо освободить все ссылки на <xref:System.ComponentModel.Design.DesignerActionService> , сборщик мусора мог освободить память, <xref:System.ComponentModel.Design.DesignerActionService> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.ComponentModel.Design.DesignerActionService>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.ComponentModel.Design.DesignerActionService> метод `Finalize`.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designerActionService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Design.DesignerActionService" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Метод является реализацией единственный метод, предусмотренные в <xref:System.IDisposable> интерфейса. Этот метод следует вызвать по завершении использования класса <xref:System.ComponentModel.Design.DesignerActionService>. Он выполняет два основных действия:  
  
-   Удаление текущей службы из списка служб, доступных в среде разработки посредством вызова <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> метод.  
  
-   Отменяет подписку на события изменения компонента связанного <xref:System.ComponentModel.Design.IComponentChangeService> интерфейса.  
  
 Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод. `Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.  
  
 Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.ComponentModel.Design.DesignerActionService>. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых Resources](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentActions">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию списков элементов смарт-тегов, сопоставленных компоненту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponentActions (component As IComponent) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetComponentActions : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
        <summary>Возвращает коллекцию списков элементов смарт-тегов, сопоставленных компоненту.</summary>
        <returns>Коллекция смарт-тегов для заданного компонента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Метод эквивалентен вызов <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> с помощью метода `type` параметр <xref:System.ComponentModel.Design.ComponentActionsType.All>. Таким образом возвращаемая коллекция будет содержать push и pull списки смарт-тегов.  
  
 Возвращенный <xref:System.ComponentModel.Design.DesignerActionListCollection> — это объединение списков элементов, добавленных с помощью <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> методы, а также списки получены из <xref:System.ComponentModel.Design.DesignerCommandSet> экземпляр получен от компонента узла.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="T:System.ComponentModel.Design.DesignerCommandSet" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component, valuetype System.ComponentModel.Design.ComponentActionsType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentActions (component As IComponent, type As ComponentActionsType) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::ComponentActionsType type);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection&#xA;override this.GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions (component, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="type" Type="System.ComponentModel.Design.ComponentActionsType" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
        <param name="type">Объект <see cref="T:System.ComponentModel.Design.ComponentActionsType" />, при помощи которого будет выполняться фильтрация сопоставленных смарт-тегов.</param>
        <summary>Возвращает коллекцию списков элементов смарт-тегов заданного типа, сопоставленных компоненту.</summary>
        <returns>Коллекция смарт-тегов заданного типа для заданного компонента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия перегруженного <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> метод выполняется фильтрация по `type` параметр, который может иметь одно из следующих значений.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|<xref:System.ComponentModel.Design.ComponentActionsType.All>|Все связанные с ней смарт-тегов.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Component>|Модель извлечения только смарт-теги.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Service>|Принудительная модель только смарт-теги.|  
  
 Если связанный конструктор для компонента не предоставляет список модель извлечения смарт-тега, а затем <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> метод будет использовать вместо этого конструктора разработки контекстное меню элементов из <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.ComponentActionsType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentDesignerActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentDesignerActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentDesignerActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentDesignerActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentDesignerActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
        <param name="actionLists">Коллекция, в которую будут добавлены сопоставленные смарт-теги.</param>
        <summary>Извлекает смарт-теги модели извлечения, сопоставленные компоненту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> — Вспомогательный метод для <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> методы. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> выполняет поиск модель извлечения смарт-теги типа <xref:System.ComponentModel.Design.ComponentActionsType.Component>и добавляет их в предоставленном `actionLists` коллекции.  
  
 Если разработчик компонента не предоставляет явно коллекцию смарт-тегов через <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> свойства его конструктор, этот метод будет использовать пункты меню контекстное во время разработки, которые извлекаются через <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> свойство конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы один параметр имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentServiceActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentServiceActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentServiceActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentServiceActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentServiceActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, которому сопоставлены смарт-теги.</param>
        <param name="actionLists">Коллекция, в которую будут добавлены сопоставленные смарт-теги.</param>
        <summary>Извлекает смарт-теги модели внедрения, сопоставленные компоненту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> — Вспомогательный метод для <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> методы. Он выполняет поиск модели внедрения смарт-тегов типа <xref:System.ComponentModel.Design.ComponentActionsType.Service>и добавляет их в предоставленном `actionLists` коллекции.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы один параметр имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отменяет сопоставление одного или нескольких списков смарт-тегов из одного или нескольких компонентов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove actionList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="actionList">Список смарт-тегов, который следует удалить.</param>
        <summary>Удаляет заданный список смарт-тегов из всех компонентов, управляемых текущей службой.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> метод обычно используется разработчиками средство разработки, так как компонент разработчики обычно не знают, какие другие компоненты существует в текущей области конструктора.  
  
 При успешном выполнении, этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="actionList" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent -&gt; unit" Usage="designerActionService.Remove comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Компонент, для которого будет отменено сопоставление смарт-тегов.</param>
        <summary>Удаляет все списки смарт-тегов, сопоставленных заданному компоненту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае успешного выполнения <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> вызывает метод <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="comp" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">Компонент, для которого будет отменено сопоставление смарт-тегов.</param>
        <param name="actionList">Удаляемый список смарт-тегов.</param>
        <summary>Удаляет заданный смарт-тег из указанного компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В случае успешного выполнения <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> вызывает метод <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы один параметр имеет значение <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
  </Members>
</Type>