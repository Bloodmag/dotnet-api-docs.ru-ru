<Type Name="IComponentChangeService" FullName="System.ComponentModel.Design.IComponentChangeService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9da9b16adc06a8f1abe552a2842b02e1cd6c9038" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36706696" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentChangeService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentChangeService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IComponentChangeService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentChangeService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentChangeService" />
  <TypeSignature Language="F#" Value="type IComponentChangeService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет интерфейс для добавления или удаления обработчиков событий, добавляющих, удаляющих или переименовывающих компоненты. Предоставляет методы для вызова событий <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> и <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IComponentChangeService> предоставляет интерфейс, который может использоваться для указания методов, обрабатывать следующие события:  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded>, возникает при добавлении компонента.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding>, вызывается перед добавлением компонента.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>, возникает при изменении компонента.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>, вызываемое в случае компонент должен быть изменен.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved>, вызванное при удалении компонента.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving>, вызываемое в случае компонент будет удален.  
  
-   <xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename>, возникает при изменении компонента.  
  
 Как правило вызываются средой разработки эти добавить компонент, изменение, удаление или переименование события. Разработчики должны вызывать методы этого интерфейса, при использовании <xref:System.ComponentModel.Design.DesignerTransaction> объектов, чтобы обеспечить возможность отмены и повторного применения действий этапа разработки, влияющих на компоненты. Дополнительные сведения можно найти в документации по <xref:System.ComponentModel.Design.DesignerTransaction>. Как правило, базовый конструктор обрабатывает эти уведомления об изменениях.  
  
 Эта служба также предоставляет методы, которые вызывают события изменения компонента или компонент изменяется. Объект <xref:System.ComponentModel.PropertyDescriptor> или компонент может указать, что компонент был изменен или изменения, связанные с <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> и <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> методов, соответственно.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.ComponentModel.Design.IComponentChangeService> интерфейс для получения уведомлений о добавления, удаления и изменения компонентов в режиме конструктора.  
  
 [!code-cpp[IComponentChangeServiceSample2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CPP/icomponentchangeserviceexample.cpp#1)]
 [!code-csharp[IComponentChangeServiceSample2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IComponentChangeServiceSample2/CS/icomponentchangeserviceexample.cs#1)]
 [!code-vb[IComponentChangeServiceSample2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IComponentChangeServiceSample2/VB/icomponentchangeserviceexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
    <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.ComponentModel.Design.DesignerTransaction" />
  </Docs>
  <Members>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdded As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdded;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdded : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после добавления компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие происходит при загрузке или при создании новых компонентов пользователем, после размещения компонента.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentAdding" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
      <MemberSignature Language="VB.NET" Value="Event ComponentAdding As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentAdding;" />
      <MemberSignature Language="F#" Value="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentAdding : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед самым добавлением компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие происходит при загрузке или когда пользователь создает новый компонент. Можно отменить процесс добавления компонента, можно создавать исключение в ответ.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangedEventHandler ComponentChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanged As ComponentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangedEventHandler ^ ComponentChanged;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " Usage="member this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после изменения компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает при изменении любого компонента на форме. Данное событие не происходит при загрузке формы или выгрузки, так как изменения в данный момент.  
  
> [!NOTE]
>  Объект <xref:System.ComponentModel.Design.DesignerTransaction> может вызвать несколько <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> события. Некоторые <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> обработчиков событий может помешать выполнению последовательности событий, например, если код изменяет значения свойств во время транзакции. Объект <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> обработчик событий может также привести к снижению производительности при рисовании после каждого изменения при <xref:System.ComponentModel.Design.DesignerTransaction> выполняется. Чтобы разрешить <xref:System.ComponentModel.Design.DesignerTransaction> в процессе завершения без прерывания работы или вмешательства вашей <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> обработчик событий, можно проверить состояние <xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A> свойство и отложить обработку события изменения до завершения транзакции путем добавления <xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler> которого будет вызывать ваш <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> обработчик событий и удалить самого после завершения транзакции.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentChangingEventHandler ComponentChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Event ComponentChanging As ComponentChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentChangingEventHandler ^ ComponentChanging;" />
      <MemberSignature Language="F#" Value="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " Usage="member this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит в процессе изменения компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает перед компонент действительно были изменены и дает возможность отменить эти изменения, или выполнять любые действия перед внесением изменений. Данное событие не происходит при загрузке формы или выгрузки, так как изменения в данный момент.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoved" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoved As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoved;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoved : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после удаления компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает во время выгрузки и при удалении компонента пользователем. Это событие возникает до удаления узла из компонента.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentEventHandler ComponentRemoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentEventHandler ComponentRemoving" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRemoving As ComponentEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentEventHandler ^ ComponentRemoving;" />
      <MemberSignature Language="F#" Value="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " Usage="member this.ComponentRemoving : System.ComponentModel.Design.ComponentEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит в процессе удаления компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает во время выгрузки и при удалении компонента пользователем. Можно отменить процесс удаления компонента, можно создавать исключение в ответ.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <altmember cref="T:System.ComponentModel.Design.ComponentEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ComponentRenameEventHandler ComponentRename" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
      <MemberSignature Language="VB.NET" Value="Event ComponentRename As ComponentRenameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ComponentRenameEventHandler ^ ComponentRename;" />
      <MemberSignature Language="F#" Value="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " Usage="member this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentRenameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после переименования компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает после <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> событие, если компонент был переименован.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged (object component, System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object component, class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged (component As Object, member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : obj * System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="iComponentChangeService.OnComponentChanged (component, member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">Измененный компонент.</param>
        <param name="member">Измененный элемент. Значение <see langword="null" />, если изменение относится к нескольким элементам.</param>
        <param name="oldValue">Прежнее значение элемента. Это свойство имеет смысл только в том случае, если элемент не равен <see langword="null" />.</param>
        <param name="newValue">Новое значение элемента. Это свойство имеет смысл только в том случае, если элемент не равен <see langword="null" />.</param>
        <summary>Сообщает службе изменения компонентов об изменении определенного компонента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывает <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> событий.  
  
 Большинство конструкторов, поставляемых вместе с [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], а также в среде разработки Visual Studio, обычно вызывают это событие для вас компонента в проект изменен, поэтому в большинстве случаев вам не обязательно должны явно вызывать этот метод. Соответствующий <xref:System.ComponentModel.Design.IComponentChangeService> события автоматически, возникает, когда <xref:System.ComponentModel.PropertyDescriptor> используется для изменения свойства значения или компоненты добавляется или удаляется из <xref:System.ComponentModel.Design.IDesignerHost> контейнера.  
  
 Перед вызовом метода <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, сначала вызовите <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> означает компонент изменения и внести необходимые изменения. Затем вызовите <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> для вызова <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> событий.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Это событие позволяет разработчикам выполнять любую необходимую обработку после изменения свойства. Например разработчики обычно обновляют исходный код, который задает свойство с новым значением.</para>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public void OnComponentChanging (object component, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object component, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanging (component As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanging(System::Object ^ component, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="iComponentChangeService.OnComponentChanging (component, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">Компонент непосредственно перед изменением.</param>
        <param name="member">Изменяемый элемент. Значение <see langword="null" />, если изменение относится к нескольким элементам.</param>
        <summary>Сообщает службе изменения компонентов об изменении определенного компонента перед внесением изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывает <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> событий.  
  
 Большинство конструкторов, поставляемых с [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)], а также в среде разработки Visual Studio, обычно автоматически вызывают это событие, поэтому в большинстве случаев, не нужно явно вызывать это событие. Соответствующий <xref:System.ComponentModel.Design.IComponentChangeService> события автоматически, возникает, когда <xref:System.ComponentModel.PropertyDescriptor> используется для изменения свойства значения или компоненты добавляется или удаляется из <xref:System.ComponentModel.Design.IDesignerHost> контейнера.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Этот метод вызывает исключение, если свойство не может быть изменено. Не предназначен для проверки значений конкретного свойства. Вместо этого он предназначен для предоставления глобальный метод защиты от изменения компонента. Например если редактируемый файл возвращен в систему управления версиями, этот обработчик событий обычно создает исключение, если пользователь отказывается извлечь файл.</para>
        </block>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>