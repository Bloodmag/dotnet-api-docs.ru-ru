<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="53d29-101">Предоставляет службу регистрации обработчиков событий для событий в компонентах.</span><span class="sxs-lookup"><span data-stu-id="53d29-101">Provides a service for registering event handlers for component events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-102">Служба привязки событий предоставляет способ связывания обработчика событий с событием компонента из кода конструктора.</span><span class="sxs-lookup"><span data-stu-id="53d29-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="53d29-103">Для связывания обработчика событий с событием компонента с помощью <xref:System.ComponentModel.Design.IEventBindingService>, сначала необходимо получить <xref:System.ComponentModel.EventDescriptor> события связываемого компонента.</span><span class="sxs-lookup"><span data-stu-id="53d29-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="53d29-104"><xref:System.ComponentModel.Design.IEventBindingService> Предоставляет методы, которые можно преобразовать <xref:System.ComponentModel.EventDescriptor> для <xref:System.ComponentModel.PropertyDescriptor> которого можно использовать для настройки события с именем метода обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="53d29-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="53d29-105"><xref:System.ComponentModel.TypeDescriptor> Объект предоставляет <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> метод, который можно использовать для получения <xref:System.ComponentModel.EventDescriptorCollection> содержащий <xref:System.ComponentModel.EventDescriptor> объекты для каждого события компонента.</span><span class="sxs-lookup"><span data-stu-id="53d29-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="53d29-106"><xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> И <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> методы <xref:System.ComponentModel.Design.IEventBindingService> возвращают <xref:System.ComponentModel.PropertyDescriptor> для каждого <xref:System.ComponentModel.EventDescriptor> передаваемый любого метода.</span><span class="sxs-lookup"><span data-stu-id="53d29-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="53d29-107">Каждый <xref:System.ComponentModel.PropertyDescriptor> , возвращенные <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> или <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> имеет тип свойства строки.</span><span class="sxs-lookup"><span data-stu-id="53d29-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="53d29-108">Эта строка может быть присвоено значение, указывающее имя метода обработчика событий, чтобы связать событие с помощью <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> метод <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="53d29-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53d29-109">В следующем примере демонстрируется конструктор, использующий <xref:System.ComponentModel.Design.IEventBindingService> для связи события компонента с обработчиком событий во время разработки при вызове команды пользовательского контекстного меню, который конструктор добавляет для компонента.</span><span class="sxs-lookup"><span data-stu-id="53d29-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="53d29-110">Чтобы использовать пример, скомпилируйте его в библиотеку классов, добавить ссылку из проекта Windows Forms, добавить компонент библиотеки классов в панель элементов, щелкните правой кнопкой мыши область элементов и выбрав команду Настройка области элементов, а затем выбрав библиотеку классов и нажав кнопку "ОК", и Добавление в форму экземпляр EventControl.</span><span class="sxs-lookup"><span data-stu-id="53d29-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="53d29-111">Затем щелкните правой кнопкой мыши EventControl и выберите команду Подключить testEvent контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="53d29-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="53d29-112">Создается пустой обработчик событий и метод EventControl's testEvent инициализируется в этот обработчик событий в коде инициализации для формы.</span><span class="sxs-lookup"><span data-stu-id="53d29-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="53d29-113">Экземпляр компонента, с которым связано событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-113">The component instance the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="53d29-114">Событие, для которого должно быть создано имя.</span><span class="sxs-lookup"><span data-stu-id="53d29-114">The event to create a name for.</span></span></param>
        <summary><span data-ttu-id="53d29-115">Создает уникальное имя для метода обработчика событий заданного компонента и события.</span><span class="sxs-lookup"><span data-stu-id="53d29-115">Creates a unique name for an event-handler method for the specified component and event.</span></span></summary>
        <returns><span data-ttu-id="53d29-116">Рекомендованное имя метода обработчика событий для данного события.</span><span class="sxs-lookup"><span data-stu-id="53d29-116">The recommended name for the event-handler method for this event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-117">Этот метод возвращает имя, которое отличается от любого другого имени метода в исходном коде пользователя.</span><span class="sxs-lookup"><span data-stu-id="53d29-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53d29-118">Событие, для которого необходимо получить совместимые методы обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="53d29-118">The event to get the compatible event-handler methods for.</span></span></param>
        <summary><span data-ttu-id="53d29-119">Возвращает коллекцию методов обработчика событий, обладающих сигнатурой метода, совместимой с заданным событием.</span><span class="sxs-lookup"><span data-stu-id="53d29-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span></span></summary>
        <returns><span data-ttu-id="53d29-120">Коллекция строк.</span><span class="sxs-lookup"><span data-stu-id="53d29-120">A collection of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-121">Каждая строка в коллекции является имя метода, который имеет метод сигнатуры, совместимой с заданным событием.</span><span class="sxs-lookup"><span data-stu-id="53d29-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="53d29-122">Свойство, представляющее событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-122">The property that represents an event.</span></span></param>
        <summary><span data-ttu-id="53d29-123">Возвращает дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, которое представлено заданным дескриптором свойств, если он отражает событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span></span></summary>
        <returns><span data-ttu-id="53d29-124">Дескриптор <see cref="T:System.ComponentModel.EventDescriptor" /> для события, представляемого свойством, или значение <see langword="null" />, если свойство не представляет событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="53d29-125">События для преобразования в свойства.</span><span class="sxs-lookup"><span data-stu-id="53d29-125">The events to convert to properties.</span></span></param>
        <summary><span data-ttu-id="53d29-126">Преобразует набор дескрипторов событий в набор дескрипторов свойств.</span><span class="sxs-lookup"><span data-stu-id="53d29-126">Converts a set of event descriptors to a set of property descriptors.</span></span></summary>
        <returns><span data-ttu-id="53d29-127">Массив объектов <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающих набор событий.</span><span class="sxs-lookup"><span data-stu-id="53d29-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-128">Каждый возвращаемый <xref:System.ComponentModel.PropertyDescriptor> имеет <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> строки.</span><span class="sxs-lookup"><span data-stu-id="53d29-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53d29-129">Преобразуемое событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-129">The event to convert.</span></span></param>
        <summary><span data-ttu-id="53d29-130">Преобразует один дескриптор событий в дескриптор свойств.</span><span class="sxs-lookup"><span data-stu-id="53d29-130">Converts a single event descriptor to a property descriptor.</span></span></summary>
        <returns><span data-ttu-id="53d29-131">Объект <see cref="T:System.ComponentModel.PropertyDescriptor" />, описывающий событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-132">Возвращенный <xref:System.ComponentModel.PropertyDescriptor> имеет <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> строки.</span><span class="sxs-lookup"><span data-stu-id="53d29-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="53d29-133">Отображает код пользователя для конструктора.</span><span class="sxs-lookup"><span data-stu-id="53d29-133">Displays the user code for the designer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53d29-134">Отображает код пользователя для конструктора.</span><span class="sxs-lookup"><span data-stu-id="53d29-134">Displays the user code for the designer.</span></span></summary>
        <returns>
          <span data-ttu-id="53d29-135">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53d29-135"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-136">Этот метод отображает редактор кода.</span><span class="sxs-lookup"><span data-stu-id="53d29-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="53d29-137">Номер строки для размещения курсора.</span><span class="sxs-lookup"><span data-stu-id="53d29-137">The line number to place the caret on.</span></span></param>
        <summary><span data-ttu-id="53d29-138">Отображает код пользователя для конструктора в заданной строке.</span><span class="sxs-lookup"><span data-stu-id="53d29-138">Displays the user code for the designer at the specified line.</span></span></summary>
        <returns>
          <span data-ttu-id="53d29-139">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53d29-139"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-140">Этот метод отображает редактор кода и помещает курсор в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="53d29-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="53d29-141">Компонент, с которым связано событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-141">The component that the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="53d29-142">Отображаемое событие.</span><span class="sxs-lookup"><span data-stu-id="53d29-142">The event to display.</span></span></param>
        <summary><span data-ttu-id="53d29-143">Отображает код пользователя для заданного события.</span><span class="sxs-lookup"><span data-stu-id="53d29-143">Displays the user code for the specified event.</span></span></summary>
        <returns>
          <span data-ttu-id="53d29-144">Значение <see langword="true" />, если код отображается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="53d29-144"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53d29-145">Этот метод отображает редактор кода и помещает курсор на строку, объявленный для указанного события.</span><span class="sxs-lookup"><span data-stu-id="53d29-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>