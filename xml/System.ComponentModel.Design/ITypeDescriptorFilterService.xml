<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92756848b5b61c9983d7fef32dfd95381b9ff4b4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет интерфейс для изменения набора дескрипторов элементов для компонента в режиме разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Интерфейс предоставляет интерфейс, который позволяет изменять свойства, события и атрибуты уровня класса компонента во время разработки. Это изменение осуществляется через набор дескрипторов, предоставляемые компонентом через <xref:System.ComponentModel.TypeDescriptor>. Дескриптор типа будет запрашивать сайт компонента для <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> службы и, если он существует, дескриптор типа пройдет все метаданные, собрал этой службы. Затем служба может изменить метаданные путем добавления, удаления и изменения текущих характеристик компонента.  
  
 Например, можно изменить свойства компонента путем вызова <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> метод. Служба фильтрации Получает словарь, содержащий имена свойств и их свойства дескрипторы типа <xref:System.ComponentModel.PropertyDescriptor>. Изменения реализуются с помощью следующую логику.  
  
|Изменение|Реализация|  
|------------------|--------------------|  
|Удаление|Удаление соответствующей записи в словаре.|  
|Сложение|Добавьте соответствующую запись в словарь.|  
|Изменение|Вызов методов существующего дескриптора свойства, замена записи дескриптора сопоставленного свойства или замена пара ключ значение всего свойства в словаре.|  
  
 Возвращаемое значение <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> определяет, устранена ли данный набор свойств. Если этот метод возвращает `true`, <xref:System.ComponentModel.TypeDescriptor> для этого компонента можно кэшировать результаты. Этот кэш сохраняется, пока либо компонент выполняет сборку мусора или <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> вызывается метод дескриптора типа.  
  
   
  
## Examples  
 В следующем примере кода показан конструктор, использующий <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> для фильтрации коллекции атрибутов любой новой или существующей <xref:System.Windows.Forms.Button> для добавления атрибута конструктора в новый конструктор перед загрузкой или перезагрузкой конструктора кнопки.  
  
 Чтобы воспользоваться этим примером, добавьте код в проекте Windows Forms и загрузить компоненты из библиотеки классов в панели элементов.  
  
 См. также [Пошаговое руководство: автоматическое заполнение панели элементов с настраиваемыми компонентами](http://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Добавьте несколько кнопок в форму. Добавить `ButtonDesignerFilterComponent` в форму, и он отобразится в области компонентов. `ButtonDesignerFilterComponent` Добавит `ButtonDesignerFilterService`, который реализует <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, как поставщик услуг режим конструктора. Существующие или новые <xref:System.Windows.Forms.Button> объектов в форме начнется цвет Велосипедная после `ButtonDesignerFilterService` заменяет конструктор для всех существующих и новых кнопок с `ColorCycleButtonDesigner`. Цвет кнопок цикла при наведите указатель мыши над ними и в качестве альтернативы возобновлять цикличность или сбросить цвета фона и переднего плана для `MouseLeave` события. Новый <xref:System.Windows.Forms.Button> получает объекты `ColorCycleButtonDesigner` через <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> метод `ButtonDesignerFilterService` , была загружена, пока `ButtonDesignerFilterComponent` удаляется и заменяет исходный <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. `ColorCycleButton` Класс в этом примере является <xref:System.Windows.Forms.Button> связанных с `ColorCycleButtonDesigner`.  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Чтобы отфильтровать дескрипторы членов, предоставляемых <see cref="T:System.ComponentModel.TypeDescriptor" />, реализуют этот интерфейс в компоненте и переопределить <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, или <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> методы этого класса для фильтрации атрибутов, события или свойства, соответственно.</para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, атрибуты которого необходимо отфильтровать.</param>
        <param name="attributes">Словарь атрибутов, которые можно изменить.</param>
        <summary>Фильтрует атрибуты, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных атрибутов должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор атрибутов для компонента. Атрибуты добавляются в словарь с помощью атрибута <xref:System.Attribute.TypeId%2A> как ключи и фактическим атрибутом в качестве значения. Разработчики этой службы можно добавлять, удалять или изменять существующие записи атрибутов в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Возвращает <see langword="false" /> только в случае необходимости, поскольку повторяющиеся запросы к службе фильтрации дескриптора типа может привести к снижению производительности.</para>
        </block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, для которого необходимо отфильтровать события.</param>
        <param name="events">Словарь событий, которые можно изменить.</param>
        <summary>Фильтрует события, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных событий должен быть помещен в кэш; значение <see langword="false" />, если служба фильтрации должна снова сделать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор событий для компонента. События добавляются в словарь с именами событий в качестве ключей и соответствующих <xref:System.ComponentModel.EventDescriptor> объектов в качестве значения. Объекты, реализующие эту службу можно добавить, удалить или изменять существующие записи событий в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Возвращает <see langword="false" /> только в случае необходимости, поскольку повторяющиеся запросы к службе фильтрации дескриптора типа может привести к снижению производительности.</para>
        </block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Компонент, для которого необходимо отфильтровать свойства.</param>
        <param name="properties">Словарь свойств, которые можно изменить.</param>
        <summary>Фильтрует свойства, предоставляемые компонентом через класс <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <returns>Значение <see langword="true" />, если набор отфильтрованных свойств должен быть кэширован; значение <see langword="false" />, если служба фильтрации должна снова делать запрос.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается, когда пользователь запрашивает набор свойств для компонента. Свойства добавляются в словарь с именами свойств, как ключи и соответствующий <xref:System.ComponentModel.PropertyDescriptor> объектов в качестве значения. Объекты, реализующие эту службу можно добавить, удалить или изменять существующие записи свойств в словаре.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Возвращает <see langword="false" /> только в случае необходимости, поскольку повторяющиеся запросы к службе фильтрации дескриптора типа может привести к снижению производительности.</para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>