<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc9c23253cbc09cc29b28970c3f06961d8964b04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет идентификаторы для набора технологий, поддерживаемых хостами конструкторов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Модель адаптера представление заменяет и расширяет его функциональные возможности <xref:System.ComponentModel.Design.ViewTechnology> компонентов; однако <xref:System.ComponentModel.Design.ViewTechnology> функции можно сохранить для обратной совместимости и использования в будущем при выборе. Дополнительные сведения см. «.NET фигуры библиотеки: образец конструктор» в Windows Forms базы знаний на http://windowsforms.net/articles/shapedesigner.aspx.  
  
 <xref:System.ComponentModel.Design.ViewTechnology> Определяет идентификаторы, можно указать режим, используемый для управления отображением документа на хосте конструктора.  
  
 Значение по умолчанию следует использовать только в среде внешнего размещения конструктора. В предыдущих версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], <xref:System.ComponentModel.Design.ViewTechnology.Default> перечисления указан тип модели пользовательского интерфейса, поддерживаемых корневой конструктор. Поскольку эта модель не является расширяемой, вместо этого следует использовать *адаптер представление* модели. Адаптер представления является типом, который адаптирует объект одного типа в другой.  
  
 Например, HTML-конструктор может возвращать `DemoDOM` дерева как представление его. Конструктор HTML возвращает технологии представлений по умолчанию. Среда размещения Windows Forms будет иметь один или несколько классов представления. Если такой класс может преобразовать `DemoDOM` в элемент управления Windows Forms, ведущее приложение может поддерживать такой тип конструктора. Если адаптер не может обработать тип данных, возвращаемый из конструктора <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> метода, произойдет сбой загрузки конструктора, и пользователю будет предложено ошибку.  
  
 В Visual Studio есть расширяемая схема, предоставляющая адаптеры представлений, что позволяет адаптировать к любой технологии пользовательского интерфейса. Технологии сторонних поставщиков также могут предоставлять адаптер соответствующее представление, и их объектные модели готовы к использованию.  
  
 Пример адаптеров представления используются, см. «.NET фигуры библиотеки: образец конструктор» в Windows Forms базы знаний на http://windowsforms.net/articles/shapedesigner.aspx.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.ComponentModel.Design.ViewTechnology.Default> класса в конструкторе. Данный пример кода является частью большего примера, приведенного для <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> интерфейса.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Задает поддержку используемой по умолчанию технологии представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Корневой конструктор может возвращать любой тип объекта, но этот объект должен быть совместимым с адаптером для технологии узла. Среды размещения, такой как Visual Studio предоставляют способ подключения новой технологии представления. Объект представления по умолчанию для конструктора форм Windows Forms — <xref:System.Windows.Forms.Control?displayProperty=nameWithType> экземпляра.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.ComponentModel.Design.ViewTechnology> класса в конструкторе. Данный пример кода является частью большего примера, приведенного для <xref:System.ComponentModel.Design.IRootDesigner> интерфейса.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Представляет режим, при котором объект просмотра передается непосредственно в среду разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект просмотра должен реализовывать интерфейсы, необходимые для среды разработки. Интегрированная среда разработки Visual Studio поддерживает просмотр объектов, которые элемент управления ActiveX, активный документ или объект, реализующий интерфейс IVsWindowPane, которая доступна через программы Visual Studio VSI (интеграция с Visual Studio). Среда разработки Visual Studio обеспечивает поддержку для данной технологии просмотра. Поддержка этой технологии представления не обязательно доступны в других средах разработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Представляет режим отображения базового конструктора с помощью объекта элемента управления Windows Forms.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел конструктора заполняет окно документа среды разработки элемента управления Windows Forms.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.ComponentModel.Design.ViewTechnology> класса в конструкторе. Данный пример кода является частью большего примера, приведенного для <xref:System.ComponentModel.Design.LocalizationExtenderProvider> класса.  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>