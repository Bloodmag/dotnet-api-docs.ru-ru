<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="344a8cdc3c68ead566ccc404bbd4a2419f8ead86" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="41131-101">Источник события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41131-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="41131-102">Объект класса <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, содержащий данные события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41131-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="41131-103">Представляет метод, обрабатывающий событие *MethodName*<see langword="Completed" /> асинхронной операции.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41131-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41131-104">При создании делегата <xref:System.ComponentModel.AsyncCompletedEventHandler> определяется метод обработки события.</span><span class="sxs-lookup"><span data-stu-id="41131-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="41131-105">Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="41131-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="41131-106">Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален делегат.</span><span class="sxs-lookup"><span data-stu-id="41131-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="41131-107">Дополнительные сведения о делегатах-обработчиках событий см. в разделе [NIB: события и делегаты](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span><span class="sxs-lookup"><span data-stu-id="41131-107">For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
 <span data-ttu-id="41131-108">Для асинхронного метода с именем *имя_метода*, в компоненте, имеется соответствующий *имя_метода* `Completed` событий и необязательный *имя_метода* `CompletedEventArgs` класса.</span><span class="sxs-lookup"><span data-stu-id="41131-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="41131-109">Для компонента, который поддерживает несколько одновременных вызовов асинхронных методов клиент может предоставлять уникальный токен или идентификатор задачи, чтобы различать асинхронные задачи, вызывающей определенного события.</span><span class="sxs-lookup"><span data-stu-id="41131-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="41131-110">Клиент <xref:System.ComponentModel.AsyncCompletedEventHandler> может считывать <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> свойства, чтобы определить, какие задачи сообщает о завершении.</span><span class="sxs-lookup"><span data-stu-id="41131-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="41131-111">Следует использовать реализации <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> создание <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> , связывающая задачи клиента идентификаторы с ожидающих асинхронных задач.</span><span class="sxs-lookup"><span data-stu-id="41131-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41131-112">Пример кода <xref:System.ComponentModel.AsyncCompletedEventHandler> делегат, см. пример в <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="41131-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
  </Docs>
</Type>