<Type Name="EventDescriptor" FullName="System.ComponentModel.EventDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d70129679b536dc9cabf03a9b5cd88593d4f1f3" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="203ef-101">Предоставляет сведения о событии.</span>
      <span class="sxs-lookup">
        <span data-stu-id="203ef-101">Provides information about an event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-102"><xref:System.ComponentModel.EventDescriptor> Состоит из имени, его атрибуты, компонент, к которому привязан событие, делегат события, тип делегата, и является ли делегат многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="203ef-102">An <xref:System.ComponentModel.EventDescriptor> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</span></span>  
  
 <span data-ttu-id="203ef-103"><xref:System.ComponentModel.EventDescriptor> предоставляет следующие `abstract` свойства и методы:</span><span class="sxs-lookup"><span data-stu-id="203ef-103"><xref:System.ComponentModel.EventDescriptor> provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="203ef-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> содержит тип компонента, с которым это событие объявлено.</span><span class="sxs-lookup"><span data-stu-id="203ef-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.</span></span>  
  
-   <span data-ttu-id="203ef-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> содержит тип делегата для события.</span><span class="sxs-lookup"><span data-stu-id="203ef-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.</span></span>  
  
-   <span data-ttu-id="203ef-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> содержит значение, указывающее, является ли делегат события многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="203ef-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.</span></span>  
  
-   <span data-ttu-id="203ef-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> связывает событие в компонент.</span><span class="sxs-lookup"><span data-stu-id="203ef-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.</span></span>  
  
-   <span data-ttu-id="203ef-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> Отменяет привязку делегата с компонентом, чтобы делегат больше не получает события из компонента.</span><span class="sxs-lookup"><span data-stu-id="203ef-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.</span></span>  
  
 <span data-ttu-id="203ef-109">Дополнительные сведения о событиях см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-109">For more information about events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span> <span data-ttu-id="203ef-110">Дополнительные сведения об отражении см. в разделах в [отражения](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-110">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ef-111">В следующем примере кода создается на примере <xref:System.ComponentModel.EventDescriptorCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="203ef-111">The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class.</span></span> <span data-ttu-id="203ef-112">Выводит сведения (категория, описание и отображаемое имя) о каждом событии для кнопки в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="203ef-112">It prints the information (category, description, and display name) of each event on a button in a text box.</span></span> <span data-ttu-id="203ef-113">Необходимо, `button1` и `textbox1` уже созданы в форме.</span><span class="sxs-lookup"><span data-stu-id="203ef-113">It requires that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[EventDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventDescriptor/CPP/eventdescriptor.cpp#1)]
 [!code-csharp[EventDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventDescriptor/CS/eventdescriptor.cs#1)]
 [!code-vb[EventDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EventDescriptor/VB/eventdescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="203ef-114">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EventDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="203ef-115">Объект <see cref="T:System.ComponentModel.MemberDescriptor" />, содержащий имя события и его атрибуты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-115">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the event and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="203ef-116">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EventDescriptor" />, используя имя и атрибуты заданного объекта <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-116">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="203ef-117">Объект <see cref="T:System.ComponentModel.MemberDescriptor" />, который содержит имя члена и его атрибуты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-117">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that has the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="203ef-118">Массив <see cref="T:System.Attribute" /> с атрибутами, которые нужно добавить в описание этого события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-118">An <see cref="T:System.Attribute" /> array with the attributes you want to add to this event description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="203ef-119">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EventDescriptor" />, используя имя в заданном дескрипторе <see cref="T:System.ComponentModel.MemberDescriptor" /> и атрибуты как в дескрипторе <see cref="T:System.ComponentModel.MemberDescriptor" />, так и в массиве <see cref="T:System.Attribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-119">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-120">Этот конструктор добавляет атрибуты в <xref:System.Attribute> массив атрибутов в <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="203ef-120">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="203ef-121">Имя события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-121">The name of the event.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="203ef-122">Массив типа <see cref="T:System.Attribute" />, который содержит атрибуты события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-122">An array of type <see cref="T:System.Attribute" /> that contains the event attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="203ef-123">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EventDescriptor" />, используя указанные имя и массив атрибутов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-123">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the specified name and attribute array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public abstract void AddEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="203ef-124">Компонент, который передает события делегату.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-124">A component that provides events to the delegate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="203ef-125">Делегат, который представляет метод для обработки события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-125">A delegate that represents the method that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="203ef-126">При переопределении в производном классе связывает событие с компонентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-126">When overridden in a derived class, binds the event to the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-127">Как правило этот метод реализуется с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="203ef-127">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="203ef-128">Дополнительные сведения об отражении см. в разделах в [отражения](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-128">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="203ef-129">Дополнительные сведения о делегатах см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-129">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="203ef-130">При переопределении этого метода, его следует добавить делегата к списку событий компонента путем вызова соответствующего <c>add_myHandler</c> метод.</span>
            <span class="sxs-lookup">
              <span data-stu-id="203ef-130">When you override this method, it should add the delegate to the component's event list by invoking the appropriate <c>add_myHandler</c> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="203ef-131">При переопределении в производном классе возвращает тип компонента, с которым связано это событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-131">When overridden in a derived class, gets the type of component this event is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="203ef-132">Тип <see cref="T:System.Type" />, представляющий тип компонента, с которым связано событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-132">A <see cref="T:System.Type" /> that represents the type of component the event is bound to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-133">Как правило это свойство реализуется с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="203ef-133">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public abstract Type EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.EventType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EventType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ EventType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="203ef-134">При переопределении в производном классе возвращает тип делегата для события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-134">When overridden in a derived class, gets the type of delegate for the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="203ef-135">
            <see cref="T:System.Type" />, где представляется тип делегата для события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-135">A <see cref="T:System.Type" /> that represents the type of delegate for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-136">Как правило это свойство реализуется с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="203ef-136">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public abstract bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="203ef-137">При переопределении в производном классе возвращает значение, показывающее, является ли делегат события многоадресным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-137">When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="203ef-138">Значение <see langword="true" />, если делегат является многоадресным; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-138">
              <see langword="true" /> if the event delegate is multicast; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-139">Как правило это свойство реализуется с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="203ef-139">Typically, this property is implemented through reflection.</span></span>  
  
 <span data-ttu-id="203ef-140">Делегат многоадресной рассылки отличается от обычного заключается в том, что он может содержать ссылки на более чем на один метод.</span><span class="sxs-lookup"><span data-stu-id="203ef-140">A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</span></span> <span data-ttu-id="203ef-141">Методы в групповой делегат, выполняются синхронно при вызове делегата, в том порядке, в котором они отображаются.</span><span class="sxs-lookup"><span data-stu-id="203ef-141">Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</span></span> <span data-ttu-id="203ef-142">Если для одного из вызванных методов возникает исключение, делегат прекращает обработку, и исключение передается в вызывающий делегат объект.</span><span class="sxs-lookup"><span data-stu-id="203ef-142">If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public abstract void RemoveEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="203ef-143">Компонент, с которым связан делегат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-143">The component that the delegate is bound to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="203ef-144">Делегат, связь которого с компонентом разрывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-144">The delegate to unbind from the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="203ef-145">При переопределении в производном классе разрывает связь делегата с компонентом и, таким образом, в дальнейшем делегат не будет получать события от компонента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="203ef-145">When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ef-146">Как правило этот метод реализуется с помощью отражения.</span><span class="sxs-lookup"><span data-stu-id="203ef-146">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="203ef-147">Дополнительные сведения см. в разделах в [отражения](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-147">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="203ef-148">Дополнительные сведения о делегатах см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="203ef-148">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="203ef-149">При переопределении этого метода он должен удалить делегата из списка событий компонента путем вызова соответствующего <c>remove_myHandler</c> метод.</span>
            <span class="sxs-lookup">
              <span data-stu-id="203ef-149">When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <c>remove_myHandler</c> method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>