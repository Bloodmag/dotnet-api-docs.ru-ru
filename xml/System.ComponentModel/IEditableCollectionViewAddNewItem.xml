<Type Name="IEditableCollectionViewAddNewItem" FullName="System.ComponentModel.IEditableCollectionViewAddNewItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1783c5f93361988888fc552a9a98e65793814f95" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30376048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEditableCollectionViewAddNewItem : System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionViewAddNewItem implements class System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionViewAddNewItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionViewAddNewItem&#xA;Implements IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionViewAddNewItem : System::ComponentModel::IEditableCollectionView" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IEditableCollectionView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет методы и свойства, реализуемые классом <see cref="T:System.Windows.Data.CollectionView" /> для обеспечения задания добавления элементов указанного типа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> Интерфейс позволяет разработчикам приложений указать тип объекта, чтобы добавить в коллекцию. Этот интерфейс расширяет интерфейс <xref:System.ComponentModel.IEditableCollectionView>, поэтому можно добавлять, изменять и удалять элементы в коллекции. <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> Добавляет <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A> метод, который принимает объект, который добавляется в коллекцию. Этот метод полезен, если коллекция и объекты, которые требуется добавить имеют один или несколько из следующих характеристик:  
  
-   Объекты в <xref:System.Windows.Data.CollectionView> относятся к разным типам.  
  
-   Объекты нет конструктора по умолчанию.  
  
-   Объект уже существует.  
  
-   Вы хотите добавить `null` в коллекцию.  
  
   
  
## Examples  
 Следующий пример позволяет пользователю добавить различные типы элементов в коллекцию. Пользователь может ввести новый элемент и отправить запись или отменить транзакцию. В примере показано получение <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> из <xref:System.Windows.Controls.ItemsControl.Items%2A> свойство <xref:System.Windows.Controls.ListBox> и создает объект, тип которого определяется пользователем. Затем в примере вызывается <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A> метод, чтобы добавить объект в коллекцию.  
  
 [!code-csharp[IEditableCollectionViewAddItemExample#MainWindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/window1.xaml.cs#mainwindowlogic)]
 [!code-vb[IEditableCollectionViewAddItemExample#MainWindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/visualbasic/window1.xaml.vb#mainwindowlogic)]  
  
 В следующем примере создается пользовательский интерфейс для предыдущего примера.  
  
 [!code-xaml[IEditableCollectionViewAddItemExample#MainWindowXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/window1.xaml#mainwindowxaml)]  
  
 В следующем примере создается `AddItemWindow` в котором пользователь добавляет данные для нового элемента.  
  
 [!code-xaml[IEditableCollectionViewAddItemExample#AddItemXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/additem.xaml#additemxaml)]  
  
 В следующем примере показано, что логика `AddItemWindow`.  
  
 [!code-csharp[IEditableCollectionViewAddItemExample#AddItemLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/additem.xaml.cs#additemlogic)]
 [!code-vb[IEditableCollectionViewAddItemExample#AddItemLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/visualbasic/additemwindow.xaml.vb#additemlogic)]  
  
 В следующем примере показано типы данных и коллекции, используемой в предыдущих примерах.  
  
 [!code-csharp[IEditableCollectionViewAddItemExample#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/data.cs#data)]
 [!code-vb[IEditableCollectionViewAddItemExample#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/visualbasic/data.vb#data)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public object AddNewItem (object newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNewItem(object newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (newItem As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNewItem(System::Object ^ newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newItem">Объект, добавляемый в коллекцию.</param>
        <summary>Добавляет указанный объект в коллекцию.</summary>
        <returns>Объект, добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если при вызове <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A> метод, он начинается транзакция добавления. Необходимо вызвать <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> или <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> методы для завершения операции добавления.  
  
 Новый элемент всегда отображается в представлении коллекции. Какой-либо фильтрации, сортировки или группировки, применяется для представления применяется к новому элемента, когда <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> вызывается.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A> метод, чтобы добавить объект в коллекцию. Полный пример см. в разделе <xref:System.ComponentModel.IEditableCollectionViewAddNewItem> класса.  
  
 [!code-csharp[IEditableCollectionViewAddItemExample#MainWindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/csharp/window1.xaml.cs#mainwindowlogic)]
 [!code-vb[IEditableCollectionViewAddItemExample#MainWindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ieditablecollectionviewadditemexample/visualbasic/window1.xaml.vb#mainwindowlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNewItem">
      <MemberSignature Language="C#" Value="public bool CanAddNewItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNewItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNewItem { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, можно ли добавить указанный объект в коллекцию.</summary>
        <value>
          Значение <see langword="true" />, если указанный объект можно добавить в коллекцию; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem%2A> свойство `true`, можно указать объект для добавления в коллекцию, вызвав <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A> метод. <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem%2A> — `false` Если элементы не добавляются в коллекцию с помощью <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A>. Если <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem%2A> — `false`, по-прежнему можно добавить объект с помощью <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A?displayProperty=nameWithType> метод. Например, можно добавить объекты к источнику данных ADO.NET с помощью <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>, но не с помощью <xref:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>