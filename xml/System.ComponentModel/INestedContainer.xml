<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cc08798d0eb6ae4d54fd621e29c663add72ed19" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cbebd-101">Обеспечивает функциональные возможности для вложенных контейнеров, логически содержащих ноль или более компонентов и принадлежащих родительскому компоненту.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbebd-101">Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbebd-102"><xref:System.ComponentModel.INestedContainer> Интерфейс добавляет понятие компонент владельца для <xref:System.ComponentModel.IContainer> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="cbebd-102">The <xref:System.ComponentModel.INestedContainer> interface adds the concept of an owning component to the <xref:System.ComponentModel.IContainer> interface.</span></span> <span data-ttu-id="cbebd-103">Вложенный контейнер — это объект, который логически, но необязательно визуально, содержит ноль или более дочерних компонентов и принадлежащих некоторые родительского компонента.</span><span class="sxs-lookup"><span data-stu-id="cbebd-103">A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</span></span> <span data-ttu-id="cbebd-104">Для визуальной вложенности компонент-владелец часто является другим контейнером.</span><span class="sxs-lookup"><span data-stu-id="cbebd-104">For visual containment, the owning component is often another container.</span></span>  
  
 <span data-ttu-id="cbebd-105">Вложенные контейнеры позволяют разрабатывать разделы элемента управления, не требуя явной сериализации переменных-членов или настраиваемого сериализатора для каждого вложенного элемента управления.</span><span class="sxs-lookup"><span data-stu-id="cbebd-105">Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</span></span> <span data-ttu-id="cbebd-106">Вместо этого конструктор формы поддерживает один главный контейнер компонентов.</span><span class="sxs-lookup"><span data-stu-id="cbebd-106">Instead, the form designer maintains one master container of components.</span></span> <span data-ttu-id="cbebd-107">Каждый узел компонента может содержать вложенный контейнер, служащую для дополнительных компонентов.</span><span class="sxs-lookup"><span data-stu-id="cbebd-107">Each component’s site may have a nested container that provides a place to put extra components.</span></span> <span data-ttu-id="cbebd-108">При размещении компонента в вложенных контейнеров, он получает имя представляет собой комбинацию его собственного имени и его имя компонента-владельца.</span><span class="sxs-lookup"><span data-stu-id="cbebd-108">When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component’s name.</span></span> <span data-ttu-id="cbebd-109">Кроме того компоненты, добавленные во вложенный контейнер имеют полный доступ к службам родительского контейнера, и вложенный контейнер обеспечивает такое же поведение родителя и при добавлении новых компонентов.</span><span class="sxs-lookup"><span data-stu-id="cbebd-109">Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</span></span> <span data-ttu-id="cbebd-110">Вложенный контейнер создает конструктор для каждого компонента, которые она содержит, таким образом, включая поддержку во время разработки.</span><span class="sxs-lookup"><span data-stu-id="cbebd-110">The nested container will create the designer for each component it contains, thereby enabling design-time support.</span></span> <span data-ttu-id="cbebd-111">Так как стандартные средства сериализации кода не просматривают вложенные контейнеры, эти компоненты сериализуются, только если путь к ним можно получить путем прохождения по компонентам в основном контейнере.</span><span class="sxs-lookup"><span data-stu-id="cbebd-111">Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</span></span>  
  
 <span data-ttu-id="cbebd-112">Вложенные контейнеры можно найти с помощью запроса компонента сайта для служб типа <xref:System.ComponentModel.INestedContainer>.</span><span class="sxs-lookup"><span data-stu-id="cbebd-112">Nested containers can be found by querying a component's site for services of type <xref:System.ComponentModel.INestedContainer>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbebd-113">Возвращает компонент-владелец для вложенного контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbebd-113">Gets the owning component for the nested container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbebd-114">Компонент <see cref="T:System.ComponentModel.IComponent" />, являющийся владельцем вложенного контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbebd-114">The <see cref="T:System.ComponentModel.IComponent" /> that owns the nested container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbebd-115">Компонент-владелец является характеристикой, отличающий вложенные контейнеры от обычных контейнеров.</span><span class="sxs-lookup"><span data-stu-id="cbebd-115">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>