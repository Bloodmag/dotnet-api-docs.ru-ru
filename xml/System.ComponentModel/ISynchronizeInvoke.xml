<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f997d894fc295ac864526f9e3b9e61341c3cc838" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36702545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает возможность синхронного или асинхронного выполнения делегата.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.ISynchronizeInvoke> Интерфейс обеспечивает синхронную и асинхронную связь между объектами в случае возникновения события. Объекты, реализующие этот интерфейс может получать уведомления, произошло событие, и они могут отвечать на запросы о событии. Таким образом клиенты могут убедиться обработки запроса, прежде чем передавать последующего запроса, который зависит от выполнения первого.  
  
 <xref:System.ComponentModel.ISynchronizeInvoke> Класс предоставляет два способа для вызова процесса:  
  
1.  Асинхронно, с помощью <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> метод. <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> Запускает процесс и возвращается немедленно. Используйте <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> ожидания процесса, запущенного с <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> завершения.  
  
2.  Синхронно, с помощью <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> метод. <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> Запускает процесс, Ожидание его завершения и возвращается. Используйте <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> при главного элемента управления поток отличается от вызывающего потока выполнить маршалинг вызова в нужный поток.  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute> Применен к этому классу атрибут имеет следующее <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> значение свойства: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>. Атрибут <xref:System.Security.Permissions.HostProtectionAttribute> не оказывает влияния на настольные приложения (обычно запускаемые двойным щелчком значка, вводом команды или URL-адреса в браузере). Дополнительные сведения см. в разделе <xref:System.Security.Permissions.HostProtectionAttribute> класса или [программирование SQL Server и атрибуты защиты основного приложения](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">Делегат <see cref="T:System.Delegate" /> для метода, принимающего параметры в том же количестве и того же типа, что и содержащиеся в <c>args</c>.</param>
        <param name="args">Массив типа <see cref="T:System.Object" /> для передачи аргументов в заданный метод. Это может быть значение <see langword="null" />, если аргументы не требуются.</param>
        <summary>Асинхронно выполняет делегата для потока, создавшего этот объект.</summary>
        <returns>Интерфейс <see cref="T:System.IAsyncResult" />, который представляет асинхронную операцию, запущенную вызовом этого метода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `method` Делегат, выполняется в потоке, который создал объект вместо поток, в котором <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> был вызван.  
  
 Делегат вызывается асинхронно, и этот метод возвращается немедленно. Этот метод можно вызывать из любого потока. Если возвращаемое значение от процесса, запущенного с помощью этого метода следует вызвать <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> для получения значения.  
  
 Если необходимо вызвать делегата синхронно, используйте <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> метод вместо него.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Интерфейс <see cref="T:System.IAsyncResult" />, представляющий асинхронную операцию, запущенную вызовом метода <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
        <summary>Ожидает завершения процесса, запущенного вызовом метода <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />, а затем возвращает значение, созданное процессом.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий возвращаемое значение, сформированное асинхронной операцией.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает возвращаемое значение асинхронной операции, представленное <xref:System.IAsyncResult> переданным этим интерфейсом. Если асинхронная операция не завершена, этот метод будет ожидать, пока не станет доступен результат.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">Объект <see cref="T:System.Delegate" />, который содержит вызываемый метод, используемый в контексте потока для управления.</param>
        <param name="args">Массив типа <see cref="T:System.Object" />, представляющий аргументы для передачи в заданный метод. Это может быть значение <see langword="null" />, если аргументы не требуются.</param>
        <summary>Синхронно выполняет делегат в потоке, создавшем этот объект, а затем выполняет маршалинг вызова в текущий поток.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий возвращаемое из вызванного делегата значение, или значение <see langword="null" />, если делегат не возвращает значение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, этот метод работает синхронно, то есть ожидает завершения процесса перед возвратом. Исключения, вызванные во время вызова передаются обратно в вызывающий объект.  
  
 Используйте этот метод при вызове метода из другого потока, чтобы направить запрос в правильный поток.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, должен ли вызывающий объект вызвать метод <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> при вызове объекта, реализующего этот интерфейс.</summary>
        <value>Значение <see langword="true" />, если вызывающий объект должен вызвать метод <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, является ли вызывающему оператору обращаться <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> при вызове метода объекта, реализующего этот интерфейс. Такие объекты привязаны к конкретному потоку и не являются потокобезопасными. При вызове метод из другого потока, необходимо использовать <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> метод выполнить маршалинг вызова в нужный поток.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>