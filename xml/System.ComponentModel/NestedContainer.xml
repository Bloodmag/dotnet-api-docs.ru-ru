<Type Name="NestedContainer" FullName="System.ComponentModel.NestedContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ea0cee2a21b7a803db3885352bef1af48bd1f95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36701359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NestedContainer extends System.ComponentModel.Container implements class System.ComponentModel.IContainer, class System.ComponentModel.INestedContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.NestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class NestedContainer&#xA;Inherits Container&#xA;Implements IDisposable, INestedContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class NestedContainer : System::ComponentModel::Container, IDisposable, System::ComponentModel::INestedContainer" />
  <TypeSignature Language="F#" Value="type NestedContainer = class&#xA;    inherit Container&#xA;    interface INestedContainer&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INestedContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="676fd-101">Предоставляет базовую реализацию интерфейса <see cref="T:System.ComponentModel.INestedContainer" />, позволяющую использовать компонент-владелец для контейнеров.</span>
      <span class="sxs-lookup">
        <span data-stu-id="676fd-101">Provides the base implementation for the <see cref="T:System.ComponentModel.INestedContainer" /> interface, which enables containers to have an owning component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-102"><xref:System.ComponentModel.NestedContainer> Класс — это простая реализация <xref:System.ComponentModel.INestedContainer> интерфейс, который определяет компонент, который логически содержит ноль или более компонентов и принадлежащих родительского компонента.</span><span class="sxs-lookup"><span data-stu-id="676fd-102">The <xref:System.ComponentModel.NestedContainer> class is a simple implementation of the <xref:System.ComponentModel.INestedContainer> interface, which defines a component that logically contains zero or more other components and is owned by a parent component.</span></span> <span data-ttu-id="676fd-103">Поведение вложенных контейнеров отличается от стандартного <xref:System.ComponentModel.Container> несколькими способами, включая следующие:</span><span class="sxs-lookup"><span data-stu-id="676fd-103">The behavior of nested containers differs from a standard <xref:System.ComponentModel.Container> in a number of ways, including the following:</span></span>  
  
-   <span data-ttu-id="676fd-104">Сайт характеристики, такие как <xref:System.ComponentModel.Component.DesignMode%2A> и <xref:System.ComponentModel.Component.GetService%2A> , маршрутизируются через узел компонента-владельца.</span><span class="sxs-lookup"><span data-stu-id="676fd-104">Site characteristics such as <xref:System.ComponentModel.Component.DesignMode%2A> and <xref:System.ComponentModel.Component.GetService%2A> are routed through the owning component’s site.</span></span>  
  
-   <span data-ttu-id="676fd-105">Веб-узла <xref:System.ComponentModel.ISite.Name%2A> свойство — это полное имя, которая включает имя компонента-владельца, а затем точку (.) и имя дочернего компонента.</span><span class="sxs-lookup"><span data-stu-id="676fd-105">The site’s <xref:System.ComponentModel.ISite.Name%2A> property is a qualified name that includes the owning component’s name followed by a period (.) and the child component’s name.</span></span>  
  
-   <span data-ttu-id="676fd-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> предоставляет поддержку для <xref:System.ComponentModel.INestedContainer> как служба.</span><span class="sxs-lookup"><span data-stu-id="676fd-106"><xref:System.ComponentModel.NestedContainer.GetService%2A> provides support for the <xref:System.ComponentModel.INestedContainer> as a service.</span></span>  
  
-   <span data-ttu-id="676fd-107">При удалении компонента-владельца, контейнера, также удаляется.</span><span class="sxs-lookup"><span data-stu-id="676fd-107">When the owning component is disposed, the container is disposed as well.</span></span>  
  
 <span data-ttu-id="676fd-108">Кроме того конструкторы работают с вложенными контейнерами по-разному.</span><span class="sxs-lookup"><span data-stu-id="676fd-108">In addition, designers treat nested containers differently.</span></span> <span data-ttu-id="676fd-109">Узел конструктора заинтересован только в одном контейнере, связанном с узлом.</span><span class="sxs-lookup"><span data-stu-id="676fd-109">A designer host is only interested in one container—the one associated with the host.</span></span> <span data-ttu-id="676fd-110">Таким образом, добавления и удаления события не вызываются, когда компонент добавлен или удален из вложенных контейнеров.</span><span class="sxs-lookup"><span data-stu-id="676fd-110">Therefore, component add and remove events are not raised when a component is added to or removed from a nested container.</span></span> <span data-ttu-id="676fd-111">Тем не менее так как службы доходят до вложенного контейнера, события изменения компонента вызываются при изменении компонента в вложенных контейнеров.</span><span class="sxs-lookup"><span data-stu-id="676fd-111">However, because services flow through to the nested container, component change events are raised when a component in a nested container is changed.</span></span>  
  
 <span data-ttu-id="676fd-112">Это несоответствие в контроле событий также влияет на возможность отмены действий, тесно связанную с сериализацией.</span><span class="sxs-lookup"><span data-stu-id="676fd-112">This disparity in event tracking also impacts undo functionality, which is closely tied to serialization.</span></span> <span data-ttu-id="676fd-113">Использует ядро Стандартная отмены <xref:System.ComponentModel.Design.IReferenceService> для отслеживания изменений, внесенных в компоненты.</span><span class="sxs-lookup"><span data-stu-id="676fd-113">The standard undo engine uses <xref:System.ComponentModel.Design.IReferenceService> to track changes made to components.</span></span> <span data-ttu-id="676fd-114">Если механизм отмены действий не может определить имя компонента с помощью службы ссылок, он игнорирует любые изменения для этого компонента.</span><span class="sxs-lookup"><span data-stu-id="676fd-114">If the undo engine cannot identify a name for a component through the reference service, the engine will ignore any changes for that component.</span></span> <span data-ttu-id="676fd-115">Эта служба автоматически распознает изменения содержащихся в нем компонентов только в том случае, если они представляются как открытые свойства только для чтения с тем же именем в их владельцев.</span><span class="sxs-lookup"><span data-stu-id="676fd-115">This service automatically recognizes changes to contained components only if they are exposed as public read-only properties of the same name in their owners.</span></span> <span data-ttu-id="676fd-116">В противном случае разработчик должен передать события изменения компонента до владельца.</span><span class="sxs-lookup"><span data-stu-id="676fd-116">Otherwise, the developer must pass component change events up to the owner.</span></span> <span data-ttu-id="676fd-117">Например, если компонент вложенных `Text` передается свойство компонента-владельца как `Address` свойство, когда `Text` изменить свойство, изменение свойств для программным образом для соответствующего `Address` свойство, иначе это изменение не будет отслеживаться операцией отмены.</span><span class="sxs-lookup"><span data-stu-id="676fd-117">For example, if a nested component’s `Text` property is resurfaced on its owning component as an `Address` property, when the `Text` property is changed, a property change must be programmatically made for the corresponding `Address` property or else that change will not be tracked by undo.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.INestedContainer" />
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <altmember cref="T:System.ComponentModel.Design.IReferenceService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NestedContainer (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NestedContainer(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.NestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.NestedContainer" Usage="new System.ComponentModel.NestedContainer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="676fd-118">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, являющийся владельцем этого вложенного контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-118">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676fd-119">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.NestedContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-119">Initializes a new instance of the <see cref="T:System.ComponentModel.NestedContainer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-120">Этот конструктор выполняет зачисление в его владельцу <xref:System.ComponentModel.IComponent.Disposed> событий, чтобы вложенных контейнеров <xref:System.ComponentModel.NestedContainer.Dispose%2A> автоматически будет вызван метод.</span><span class="sxs-lookup"><span data-stu-id="676fd-120">This constructor enlists in its owner's <xref:System.ComponentModel.IComponent.Disposed> event so that the nested container's <xref:System.ComponentModel.NestedContainer.Dispose%2A> method will automatically be called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="676fd-121">Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-121">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.NestedContainer.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateSite : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.ISite" Usage="nestedContainer.CreateSite (component, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="676fd-122">Компонент <see cref="T:System.ComponentModel.IComponent" />, для которого создается узел.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-122">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="676fd-123">Имя, которое нужно присвоить параметру <c>component</c>, или <see langword="null" />, чтобы не назначать имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-123">The name to assign to <c>component</c>, or <see langword="null" /> to skip the name assignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676fd-124">Создает внутри контейнера узел для компонента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-124">Creates a site for the component within the container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="676fd-125">Вновь созданный <see cref="T:System.ComponentModel.ISite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-125">The newly created <see cref="T:System.ComponentModel.ISite" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-126">Если `name` параметр `null`, <xref:System.ComponentModel.IComponent> добавляется вложенных контейнеров без уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="676fd-126">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the nested container without an identifying name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="676fd-127">Свойство <paramref name="component" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-127">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="nestedContainer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="676fd-128">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676fd-129">Освобождает ресурсы, используемые вложенным контейнером.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-129">Releases the resources used by the nested container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-130">Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="676fd-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="676fd-131">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="676fd-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="676fd-132"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="676fd-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="676fd-133">При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.ComponentModel.NestedContainer> ссылки.</span><span class="sxs-lookup"><span data-stu-id="676fd-133">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.NestedContainer> references.</span></span> <span data-ttu-id="676fd-134">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="676fd-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="676fd-135">
            <para>
              <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых Resources](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-135">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ service);" />
      <MemberSignature Language="F#" Value="override this.GetService : Type -&gt; obj" Usage="nestedContainer.GetService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="676fd-136">Тип <see cref="T:System.Type" /> извлекаемой службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-136">The <see cref="T:System.Type" /> of the service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="676fd-137">Получает объект службы указанного типа, если он доступен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-137">Gets the service object of the specified type, if it is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="676fd-138">Объект <see cref="T:System.Object" />, реализующий запрошенную службу, или значение <see langword="null" />, если служба не может быть разрешена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-138">An <see cref="T:System.Object" /> that implements the requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-139">Этот метод переопределяет <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="676fd-139">This method overrides the <xref:System.ComponentModel.Container.GetService%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="676fd-140">Эта реализация разрешает только запросы <xref:System.ComponentModel.INestedContainer> и <xref:System.ComponentModel.IContainer> служб.</span><span class="sxs-lookup"><span data-stu-id="676fd-140">This implementation only resolves requests for the <xref:System.ComponentModel.INestedContainer> and <xref:System.ComponentModel.IContainer> services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.GetService(System.Type)" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.NestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.INestedContainer.Owner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="676fd-141">Возвращает компонент-владелец для этого вложенного контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-141">Gets the owning component for this nested container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="676fd-142">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, являющийся владельцем этого вложенного контейнера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-142">The <see cref="T:System.ComponentModel.IComponent" /> that owns this nested container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-143">Компонент-владелец является характеристикой, отличающий вложенные контейнеры от обычных контейнеров.</span><span class="sxs-lookup"><span data-stu-id="676fd-143">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.INestedContainer.Owner" />
      </Docs>
    </Member>
    <Member MemberName="OwnerName">
      <MemberSignature Language="C#" Value="protected virtual string OwnerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwnerName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.NestedContainer.OwnerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OwnerName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ OwnerName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerName : string" Usage="System.ComponentModel.NestedContainer.OwnerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="676fd-144">Возвращает имя компонента-владельца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-144">Gets the name of the owning component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="676fd-145">Имя компонента-владельца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="676fd-145">The name of the owning component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="676fd-146">Это свойство может быть переопределено для предоставления настраиваемое имя владельца.</span><span class="sxs-lookup"><span data-stu-id="676fd-146">This property may be overridden to provide a custom owner name.</span></span> <span data-ttu-id="676fd-147">Реализация по умолчанию выполняет узел владельца <xref:System.ComponentModel.INestedSite> и вызывает метод <xref:System.ComponentModel.INestedSite.FullName%2A>, или <xref:System.ComponentModel.ISite.Name%2A> Если нет вложенной сайта.</span><span class="sxs-lookup"><span data-stu-id="676fd-147">The default implementation searches the owner's site for <xref:System.ComponentModel.INestedSite> and calls <xref:System.ComponentModel.INestedSite.FullName%2A>, or <xref:System.ComponentModel.ISite.Name%2A> if there is no nested site.</span></span> <span data-ttu-id="676fd-148">Если ни один не доступны, это свойство возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="676fd-148">If neither is available, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>