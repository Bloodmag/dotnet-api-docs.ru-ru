<Type Name="PropertyChangingEventHandler" FullName="System.ComponentModel.PropertyChangingEventHandler">
  <TypeSignature Language="C#" Value="public delegate void PropertyChangingEventHandler(object sender, PropertyChangingEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyChangingEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangingEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyChangingEventHandler(sender As Object, e As PropertyChangingEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyChangingEventHandler(System::Object ^ sender, PropertyChangingEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.PropertyChangingEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="0ba0f-101">Источник события.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="0ba0f-102">Объект <see cref="T:System.ComponentModel.PropertyChangingEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-102">A <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="0ba0f-103">Представляет метод, который будет обрабатывать событие <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> интерфейса <see cref="T:System.ComponentModel.INotifyPropertyChanging" />.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-103">Represents the method that will handle the <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> event of an <see cref="T:System.ComponentModel.INotifyPropertyChanging" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba0f-104"><xref:System.ComponentModel.PropertyChangingEventHandler> впервые появился в платформе .NET Framework версии 3.5.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-104"><xref:System.ComponentModel.PropertyChangingEventHandler> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="0ba0f-105">Дополнительные сведения см. в статье [Версии и зависимости платформы .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="0ba0f-105">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 <span data-ttu-id="0ba0f-106">При создании делегата <xref:System.ComponentModel.PropertyChangingEventHandler> необходимо указать метод, обрабатывающий событие.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-106">When you create a <xref:System.ComponentModel.PropertyChangingEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="0ba0f-107">Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-107">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="0ba0f-108">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="0ba0f-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="0ba0f-109">Дополнительные сведения о делегатах-обработчиках событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0ba0f-109">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>