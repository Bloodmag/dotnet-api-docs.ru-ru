<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc181-101">Предоставляет унифицированный способ преобразования типов значений в другие типы, а также позволяет осуществить доступ к стандартным значениям и вложенным свойствам.</span><span class="sxs-lookup"><span data-stu-id="cc181-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-102">Наиболее распространенный тип преобразователя то, которое преобразует текстовое представление и обратно.</span><span class="sxs-lookup"><span data-stu-id="cc181-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="cc181-103">Преобразователь типа для класса привязан к классу с <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="cc181-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="cc181-104">Если этот атрибут переопределен, все классы, наследующие от этого класса использовать один и тот же преобразователь типа в качестве базового класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc181-105">Для системных целей общий тип не напрямую обращаться к преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="cc181-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="cc181-106">Вместо этого доступ к конвертер с помощью <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="cc181-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="cc181-107">Дополнительные сведения см. Примеры кода, приведенные в разделе.</span><span class="sxs-lookup"><span data-stu-id="cc181-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="cc181-108">**Примечание** для нужд XAML, обработчик XAML ищет <xref:System.ComponentModel.TypeConverterAttribute> напрямую, а не через <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="cc181-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="cc181-109">Для случаев, когда необходимо <xref:System.ComponentModel.TypeDescriptor> из кода обработчика, или где создавать общие экземпляры в WPF ресурсы, допускается создание непосредственно, без указания <xref:System.ComponentModel.TypeDescriptor> или других систем отражения и типов поддержки.</span><span class="sxs-lookup"><span data-stu-id="cc181-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="cc181-110">Классы, производные от <xref:System.ComponentModel.TypeConverter> часто упоминаются в рамках как обработчик XAML преобразует значение текста инициализации или атрибут из разметки (которая по своей природе является строкой) и создает объект для представления времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="cc181-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="cc181-111">Разработчики пользовательского типа, которые собираетесь поддерживать поведение преобразования типов для XAML обычно реализовать <xref:System.ComponentModel.TypeConverter> класс, который поддерживает собственные уникальные `ConvertFrom` поведение из строки.</span><span class="sxs-lookup"><span data-stu-id="cc181-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="cc181-112">Это поведение обеспечивает преобразования типов из строк, предоставленных в качестве значения атрибута XAML и предоставляет обработчик XAML с поддержкой, необходимой для создания объекта из строки, чтобы объект могут быть созданы в графе проанализированного объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="cc181-113">Пользовательские типы или члены типов пользовательских обозначаются применение <xref:System.ComponentModel.TypeConverterAttribute> определений, с помощью атрибута ссылаются на настраиваемый <xref:System.ComponentModel.TypeConverter> реализации.</span><span class="sxs-lookup"><span data-stu-id="cc181-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="cc181-114">Дополнительные сведения см. в разделе [преобразователи типов для XAML Обзор](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="cc181-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc181-115">В следующем примере кода показано, как создать экземпляр преобразователя типов и привяжите его к классу.</span><span class="sxs-lookup"><span data-stu-id="cc181-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="cc181-116">Класс, реализующий конвертер, `MyClassConverter`, должен наследовать от <xref:System.ComponentModel.TypeConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cc181-117">При наличии свойство, имеющее перечисления, проверьте, является ли значение перечисления допустимым перед заданием свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="cc181-118">В следующем примере кода требуется, перечисления с именем `MyPropertyEnum` был объявлен.</span><span class="sxs-lookup"><span data-stu-id="cc181-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="cc181-119">Другое использование преобразователя типов общих является преобразование объекта в строку.</span><span class="sxs-lookup"><span data-stu-id="cc181-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="cc181-120">В следующем примере кода выводит имя <xref:System.Drawing.Color> хранится в переменной `c`.</span><span class="sxs-lookup"><span data-stu-id="cc181-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="cc181-121">Также можно использовать преобразователь типов для преобразования значения из его имени, как показано в следующем примере кода.</span><span class="sxs-lookup"><span data-stu-id="cc181-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="cc181-122">В следующем примере кода можно использовать преобразователь типов для вывода набора стандартных значений, поддерживаемых объектом.</span><span class="sxs-lookup"><span data-stu-id="cc181-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="cc181-123">Наследовать от <see cref="T:System.ComponentModel.TypeConverter" /> реализовать требованиями к преобразованию.</span><span class="sxs-lookup"><span data-stu-id="cc181-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="cc181-124">При наследовании от этого класса можно переопределить следующие методы:</span><span class="sxs-lookup"><span data-stu-id="cc181-124">When you inherit from this class, you can override the following methods:</span></span>  
  
-   <span data-ttu-id="cc181-125">Для поддержки преобразования пользовательского типа, переопределите <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, и <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="cc181-126">Для преобразования типов, которые необходимо повторно создать объект для изменения его значения, переопределите <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> и <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="cc181-127">Чтобы преобразовать типы, поддерживающие свойства, необходимо переопределить <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> и <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span> <span data-ttu-id="cc181-128">Если выполняется преобразование класс имеет свойства и вам необходимо реализовать свойства, можно использовать <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> класса в качестве основания для получения дескрипторов свойств.</span><span class="sxs-lookup"><span data-stu-id="cc181-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="cc181-129">При наследовании от <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, необходимо переопределить <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> и <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="cc181-130">Для преобразования типов, поддерживающих стандартные значения, переопределите <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> и <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="cc181-131">Производный тип может быть помечен как <see langword="internal" /> или <see langword="private" />, но можно создать экземпляр типа с <see cref="T:System.ComponentModel.TypeDescriptor" /> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="cc181-132">Не следует создавать небезопасный код, при условии, что вызывающий объект является доверенным.</span><span class="sxs-lookup"><span data-stu-id="cc181-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="cc181-133">Вместо этого следует считать, что вызывающие объекты могут создавать экземпляры этого типа, в режиме частичного доверия.</span><span class="sxs-lookup"><span data-stu-id="cc181-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="cc181-134">Дополнительные сведения о преобразователях типов для целей Общие (не XAML) см. в разделе [как: реализация преобразователя типов](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) или [преобразование обобщенного типа](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span><span class="sxs-lookup"><span data-stu-id="cc181-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-135">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.TypeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-136">Возвращает значение, указывающее, может ли этот преобразователь преобразовать объект одного типа в тип этого преобразователя.</span><span class="sxs-lookup"><span data-stu-id="cc181-136">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="cc181-137">Объект <see cref="T:System.Type" />, представляющий тип, из которого нужно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="cc181-138">Возвращает значение, указывающее, может ли этот преобразователь преобразовать объект заданного типа к типу этого преобразователя.</span><span class="sxs-lookup"><span data-stu-id="cc181-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-139">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-139"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-140">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="cc181-141">Никогда не возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="cc181-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-142">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="cc181-143">Объект <see cref="T:System.Type" />, представляющий тип, из которого нужно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="cc181-144">Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта заданного типа в тип этого преобразователя, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-145">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-145"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-146">Реализация в этом классе этот метод возвращает `false`, пока не `sourceType` — <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="cc181-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-147">Переопределите этот метод в соответствии с требованиями к преобразованию.</span><span class="sxs-lookup"><span data-stu-id="cc181-147">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="cc181-148">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-149">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-149">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-150">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-150">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-151">Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование данного объекта к заданному типу.</span><span class="sxs-lookup"><span data-stu-id="cc181-151">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="cc181-152">Класс <see cref="T:System.Type" />, представляющий тип, в который нужно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="cc181-153">Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование данного объекта к заданному типу.</span><span class="sxs-lookup"><span data-stu-id="cc181-153">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-154">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-154"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-155">Если `destinationType` представляет собой строку, реализация по умолчанию <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> всегда возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="cc181-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-156">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cc181-157">Класс <see cref="T:System.Type" />, представляющий тип, в который нужно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="cc181-158">Возвращает значение, показывающее, может ли этот преобразователь преобразовать объект в заданный тип с помощью указанного контекста.</span><span class="sxs-lookup"><span data-stu-id="cc181-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-159">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-159"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-160">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-161">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-162">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-163">Если `destinationType` представляет собой строку, реализация по умолчанию <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> всегда возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="cc181-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-164">Переопределите этот метод в соответствии с требованиями к преобразованию.</span><span class="sxs-lookup"><span data-stu-id="cc181-164">Override this method to provide your own conversion requirements.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-165">Приводит заданное значение к типу этого преобразователя.</span><span class="sxs-lookup"><span data-stu-id="cc181-165">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-166">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-166">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-167">Приводит заданное значение к типу этого преобразователя.</span><span class="sxs-lookup"><span data-stu-id="cc181-167">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="cc181-168"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-168">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-169">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-169">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-170">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="cc181-171">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-172">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-172">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-173">Преобразует заданный объект в тип этого преобразователя, используя указанные сведения о контексте и языке и региональных параметрах.</span><span class="sxs-lookup"><span data-stu-id="cc181-173">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="cc181-174"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-174">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-175">Разработчики пользовательского типа, которые собираетесь поддерживать поведение преобразования типов для XAML обычно реализовать <xref:System.ComponentModel.TypeConverter> класс, поддерживающий <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> поведение из строки.</span><span class="sxs-lookup"><span data-stu-id="cc181-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="cc181-176">Это поведение обеспечивает преобразования типов из строк, предоставленных в качестве значения атрибута XAML и предоставляет обработчик XAML с поддержкой, необходимой для создания объекта из строки, чтобы объект могут быть созданы в графе проанализированного объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="cc181-177">Пользовательские типы или члены типов пользовательских обозначаются применение <xref:System.ComponentModel.TypeConverterAttribute> определений, с помощью атрибута ссылаются на настраиваемый <xref:System.ComponentModel.TypeConverter> реализации.</span><span class="sxs-lookup"><span data-stu-id="cc181-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="cc181-178">В целях XAML вы обычно не предоставляется реализация ветвления на основе `culture`.</span><span class="sxs-lookup"><span data-stu-id="cc181-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="cc181-179">Это потому, что XAML предварительно компилируется в контексте среды разработки, а также сведения о культуре для среды выполнения XAML не относится к преобразованию типов XAML.</span><span class="sxs-lookup"><span data-stu-id="cc181-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="cc181-180">Дополнительные сведения см. в разделе [преобразователи типов для XAML Обзор](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="cc181-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-181">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-181">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-182">Переопределите этот метод в соответствии с требованиями к преобразованию.</span><span class="sxs-lookup"><span data-stu-id="cc181-182">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="cc181-183">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-184">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-184">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-185">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-185">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cc181-186">Реализация шаблоны для преобразователей типов, которые используются для поддержки XAML и пользовательские типы, в разделе [преобразователи типов для XAML Обзор](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="cc181-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-187">Преобразует данное значение в тип этого преобразователя, используя нейтральные язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="cc181-187">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="cc181-188">Преобразуемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-188">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-189">Преобразует заданную строку к типу этого преобразователя, используя нейтральные язык и региональные параметры.</span><span class="sxs-lookup"><span data-stu-id="cc181-189">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="cc181-190">Объект <see cref="T:System.Object" />, представляющий преобразованный текст.</span><span class="sxs-lookup"><span data-stu-id="cc181-190">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-191">Реализация по умолчанию всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-192">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-192">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-193">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="cc181-194">Преобразуемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-194">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-195">Преобразует заданную строку к типу этого преобразователя, используя нейтральные язык и региональные параметры вместе с заданным контекстом.</span><span class="sxs-lookup"><span data-stu-id="cc181-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="cc181-196">Объект <see cref="T:System.Object" />, представляющий преобразованный текст.</span><span class="sxs-lookup"><span data-stu-id="cc181-196">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-197">Исключение возникает, если строку нельзя преобразовать в соответствующий объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="cc181-198">Реализация по умолчанию всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="cc181-199">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-200">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-201">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-202">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-202">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-203">Преобразует заданный текст в объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-203">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="cc181-204">Текстовое представление преобразуемого объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-204">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-205">Преобразует заданный текст в объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-205">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="cc181-206">Объект <see cref="T:System.Object" />, представляющий преобразованный текст.</span><span class="sxs-lookup"><span data-stu-id="cc181-206">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-207">Реализация по умолчанию всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc181-208">Пример этой функции см. в разделе <xref:System.ComponentModel.TypeConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-209">Данная строка не может быть преобразована в соответствующий объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-209">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-210">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="cc181-211">Преобразуемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-211">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-212">Преобразует заданный текст в объект, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-212">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cc181-213">Объект <see cref="T:System.Object" />, представляющий преобразованный текст.</span><span class="sxs-lookup"><span data-stu-id="cc181-213">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-214">Исключение возникает, если строку нельзя преобразовать в соответствующий объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="cc181-215">Реализация по умолчанию всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="cc181-216">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-217">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-218">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-219">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-219">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-220">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="cc181-221">Объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-221">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="cc181-222">Если передано значение <see langword="null" />, используются текущие настройки языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-222">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="cc181-223">Преобразуемый объект <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-223">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-224">Преобразует заданный текст в объект, используя заданный контекст и сведения о языке и региональных параметрах.</span><span class="sxs-lookup"><span data-stu-id="cc181-224">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="cc181-225">Объект <see cref="T:System.Object" />, представляющий преобразованный текст.</span><span class="sxs-lookup"><span data-stu-id="cc181-225">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-226">Исключение возникает, если строку нельзя преобразовать в соответствующий объект.</span><span class="sxs-lookup"><span data-stu-id="cc181-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="cc181-227">Реализация по умолчанию всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="cc181-228">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-229">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-230">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-231">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-231">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-232">Преобразует заданный объект значения к указанному типу.</span><span class="sxs-lookup"><span data-stu-id="cc181-232">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-233">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-233">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cc181-234">Тип <see cref="T:System.Type" />, в который преобразуется параметр <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="cc181-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="cc181-235">Преобразует данное значение в указанный тип, используя заданные аргументы.</span><span class="sxs-lookup"><span data-stu-id="cc181-235">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="cc181-236"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-236">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-237">Наиболее распространенным типом для преобразования в и из является строкового объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="cc181-238">Данная реализация вызывает <xref:System.Object.ToString%2A> для объекта, если объект является допустимым и конечным типом является строка.</span><span class="sxs-lookup"><span data-stu-id="cc181-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc181-239">Параметр <paramref name="destinationType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-240">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-240">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-241">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="cc181-242">Объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-242">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="cc181-243">Если передано значение <see langword="null" />, используются текущие настройки языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-243">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-244">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-244">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cc181-245">Тип <see cref="T:System.Type" />, в который преобразуется параметр <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="cc181-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="cc181-246">Преобразует данный объект значения в указанный тип, используя заданные сведения о контексте, а также о языке и региональных параметрах.</span><span class="sxs-lookup"><span data-stu-id="cc181-246">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="cc181-247"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-247">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-248">Чаще всего в преобразовании участвуют строковые объекты.</span><span class="sxs-lookup"><span data-stu-id="cc181-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="cc181-249">Данная реализация вызывает <xref:System.Object.ToString%2A> для объекта, если объект является допустимым, и если конечный тип — строка.</span><span class="sxs-lookup"><span data-stu-id="cc181-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="cc181-250">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-251">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-252">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-253">Разработчики пользовательского типа, которые собираетесь поддерживать поведение преобразования типов для XAML обычно реализовать <xref:System.ComponentModel.TypeConverter> класс, поддерживающий <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> поведение из строки.</span><span class="sxs-lookup"><span data-stu-id="cc181-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="cc181-254">Эти преобразователи также может реализовывать <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> для поддержки сериализации в XAML.</span><span class="sxs-lookup"><span data-stu-id="cc181-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="cc181-255">Некоторые сценарии сериализации XAML не может быть достигнута с адекватно <xref:System.ComponentModel.TypeConverter> сама по себе.</span><span class="sxs-lookup"><span data-stu-id="cc181-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="cc181-256">В этих случаях может быть необходимо также определить <xref:System.Windows.Markup.ValueSerializer> , обрабатывающий варианты сериализации, в противном случае будет обрабатываться <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc181-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="cc181-257">Дополнительные сведения см. в разделе <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="cc181-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc181-258">Параметр <paramref name="destinationType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-259">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-259">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-260">Переопределите этот метод в соответствии с требованиями к преобразованию.</span><span class="sxs-lookup"><span data-stu-id="cc181-260">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="cc181-261">Реализация шаблоны для преобразователей типов, которые используются для поддержки XAML и пользовательские типы, в разделе [преобразователи типов для XAML Обзор](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="cc181-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-262">Преобразует указанное значение в строковое представление для нейтральных языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-262">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-263">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-263">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-264">Преобразует указанное значение в строковое представление для нейтральных языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-264">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="cc181-265">Объект <see cref="T:System.String" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-265">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-266">`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cc181-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="cc181-267">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="cc181-267">This can be `null`, so always check.</span></span> <span data-ttu-id="cc181-268">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-269">В зависимости от реализации форматирования значений можно передать возвращаемой строки обратно в средство форматирования значений для повторного создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-270">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-270">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-271">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-272">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-272">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-273">Преобразует указанное значение в строковое представление для нейтральных языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cc181-274">Объект <see cref="T:System.String" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-274">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-275">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-276">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-277">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-278">В зависимости от реализации форматирования значений можно передать возвращаемой строки обратно в средство форматирования значений для повторного создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-279">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-279">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-280">Преобразует указанное значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="cc181-280">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-281">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-281">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-282">Преобразует указанное значение в строковое представление.</span><span class="sxs-lookup"><span data-stu-id="cc181-282">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="cc181-283"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-283">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-284">В зависимости от реализации форматирования значений можно передать возвращаемой строки обратно в средство форматирования значений для повторного создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc181-285">Пример для данной функции см. в разделе <xref:System.ComponentModel.TypeConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-286">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-286">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-287">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-288">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-288">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-289">Преобразует данное значение в строку, используя данный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-289">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="cc181-290"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-290">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-291">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-292">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-293">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-294">В зависимости от реализации форматирования значений можно передать возвращаемой строки обратно в средство форматирования значений для повторного создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-295">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-295">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-296">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="cc181-297">Объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-297">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="cc181-298">Если передано значение <see langword="null" />, используются текущие настройки языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="cc181-298">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-299">Преобразуемый объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-299">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="cc181-300">Преобразует данное значение в заданный тип, используя заданный контекст и сведения о языке и региональных параметрах.</span><span class="sxs-lookup"><span data-stu-id="cc181-300">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="cc181-301"><see cref="T:System.Object" />, представляющий преобразованное значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-301">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-302">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-303">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-304">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-305">В зависимости от реализации форматирования значений можно передать возвращаемой строки обратно в средство форматирования значений для повторного создания экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-306">Преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-306">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-307">Повторно создает объект <see cref="T:System.Object" />, задающий набор значений свойств для объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="cc181-308">Интерфейс <see cref="T:System.Collections.IDictionary" />, представляющий словарь новых значений свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="cc181-309">Повторно создает объект <see cref="T:System.Object" />, задающий набор значений свойств для объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="cc181-310"><see cref="T:System.Object" />, представляющий данный <see cref="T:System.Collections.IDictionary" />, или <see langword="null" />, если объект не может быть создан.</span><span class="sxs-lookup"><span data-stu-id="cc181-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="cc181-311">Этот метод всегда возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-311">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-312">Используйте этот метод для объектов, которые являются неизменяемыми, но для которого требуется обеспечить возможность изменения свойств.</span><span class="sxs-lookup"><span data-stu-id="cc181-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="cc181-313">Словарь, предоставляемый `propertyValues` параметр содержит ряд пар имя значение, один для каждого свойства возвращается из <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc181-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-314">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="cc181-315"><see cref="T:System.Collections.IDictionary" /> новых значений свойств.</span><span class="sxs-lookup"><span data-stu-id="cc181-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="cc181-316">Создает экземпляр типа, с которым связан этот <see cref="T:System.ComponentModel.TypeConverter" />, используя заданный контекст с учетом набора значений свойств для объекта.</span><span class="sxs-lookup"><span data-stu-id="cc181-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="cc181-317"><see cref="T:System.Object" />, представляющий данный <see cref="T:System.Collections.IDictionary" />, или <see langword="null" />, если объект не может быть создан.</span><span class="sxs-lookup"><span data-stu-id="cc181-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="cc181-318">Этот метод всегда возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-318">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-319">Используйте этот метод для объектов, которые являются неизменяемыми, но для которого требуется обеспечить возможность изменения свойств.</span><span class="sxs-lookup"><span data-stu-id="cc181-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-320">Переопределите этот метод, если тип, который требуется преобразовать необходимо повторно создать объект, чтобы изменить его значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-320">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="cc181-321">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-322">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-322">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-323">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-323">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cc181-324">Словарь, предоставляемый <paramref name="propertyValues" /> параметр содержит ряд пар имя значение, один для каждого свойства возвращается из <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-325">Объект <see cref="T:System.Object" /> для преобразования или <see langword="null" />, если объект отсутствует.</span><span class="sxs-lookup"><span data-stu-id="cc181-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="cc181-326">Возвращает исключение, возникающее в случае, если невозможно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-326">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="cc181-327">Объект <see cref="T:System.Exception" />, представляющий исключение, возникающее, если преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-328">Автоматически вызывается этим методом.</span><span class="sxs-lookup"><span data-stu-id="cc181-328">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-329">Объект <see cref="T:System.Object" /> для преобразования или <see langword="null" />, если объект отсутствует.</span><span class="sxs-lookup"><span data-stu-id="cc181-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cc181-330">Объект <see cref="T:System.Type" />, представляющий тип, в который осуществлялось преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="cc181-331">Возвращает исключение, возникающее в случае, если невозможно выполнить преобразование.</span><span class="sxs-lookup"><span data-stu-id="cc181-331">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="cc181-332">Объект <see cref="T:System.Exception" />, представляющий исключение, возникающее, если преобразование не может быть выполнено.</span><span class="sxs-lookup"><span data-stu-id="cc181-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc181-333">Автоматически вызывается этим методом.</span><span class="sxs-lookup"><span data-stu-id="cc181-333">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-334">Возвращает значение, показывающее, требуется ли при изменении значения этого объекта вызывать метод <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />, чтобы создать новое значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-335">Возвращает значение, показывающее, требуется ли при изменении значения этого объекта вызывать метод <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />, чтобы создать новое значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-336">Значение <see langword="true" />, если при изменении значения этого объекта требуется вызывать метод <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> для создания нового значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-336"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-337">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="cc181-338">Возвращает значение, показывающее, требуется ли при изменении значения этого объекта вызывать метод <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />, чтобы создать новое значение, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-339">Значение <see langword="true" />, если при изменении значения этого объекта требуется вызывать метод <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> для создания нового значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-339"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-340">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-341">Переопределите этот метод, если тип, который требуется преобразовать необходимо повторно создать объект, чтобы изменить его значение.</span><span class="sxs-lookup"><span data-stu-id="cc181-341">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="cc181-342">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-343">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-343">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-344">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-344">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-345">Возвращает коллекцию свойств для типа массива, заданного параметром значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-345">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-346">Объект класса <see cref="T:System.Object" />, задающий тип массива, для которого нужно получить свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="cc181-347">Возвращает коллекцию свойств для типа массива, заданного параметром значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-347">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="cc181-348">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> со свойствами, доступными для этого типа данных, или <see langword="null" />, если свойства отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="cc181-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-349">Реализация данного метода в этом классе всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="cc181-350">По умолчанию тип не возвращает свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-350">By default, a type does not return properties.</span></span> <span data-ttu-id="cc181-351">Простая реализация этого метода может вызывать <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> для соответствующего типа данных.</span><span class="sxs-lookup"><span data-stu-id="cc181-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-352">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-353">Объект класса <see cref="T:System.Object" />, задающий тип массива, для которого нужно получить свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="cc181-354">Возвращает коллекцию свойств для типа массива, заданного параметром, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cc181-355">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> со свойствами, доступными для этого типа данных, или <see langword="null" />, если свойства отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="cc181-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-356">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-357">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-358">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-359">Реализация данного метода в этом классе всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="cc181-360">По умолчанию тип не возвращает свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-360">By default, a type does not return properties.</span></span> <span data-ttu-id="cc181-361">Простая реализация этого метода может вызывать <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> для соответствующего типа данных.</span><span class="sxs-lookup"><span data-stu-id="cc181-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-362">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-363">Объект класса <see cref="T:System.Object" />, задающий тип массива, для которого нужно получить свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="cc181-364">Массив типа <see cref="T:System.Attribute" />, используемый в качестве фильтра.</span><span class="sxs-lookup"><span data-stu-id="cc181-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="cc181-365">Возвращает коллекцию свойств для типа массива, заданного параметром value, используя заданные контекст и атрибуты.</span><span class="sxs-lookup"><span data-stu-id="cc181-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="cc181-366">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> со свойствами, доступными для этого типа данных, или <see langword="null" />, если свойства отсутствуют.</span><span class="sxs-lookup"><span data-stu-id="cc181-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-367">Реализация данного метода в этом классе всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-368">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-368">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="cc181-369">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-370">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-370">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-371">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-371">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="cc181-372">Для фильтрации массива используется массив атрибутов.</span><span class="sxs-lookup"><span data-stu-id="cc181-372">The attributes array is used to filter the array.</span></span> <span data-ttu-id="cc181-373">Атрибуты могут включать в себя <see cref="T:System.Type" /> и <see cref="T:System.Attribute" /> объектов.</span><span class="sxs-lookup"><span data-stu-id="cc181-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="cc181-374">Фильтрация определяется следующими правилами:</span><span class="sxs-lookup"><span data-stu-id="cc181-374">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="cc181-375">Объект <see cref="T:System.Type" /> рассматривается как подстановочный знак; он соответствует свойство, имеющее <see cref="T:System.Type" /> среди атрибутов.</span><span class="sxs-lookup"><span data-stu-id="cc181-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="cc181-376">Если свойство не имеет <see cref="T:System.Attribute" /> того же класса, свойство не включается в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="cc181-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cc181-377">Если атрибут является экземпляром класса <see cref="T:System.Attribute" />, свойство должно точно совпадать, или он не включен в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="cc181-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="cc181-378">Если <see cref="T:System.Attribute" /> указанный экземпляр и это свойство по умолчанию, он включен в возвращаемый массив, даже если ни один экземпляр <see cref="T:System.Attribute" /> в свойстве.</span><span class="sxs-lookup"><span data-stu-id="cc181-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-379">Возвращает значение, показывающее, поддерживаются ли свойства этим объектом.</span><span class="sxs-lookup"><span data-stu-id="cc181-379">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-380">Возвращает значение, показывающее, поддерживаются ли свойства этим объектом.</span><span class="sxs-lookup"><span data-stu-id="cc181-380">Returns whether this object supports properties.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-381">Имеет значение <see langword="true" />, если для поиска свойств этого объекта следует вызвать метод <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-381"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-382">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-383">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="cc181-384">Возвращает значение, показывающее, поддерживает ли данный объект свойства, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cc181-384">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-385">Имеет значение <see langword="true" />, если для поиска свойств этого объекта следует вызвать метод <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-385"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-386">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-387">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-387">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="cc181-388">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-389">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-389">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-390">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-390">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-391">Возвращает коллекцию стандартных значений для типа данных, для которого предназначен этот преобразователь типов.</span><span class="sxs-lookup"><span data-stu-id="cc181-391">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-392">Возвращает коллекцию стандартных значений из контекста по умолчанию для типа данных, для которого предназначен этот преобразователь типов.</span><span class="sxs-lookup"><span data-stu-id="cc181-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="cc181-393">Коллекция <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, содержащая стандартный набор допустимых значений, или <see langword="null" />, если этот тип данных не поддерживает стандартный набор значений.</span><span class="sxs-lookup"><span data-stu-id="cc181-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-394">Реализация данного метода в этом классе всегда возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-395">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, содержащий контекст формата, который может быть использован для получения дополнительных сведений о среде, из которой вызывается этот преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cc181-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-396">Этот параметр или свойства этого параметра могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-396">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cc181-397">Возвращает коллекцию стандартных значений для типа данных, для которого предназначен этот преобразователь типов при предоставлении с контекстом формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="cc181-398"><see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, содержащий стандартный набор допустимых значений, или <see langword="null" />, если этот тип данных не поддерживает стандартный набор значений.</span><span class="sxs-lookup"><span data-stu-id="cc181-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-399">Как осуществляется в <xref:System.ComponentModel.TypeConverter>, этот метод всегда возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc181-400">Пример для данной функции см. в разделе <xref:System.ComponentModel.TypeConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-401">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает стандартные значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-401">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-402">Возвращает значение, показывающее, является ли исчерпывающим списком коллекция стандартных значений, возвращаемая методом <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-403">Возвращает значение, показывающее, является ли исчерпывающим списком коллекция стандартных значений, возвращаемая методом <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-404">Имеет значение <see langword="true" />, если объект класса <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, возвращенный методом <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, является исчерпывающим списком возможных значений, значение <see langword="false" />, если возможны другие значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-404"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-405">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="cc181-406">Если список является исчерпывающим (например, для типа данных перечисления), другие значения оказываются недопустимы.</span><span class="sxs-lookup"><span data-stu-id="cc181-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="cc181-407">Если список не является исчерпывающим, то, кроме списка стандартных значений, предоставляемых методом <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>, могут существовать и другие допустимые значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="cc181-408">Если значения являются исключающими, список, возвращаемый методом <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>, не должен позволять изменять эти значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-409">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="cc181-410">Используя заданный контекст, возвращает значение, показывающее, является ли исчерпывающим списком возможных значений коллекция стандартных значений, возвращаемая методом <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-411">Имеет значение <see langword="true" />, если объект класса <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, возвращенный методом <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, является исчерпывающим списком возможных значений, значение <see langword="false" />, если возможны другие значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-411"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-412">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="cc181-413">Если список является исчерпывающим (например, для типа данных перечисления), другие значения оказываются недопустимы.</span><span class="sxs-lookup"><span data-stu-id="cc181-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="cc181-414">Если список не является исчерпывающим, то, кроме списка стандартных значений, предоставляемых методом <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>, могут существовать и другие допустимые значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="cc181-415">Если значения являются исключающими, список, возвращаемый методом <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>, не должен позволять изменять эти значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-416">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает стандартные значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-416">Override this method if the type you want to convert supports standard values.</span></span>  
  
 <span data-ttu-id="cc181-417">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-418">Этот параметр может иметь <see langword="null" />, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-418">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="cc181-419">Свойства объекта контекста могут также возвращать значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-419">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-420">Возвращает значение, показывающее, поддерживает ли объект стандартный набор значений, которые можно выбрать из списка.</span><span class="sxs-lookup"><span data-stu-id="cc181-420">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc181-421">Возвращает значение, показывающее, поддерживает ли объект стандартный набор значений, которые можно выбрать из списка.</span><span class="sxs-lookup"><span data-stu-id="cc181-421">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-422">Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> должен быть вызван для поиска общего набора значений, поддерживаемых объектом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-422"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-423">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="cc181-424">Получает значение, показывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка, используя заданную контекстную информацию.</span><span class="sxs-lookup"><span data-stu-id="cc181-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-425">Значение <see langword="true" />, если метод <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> должен быть вызван для поиска общего набора значений, поддерживаемых объектом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-425"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-426">Реализация данного метода в этом классе всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="cc181-427">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-428">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-429">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-430">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает стандартные значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-430">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc181-431">Возвращает значение, показывающее, допустим ли для этого типа данный объект значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-431">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cc181-432">Объект, допустимость которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="cc181-432">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="cc181-433">Возвращает значение, показывающее, допустим ли для этого типа данный объект значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-433">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-434">Значение <see langword="true" />, если заданное значение допустимо для этого объекта; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-434"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-435">Начиная с версии [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> метод перехватывает исключения из <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> и <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="cc181-436">Если тип входного значения вызывает <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> для возврата `false`, или если приводит входное значение <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> для вызова исключения, <xref:System.ComponentModel.TypeConverter.IsValid%2A> метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="cc181-437">Чтобы разрешить устаревшее поведение, вставьте следующие строки в файле конфигурации приложения, например application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="cc181-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-438">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает стандартные значения, которые могут быть проверены.</span><span class="sxs-lookup"><span data-stu-id="cc181-438">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="cc181-439"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> Метод используется для проверки значения внутри типа, а не для определения <paramref name="value" /> можно преобразовать в заданный тип.</span><span class="sxs-lookup"><span data-stu-id="cc181-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="cc181-440">Например <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> можно использовать для определения того, допустим ли заданное значение для типа перечисления.</span><span class="sxs-lookup"><span data-stu-id="cc181-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="cc181-441">Пример см. в разделе <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
 <span data-ttu-id="cc181-442">Можно написать собственный <c>WillConvertSucceed</c> метод путем заключения <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> и <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> методы в блоки исключения.</span><span class="sxs-lookup"><span data-stu-id="cc181-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cc181-443">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span><span class="sxs-lookup"><span data-stu-id="cc181-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="cc181-444">Объект <see cref="T:System.Object" />, допустимость которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="cc181-444">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="cc181-445">Возвращает значение, показывающее, допустим ли для этого типа и указанного контекста данный объект значения.</span><span class="sxs-lookup"><span data-stu-id="cc181-445">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="cc181-446">Значение <see langword="true" />, если заданное значение допустимо для этого объекта; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-446"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-447">Для получения дополнительных сведений о среде, из которой вызывается этот преобразователь, используйте параметр `context`.</span><span class="sxs-lookup"><span data-stu-id="cc181-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="cc181-448">Этот параметр может иметь `null`, поэтому его всегда необходимо проверять.</span><span class="sxs-lookup"><span data-stu-id="cc181-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="cc181-449">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="cc181-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="cc181-450">Начиная с версии [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> метод перехватывает исключения из <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> и <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="cc181-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="cc181-451">Если тип входного значения вызывает <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> для возврата `false`, или если приводит входное значение <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> для вызова исключения, <xref:System.ComponentModel.TypeConverter.IsValid%2A> метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="cc181-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="cc181-452">Чтобы разрешить устаревшее поведение, вставьте следующие строки в файле конфигурации приложения, например application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="cc181-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="cc181-453">Пример этой функции см. в разделе <xref:System.ComponentModel.TypeConverter> класса.</span><span class="sxs-lookup"><span data-stu-id="cc181-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cc181-454">Переопределите этот метод, если тип, который требуется преобразовать, поддерживает стандартные значения, которые могут быть проверены.</span><span class="sxs-lookup"><span data-stu-id="cc181-454">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="cc181-455"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> Метод используется для проверки значения внутри типа, а не для определения <paramref name="value" /> можно преобразовать в заданный тип.</span><span class="sxs-lookup"><span data-stu-id="cc181-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="cc181-456">Например <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> можно использовать для определения того, допустим ли заданное значение для типа перечисления.</span><span class="sxs-lookup"><span data-stu-id="cc181-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="cc181-457">Пример см. в разделе <see cref="T:System.ComponentModel.EnumConverter" />.</span><span class="sxs-lookup"><span data-stu-id="cc181-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="cc181-458">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая свойства для сортировки.</span><span class="sxs-lookup"><span data-stu-id="cc181-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="cc181-459">Массив имен в том порядке, в котором нужно представить свойства в коллекции.</span><span class="sxs-lookup"><span data-stu-id="cc181-459">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="cc181-460">Сортирует коллекцию свойств.</span><span class="sxs-lookup"><span data-stu-id="cc181-460">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="cc181-461">Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, содержащая отсортированные свойства.</span><span class="sxs-lookup"><span data-stu-id="cc181-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc181-462">Все свойства в коллекции, которые еще не включены в массиве имен добавляются в алфавитном порядке до конца.</span><span class="sxs-lookup"><span data-stu-id="cc181-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="cc181-463">Если `names` является пустым массивом или `null`, все свойства в коллекции сортируются в алфавитном порядке.</span><span class="sxs-lookup"><span data-stu-id="cc181-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>