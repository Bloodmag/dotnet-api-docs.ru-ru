<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05b5e2fac85febacacd9556e5a4aa446441d2b01" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36700290" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d92b6-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d92b6-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-102"><xref:System.ComponentModel.TypeDescriptionProvider> Класс расширяет динамически сведения о типе, связанный с типом или объекта путем добавления, изменения или скрытие такие характеристики, как атрибуты, свойства и события.</span><span class="sxs-lookup"><span data-stu-id="d92b6-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="d92b6-103">Может существовать несколько классов поставщиков дескрипторов типов, предлагающих метаданных, единое <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="d92b6-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="d92b6-104">Существует два способа, чтобы связать <xref:System.ComponentModel.TypeDescriptionProvider> с <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="d92b6-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="d92b6-105">Во время разработки, когда целевого класса можно назначить соответствующие <xref:System.ComponentModel.TypeDescriptionProviderAttribute> тег.</span><span class="sxs-lookup"><span data-stu-id="d92b6-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="d92b6-106">Во время выполнения когда один из <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> методы <xref:System.ComponentModel.TypeDescriptor> класса может быть вызван.</span><span class="sxs-lookup"><span data-stu-id="d92b6-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="d92b6-107">Эти перегруженные методы требуют целевой объект или тип его класса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="d92b6-108"><xref:System.ComponentModel.TypeDescriptionProvider> Класс основывается на родительский объект того же типа, предоставленный во время построения.</span><span class="sxs-lookup"><span data-stu-id="d92b6-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="d92b6-109">Это позволяет классы, производные от <xref:System.ComponentModel.CustomTypeDescriptor> выборочно переопределять методы.</span><span class="sxs-lookup"><span data-stu-id="d92b6-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="d92b6-110">Экземпляры <xref:System.ComponentModel.TypeDescriptionProvider> создаются только по требованию, сводя к минимуму влияние на сведения о пользовательском типе, на производительность.</span><span class="sxs-lookup"><span data-stu-id="d92b6-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="d92b6-111">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="d92b6-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="d92b6-112">
        <para>Производный тип может быть помечен как <see langword="internal" /> или <see langword="private" />, но можно создать экземпляр типа с <see cref="T:System.ComponentModel.TypeDescriptor" /> класса. Не следует создавать небезопасный код, при условии, что вызывающий объект является доверенным. Вместо этого следует считать, что вызывающие объекты могут создавать экземпляры этого типа, в режиме частичного доверия.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d92b6-112">
          <para>Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.</para>
        </span>
      </span>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d92b6-113">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-113">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d92b6-114">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-114">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-115">Этот конструктор является эквивалентен вызову другой <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> конструктор со значением параметра, который является `null`.</span><span class="sxs-lookup"><span data-stu-id="d92b6-115">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="d92b6-116">The parent type description provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-116">The parent type description provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-117">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-117">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-118">Если `parent` параметр `null`, что все <xref:System.ComponentModel.TypeDescriptionProvider> методы возвращают значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="d92b6-118">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="d92b6-119">В противном случае все <xref:System.ComponentModel.TypeDescriptionProvider> методы будут делегировать методам `parent`.</span><span class="sxs-lookup"><span data-stu-id="d92b6-119">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="d92b6-120">В следующей таблице показаны возвращаемые значения по умолчанию для <xref:System.ComponentModel.TypeDescriptionProvider> методы.</span><span class="sxs-lookup"><span data-stu-id="d92b6-120">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="d92b6-121">Метод</span><span class="sxs-lookup"><span data-stu-id="d92b6-121">Method</span></span>|<span data-ttu-id="d92b6-122">Возвращаемое значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="d92b6-122">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="d92b6-123">Вновь созданный объект посредством вызова <xref:System.Activator.CreateInstance%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-123">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="d92b6-124">Экземпляр по умолчанию <xref:System.ComponentModel.CustomTypeDescriptor> класса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-124">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="d92b6-125">Экземпляр по умолчанию <xref:System.ComponentModel.CustomTypeDescriptor> класса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-125">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="d92b6-126">`objectType` Первый параметр.</span><span class="sxs-lookup"><span data-stu-id="d92b6-126">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d92b6-127">An optional service provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-127">An optional service provider.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="d92b6-128">The type of object to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-128">The type of object to create.</span>
          </span>
          <span data-ttu-id="d92b6-129">This parameter is never <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-129">This parameter is never <see langword="null" />.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="d92b6-130">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-130">An optional array of types that represent the parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="d92b6-131">This array can be <see langword="null" /> or of zero length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-131">This array can be <see langword="null" /> or of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="d92b6-132">An optional array of parameter values to pass to the object's constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-132">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-133">Creates an object that can substitute for another data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-133">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-134">The substitute <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-134">The substitute <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-135"><xref:System.IServiceProvider> Заданные `provider` передается параметр с <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> метод <xref:System.ComponentModel.TypeDescriptor> класса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-135">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="d92b6-136">Если `provider` не `null`, поставщик услуг может использоваться поставщик описания типа для получения дополнительного контекста создавшего вызова.</span><span class="sxs-lookup"><span data-stu-id="d92b6-136">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="d92b6-137"><xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> Метод `virtual` и по умолчанию возвращает результат <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> метод Если `provider` — `null`.</span><span class="sxs-lookup"><span data-stu-id="d92b6-137">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="d92b6-138">Если `provider` — `null`, этот метод будет вызывать <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> метод родительского поставщика.</span><span class="sxs-lookup"><span data-stu-id="d92b6-138">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d92b6-139">
            <para>Если производный класс не нужно предоставлять экземпляр для замены, он просто вызвать базовую реализацию.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-139">
              <para>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d92b6-140">The object for which to get the cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-140">The object for which to get the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-141">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-141">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-142">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-142">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-143">Объект <xref:System.ComponentModel.TypeDescriptor> может потребоваться выполнять сложные операции в коллекции метаданных.</span><span class="sxs-lookup"><span data-stu-id="d92b6-143">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="d92b6-144">Так как типы не выгружаются в течение жизненного цикла домена <xref:System.ComponentModel.TypeDescriptor> автоматически кэширует результаты этих операций, в зависимости от типа класса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-144">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="d92b6-145">Однако некоторые операции используют реальные экземпляры объектов.</span><span class="sxs-lookup"><span data-stu-id="d92b6-145">However, some operations use live object instances.</span></span> <span data-ttu-id="d92b6-146">Эти операции не может быть кэширован в <xref:System.ComponentModel.TypeDescriptor> класса, так как их кэширования могли бы помешать сборщику мусора объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-146">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="d92b6-147">Вместо этого <xref:System.ComponentModel.TypeDescriptor> класс позволяет для кэш-object, доступ к <xref:System.Collections.IDictionary> пар «ключ значение» на объект существует.</span><span class="sxs-lookup"><span data-stu-id="d92b6-147">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="d92b6-148"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Метод возвращает экземпляр этого кэша.</span><span class="sxs-lookup"><span data-stu-id="d92b6-148">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="d92b6-149"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> Метод будет возвращать `null` Если кэш не поддерживается для объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-149">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="d92b6-150">Значение по умолчанию <xref:System.ComponentModel.TypeDescriptionProvider> используемые <xref:System.ComponentModel.TypeDescriptor> проверяет, является ли размещенного компонента, который реализует объект <xref:System.ComponentModel.Design.IDictionaryService> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="d92b6-150">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="d92b6-151">Если объект, он использует службу словарь для хранения кэша объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-151">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="d92b6-152">В противном случае возвращается объект `null`.</span><span class="sxs-lookup"><span data-stu-id="d92b6-152">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="d92b6-153">Другие поставщики описаний типов могут предоставлять собственную реализацию.</span><span class="sxs-lookup"><span data-stu-id="d92b6-153">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="d92b6-154">Например, зависимостей объектов можно присоединить только свойство типа <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="d92b6-154">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d92b6-155">The object for which to get the extended type descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-155">The object for which to get the extended type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-156">Gets an extended custom type descriptor for the given object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-156">Gets an extended custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-157">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-157">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-158">Расширенный дескриптор типа является настраиваемым дескриптором типа, свойства, которые добавлены в этот объект, но другие объекты, не обеспечивающий, фактически определенных в объекте.</span><span class="sxs-lookup"><span data-stu-id="d92b6-158">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="d92b6-159">Например, в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] модель компонента объекты, реализующие <xref:System.ComponentModel.IExtenderProvider> интерфейса можно присоединить другие объекты, которые находятся в том же контейнере логические свойства.</span><span class="sxs-lookup"><span data-stu-id="d92b6-159">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="d92b6-160">Перегруженный <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> методы не возвращают дескриптор типа, предоставляющий дополнительные расширенные свойства.</span><span class="sxs-lookup"><span data-stu-id="d92b6-160">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="d92b6-161"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> Метод возвращает набор этих расширенных свойств.</span><span class="sxs-lookup"><span data-stu-id="d92b6-161">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="d92b6-162"><xref:System.ComponentModel.TypeDescriptor> Автоматически объединит результаты эти два свойства коллекции.</span><span class="sxs-lookup"><span data-stu-id="d92b6-162">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="d92b6-163">Хотя [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] модель компонент поддерживает только расширенные свойства, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> может использоваться для дополнительных атрибутов, а также события, если ее поддерживает поставщик описания типа.</span><span class="sxs-lookup"><span data-stu-id="d92b6-163">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="d92b6-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> — `virtual` и по умолчанию возвращает пользовательский дескриптор типа, возвращает пустые результаты, если поставщик не родительской был передан.</span><span class="sxs-lookup"><span data-stu-id="d92b6-164"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="d92b6-165">Если родительский поставщик было передано, этот метод будет вызывать родительский поставщик <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-165">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d92b6-166">The object to get extender providers for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-166">The object to get extender providers for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-167">Gets the extender providers for the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-167">Gets the extender providers for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-168">An array of extender providers for <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-168">An array of extender providers for <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-169">
            <paramref name="instance" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-169">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="d92b6-170">The specified component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-170">The specified component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-171">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-171">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-172">The name of the specified component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-172">The name of the specified component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-173">
            <paramref name="component" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-173">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d92b6-174">Performs normal reflection against an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-174">Performs normal reflection against an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d92b6-175">An instance of the type (should not be <see langword="null" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-175">An instance of the type (should not be <see langword="null" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-176">Performs normal reflection against the given object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-176">Performs normal reflection against the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-177">The type of reflection for this <paramref name="instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-177">The type of reflection for this <paramref name="instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-178"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Метод — это версия более низкого уровня <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-178">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="d92b6-179">Если для объекта, могут размещаться не пользовательский дескриптор типа <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычных отражение для объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-179">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="d92b6-180">Используйте эту перегрузку метода, если был вызван член дескриптора типа, использующий экземпляр вместо типа.</span><span class="sxs-lookup"><span data-stu-id="d92b6-180">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-181">
            <paramref name="instance" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-181">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d92b6-182">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-182">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-183">Performs normal reflection against a type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-183">Performs normal reflection against a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-184">The type of reflection for this <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-184">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-185"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Метод — это версия более низкого уровня <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-185">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="d92b6-186">Если для объекта, могут размещаться не пользовательский дескриптор типа <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычных отражение для объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-186">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="d92b6-187">Используйте эту перегрузку метода, если был вызван член дескриптора типа, который использует тип вместо экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d92b6-187">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-188">
            <paramref name="objectType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-188">
              <paramref name="objectType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d92b6-189">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-189">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="d92b6-190">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-190">An instance of the type.</span>
          </span>
          <span data-ttu-id="d92b6-191">Can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-191">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-192">Performs normal reflection against the given object with the given type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-192">Performs normal reflection against the given object with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-193">The type of reflection for this <paramref name="objectType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-193">The type of reflection for this <paramref name="objectType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-194"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Метод — это версия более низкого уровня <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-194">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="d92b6-195">Если для объекта, могут размещаться не пользовательский дескриптор типа <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> вызывается для выполнения обычных отражение для объекта.</span><span class="sxs-lookup"><span data-stu-id="d92b6-195">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d92b6-196">
            <para>Этот метод является прототипом <see langword="virtual" />и по умолчанию возвращает <paramref name="objectType" /> Если поставщик не родительской был передан. Если родительский поставщик было передано, этот метод будет вызывать родительский поставщик <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-196">
              <para>This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">
          <span data-ttu-id="d92b6-197">The type to convert to its runtime equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-197">The type to convert to its runtime equivalent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-198">Converts a reflection type into a runtime type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-198">Converts a reflection type into a runtime type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-199">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-199">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-200"><xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> Отменяет метод <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> метод, чтобы преобразовать тип отражения обратно в тип среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="d92b6-200">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="d92b6-201">С помощью <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> метод является предпочтительным по сравнению с использованием <xref:System.Type.UnderlyingSystemType%2A> свойства, который использовался в более ранних версиях для среды выполнения тип возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="d92b6-201">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-202">
            <paramref name="reflectionType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-202">
              <paramref name="reflectionType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d92b6-203">Gets a custom type descriptor for the given type or object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-203">Gets a custom type descriptor for the given type or object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d92b6-204">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-204">An instance of the type.</span>
          </span>
          <span data-ttu-id="d92b6-205">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-205">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-206">Gets a custom type descriptor for the given object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-206">Gets a custom type descriptor for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-207">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-207">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-208">
            <paramref name="instance" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-208">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d92b6-209">The type of object for which to retrieve the type descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-209">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-210">Gets a custom type descriptor for the given type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-210">Gets a custom type descriptor for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-211">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-211">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="d92b6-212">The type of object for which to retrieve the type descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-212">The type of object for which to retrieve the type descriptor.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="d92b6-213">An instance of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-213">An instance of the type.</span>
          </span>
          <span data-ttu-id="d92b6-214">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-214">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-215">Gets a custom type descriptor for the given type and object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-215">Gets a custom type descriptor for the given type and object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-216">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-216">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d92b6-217">Этот метод является прототипом `virtual` и по умолчанию возвращает пустой дескриптор, если поставщик не родительской был передан.</span><span class="sxs-lookup"><span data-stu-id="d92b6-217">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="d92b6-218">Если родительский поставщик было передано, этот метод будет вызывать родительский поставщик <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d92b6-218">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d92b6-219">
            <para>
              <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> Метод должен возвращать пользовательский дескриптор типа для объекта. Если метод не предоставляет сведения о типе объекта, он должен возвращать <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-219">
              <para>The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object. If the method does not provide type information for the object, it should return <see langword="null" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d92b6-220">The type to test for compatibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-220">The type to test for compatibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d92b6-221">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-221">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d92b6-222">
            <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-222">
              <see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d92b6-223">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d92b6-223">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>