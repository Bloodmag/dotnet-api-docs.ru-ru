<Type Name="TypeListConverter" FullName="System.ComponentModel.TypeListConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92457af0d7932ca76b41766d49bf205a79213786" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39817386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeListConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeListConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeListConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeListConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeListConverter abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeListConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="90931-101">Предоставляет преобразователь типов, который может использоваться для заполнения списка доступными типами.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90931-101">Provides a type converter that can be used to populate a list box with available types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-102">Необходимо предоставить список типов конструктору этого `abstract` класса.</span><span class="sxs-lookup"><span data-stu-id="90931-102">You must provide the list of types to the constructor of this `abstract` class.</span></span>  
  
 <span data-ttu-id="90931-103">Дополнительные сведения о преобразователях типов см. в разделе <xref:System.ComponentModel.TypeConverter> базового класса и [как: реализация преобразователя типов](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="90931-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90931-104">Не следует создавать экземпляр <xref:System.ComponentModel.TypeListConverter>.</span><span class="sxs-lookup"><span data-stu-id="90931-104">You should never create an instance of a <xref:System.ComponentModel.TypeListConverter>.</span></span> <span data-ttu-id="90931-105">Вместо этого необходимо вызвать <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> метод <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="90931-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="90931-106">Дополнительные сведения см. в примерах <xref:System.ComponentModel.TypeConverter> базового класса.</span><span class="sxs-lookup"><span data-stu-id="90931-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="90931-107">
        <para>При наследовании от <see cref="T:System.ComponentModel.TypeListConverter" />, можно переопределить следующие методы.  -Для поддержки преобразования пользовательского типа, переопределите <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, и <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> методы.  -Для преобразования типов, которые необходимо повторно создать объект, чтобы изменить его значение, переопределите <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> и <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> методы.  -Для преобразования типов, которые поддерживают свойства, переопределите <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> и <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> методы. Если преобразуемый класс не имеет свойства и вам необходимо реализовать свойства, можно использовать <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> класс как базовый для получения дескрипторов свойств. При наследовании от <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, необходимо переопределить <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> и <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> методы.  -Для преобразования типов, которые поддерживают стандартные значения, переопределите <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> и <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> методы.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="90931-107">
          <para>When you inherit from <see cref="T:System.ComponentModel.TypeListConverter" />, you can override the following methods.  -   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.  -   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.  -   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods. If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors. When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.  -   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeListConverter (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (types As Type())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeListConverter(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeListConverter : Type[] -&gt; System.ComponentModel.TypeListConverter" Usage="new System.ComponentModel.TypeListConverter types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="90931-108">Массив типов <see cref="T:System.Type" />, используемый в качестве доступных типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-108">The array of type <see cref="T:System.Type" /> to use as the available types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-109">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.TypeListConverter" />, используя в качестве доступных типов массив типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-109">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeListConverter" /> class using the type array as the available types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-110">Типов, предоставляемых в `types` параметр может использоваться для заполнения списка доступными типами.</span><span class="sxs-lookup"><span data-stu-id="90931-110">The types provided in the `types` parameter can be used to populate a list box with the available types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-111">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-111">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="90931-112">Тип <see cref="T:System.Type" /> исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-112">The <see cref="T:System.Type" /> of the source object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-113">Возвращает значение, показывающее, может ли этот преобразователь выполнить преобразование заданного типа в <see cref="T:System.Type" /> исходного объекта, используя заданный контекст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-113">Gets a value indicating whether this converter can convert the specified <see cref="T:System.Type" /> of the source object using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-114">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-114">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeListConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-115">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-115">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="90931-116">Объект <see cref="T:System.Type" />, представляющий тип, в который необходимо выполнить преобразование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-116">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-117">Возвращает значение, указывающее, может ли данный преобразователь преобразовать объект с помощью контекста в заданный конечный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-117">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-118">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-118">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-119">Параметр `context` служит для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="90931-119">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="90931-120">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="90931-120">This can be `null`, so always check.</span></span> <span data-ttu-id="90931-121">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="90931-121">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="90931-122">
            <para>Переопределите этот метод для предоставления требованиями к преобразованию.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-122">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeListConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-123">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-123">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="90931-124">Объект <see cref="T:System.Globalization.CultureInfo" />, задающий язык и региональные параметры, используемые для представления шрифта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-124">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture used to represent the font.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="90931-125">Преобразуемый объект <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-125">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-126">Преобразует указанный объект в собственный тип преобразователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-126">Converts the specified object to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-127">
            <see cref="T:System.Object" />, представляющий преобразованное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-127">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeListConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-128">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="90931-129">Необязательный класс <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-129">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="90931-130">Если не предоставляются, предполагается использование текущего языка и региональных параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-130">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="90931-131">Преобразуемый объект <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-131">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="90931-132">Тип <see cref="T:System.Type" />, к которому следует привести значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-132">The <see cref="T:System.Type" /> to convert the value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-133">Преобразовывает указанное значение объекта в указанный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-133">Converts the given value object to the specified destination type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-134">Объект <see cref="T:System.Object" />, представляющий преобразованное значение <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-134">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-135">Чаще всего, этот метод преобразует типы и из строковых объектов.</span><span class="sxs-lookup"><span data-stu-id="90931-135">This method most commonly converts types to and from string objects.</span></span>  
  
 <span data-ttu-id="90931-136">Параметр `context` служит для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="90931-136">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="90931-137">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="90931-137">This can be `null`, so always check.</span></span> <span data-ttu-id="90931-138">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="90931-138">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90931-139">Свойство <paramref name="destinationType" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-139">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="90931-140">Преобразование не может быть выполнено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-140">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeListConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-141">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-141">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-142">Получает коллекцию стандартных значений для того типа данных, для которого предназначен данный проверяющий элемент управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-142">Gets a collection of standard values for the data type this validator is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-143">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, содержащий стандартный набор допустимых значений, или <see langword="null" />, если этот тип данных не поддерживает стандартный набор значений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-143">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-144">Параметр `context` служит для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="90931-144">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="90931-145">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="90931-145">This can be `null`, so always check.</span></span> <span data-ttu-id="90931-146">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="90931-146">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-147">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-147">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-148">Возвращает значение, показывающее, является ли список стандартных значений, возвращенных методом <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, исчерпывающим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-148">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-149">Значение <see langword="true" />, так как коллекция <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, возвращенная методом <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, является исчерпывающим списком возможных значений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-149">
              <see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span>
          </span>
          <span data-ttu-id="90931-150">Этот метод никогда не возвращает значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-150">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-151">Параметр `context` служит для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="90931-151">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="90931-152">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="90931-152">This can be `null`, so always check.</span></span> <span data-ttu-id="90931-153">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="90931-153">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="90931-154">Если список является исчерпывающим, другие значения не являются допустимыми, кроме список стандартных значений <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> предоставляет метод.</span><span class="sxs-lookup"><span data-stu-id="90931-154">When the list is exclusive, no other values are valid besides the list of standard values the <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A> method provides.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeListConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="90931-155">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-155">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90931-156">Возвращает значение, показывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка, используя заданный контекст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-156">Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90931-157">Значение <see langword="true" />, поскольку для поиска набора значений, поддерживаемых объектом, необходимо вызвать метод <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-157">
              <see langword="true" /> because <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports.</span>
          </span>
          <span data-ttu-id="90931-158">Этот метод никогда не возвращает значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90931-158">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90931-159">Параметр `context` служит для получения дополнительных сведений о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="90931-159">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="90931-160">Это может быть значение `null`, поэтому следует всегда выполнять проверку.</span><span class="sxs-lookup"><span data-stu-id="90931-160">This can be `null`, so always check.</span></span> <span data-ttu-id="90931-161">Свойства объекта контекста могут также возвращать значение `null`.</span><span class="sxs-lookup"><span data-stu-id="90931-161">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>