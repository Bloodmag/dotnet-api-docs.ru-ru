<Type Name="ImportConventionBuilder" FullName="System.Composition.Convention.ImportConventionBuilder">
  <TypeSignature Language="C#" Value="public sealed class ImportConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ImportConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportConventionBuilder sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="749fb-101">Настраивает импорт, связанный с частью.</span><span class="sxs-lookup"><span data-stu-id="749fb-101">Configures an import that is associated with a part.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, Func&lt;Type,object&gt; getConstraintValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, class System.Func`2&lt;class System.Type, object&gt; getConstraintValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, getConstraintValueFromPartType As Func(Of Type, Object)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getConstraintValueFromPartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getConstraintValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="749fb-102">Требуемое имя метаданных.</span><span class="sxs-lookup"><span data-stu-id="749fb-102">The required metadata name.</span></span></param>
        <param name="getConstraintValueFromPartType"><span data-ttu-id="749fb-103">Функция, которая предоставляет необходимое значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="749fb-103">A function that provides the required metadata value.</span></span></param>
        <summary><span data-ttu-id="749fb-104">Добавляет ограничение к импорту, требующему определенного имени и значения метаданных, которые предоставляются указанной функцией в типе части.</span><span class="sxs-lookup"><span data-stu-id="749fb-104">Adds a constraint to the import requiring the specified metadata name and the value provided by the specified function on the part type.</span></span></summary>
        <returns><span data-ttu-id="749fb-105">Построитель импорта, содержащий ограничение, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="749fb-105">An import builder containing the constraint that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, value As Object) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="749fb-106">Требуемое имя метаданных.</span><span class="sxs-lookup"><span data-stu-id="749fb-106">The required metadata name.</span></span></param>
        <param name="value"><span data-ttu-id="749fb-107">Требуемое значение метаданных.</span><span class="sxs-lookup"><span data-stu-id="749fb-107">The required metadata value.</span></span></param>
        <summary><span data-ttu-id="749fb-108">Добавляет ограничение к импорту, требующему определенного имени и значения метаданных.</span><span class="sxs-lookup"><span data-stu-id="749fb-108">Adds a constraint to the import requiring the specified metadata name and value.</span></span></summary>
        <returns><span data-ttu-id="749fb-109">Построитель импорта, содержащий ограничение, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="749fb-109">An import builder containing the constraint that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AllowDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AllowDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function AllowDefault () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AllowDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="749fb-110">Позволяет импорту получать значение по умолчанию для своего типа, если контракт не может быть предоставлен другой частью.</span><span class="sxs-lookup"><span data-stu-id="749fb-110">Allows the import to receive the default value for its type if the contract cannot be supplied by another part.</span></span></summary>
        <returns><span data-ttu-id="749fb-111">Построитель импорта, который допускает значения по умолчанию и может быть настроен дополнительно.</span><span class="sxs-lookup"><span data-stu-id="749fb-111">An import builder that allows default values and can be further configured.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (Func&lt;Type,string&gt; getContractNameFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(class System.Func`2&lt;class System.Type, string&gt; getContractNameFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (getContractNameFromPartType As Func(Of Type, String)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(Func&lt;Type ^, System::String ^&gt; ^ getContractNameFromPartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getContractNameFromPartType" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="getContractNameFromPartType"><span data-ttu-id="749fb-112">Функция, которая предоставляет имя контракта импорта.</span><span class="sxs-lookup"><span data-stu-id="749fb-112">A function that provides the contract name of the import.</span></span></param>
        <summary><span data-ttu-id="749fb-113">Задает имя контракта импорта в значение, предоставленное указанной функцией типа части.</span><span class="sxs-lookup"><span data-stu-id="749fb-113">Sets the contract name of the import to the value provided by the specified function on the part type.</span></span></summary>
        <returns><span data-ttu-id="749fb-114">Построитель импорта, содержащий имя контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="749fb-114">An import builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="749fb-115">Имя контракта импорта.</span><span class="sxs-lookup"><span data-stu-id="749fb-115">The contract name of the import.</span></span></param>
        <summary><span data-ttu-id="749fb-116">Задает имя контракта для импорта с помощью указанной строки.</span><span class="sxs-lookup"><span data-stu-id="749fb-116">Sets the contract name of the import to the specified string.</span></span></summary>
        <returns><span data-ttu-id="749fb-117">Построитель импорта, содержащий имя контракта, которое позволяет выполнять дальнейшую конфигурацию.</span><span class="sxs-lookup"><span data-stu-id="749fb-117">An import builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="749fb-118">Настраивает импорты для получения коллекции экспортов.</span><span class="sxs-lookup"><span data-stu-id="749fb-118">Configures the import to receive a collection of exports.</span></span></summary>
        <returns><span data-ttu-id="749fb-119">Построитель импорта, который может получать коллекцию экспортов и допускает дальнейшую настройку.</span><span class="sxs-lookup"><span data-stu-id="749fb-119">An import builder that can receive a collection of exports and allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany (bool isMany);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany(bool isMany) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany (isMany As Boolean) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany(bool isMany);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isMany" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isMany">
          <span data-ttu-id="749fb-120">Значение <see langword="true" /> для предоставления всех доступных соответствующих экспортов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="749fb-120"><see langword="true" /> to provide all available matching exports; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="749fb-121">Настраивает импорт для получения коллекции экспортов, возможно, представляющей все доступные соответствующие экспорты.</span><span class="sxs-lookup"><span data-stu-id="749fb-121">Configures the import to receive a collection of exports, possibly representing all available matching exports.</span></span></summary>
        <returns><span data-ttu-id="749fb-122">Построитель импорта, который может получать коллекцию экспортов и допускает дальнейшую настройку.</span><span class="sxs-lookup"><span data-stu-id="749fb-122">An import builder that can receive a collection of exports and allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>