<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LifetimeContext.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6df31d56ae5b6086311f6e6e39a28e33806ed5c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6df31d56ae5b6086311f6e6e39a28e33806ed5c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Represents a node in the lifetime tree.</source>
          <target state="translated">Представляет узел в дереве времени существования.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The <ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> object is the unit of sharing for shared parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Composition.Hosting.Core.LifetimeContext&gt;</ph> Объект — это единица для управления доступом для общих компонентов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It controls the disposal of bound parts and can be used to retrieve instances, either as part of an existing composition operation or as the basis of a new composition operation.</source>
          <target state="translated">Он управляет реализации связанных частей и может использоваться для извлечения экземпляров, либо в рамках существующей операции композиции или в качестве основы новой операции композиции.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>An individual lifetime context can be marked to contain parts that are constrained by particular sharing boundaries.</source>
          <target state="translated">Контекст отдельных времени существования может быть помечен для хранения частей, которые ограничены определенной границы общего доступа.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>This object contains two pieces of independently protected shared state: shared part instances and bound part instances.</source>
          <target state="translated">Этот объект содержит две части независимо друг от друга защищенного общего состояния: общие экземпляры частей и привязать экземпляры частей.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A shared part instance is lock-free, readable, and does not result in issues if it is added to during disposal.</source>
          <target state="translated">Экземпляр общей части без блокировки, доступные для чтения и не приводят к проблемам, если он добавляется во время реализации.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>It is protected by being locked itself.</source>
          <target state="translated">Он защищен блокируемого сам.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>Activation logic is unavoidably called under this lock.</source>
          <target state="translated">Логику активации неизбежно называется этой блокировки.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is always protected by locking <ph id="ph1">&lt;see langword="this" /&gt;</ph>, and should never be written to after disposal.</source>
          <target state="translated">Экземпляр связанные части всегда защищен, блокируя <ph id="ph1">&lt;see langword="this" /&gt;</ph>и никогда не должны записываться в после реализации.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>A bound part instance is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> under a lock in the <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> method.</source>
          <target state="translated">Экземпляр связанные части присвоено <ph id="ph1">&lt;see langword="null" /&gt;</ph> блокировки в <ph id="ph2">&lt;xref:System.Composition.Hosting.Core.LifetimeContext.Dispose&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>If writing were allowed after disposal for a bound part instance, it would result in disposable parts not being released.</source>
          <target state="translated">Если запись допускается после реализации для экземпляра связанные части, приведет к высвобождаемые частей не освобождается.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Composition.Hosting.Core.LifetimeContext">
          <source>The dispose method on a bound part is called outside of the lock.</source>
          <target state="translated">Метод dispose связанные части вызывается вне блокировки.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The part.</source>
          <target state="translated">Часть.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>Binds the lifetime of a disposable part to this lifetime context.</source>
          <target state="translated">Привязывает время существования удаляемой части к этому контексту времени жизни.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AddBoundInstance(System.IDisposable)">
          <source>The operation was performed on a disposed object.</source>
          <target state="translated">Операция выполняется с ликвидированным объектом.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>Generates an identifier that can be used to locate shared part instances.</source>
          <target state="translated">Создает идентификатор, который можно использовать для поиска общих экземпляров частей.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.AllocateSharingId">
          <source>A new unique identifier.</source>
          <target state="translated">Новый уникальный идентификатор.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.Dispose">
          <source>Releases the lifetime context and any part instances bound to it.</source>
          <target state="translated">Освобождает контекст времени жизни и все экземпляры частей, привязанные к нему.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The sharing boundary to find a lifetime context within.</source>
          <target state="translated">Общая граница, в пределах которой нужно найти контекст времени существования.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Finds the broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">Находит наиболее широкий контекст времени существования в пределах всех заданных общих границ.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>The broadest lifetime context within all of the specified sharing boundaries.</source>
          <target state="translated">Наиболее широкий контекст времени существования в пределах всех заданных общих границ.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.FindContextWithin(System.String)">
          <source>Currently, the root cannot be a boundary.</source>
          <target state="translated">В настоящее время корня не может быть границы.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The ID of the shared part.</source>
          <target state="translated">Идентификатор общей части.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An operation in which to create a part, if necessary.</source>
          <target state="translated">Операция, в которой следует при необходимости создать часть.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>An activator that can activate a new part instance, if necessary.</source>
          <target state="translated">Активатор, который может активировать новый экземпляр части, если необходимо.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>Retrieves a shared part instance with the specified ID, or if the part instance can not be found, creates and shares a part instance using the specified creator within the specified operation.</source>
          <target state="translated">Извлекает экземпляр общей части с указанным идентификатором, или, если не удается найти экземпляр части, создает и использует экземпляр части с помощью заданного создателя в указанной операции.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>The new or retrieved part.</source>
          <target state="translated">Новая или извлеченная часть.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>This method is lock-free if the part instance already exists.</source>
          <target state="translated">Этот метод является без блокировки, если экземпляр части уже существует.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>If the part instance must be created, a lock will be taken that will serialize other writes that use this method (concurrent reads will continue to be safe and lock-free).</source>
          <target state="translated">Если необходимо создать экземпляр части, блокировки будут выполнены, будет выполнять сериализацию других записей, используйте этот метод (параллельный режим чтения будет продолжать и иметь без блокировки).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Composition.Hosting.Core.LifetimeContext.GetOrCreate(System.Int32,System.Composition.Hosting.Core.CompositionOperation,System.Composition.Hosting.Core.CompositeActivator)">
          <source>It is important that the composition, and thus lock acquisition, is strictly leaf-to-root in the lifetime tree.</source>
          <target state="translated">Очень важно, композиции и таким образом получения блокировки — строго конечного к корень в дереве времени существования.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>Returns the string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">Возвращает строковое представление конкретного объекта <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph> object.</source>
          <target state="translated">Строковое представление конкретного объекта <ph id="ph1">&lt;see cref="T:System.Composition.Hosting.Core.LifetimeContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>The contract.</source>
          <target state="translated">Контракт.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>After this method returns, contains the contract instance if available; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">По возвращении этот метод содержит экземпляр контракта, если доступно; в противном случае — значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source>Retrieves a contract instance from the composition context.</source>
          <target state="translated">Извлекает экземпляр контракта из контекста композиции.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Composition.Hosting.Core.LifetimeContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance was retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если экземпляр был получен; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>