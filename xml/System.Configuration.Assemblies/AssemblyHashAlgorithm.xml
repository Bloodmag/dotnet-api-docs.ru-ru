<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyHashAlgorithm.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5060dff181314dfc69c0d9ba87fc12a49fb4e75cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">060dff181314dfc69c0d9ba87fc12a49fb4e75cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Specifies all the hash algorithms used for hashing files and for generating the strong name.</source>
          <target state="translated">Определяет все хэш-алгоритмы, используемые для хэширования файлов и создания строгого имени.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>A <ph id="ph1">`hash function``H`</ph> is a transformation that takes an input <ph id="ph2">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id="ph3">`h`</ph> (that is, <ph id="ph4">`h`</ph><ph id="ph5"> = </ph><ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</source>
          <target state="translated">Объект <ph id="ph1">`hash function``H`</ph> является преобразованием, которое принимает <ph id="ph2">`m`</ph> и возвращает строку фиксированного размера, который вызывается в хэш-значение <ph id="ph3">`h`</ph> (то есть <ph id="ph4">`h`</ph> <ph id="ph5"> = </ph> <ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.</source>
          <target state="translated">Хэш-функции, обладающие только этим свойством имеют ряд общих вычислительных применений, но при использовании в криптографии хэш-функции обычно указано, что некоторые дополнительные свойства.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The basic requirements for a cryptographic hash function are:</source>
          <target state="translated">Приводятся основные требования для криптографических хэш-функции.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The input can be of any length.</source>
          <target state="translated">Входное значение может быть любой длины.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The output has a fixed length.</source>
          <target state="translated">Выход имеет фиксированную длину.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> is relatively easy to compute for any given x.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> относительно легко вычислить для любого заданного x.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is one-way.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) является односторонней.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is collision-free.</source>
          <target state="translated"><ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) отсутствие конфликтов.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.</source>
          <target state="translated">Хэш-значение является компактным представлением более длинного сообщения или документа, из которого оно вычислено. Это значение называется хэш-кода.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>You can think of a message digest as a digital fingerprint of the larger document.</source>
          <target state="translated">Хэш-кода можно считать цифровой отпечаток большего документа.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Assemblies.AssemblyHashAlgorithm">
          <source>Examples of well-known hash functions are MD2 and SHA.</source>
          <target state="translated">Примерами хорошо известных хэш-функций являются MD2 и SHA.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Retrieves the MD5 message-digest algorithm.</source>
          <target state="translated">Извлекает хэш-алгоритм MD5.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>MD5 was developed by Rivest in 1991.</source>
          <target state="translated">Алгоритм MD5 был разработан Рональдом Райвестом в 1991 г.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.</source>
          <target state="translated">В его основе лежит алгоритм MD4, снабженный системой безопасности. MD5 работает немного медленнее, чем MD4, но более надежен.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.</source>
          <target state="translated">Этот алгоритм состоит из четырех отдельных циклов, несколько отличных от MD4.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5">
          <source>Message-digest size, as well as padding requirements, remain the same.</source>
          <target state="translated">Размер хэш-значения и требования к заполнению остаются теми же.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>A mask indicating that there is no hash algorithm.</source>
          <target state="translated">Маска, указывающая на отсутствие алгоритма хеширования.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None">
          <source>If you specify <ph id="ph1">&lt;see langword="None" /&gt;</ph> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.</source>
          <target state="translated">Если задать для многомодульной сборки значение <ph id="ph1">&lt;see langword="None" /&gt;</ph>, по умолчанию среда CLR будет использовать алгоритм SHA1, поскольку для многомодульных сборок генерация хэш значения является обязательной.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1">
          <source>A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.</source>
          <target state="translated">Маска, используемая для извлечения пересмотренного алгоритма SHA, исправляющего неопубликованный дефект в SHA.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.</source>
          <target state="translated">Маска, используемая для извлечения версии алгоритма SHA с размером хэша 256 бит.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.</source>
          <target state="translated">Маска, используемая для извлечения версии алгоритма SHA с размером хэша 384 бита.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.</source>
          <target state="translated">Маска, используемая для извлечения версии алгоритма SHA с размером хэша 512 бит.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>