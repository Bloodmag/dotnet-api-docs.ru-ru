<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0866b9a8d8027df2cd3f53a8dc6b20d77983798f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит сведения о текущей установке.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Configuration.Install.InstallContext> создается с помощью установки исполняемый файл, например InstallUtil.exe, который устанавливает сборки. Программа установки вызывает <xref:System.Configuration.Install.InstallContext> конструктор, передавая ему путь по умолчанию файл журнала и параметры командной строки.  
  
 До вызова метода его <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, или <xref:System.Configuration.Install.Installer.Uninstall%2A> методы, программа установки устанавливает <xref:System.Configuration.Install.Installer.Context%2A> свойство <xref:System.Configuration.Install.Installer> с экземпляром <xref:System.Configuration.Install.InstallContext>. Прежде чем вызывать эти методы <xref:System.Configuration.Install.Installer> , содержащий коллекцию установщиков в <xref:System.Configuration.Install.Installer.Installers%2A> наборов свойств <xref:System.Configuration.Install.Installer.Context%2A> свойства каждого из установщиков.  
  
 <xref:System.Configuration.Install.InstallContext.Parameters%2A> Свойство содержит разобранную версию командной строки, введенной для запуска исполняемого файла установки. Это свойство содержит сведения, такие как путь для файла журнала, следует ли отображать сведения журнала на консоль и необходимость отображения пользовательского интерфейса во время установки. Вызовите <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> метод, чтобы определить, является ли параметр командной строки `true`.  
  
 Используйте <xref:System.Configuration.Install.InstallContext.LogMessage%2A> используется для записи в файл журнала установки и консоль сообщения о состоянии.  
  
   
  
## Examples  
 В следующем примере демонстрируется <xref:System.Configuration.Install.InstallContext.%23ctor%2A> конструкторы, <xref:System.Configuration.Install.InstallContext.Parameters%2A> свойство и <xref:System.Configuration.Install.InstallContext.LogMessage%2A> и <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> методы <xref:System.Configuration.Install.InstallContext> класса.  
  
 Когда <xref:System.Configuration.Install.Installer.Install%2A> вызывается метод установщика, он проверяет наличие параметров из командной строки. В зависимости от того, что он отображает сообщения хода выполнения на консоль и сохраняет их в указанном файле журнала.  
  
 При вызове программы без аргументов, пустой <xref:System.Configuration.Install.InstallContext> создается. При» или файл журнала» и «/ LogtoConsole» указаны, <xref:System.Configuration.Install.InstallContext> создается путем передачи соответствующих аргументов для <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Install.InstallContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Install.InstallContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка не создает файл журнала для установки.  
  
   
  
## Examples  
  
> [!NOTE]
>  В этом примере показано, как использовать один из перегруженных версий <xref:System.Configuration.Install.InstallContext> конструктор. Другие примеры, которые могут быть доступны см. в разделах отдельных перегрузки.  
  
 При вызове программы без аргументов, пустой <xref:System.Configuration.Install.InstallContext> создается.  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath">Путь к файлу журнала для данной установки или <see langword="null" />, если файл журнала не должен быть создан.</param>
        <param name="commandLine">Параметры командной строки, введенные при запуске программы установки, или <see langword="null" />, если параметры не были введены.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Install.InstallContext" /> и создает файл журнала для установки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в установке используется [Installutil.exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md), этот конструктор создает файл журнала по указанному пути и выполняет синтаксический анализ параметров командной строки в массив <xref:System.Configuration.Install.InstallContext.Parameters%2A> свойство. Если путь к файлу журнала указан в параметрах командной строки, он используется для создания файла. Если аргумент файла журнала не указан в командной строке, значение `logFilePath` параметр используется. Отключение создания файла журнала, передайте «/ logfile = "параметр командной строки.  
  
   
  
## Examples  
 В этом примере показан фрагмент кода из примера в обзоре класса <xref:System.Configuration.Install.InstallContext> класса.  
  
 При» или файл журнала» и «/ LogtoConsole» указаны, <xref:System.Configuration.Install.InstallContext> создается путем передачи соответствующих аргументов для <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Передайте путь к файлу журнала по умолчанию в <paramref name="logFilePath" /> параметра при вызове этого конструктора. Это место, куда файл журнала создается, если только не используется параметр командной строки/logfile при запуске исполняемого файла установки.</para>
        </block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Имя проверяемого параметра командной строки.</param>
        <summary>Определяет, имеет ли заданный параметр командной строки значение <see langword="true" />.</summary>
        <returns>
          <see langword="true" />, если заданный параметр установлен в значение "yes", "true", "1" или является пустой строкой (""); иначе - <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает <xref:System.Configuration.Install.InstallContext.Parameters%2A> свойство, которое содержит разобранную версию параметров командной строки, чтобы определить, является ли указанный параметр `true`.  
  
   
  
## Examples  
 В этом примере показан фрагмент кода из примера в обзоре класса <xref:System.Configuration.Install.InstallContext> класса.  
  
 Она использует <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> метод ли `LogtoConsole` задал параметр. Если `yes`, он будет использовать <xref:System.Configuration.Install.InstallContext.LogMessage%2A> используется для записи в файл журнала установки и консоль сообщения о состоянии.  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение для записи.</param>
        <summary>Записывает сообщение на консоль и в файл журнала установки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установщик может вызывать этот метод для записи хода выполнения или другая информация о состоянии в файл журнала. Если указать параметры командной строки, отображение пользовательского интерфейса, установщик должен отображения окон сообщений и создание запросов, помимо вызова <xref:System.Configuration.Install.InstallContext.LogMessage%2A> метод. Текст, записываемый в файл журнала не будут распознаваться пользователем, если InstallUtil.exe не используется для запуска установки и «/ LogToConsole = true» указан в командной строке.  
  
   
  
## Examples  
 В этом примере показан фрагмент кода из примера в обзоре класса <xref:System.Configuration.Install.InstallContext> класса.  
  
 Она использует <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> метод ли `LogtoConsole` задал параметр. Если `yes`, он будет использовать <xref:System.Configuration.Install.InstallContext.LogMessage%2A> используется для записи в файл журнала установки и консоль сообщения о состоянии.  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает параметры командной строки, введенные во время запуска InstallUtil.exe.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.StringDictionary" /> с параметрами командной строки, введенными во время запуска исполняемого кода установки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового <xref:System.Configuration.Install.InstallContext> создания командной строки параметры анализируются в <xref:System.Configuration.Install.InstallContext.Parameters%2A> свойство. Ключи и значения параметров являются строками.  
  
   
  
## Examples  
 В этом примере показан фрагмент кода из примера в обзоре класса <xref:System.Configuration.Install.InstallContext> класса.  
  
 Пример извлекает <xref:System.Configuration.Install.InstallContext.Parameters%2A> свойство, чтобы узнать, если любой из аргументов командной строки было введено пользователем. Она также использует <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> метод ли `LogtoConsole` задал параметр. Если `yes`, он будет использовать <xref:System.Configuration.Install.InstallContext.LogMessage%2A> используется для записи в файл журнала установки и консоль сообщения о состоянии.  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">Массив, содержащий параметры командной строки.</param>
        <summary>Выполняет разбор параметров командной строки в словарь строк.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.StringDictionary" /> с разобранными параметрами командной строки.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>