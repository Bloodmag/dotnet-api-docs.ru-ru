<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46d665d28c91b354d4c501a375838f3bddf95a2f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37689151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <TypeSignature Language="F#" Value="type ProviderBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="383e7-101">Предоставляет базовую реализацию для расширяемой модели поставщика.</span>
      <span class="sxs-lookup">
        <span data-stu-id="383e7-101">Provides a base implementation for the extensible provider model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383e7-102">Модель поставщика предназначена для инкапсуляции всех или отдельных функциональных возможностей нескольких ASP.NET, таких как членство, профили и защищенной конфигурации.</span><span class="sxs-lookup"><span data-stu-id="383e7-102">The provider model is intended to encapsulate all or part of the functionality of multiple ASP.NET features, such as membership, profiles, and protected configuration.</span></span> <span data-ttu-id="383e7-103">Он позволяет разработчику создавать вспомогательные классы, предоставляющие различные реализации инкапсулированный функциональные возможности.</span><span class="sxs-lookup"><span data-stu-id="383e7-103">It allows the developer to create supporting classes that provide multiple implementations of the encapsulated functionality.</span></span> <span data-ttu-id="383e7-104">Кроме того разработчики могут создавать новые функции, с помощью модели поставщика.</span><span class="sxs-lookup"><span data-stu-id="383e7-104">In addition, developers can write new features using the provider model.</span></span> <span data-ttu-id="383e7-105">Это может быть эффективный способ поддерживать несколько реализаций возможностей функций без дублирования кода функции или записи уровня приложения, если необходимо изменить метод реализации.</span><span class="sxs-lookup"><span data-stu-id="383e7-105">This can be an effective way to support multiple implementations of a feature's functionality without duplicating the feature code or recoding the application layer if the implementation method needs to be changed.</span></span>  
  
 <span data-ttu-id="383e7-106"><xref:System.Configuration.Provider.ProviderBase> Класс является простой, содержащий только несколько базовые методы и свойства, которые являются общими для всех поставщиков.</span><span class="sxs-lookup"><span data-stu-id="383e7-106">The <xref:System.Configuration.Provider.ProviderBase> class is simple, containing only a few basic methods and properties that are common to all providers.</span></span> <span data-ttu-id="383e7-107">Специальных поставщиков (например <xref:System.Web.Security.MembershipProvider>) наследовать от <xref:System.Configuration.Provider.ProviderBase> и установить необходимые методы и свойства, зависящие от реализации поставщиков для этой функции должны поддерживать.</span><span class="sxs-lookup"><span data-stu-id="383e7-107">Feature-specific providers (such as <xref:System.Web.Security.MembershipProvider>) inherit from <xref:System.Configuration.Provider.ProviderBase> and establish the necessary methods and properties that the implementation-specific providers for that feature must support.</span></span> <span data-ttu-id="383e7-108">Зависящие от реализации поставщиков (например, <xref:System.Web.Security.SqlMembershipProvider>) в свою очередь наследует от конкретных поставщиков (в этом случае <xref:System.Web.Security.MembershipProvider>).</span><span class="sxs-lookup"><span data-stu-id="383e7-108">Implementation-specific providers (such as <xref:System.Web.Security.SqlMembershipProvider>) inherit in turn from a feature-specific provider (in this case, <xref:System.Web.Security.MembershipProvider>).</span></span>  
  
 <span data-ttu-id="383e7-109">Наиболее важный аспект модели поставщика — что реализации (например, данные сохранены как текстовый файл или в базе данных) абстрагируется от кода приложения.</span><span class="sxs-lookup"><span data-stu-id="383e7-109">The most important aspect of the provider model is that the implementation (for example, whether data is persisted as a text file or in a database) is abstracted from the application code.</span></span> <span data-ttu-id="383e7-110">Тип поставщика реализации для данной функции определен в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="383e7-110">The type of the implementation-specific provider for the given feature is designated in a configuration file.</span></span> <span data-ttu-id="383e7-111">Затем поставщик функциональным уровнем считывает в тип из файла конфигурации и выступает в качестве фабрики на код функции.</span><span class="sxs-lookup"><span data-stu-id="383e7-111">The feature-level provider then reads in the type from the configuration file and acts as a factory to the feature code.</span></span> <span data-ttu-id="383e7-112">Разработчик приложения затем можно использовать классы функции в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="383e7-112">The application developer can then use the feature classes in the application code.</span></span> <span data-ttu-id="383e7-113">Тип реализации можно выгрузить в файле конфигурации, устраняя необходимость в переписать код, чтобы вместить методологию различные реализации.</span><span class="sxs-lookup"><span data-stu-id="383e7-113">The implementation type can be swapped out in the configuration file, eliminating the need to rewrite the code to accommodate the different implementation methodology.</span></span>  
  
 <span data-ttu-id="383e7-114">Поставщики, входящий в состав ASP.NET являются главным образом абстракции реализаций данных для функции, такие как профили или членства.</span><span class="sxs-lookup"><span data-stu-id="383e7-114">The providers included with ASP.NET are mostly abstractions of data persistence implementations for features like profiles or membership.</span></span> <span data-ttu-id="383e7-115">Тем не менее эта модель могут применяться к любой другой вид функциональности, которая может быть абстрагирована и реализовать несколькими способами.</span><span class="sxs-lookup"><span data-stu-id="383e7-115">However, this model can be applied to any other kind of feature functionality that could be abstracted and implemented in multiple ways.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="383e7-116">Пример использования <xref:System.Configuration.Provider.ProviderBase> , представлена в разделе [пример реализации поставщика профилей](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span><span class="sxs-lookup"><span data-stu-id="383e7-116">For an example of how to use the <xref:System.Configuration.Provider.ProviderBase> class, see [Profile Provider Implementation Example](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="383e7-117">Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-117">Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Configuration.Provider.ProviderBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="383e7-118">Возвращает краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах (UI).</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-118">Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="383e7-119">Краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-119">A brief, friendly description suitable for display in administrative tools or other UIs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383e7-120">Если настроенный поставщик не предоставляет описание, значение <xref:System.Configuration.Provider.ProviderBase.Name%2A> возвращается свойство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="383e7-120">If a configured provider does not supply a description, the value of the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is returned as a default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="providerBase.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="383e7-121">Понятное имя поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-121">The friendly name of the provider.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="383e7-122">Коллекция пар имя/значение, представляющие особые атрибуты поставщика, определенные в конфигурации поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-122">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="383e7-123">Инициализирует построитель конфигураций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-123">Initializes the configuration builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383e7-124">Реализация базового класса отслеживает внутренне, сколько раз поставщика `Initialize` был вызван метод.</span><span class="sxs-lookup"><span data-stu-id="383e7-124">The base class implementation internally tracks the number of times the provider's `Initialize` method has been called.</span></span> <span data-ttu-id="383e7-125">Если поставщик инициализируется более одного раза, `InvalidOperationException` выдается сообщение о том, что поставщик уже инициализирован.</span><span class="sxs-lookup"><span data-stu-id="383e7-125">If a provider is initialized more than once, an `InvalidOperationException` is thrown stating that the provider is already initialized.</span></span>  
  
 <span data-ttu-id="383e7-126">Так как большинство функций вызова поставщиков <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> перед выполнением инициализации поставщика, этот метод является центрального расположения для предотвращения double инициализации.</span><span class="sxs-lookup"><span data-stu-id="383e7-126">Because most feature providers call <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> prior to performing provider-specific initialization, this method is a central location for preventing double initialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="383e7-127">Пример использования <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, см. в разделе [пример реализации поставщика профилей](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span><span class="sxs-lookup"><span data-stu-id="383e7-127">For an example of how to use <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, see [Profile Provider Implementation Example](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="383e7-128">Имя поставщика <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-128">The name of the provider is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="383e7-129">Имя поставщика имеет нулевую длину.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-129">The name of the provider has a length of zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="383e7-130">Предпринята попытка вызова поставщика <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> после того, как поставщик был инициализирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-130">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.Provider.ProviderBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="383e7-131">Возвращает понятное имя, используемое для ссылки на поставщика во время конфигурирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-131">Gets the friendly name used to refer to the provider during configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="383e7-132">Понятное имя, используемое для ссылки на поставщика во время конфигурирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="383e7-132">The friendly name used to refer to the provider during configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383e7-133">Рекомендуемый шаблон для этой строки: [*Создатель поставщика*] [*тип реализации*] [*функция*] поставщик.</span><span class="sxs-lookup"><span data-stu-id="383e7-133">The recommended pattern for this string is: [*Provider Creator*][*Implementation Type*][*Feature*]Provider.</span></span> <span data-ttu-id="383e7-134">Несмотря на то что <xref:System.Configuration.Provider.ProviderBase.Description%2A> свойство также предоставляет понятное описание, <xref:System.Configuration.Provider.ProviderBase.Name%2A> свойство используется в качестве идентификатора для поставщика.</span><span class="sxs-lookup"><span data-stu-id="383e7-134">Although the <xref:System.Configuration.Provider.ProviderBase.Description%2A> property also provides a friendly description, the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is used as an identifier for the provider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>