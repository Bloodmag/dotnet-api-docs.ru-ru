<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b7d85c08bfaed80ecff989ff455c2766e055dfa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36698402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <TypeSignature Language="F#" Value="type ProviderBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет базовую реализацию для расширяемой модели поставщика.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Модель поставщика предназначена для инкапсуляции всей или части функциональных возможностей нескольких функций ASP.NET, такие как членство, профили и защищенной конфигурации. Она позволяет разработчикам создавать вспомогательные классы, которые предоставляют несколько реализаций инкапсулированной функциональности. Кроме того разработчики могут создавать новые функции при помощи модели поставщика. Это может быть эффективным способом поддержки многих реализаций возможностей функций без дублирования кода функции или записи уровня приложения, если необходимо изменить метод реализации.  
  
 <xref:System.Configuration.Provider.ProviderBase> Класс является простой, содержащий несколько основные методы и свойства, которые являются общими для всех поставщиков. Специальных поставщиков (например, <xref:System.Web.Security.MembershipProvider>) наследуют от <xref:System.Configuration.Provider.ProviderBase> и устанавливать необходимые методы и свойства, которые должен поддерживать зависит от реализации поставщиков для этой функции. Зависит от реализации поставщиков (например, <xref:System.Web.Security.SqlMembershipProvider>) в свою очередь наследует от поставщика специальных (в данном случае <xref:System.Web.Security.MembershipProvider>).  
  
 Наиболее важный аспект модели поставщика — что реализации (например, данные сохранены как текстовый файл или в базе данных) извлекается из кода приложения. Тип зависит от реализации поставщика для данной функции определен в файле конфигурации. Затем поставщик функциональным уровнем считывает в тип из файла конфигурации и действует как фабрика на код функции. Разработчик приложения затем можно использовать классы функции в коде приложения. Тип реализации можно выгрузить в файле конфигурации, устраняя необходимость повторного написания кода для подстройки различной методологии реализации.  
  
 Поставщики, включенные с ASP.NET, главным образом абстракциями реализаций данных для таких компонентов, как профилей или членства. Однако эта модель могут быть применены на любой вид функциональности, которая может абстрагированы и реализован несколькими способами.  
  
   
  
## Examples  
 Пример использования <xref:System.Configuration.Provider.ProviderBase> см. в описании [пример реализации поставщика профилей](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Configuration.Provider.ProviderBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах (UI).</summary>
        <value>Краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если настроенный поставщик не предоставляет описание, значение <xref:System.Configuration.Provider.ProviderBase.Name%2A> свойство возвращается как значение по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="providerBase.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Понятное имя поставщика.</param>
        <param name="config">Коллекция пар "имя-значение", представляющих атрибуты поставщика, указанные в конфигурации для этого поставщика.</param>
        <summary>Инициализирует построитель конфигураций.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация базового класса внутренне отслеживает количество раз, поставщика `Initialize` был вызван метод. Если более одного раза, инициализации поставщика `InvalidOperationException` создается исключение о том, что поставщик уже инициализирован.  
  
 Так как большинство поставщиков вызов <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> перед выполнением инициализации поставщика, этот метод является центрального расположения для предотвращения двойные инициализации.  
  
   
  
## Examples  
 Пример использования <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, в разделе [пример реализации поставщика профилей](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Имя поставщика: <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Имя поставщика имеет нулевую длину.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринятая попытка вызвать <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> в поставщике после инициализации поставщика.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.Provider.ProviderBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает понятное имя, используемое для ссылки на поставщика во время конфигурирования.</summary>
        <value>Понятное имя, используемое для ссылки на поставщика во время конфигурирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рекомендуемый шаблон для этой строки: [*Создатель поставщика*] [*тип реализации*] [*функция*] поставщика. Несмотря на то что <xref:System.Configuration.Provider.ProviderBase.Description%2A> свойств также предоставляет понятное описание, <xref:System.Configuration.Provider.ProviderBase.Name%2A> свойство используется в качестве идентификатора для поставщика.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>