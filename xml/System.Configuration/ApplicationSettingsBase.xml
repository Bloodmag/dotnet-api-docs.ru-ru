<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0040a0585c9b345ede611c5c918a67c6203f833" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36698395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1a04b-101">Действует, как базовый класс для извлечения конкретных классов-оболочек, чтобы реализовать функцию параметров приложения в приложениях Windows Forms.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a04b-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-102"><xref:System.Configuration.ApplicationSettingsBase> Добавляет следующие функциональные возможности для <xref:System.Configuration.SettingsBase> класс, который используется веб-приложениями:</span><span class="sxs-lookup"><span data-stu-id="1a04b-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="1a04b-103">Возможность определять атрибуты в производном классе-оболочке параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="1a04b-104"><xref:System.Configuration.ApplicationSettingsBase> поддерживает декларативной модели, используемой для свойства класса программы-оболочки, как описано далее.</span><span class="sxs-lookup"><span data-stu-id="1a04b-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="1a04b-105">Более высокого уровня <xref:System.Configuration.ApplicationSettingsBase.Save%2A> и <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="1a04b-106">Дополнительная проверка события, которые можно обрабатывать для обеспечения правильного отдельных параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="1a04b-107">В архитектура параметров приложения, для доступа к группе свойств параметров необходимо унаследовать класс конкретной программы-оболочки <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="1a04b-108">Класс-оболочку настраивает <xref:System.Configuration.ApplicationSettingsBase> одним из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="1a04b-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="1a04b-109">Доступ к каждому свойству параметров соответствующих строго типизированное общее свойство добавляется класс-оболочку.</span><span class="sxs-lookup"><span data-stu-id="1a04b-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="1a04b-110">Это свойство имеет `get` и `set` методы доступа для чтения и записи параметров приложения, но только `get` метод доступа для параметры только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="1a04b-111">Выделенные атрибуты должны применяться к общим свойствам класса-оболочки для указания характеристики свойства параметров, таких как область действия (приложение или пользователь), является ли параметр должен поддерживать роуминг, значение по умолчанию для параметр поставщика параметров для использования и т. д.</span><span class="sxs-lookup"><span data-stu-id="1a04b-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="1a04b-112">Каждое свойство, необходимо указать ее области действия с помощью <xref:System.Configuration.ApplicationScopedSettingAttribute> или <xref:System.Configuration.UserScopedSettingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="1a04b-113">Параметры приложения доступны только для чтения если значение по умолчанию <xref:System.Configuration.LocalFileSettingsProvider> используется.</span><span class="sxs-lookup"><span data-stu-id="1a04b-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="1a04b-114"><xref:System.Configuration.ApplicationSettingsBase> Класс использует отражение для обнаружения этих атрибутов во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="1a04b-115">Большая часть этой информации предается на уровень поставщика параметров, который отвечает за хранение, формат хранения и т. д.</span><span class="sxs-lookup"><span data-stu-id="1a04b-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="1a04b-116">Если приложение имеет несколько классов-оболочек параметров, каждый класс определяет *группы параметров*.</span><span class="sxs-lookup"><span data-stu-id="1a04b-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="1a04b-117">Каждая группа имеет следующие характеристики:</span><span class="sxs-lookup"><span data-stu-id="1a04b-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="1a04b-118">Группа может содержать любое число или тип параметров свойств.</span><span class="sxs-lookup"><span data-stu-id="1a04b-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="1a04b-119">Если имя группы не задано явным образом с помощью класса-оболочки с оформления <xref:System.Configuration.SettingsGroupNameAttribute>, то имя создается автоматически.</span><span class="sxs-lookup"><span data-stu-id="1a04b-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="1a04b-120">По умолчанию все клиентские приложения используют <xref:System.Configuration.LocalFileSettingsProvider> для хранения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="1a04b-121">Если требуемого поставщика альтернативных параметров, то класс-оболочку или свойства должен быть снабжен атрибутом соответствующий <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="1a04b-122">Дополнительные сведения об использовании параметров приложения см. в разделе [параметры приложения для Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-123">В следующем примере кода показано использование параметров приложения, чтобы сохранить следующие атрибуты главной формы: расположение, размер, цвет фона и текст заголовка.</span><span class="sxs-lookup"><span data-stu-id="1a04b-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="1a04b-124">Все эти атрибуты сохраняются в виде свойств параметров одного приложения в `FormSettings` класс с именем `FormLocation`, `FormSize`, `FormBackColor` и `FormText`соответственно.</span><span class="sxs-lookup"><span data-stu-id="1a04b-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="1a04b-125">Все за исключением для `FormText` и `Size` данные привязаны к их свойствам связанной форме и иметь значение по умолчанию, установка значения применяются с помощью <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="1a04b-126">Форма содержит четыре дочерних элементов управления, которые имеют следующие имена и функции:</span><span class="sxs-lookup"><span data-stu-id="1a04b-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="1a04b-127">Кнопки с именем `btnBackColor` используется для отображения **цвет** стандартным диалоговым окном.</span><span class="sxs-lookup"><span data-stu-id="1a04b-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="1a04b-128">Кнопки с именем `btnReload` позволяет <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="1a04b-129">Кнопки с именем `btnReset` позволяет <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="1a04b-130">Текстовое поле с именем `tbStatus` используется для отображения состояния сведений о программе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="1a04b-131">Обратите внимание, что после каждого выполнения приложения, дополнительный периодический символ добавляется текст заголовка формы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="1a04b-132">Для этого примера кода требуются формы с <xref:System.Windows.Forms.ColorDialog> класс с именем `colorDialog1`и <xref:System.Windows.Forms.StatusStrip> управления <xref:System.Windows.Forms.ToolStripStatusLabel> с именем `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="1a04b-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="1a04b-133">Кроме того, требуется три <xref:System.Windows.Forms.Button> объектов с именем `btnReload`, `btnReset`, и `btnBackColor`.</span><span class="sxs-lookup"><span data-stu-id="1a04b-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-134">Инициализирует экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-134">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-135">Инициализирует экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" /> в его состояние по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-136">Конструктор по умолчанию было разработано для работы в предположении, что имеется компонент, не связанные с текущей параметры класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-136">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="1a04b-137">При создании экземпляра класса-оболочки, наследованный код автоматически выполнит следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1a04b-137">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="1a04b-138">Отображение класса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-138">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="1a04b-139">Для каждого свойства в оболочку отмечены либо `[UserScopedSettingAttribute]` или `[ApplicationScopedSettingAttribute]`, соответствующий <xref:System.Configuration.SettingsProperty> создается.</span><span class="sxs-lookup"><span data-stu-id="1a04b-139">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="1a04b-140">Каждый <xref:System.Configuration.SettingsProperty> имеет некоторые его свойства набора данных на основе других атрибутов, которые при необходимости присутствуют в свойства программы-оболочки, такие как значение по умолчанию или поставщик параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-140">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="1a04b-141">Все остальные атрибуты просто размещаются в контейнере атрибут <xref:System.Configuration.SettingsProperty.Attributes%2A> свойство <xref:System.Configuration.SettingsProperty> класса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-141">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="1a04b-142">Все <xref:System.Configuration.SettingsProperty> объекты добавляются в <xref:System.Configuration.SettingsPropertyCollection> представленный <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> свойство <xref:System.Configuration.ApplicationSettingsBase> класса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-142">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="1a04b-143">Эта коллекция передается в <xref:System.Configuration.SettingsBase.Initialize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a04b-143">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="1a04b-144">Как следует из шага 3 было сказано ранее, <xref:System.Configuration.ApplicationSettingsBase> работает в собственном коде с несколькими атрибутами свойства, в частности следующие: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, и <xref:System.Configuration.SettingsSerializeAsAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-144">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="1a04b-145">Все другие параметры атрибутов просто передается в соответствующий базовый поставщик.</span><span class="sxs-lookup"><span data-stu-id="1a04b-145">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="1a04b-146">Компонент, который будет действовать, как владелец объекта параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-146">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-147">Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-147">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-148">Этот конструктор полностью эквивалентен <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> конструктор с помощью вызова:</span><span class="sxs-lookup"><span data-stu-id="1a04b-148">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="1a04b-149">Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.</span><span class="sxs-lookup"><span data-stu-id="1a04b-149">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1a04b-150">Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-150">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="1a04b-151">
            <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-151">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-152">Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный ключ параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-152">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-153">Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> значение из свойства `settingsKey` параметра.</span><span class="sxs-lookup"><span data-stu-id="1a04b-153">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="1a04b-154">Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки параметров в том же домене приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-154">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="1a04b-155">Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.</span><span class="sxs-lookup"><span data-stu-id="1a04b-155">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="1a04b-156">Компонент, который будет действовать, как владелец объекта параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-156">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="1a04b-157">
            <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-157">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-158">Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца и ключ параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-158">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-159"><xref:System.ComponentModel.IComponent> Объекта, указанного параметром `owner` параметр выступает в качестве владельца текущего экземпляра этого класса параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-159">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="1a04b-160">Во время инициализации параметров класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>, владелец сайта запрашиваются <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-160">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="1a04b-161">Если оно существует, он используется вместо настройки собственного поставщика для всех свойств класса-оболочки, в соответствии с <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-161">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="1a04b-162">Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> значение из свойства `settingsKey` параметра.</span><span class="sxs-lookup"><span data-stu-id="1a04b-162">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="1a04b-163">Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки в одном домене приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-163">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="1a04b-164">Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.</span><span class="sxs-lookup"><span data-stu-id="1a04b-164">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1a04b-165">Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-165">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-166">Возвращает контекст параметров приложения, связанный с группой параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-166">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-167">
            <see cref="T:System.Configuration.SettingsContext" /> связан с группой приложений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-167">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-168">Каждый класс-оболочку параметров производными <xref:System.Configuration.ApplicationSettingsBase> имеет контекст, связанный с ним.</span><span class="sxs-lookup"><span data-stu-id="1a04b-168">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="1a04b-169">Контекст, передаваемый поставщику параметров для каждого свойства, чтобы определить, как используется свойство.</span><span class="sxs-lookup"><span data-stu-id="1a04b-169">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="1a04b-170">Поэтому контекст действует как подсказка, чтобы помочь определить наилучший способ сохранения связанных значений параметров приложения поставщика параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-170">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="1a04b-171">Напротив <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> свойство позволяет поставщику параметров для устранения неоднозначности несколько экземпляров того же класса программы-оболочки.</span><span class="sxs-lookup"><span data-stu-id="1a04b-171">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="1a04b-172">Объект <see cref="T:System.String" />, содержащий имя свойства параметров, значение которого необходимо вернуть.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-172">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-173">Возвращает значение именованного свойства параметров для предыдущей версии того же приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-173">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a04b-174">
            <see cref="T:System.Object" />, содержащий значение указанного <see cref="T:System.Configuration.SettingsProperty" />, если он найден; в противном случае — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-174">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-175"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Метод часто используется в сочетании с <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> метод при переносе параметров приложения во время установки новой версии приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-175">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="1a04b-176">Свойство не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-176">The property does not exist.</span>
          </span>
          <span data-ttu-id="1a04b-177">Свойство равно нулю или не может быть найдено в хранилище данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-177">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="1a04b-178">
            <see cref="T:System.String" />, содержащий имя свойства для доступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-178">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-179">Возвращает или задает значение указанного свойства параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-179">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-180">Если найден, то значение именованного свойства параметров; в противном случае — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-180">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-181"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> Свойство, также известные как индексатор, обычно используется в параметрах класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-181">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="1a04b-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> открытое свойство класса-оболочки привязывает к соответствующему свойству параметры.</span><span class="sxs-lookup"><span data-stu-id="1a04b-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="1a04b-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> вызывает несколько событий в зависимости от выполняемой операции:</span><span class="sxs-lookup"><span data-stu-id="1a04b-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="1a04b-184">В первый раз, получить свойство, <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> событие.</span><span class="sxs-lookup"><span data-stu-id="1a04b-184">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="1a04b-185">Если свойство имеет значение, <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> событие.</span><span class="sxs-lookup"><span data-stu-id="1a04b-185">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="1a04b-186">Если обработчик не отменяет событие, а затем задать значение свойства и <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-186">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="1a04b-187">Нет свойств, связанных с текущей программой-оболочкой, или указанное свойство не может быть найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-187">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="1a04b-188">Предпринята попытка задать свойство, доступное только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-188">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="1a04b-189">Предоставленное значение имеет несовместимый со свойством параметров тип значения во время операции задания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-189">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1a04b-190">Не удалось проанализировать файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-190">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="1a04b-191">Источник события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-191">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="1a04b-192">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-192">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-193">Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-193">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-194">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1a04b-195">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1a04b-196">Метод <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="1a04b-196">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1a04b-197">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1a04b-198">
            <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-198">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="1a04b-199">Источник события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-199">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="1a04b-200">Объект <see cref="T:System.Configuration.SettingChangingEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-200">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-201">Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-201">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-202">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1a04b-203">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1a04b-204">Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="1a04b-204">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1a04b-205">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1a04b-206">
            <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-206">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="1a04b-207">Источник события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-207">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="1a04b-208">Объект <see cref="T:System.Configuration.SettingsLoadedEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-208">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-209">Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-209">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-210">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-210">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1a04b-211">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-211">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1a04b-212">Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="1a04b-212">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1a04b-213">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-213">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1a04b-214">
            <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-214">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="1a04b-215">Источник события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-215">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="1a04b-216">Объект <see cref="T:System.ComponentModel.CancelEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-216">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a04b-217">Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-217">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-218">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1a04b-219">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1a04b-220">Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="1a04b-220">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1a04b-221">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1a04b-222">
            <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-222">
              <para>When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-223">Возвращает коллекцию свойств параметров в программе-оболочке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-223">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-224">
            <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий все объекты <see cref="T:System.Configuration.SettingsProperty" />, используется в текущей программе-оболочке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-224">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-225">`get` Доступа <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> свойство отражает по метаданным класс-оболочку параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, динамически определите набор свойств параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-225">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="1a04b-226"><xref:System.Configuration.ApplicationSettingsBase> Класс изначально распознает определенные характеристики параметра приложения, например его имя, тип свойства, поставщик параметров, значение по умолчанию считать только состояния и преимущество сериализации.</span><span class="sxs-lookup"><span data-stu-id="1a04b-226">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="1a04b-227">Эти характеристики отражаются как свойства в <xref:System.Configuration.SettingsProperty> класса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-227">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="1a04b-228">Все другие атрибуты свойства параметров просто передаются связанному поставщику параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-228">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1a04b-229">Связанный поставщик параметров не может быть найден или не удалось создать его экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-229">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-230">Возникает после изменения свойства параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-230">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-231"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> Событие возникает при изменении свойства параметров через `set` доступа <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод, или для любого свойства, которое восстанавливается при вызове <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-231">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="1a04b-232">Соответствующее отсутствует `PropertyChanging` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> событий.</span><span class="sxs-lookup"><span data-stu-id="1a04b-232">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-233">Возвращает коллекцию значений свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-233">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-234">
            <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> значения свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-234">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-235">Возвращает коллекцию поставщиков параметров приложения, используемую программой-оболочкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-235">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-236">
            <see cref="T:System.Configuration.SettingsProviderCollection" /> содержит все объекты <see cref="T:System.Configuration.SettingsProvider" />, используемые свойствами параметров текущей программы-оболочки параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-236">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-237"><xref:System.Configuration.SettingsProviderAttribute> Определяет, какой поставщик параметра используется класс-оболочку параметров или свойства отдельных параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-237">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="1a04b-238">Если этот атрибут не указан, будет использовать клиентское приложение <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-238">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-239">Обновляет значения свойств параметров приложения из постоянного хранилища.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-239">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-240"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Метод очищает в настоящее время кэшированные значения свойств, вызывает перезагрузка этих значений из постоянного хранилища, если впоследствии осуществляется.</span><span class="sxs-lookup"><span data-stu-id="1a04b-240">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="1a04b-241">Этот метод выполняет следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1a04b-241">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="1a04b-242">В настоящее время кэшированные свойства очищается, сняв коллекции, представленной <xref:System.Configuration.SettingsBase.PropertyValues%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a04b-242">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="1a04b-243">Он выдает <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> событий для каждого члена <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="1a04b-243">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="1a04b-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ситуация отличается от <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> в том, что первый из них будет загружать последний набор приложения сохраненные значения параметров, в то время как второй загрузить сохраненные значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a04b-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-245">В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> метода, вызываемого в теле <xref:System.Windows.Forms.Control.Click> обработчик событий для кнопки с именем `btnReload`.</span><span class="sxs-lookup"><span data-stu-id="1a04b-245">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="1a04b-246">В результате этого вызова сохраненные значения параметров приложения перезагружаются в их соответствующие свойства.</span><span class="sxs-lookup"><span data-stu-id="1a04b-246">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="1a04b-247">Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-247">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-248">Восстанавливает постоянные значения параметров приложения в их соответствующие свойства по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-248">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-249"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Метод перезаписывает свойства параметров пользователя путем восстановления в данный момент сохраненного значения параметров каждого приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-249">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="1a04b-250">Этот метод выполняет следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1a04b-250">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="1a04b-251">Он вызывает <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> метод для каждого поставщика параметров, который поддерживает этот дополнительный метод.</span><span class="sxs-lookup"><span data-stu-id="1a04b-251">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="1a04b-252">Он вызывает <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> способ принудительного обновления значений свойств параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-252">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="1a04b-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ситуация отличается от <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> в том, что первый из них будет загружать последний набор приложения сохраненные значения параметров, в то время как второй загрузить сохраненные значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a04b-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-254">В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> метода, вызываемого в теле <xref:System.Windows.Forms.Control.Click> обработчик событий для кнопки с именем `btnReset`.</span><span class="sxs-lookup"><span data-stu-id="1a04b-254">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="1a04b-255">В результате этого вызова сохраненные значения по умолчанию параметров приложения перезагружаются в их соответствующие свойства.</span><span class="sxs-lookup"><span data-stu-id="1a04b-255">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="1a04b-256">Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-256">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1a04b-257">Не удалось проанализировать файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-257">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-258">Сохраняет текущие значения свойств параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-258">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-259"><xref:System.Configuration.ApplicationSettingsBase.Save%2A> Метод записывает текущее значение каждого свойства параметров к своему хранилищу данных.</span><span class="sxs-lookup"><span data-stu-id="1a04b-259">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="1a04b-260">Для каждого свойства, этот метод вызывает метод <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> связанный поставщик параметров метода.</span><span class="sxs-lookup"><span data-stu-id="1a04b-260">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="1a04b-261">Этот метод отличается от реализации базового класса, он выдает <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> перед значения записываются события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-261">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="1a04b-262">Если только параметры, определенные параметры приложения, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> будет не влияет на и возвращать никакого сообщения об ошибке, если вызывается со значением по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-262">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="1a04b-263"><xref:System.Configuration.LocalFileSettingsProvider> сохраняет только параметры пользователя.</span><span class="sxs-lookup"><span data-stu-id="1a04b-263"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1a04b-264">Нет соответствующего метода загрузки, так как значения параметров приложения автоматически загружаются во время настройки класса-оболочки.</span><span class="sxs-lookup"><span data-stu-id="1a04b-264">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="1a04b-265">В отличие от этого эти значения не сохраняются автоматически при завершении приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-265">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="1a04b-266">Таким образом, необходимо явным образом вызвать <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метод для сохранения текущих значений параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-266">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="1a04b-267">Это обычно выполняется в <xref:System.Windows.Forms.Form.Closing> первичного или содержащие обработчик событий <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-267">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-268">В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Save%2A> вызов из метода <xref:System.Windows.Forms.Form.Closing> обработчик событий для основной формы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-268">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="1a04b-269">Этот метод также добавляет дополнительный период для свойства параметров, связанных с формой <xref:System.Windows.Forms.Control.Text%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1a04b-269">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="1a04b-270">Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-270">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-271">Возникает перед изменением значения свойства параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-271">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-272"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> Событие возникает перед изменением значения свойства параметров приложения через <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a04b-272">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="1a04b-273">Данное событие не возникает, когда <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> вызываются методы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-273">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="1a04b-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> может быть отменено через <xref:System.Configuration.SettingChangingEventArgs> класс данных события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="1a04b-275">Как правило, используется <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> событий для обработки оперативной проверки свойства отдельных параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-275">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="1a04b-276">Дополнительные сведения о проверке см. в разделе [как: проверка параметров приложения](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span><span class="sxs-lookup"><span data-stu-id="1a04b-276">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="1a04b-277">Соответствующее отсутствует `SettingChanged` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> событий.</span><span class="sxs-lookup"><span data-stu-id="1a04b-277">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-278">В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> обработчик событий для объекта типа `FormSettings`, который является производным от класс-оболочку <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-278">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="1a04b-279">Обработчик отображает сведения о событии в текстовое поле с именем `tbStatus`.</span><span class="sxs-lookup"><span data-stu-id="1a04b-279">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="1a04b-280">Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-280">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-281">Возвращает или задает ключ параметров для группы параметров приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-281">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a04b-282">
            <see cref="T:System.String" /> содержит ключ параметров для текущей группы параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-282">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-283"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Свойство предоставляется для обеспечения клиентского кода, в частности для устранения неоднозначности между несколькими экземплярами одного класса параметров приложения поставщика параметров.</span><span class="sxs-lookup"><span data-stu-id="1a04b-283">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="1a04b-284">Если класс-оболочку параметров разработано с использованием единый шаблон, может быть несколько экземпляров одного класса параметров приложения в одном приложении.</span><span class="sxs-lookup"><span data-stu-id="1a04b-284">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="1a04b-285">Значение <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должно быть установлено в соответствии с как значения свойств, предназначены для совместного использования.</span><span class="sxs-lookup"><span data-stu-id="1a04b-285">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="1a04b-286">Если свойства параметров оболочки должны быть совместно используется всеми экземплярами оболочки в одном приложении, затем <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должны иметь одинаковое значение во всех экземплярах.</span><span class="sxs-lookup"><span data-stu-id="1a04b-286">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="1a04b-287">Это поведение по умолчанию <xref:System.Configuration.ApplicationSettingsBase> класса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-287">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="1a04b-288">Если свойства параметров оболочки предназначены для каждого экземпляра, затем <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должен иметь уникальное значение для каждого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1a04b-288">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="1a04b-289"><xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> Версия конструктора позволяет инициализировать <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> в уникальную строку.</span><span class="sxs-lookup"><span data-stu-id="1a04b-289">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="1a04b-290">Напротив <xref:System.Configuration.ApplicationSettingsBase.Context%2A> указания предоставляет свойство поставщику параметров, чтобы он мог сохранять значения эффективного и управляемым штатным образом.</span><span class="sxs-lookup"><span data-stu-id="1a04b-290">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="1a04b-291"><xref:System.Configuration.SettingChangingEventArgs> Класс содержит аналогичное <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> свойство, которое помогает выявить источник <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> события.</span><span class="sxs-lookup"><span data-stu-id="1a04b-291">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-292">Возникает после извлечения параметров приложения из хранилища.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-292">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-293"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> Событие происходит только после первоначального `get` доступа первого свойства конфигурации, используемые, обычно с помощью <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1a04b-293">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="1a04b-294">Последующие доступы используют значения свойства параметров, которые локально кэшируются.</span><span class="sxs-lookup"><span data-stu-id="1a04b-294">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="1a04b-295"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> И <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы будут удалены все кэшированные значения, это событие будет вызываться снова при доступе последующие свойства.</span><span class="sxs-lookup"><span data-stu-id="1a04b-295">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-296">Возникает перед сохранением значений в хранилище данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-296">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-297"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> Событие <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метода, прежде чем он сохраняет свойства параметров приложения в магазин связанные данные.</span><span class="sxs-lookup"><span data-stu-id="1a04b-297">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="1a04b-298">Соответствующий обработчик событий может отменить это событие.</span><span class="sxs-lookup"><span data-stu-id="1a04b-298">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a04b-299">В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> обработчик событий для объекта типа `FormSettings`, который является производным от класс-оболочку <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-299">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="1a04b-300">Обработчик запросов пользователя, чтобы сохранить текущие значения свойств параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-300">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="1a04b-301">Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="1a04b-301">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a04b-302">Обновляет параметры приложения в соответствии с последней установкой приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-302">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a04b-303"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> Метод выполняет два действия, чтобы обеспечить плавный переход на новую версию приложения:</span><span class="sxs-lookup"><span data-stu-id="1a04b-303">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="1a04b-304">Уведомляет о всех поставщиков соответствующие параметры наличия обновленного приложения посредством вызова их <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> метод, при условии, что они реализованы <xref:System.Configuration.IApplicationSettingsProvider> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1a04b-304">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="1a04b-305">Это действие не выполняется, если класс-оболочку параметров помечается <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1a04b-305">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="1a04b-306">Перезагружает значения для всех параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-306">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="1a04b-307">Можно переопределить поведение по умолчанию <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> для реализации пользовательских обновление или слияние поведение.</span><span class="sxs-lookup"><span data-stu-id="1a04b-307">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="1a04b-308">Используйте <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> метод для извлечения отдельных значений для параметра для более ранней версии приложения.</span><span class="sxs-lookup"><span data-stu-id="1a04b-308">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="1a04b-309">Примеры обновления пользовательского режима работы.</span><span class="sxs-lookup"><span data-stu-id="1a04b-309">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="1a04b-310">С помощью новой политики по умолчанию, переопределите один или несколько предыдущих значений, определяемый пользователем или предыдущего значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1a04b-310">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="1a04b-311">Специальный перевод старых значений для обеспечения совместимости с новой диапазоны, группой различных свойств параметров и т. д.</span><span class="sxs-lookup"><span data-stu-id="1a04b-311">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="1a04b-312">Не удалось проанализировать файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a04b-312">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>