<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28fd80da70acde483fb97eb88b3d396c8d4e31ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380548" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Действует, как базовый класс для извлечения конкретных классов-оболочек, чтобы реализовать функцию параметров приложения в приложениях Windows Forms.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> Добавляет следующие функциональные возможности для <xref:System.Configuration.SettingsBase> класс, который используется веб-приложениями:  
  
-   Возможность определять атрибуты в производном классе-оболочке параметров. <xref:System.Configuration.ApplicationSettingsBase> поддерживает декларативной модели, используемой для свойства класса программы-оболочки, как описано далее.  
  
-   Более высокого уровня <xref:System.Configuration.ApplicationSettingsBase.Save%2A> и <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы.  
  
-   Дополнительная проверка события, которые можно обрабатывать для обеспечения правильного отдельных параметров.  
  
 В архитектура параметров приложения, для доступа к группе свойств параметров необходимо унаследовать класс конкретной программы-оболочки <xref:System.Configuration.ApplicationSettingsBase>. Класс-оболочку настраивает <xref:System.Configuration.ApplicationSettingsBase> одним из следующих способов:  
  
-   Доступ к каждому свойству параметров соответствующих строго типизированное общее свойство добавляется класс-оболочку. Это свойство имеет `get` и `set` методы доступа для чтения и записи параметров приложения, но только `get` метод доступа для параметры только для чтения.  
  
-   Выделенные атрибуты должны применяться к общим свойствам класса-оболочки для указания характеристики свойства параметров, таких как область действия (приложение или пользователь), является ли параметр должен поддерживать роуминг, значение по умолчанию для параметр поставщика параметров для использования и т. д. Каждое свойство, необходимо указать ее области действия с помощью <xref:System.Configuration.ApplicationScopedSettingAttribute> или <xref:System.Configuration.UserScopedSettingAttribute>. Параметры приложения доступны только для чтения если значение по умолчанию <xref:System.Configuration.LocalFileSettingsProvider> используется.  
  
 <xref:System.Configuration.ApplicationSettingsBase> Класс использует отражение для обнаружения этих атрибутов во время выполнения. Большая часть этой информации предается на уровень поставщика параметров, который отвечает за хранение, формат хранения и т. д.  
  
 Если приложение имеет несколько классов-оболочек параметров, каждый класс определяет *группы параметров*. Каждая группа имеет следующие характеристики:  
  
-   Группа может содержать любое число или тип параметров свойств.  
  
-   Если имя группы не задано явным образом с помощью класса-оболочки с оформления <xref:System.Configuration.SettingsGroupNameAttribute>, то имя создается автоматически.  
  
 По умолчанию все клиентские приложения используют <xref:System.Configuration.LocalFileSettingsProvider> для хранения. Если требуемого поставщика альтернативных параметров, то класс-оболочку или свойства должен быть снабжен атрибутом соответствующий <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Дополнительные сведения об использовании параметров приложения см. в разделе [параметры приложения для Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование параметров приложения, чтобы сохранить следующие атрибуты главной формы: расположение, размер, цвет фона и текст заголовка. Все эти атрибуты сохраняются в виде свойств параметров одного приложения в `FormSettings` класс с именем `FormLocation`, `FormSize`, `FormBackColor` и `FormText`соответственно. Все за исключением для `FormText` и `Size` данные привязаны к их свойствам связанной форме и иметь значение по умолчанию, установка значения применяются с помощью <xref:System.Configuration.DefaultSettingValueAttribute>.  
  
 Форма содержит четыре дочерних элементов управления, которые имеют следующие имена и функции:  
  
-   Кнопки с именем `btnBackColor` используется для отображения **цвет** стандартным диалоговым окном.  
  
-   Кнопки с именем `btnReload` позволяет <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> параметры приложения.  
  
-   Кнопки с именем `btnReset` позволяет <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> параметры приложения.  
  
-   Текстовое поле с именем `tbStatus` используется для отображения состояния сведений о программе.  
  
 Обратите внимание, что после каждого выполнения приложения, дополнительный периодический символ добавляется текст заголовка формы.  
  
 Для этого примера кода требуются формы с <xref:System.Windows.Forms.ColorDialog> класс с именем `colorDialog1`и <xref:System.Windows.Forms.StatusStrip> управления <xref:System.Windows.Forms.ToolStripStatusLabel> с именем `tbStatus`. Кроме того, требуется три <xref:System.Windows.Forms.Button> объектов с именем `btnReload`, `btnReset`, и `btnBackColor`.  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" /> в его состояние по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор по умолчанию было разработано для работы в предположении, что имеется компонент, не связанные с текущей параметры класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>.  
  
 При создании экземпляра класса-оболочки, наследованный код автоматически выполнит следующие действия:  
  
1.  Отображение класса.  
  
2.  Для каждого свойства в оболочку отмечены либо `[UserScopedSettingAttribute]` или `[ApplicationScopedSettingAttribute]`, соответствующий <xref:System.Configuration.SettingsProperty> создается.  
  
3.  Каждый <xref:System.Configuration.SettingsProperty> имеет некоторые его свойства набора данных на основе других атрибутов, которые при необходимости присутствуют в свойства программы-оболочки, такие как значение по умолчанию или поставщик параметров.  
  
4.  Все остальные атрибуты просто размещаются в контейнере атрибут <xref:System.Configuration.SettingsProperty.Attributes%2A> свойство <xref:System.Configuration.SettingsProperty> класса.  
  
5.  Все <xref:System.Configuration.SettingsProperty> объекты добавляются в <xref:System.Configuration.SettingsPropertyCollection> представленный <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> свойство <xref:System.Configuration.ApplicationSettingsBase> класса. Эта коллекция передается в <xref:System.Configuration.SettingsBase.Initialize%2A> метод.  
  
 Как следует из шага 3 было сказано ранее, <xref:System.Configuration.ApplicationSettingsBase> работает в собственном коде с несколькими атрибутами свойства, в частности следующие: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, и <xref:System.Configuration.SettingsSerializeAsAttribute>. Все другие параметры атрибутов просто передается в соответствующий базовый поставщик.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">Компонент, который будет действовать, как владелец объекта параметров приложения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор полностью эквивалентен <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> конструктор с помощью вызова:  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный ключ параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> значение из свойства `settingsKey` параметра. Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки параметров в том же домене приложения.  
  
 Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Компонент, который будет действовать, как владелец объекта параметров приложения.</param>
        <param name="settingsKey">
          <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца и ключ параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IComponent> Объекта, указанного параметром `owner` параметр выступает в качестве владельца текущего экземпляра этого класса параметров приложения. Во время инициализации параметров класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>, владелец сайта запрашиваются <xref:System.Configuration.ISettingsProviderService>. Если оно существует, он используется вместо настройки собственного поставщика для всех свойств класса-оболочки, в соответствии с <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> значение из свойства `settingsKey` параметра. Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки в одном домене приложения.  
  
 Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor> конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает контекст параметров приложения, связанный с группой параметров.</summary>
        <value>
          <see cref="T:System.Configuration.SettingsContext" /> связан с группой приложений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый класс-оболочку параметров производными <xref:System.Configuration.ApplicationSettingsBase> имеет контекст, связанный с ним. Контекст, передаваемый поставщику параметров для каждого свойства, чтобы определить, как используется свойство. Поэтому контекст действует как подсказка, чтобы помочь определить наилучший способ сохранения связанных значений параметров приложения поставщика параметров.  
  
 Напротив <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> свойство позволяет поставщику параметров для устранения неоднозначности несколько экземпляров того же класса программы-оболочки.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Объект <see cref="T:System.String" />, содержащий имя свойства параметров, значение которого необходимо вернуть.</param>
        <summary>Возвращает значение именованного свойства параметров для предыдущей версии того же приложения.</summary>
        <returns>
          <see cref="T:System.Object" />, содержащий значение указанного <see cref="T:System.Configuration.SettingsProperty" />, если он найден; в противном случае — <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Метод часто используется в сочетании с <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> метод при переносе параметров приложения во время установки новой версии приложения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Свойство не существует. Свойство равно нулю или не может быть найдено в хранилище данных.</exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <see cref="T:System.String" />, содержащий имя свойства для доступа.</param>
        <summary>Возвращает или задает значение указанного свойства параметров приложения.</summary>
        <value>Если найден, то значение именованного свойства параметров; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> Свойство, также известные как индексатор, обычно используется в параметрах класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>. <xref:System.Configuration.ApplicationSettingsBase.Item%2A> открытое свойство класса-оболочки привязывает к соответствующему свойству параметры.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> вызывает несколько событий в зависимости от выполняемой операции:  
  
-   В первый раз, получить свойство, <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> событие.  
  
-   Если свойство имеет значение, <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> событие. Если обработчик не отменяет событие, а затем задать значение свойства и <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> события.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Нет свойств, связанных с текущей программой-оболочкой, или указанное свойство не может быть найдено.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Предпринята попытка задать свойство, доступное только для чтения.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Предоставленное значение имеет несовместимый со свойством параметров тип значения во время операции задания.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.Configuration.SettingChangingEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.Configuration.SettingsLoadedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект <see cref="T:System.ComponentModel.CancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию свойств параметров в программе-оболочке.</summary>
        <value>
          <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий все объекты <see cref="T:System.Configuration.SettingsProperty" />, используется в текущей программе-оболочке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `get` Доступа <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> свойство отражает по метаданным класс-оболочку параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, динамически определите набор свойств параметров приложения.  
  
 <xref:System.Configuration.ApplicationSettingsBase> Класс изначально распознает определенные характеристики параметра приложения, например его имя, тип свойства, поставщик параметров, значение по умолчанию считать только состояния и преимущество сериализации. Эти характеристики отражаются как свойства в <xref:System.Configuration.SettingsProperty> класса. Все другие атрибуты свойства параметров просто передаются связанному поставщику параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Связанный поставщик параметров не может быть найден или не удалось создать его экземпляр.</exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после изменения свойства параметров приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> Событие возникает при изменении свойства параметров через `set` доступа <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод, или для любого свойства, которое восстанавливается при вызове <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> методы.  
  
 Соответствующее отсутствует `PropertyChanging` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию значений свойств.</summary>
        <value>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> значения свойства.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию поставщиков параметров приложения, используемую программой-оболочкой.</summary>
        <value>
          <see cref="T:System.Configuration.SettingsProviderCollection" /> содержит все объекты <see cref="T:System.Configuration.SettingsProvider" />, используемые свойствами параметров текущей программы-оболочки параметров.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProviderAttribute> Определяет, какой поставщик параметра используется класс-оболочку параметров или свойства отдельных параметров. Если этот атрибут не указан, будет использовать клиентское приложение <xref:System.Configuration.LocalFileSettingsProvider>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет значения свойств параметров приложения из постоянного хранилища.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> Метод очищает в настоящее время кэшированные значения свойств, вызывает перезагрузка этих значений из постоянного хранилища, если впоследствии осуществляется. Этот метод выполняет следующие действия:  
  
-   В настоящее время кэшированные свойства очищается, сняв коллекции, представленной <xref:System.Configuration.SettingsBase.PropertyValues%2A> свойство.  
  
-   Он выдает <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> событий для каждого члена <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> коллекции.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ситуация отличается от <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> в том, что первый из них будет загружать последний набор приложения сохраненные значения параметров, в то время как второй загрузить сохраненные значения по умолчанию.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> метода, вызываемого в теле <xref:System.Windows.Forms.Control.Click> обработчик событий для кнопки с именем `btnReload`. В результате этого вызова сохраненные значения параметров приложения перезагружаются в их соответствующие свойства. Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Восстанавливает постоянные значения параметров приложения в их соответствующие свойства по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> Метод перезаписывает свойства параметров пользователя путем восстановления в данный момент сохраненного значения параметров каждого приложения. Этот метод выполняет следующие действия:  
  
-   Он вызывает <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> метод для каждого поставщика параметров, который поддерживает этот дополнительный метод.  
  
-   Он вызывает <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> способ принудительного обновления значений свойств параметров.  
  
 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> ситуация отличается от <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> в том, что первый из них будет загружать последний набор приложения сохраненные значения параметров, в то время как второй загрузить сохраненные значения по умолчанию.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> метода, вызываемого в теле <xref:System.Windows.Forms.Control.Click> обработчик событий для кнопки с именем `btnReset`. В результате этого вызова сохраненные значения по умолчанию параметров приложения перезагружаются в их соответствующие свойства. Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет текущие значения свойств параметров приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> Метод записывает текущее значение каждого свойства параметров к своему хранилищу данных. Для каждого свойства, этот метод вызывает метод <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> связанный поставщик параметров метода.  
  
 Этот метод отличается от реализации базового класса, он выдает <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> перед значения записываются события.  
  
 Если только параметры, определенные параметры приложения, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> будет не влияет на и возвращать никакого сообщения об ошибке, если вызывается со значением по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>. <xref:System.Configuration.LocalFileSettingsProvider> сохраняет только параметры пользователя.  
  
> [!IMPORTANT]
>  Нет соответствующего метода загрузки, так как значения параметров приложения автоматически загружаются во время настройки класса-оболочки. В отличие от этого эти значения не сохраняются автоматически при завершении приложения. Таким образом, необходимо явным образом вызвать <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метод для сохранения текущих значений параметров приложения. Это обычно выполняется в <xref:System.Windows.Forms.Form.Closing> первичного или содержащие обработчик событий <xref:System.Windows.Forms.Form>.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.Save%2A> вызов из метода <xref:System.Windows.Forms.Form.Closing> обработчик событий для основной формы. Этот метод также добавляет дополнительный период для свойства параметров, связанных с формой <xref:System.Windows.Forms.Control.Text%2A> свойство.  
  
 Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает перед изменением значения свойства параметров приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> Событие возникает перед изменением значения свойства параметров приложения через <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод. Данное событие не возникает, когда <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> вызываются методы. <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> может быть отменено через <xref:System.Configuration.SettingChangingEventArgs> класс данных события.  
  
 Как правило, используется <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> событий для обработки оперативной проверки свойства отдельных параметров. Дополнительные сведения о проверке см. в разделе [как: проверка параметров приложения](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).  
  
 Соответствующее отсутствует `SettingChanged` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> событий.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> обработчик событий для объекта типа `FormSettings`, который является производным от класс-оболочку <xref:System.Configuration.ApplicationSettingsBase>. Обработчик отображает сведения о событии в текстовое поле с именем `tbStatus`. Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает ключ параметров для группы параметров приложения.</summary>
        <value>
          <see cref="T:System.String" /> содержит ключ параметров для текущей группы параметров.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Свойство предоставляется для обеспечения клиентского кода, в частности для устранения неоднозначности между несколькими экземплярами одного класса параметров приложения поставщика параметров.  
  
 Если класс-оболочку параметров разработано с использованием единый шаблон, может быть несколько экземпляров одного класса параметров приложения в одном приложении. Значение <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должно быть установлено в соответствии с как значения свойств, предназначены для совместного использования.  
  
-   Если свойства параметров оболочки должны быть совместно используется всеми экземплярами оболочки в одном приложении, затем <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должны иметь одинаковое значение во всех экземплярах. Это поведение по умолчанию <xref:System.Configuration.ApplicationSettingsBase> класса.  
  
-   Если свойства параметров оболочки предназначены для каждого экземпляра, затем <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> должен иметь уникальное значение для каждого экземпляра. <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> Версия конструктора позволяет инициализировать <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> в уникальную строку.  
  
 Напротив <xref:System.Configuration.ApplicationSettingsBase.Context%2A> указания предоставляет свойство поставщику параметров, чтобы он мог сохранять значения эффективного и управляемым штатным образом.  
  
 <xref:System.Configuration.SettingChangingEventArgs> Класс содержит аналогичное <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> свойство, которое помогает выявить источник <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> события.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после извлечения параметров приложения из хранилища.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> Событие происходит только после первоначального `get` доступа первого свойства конфигурации, используемые, обычно с помощью <xref:System.Configuration.ApplicationSettingsBase.Item%2A> метод. Последующие доступы используют значения свойства параметров, которые локально кэшируются. <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> И <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы будут удалены все кэшированные значения, это событие будет вызываться снова при доступе последующие свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает перед сохранением значений в хранилище данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> Событие <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метода, прежде чем он сохраняет свойства параметров приложения в магазин связанные данные. Соответствующий обработчик событий может отменить это событие.  
  
   
  
## Examples  
 В следующем примере кода показан <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> обработчик событий для объекта типа `FormSettings`, который является производным от класс-оболочку <xref:System.Configuration.ApplicationSettingsBase>. Обработчик запросов пользователя, чтобы сохранить текущие значения свойств параметров приложения. Полный пример кода, перечисленных в <xref:System.Configuration.ApplicationSettingsBase> Общие сведения о классе.  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет параметры приложения в соответствии с последней установкой приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> Метод выполняет два действия, чтобы обеспечить плавный переход на новую версию приложения:  
  
-   Уведомляет о всех поставщиков соответствующие параметры наличия обновленного приложения посредством вызова их <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> метод, при условии, что они реализованы <xref:System.Configuration.IApplicationSettingsProvider> интерфейса. Это действие не выполняется, если класс-оболочку параметров помечается <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.  
  
-   Перезагружает значения для всех параметров приложения.  
  
 Можно переопределить поведение по умолчанию <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> для реализации пользовательских обновление или слияние поведение. Используйте <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> метод для извлечения отдельных значений для параметра для более ранней версии приложения. Примеры обновления пользовательского режима работы.  
  
-   С помощью новой политики по умолчанию, переопределите один или несколько предыдущих значений, определяемый пользователем или предыдущего значения по умолчанию.  
  
-   Специальный перевод старых значений для обеспечения совместимости с новой диапазоны, группой различных свойств параметров и т. д.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>