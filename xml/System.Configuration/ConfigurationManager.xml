<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7215ab6b8c1036dacef49e3a75a2d37a7823c633" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="36095-101">Предоставляет доступ к файлам конфигурации для клиентских приложений.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36095-101">Provides access to configuration files for client applications.</span>
      </span>
      <span data-ttu-id="36095-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36095-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-103"><xref:System.Configuration.ConfigurationManager> Класс позволяет доступ компьютера, приложения и сведения о конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="36095-104">Этот класс заменяет <xref:System.Configuration.ConfigurationSettings> класс, который является устаревшим.</span><span class="sxs-lookup"><span data-stu-id="36095-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="36095-105">Веб-приложения, используйте <xref:System.Web.Configuration.WebConfigurationManager> класса.</span><span class="sxs-lookup"><span data-stu-id="36095-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="36095-106">Для использования <xref:System.Configuration.ConfigurationManager> класса, проект должен содержать ссылки `System.Configuration` сборки.</span><span class="sxs-lookup"><span data-stu-id="36095-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="36095-107">По умолчанию некоторые шаблоны проекта как консольное приложение, не ссылаться эту сборку, необходимо вручную сослаться на эту.</span><span class="sxs-lookup"><span data-stu-id="36095-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36095-108">Имя и расположение файла конфигурации приложения зависят от ведущего приложения.</span><span class="sxs-lookup"><span data-stu-id="36095-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="36095-109">Дополнительные сведения см. в разделе [NIB: файлы конфигурации приложения](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="36095-109">For more information, see [NIB: Application Configuration Files](http://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="36095-110">Можно использовать встроенные <xref:System.Configuration> типы или являются производными от их для обработки сведений о конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="36095-111">С помощью этих типов, можно работать непосредственно с информацией о конфигурации и файлы конфигурации, чтобы включить пользовательскую информацию можно расширить.</span><span class="sxs-lookup"><span data-stu-id="36095-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="36095-112"><xref:System.Configuration.ConfigurationManager> Класс содержит элементы, которые позволяют выполнять следующие задачи:</span><span class="sxs-lookup"><span data-stu-id="36095-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="36095-113">Чтение раздела из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-113">Read a section from a configuration file.</span></span> <span data-ttu-id="36095-114">Для получения сведений о конфигурации, вызовите <xref:System.Configuration.ConfigurationManager.GetSection%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="36095-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="36095-115">Для некоторых разделов, таких как `appSettings` и `connectionStrings`, используйте <xref:System.Configuration.ConfigurationManager.AppSettings%2A> и <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> классы.</span><span class="sxs-lookup"><span data-stu-id="36095-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="36095-116">Эти члены выполнять операции только для чтения, используют отдельный кэшированный экземпляр конфигурации и многопоточную виду.</span><span class="sxs-lookup"><span data-stu-id="36095-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="36095-117">Чтение и запись файлов конфигурации в целом.</span><span class="sxs-lookup"><span data-stu-id="36095-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="36095-118">Приложения могут читать и записывать параметры конфигурации на любом уровне, для себя или для других приложений или компьютеров, локально или удаленно.</span><span class="sxs-lookup"><span data-stu-id="36095-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="36095-119">Используйте один из методов, предоставляемых <xref:System.Configuration.ConfigurationManager> класс, чтобы открыть файл конфигурации, например SampleApp.exe.config. Эти методы возвращают <xref:System.Configuration.Configuration> объекта, который в свою очередь предоставляет методы и свойства, которые можно использовать для работы с файлами конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="36095-120">Методы выполнения чтения или операций записи и создают данные конфигурации, каждый раз при записи файла.</span><span class="sxs-lookup"><span data-stu-id="36095-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="36095-121">Поддерживает задачи настройки.</span><span class="sxs-lookup"><span data-stu-id="36095-121">Support configuration tasks.</span></span> <span data-ttu-id="36095-122">Для поддержки различных задач конфигурации используются следующие типы:</span><span class="sxs-lookup"><span data-stu-id="36095-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="36095-123">В дополнение к работе с существующие сведения о конфигурации, можно создать и работать с пользовательские элементы конфигурации, расширения конфигурации встроенные типы, например <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, и <xref:System.Configuration.ConfigurationSection> классы.</span><span class="sxs-lookup"><span data-stu-id="36095-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="36095-124">Пример программного расширения встроенного типа конфигурации см. в разделе <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="36095-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="36095-125">Пример расширения типа встроенной конфигурации, использующей модель на основе атрибутов см. в разделе <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="36095-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-126">В первом примере показано простое консольное приложение, которое считывает параметры приложения, добавляет новый параметр, а также обновляет существующий параметр.</span><span class="sxs-lookup"><span data-stu-id="36095-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="36095-127">В предыдущем примере предполагается, что проект содержит файл App.config, как показано ниже.</span><span class="sxs-lookup"><span data-stu-id="36095-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="36095-128">В следующем примере показано, как использовать строку подключения для чтения данных из базы данных.</span><span class="sxs-lookup"><span data-stu-id="36095-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="36095-129">В предыдущем примере предполагается, что проект содержит файл App.config, как показано ниже.</span><span class="sxs-lookup"><span data-stu-id="36095-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="36095-130">
        <para>
          <see cref="T:System.Configuration.Configuration" /> Класс обеспечивает программный доступ для редактирования файлов конфигурации. Использовать один из открытых методов, предоставляемых <see cref="T:System.Configuration.ConfigurationManager" />. Эти методы возвращают <see cref="T:System.Configuration.Configuration" /> object, который в свою очередь, предоставляет требуемые методы и свойства для обработки базовых файлов конфигурации. Можно получить доступ к этим файлам для чтения или записи.  Чтобы прочесть файлы конфигурации, используйте <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> или <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> для считывания данных конфигурации. Пользователь или процесс, который считывает должен иметь следующие разрешения:-разрешение Read на файл конфигурации на текущем уровне иерархии конфигурации.  -Разрешения на чтение всех родительских файлов конфигурации.  Если приложению требуется доступ только для чтения к собственную конфигурацию, мы рекомендуем использовать <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> метода. Этот метод обеспечивает доступ к кэшированным значениям конфигурации для текущего приложения, который имеет лучшую производительность, чем <see cref="T:System.Configuration.Configuration" /> класса.  Для записи в файлах конфигурации, воспользуйтесь одним из <see cref="Overload:System.Configuration.Configuration.Save" /> методы. Пользователь или процесс, который записывает должен иметь следующие разрешения:-разрешение запись в файл конфигурации и каталог на текущем уровне иерархии конфигурации.  -Разрешения на чтение всех файлов конфигурации.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="36095-130">
          <para>The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files. You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />. These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files. You can access these files for reading or writing.  To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information. The user or process that reads must have the following permissions:  -   Read permission on the configuration file at the current configuration hierarchy level.  -   Read permissions on all the parent configuration files.  If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method. This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods. The user or process that writes must have the following permissions:  -   Write permission on the configuration file and directory at the current configuration hierarchy level.  -   Read permissions on all the configuration files.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36095-131">Получает данные <see cref="T:System.Configuration.AppSettingsSection" /> для конфигурации текущего приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-131">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36095-132">Возвращает объект <see cref="T:System.Collections.Specialized.NameValueCollection" />, в который помещено содержимое объекта <see cref="T:System.Configuration.AppSettingsSection" /> для конфигурации текущего приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-132">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-133">Объект <xref:System.Configuration.AppSettingsSection> объект содержит содержимое файла конфигурации `appSettings` раздела.</span><span class="sxs-lookup"><span data-stu-id="36095-133">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-134">В первом примере показано простое консольное приложение, которое считывает параметры приложения, добавляет новый параметр, а также обновляет существующий параметр.</span><span class="sxs-lookup"><span data-stu-id="36095-134">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="36095-135">В предыдущем примере предполагается, что проект содержит файл App.config, как показано ниже.</span><span class="sxs-lookup"><span data-stu-id="36095-135">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-136">Не удалось извлечь объект <see cref="T:System.Collections.Specialized.NameValueCollection" /> с данными о параметрах приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-136">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36095-137">Получает данные <see cref="T:System.Configuration.ConnectionStringsSection" /> для конфигурации текущего приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-137">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36095-138">Возвращает объект <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />, в который помещено содержимое объекта <see cref="T:System.Configuration.ConnectionStringsSection" /> для конфигурации текущего приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-138">Returns a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-139">Объект <xref:System.Configuration.ConnectionStringsSection> объект содержит содержимое файла конфигурации `connectionStrings` раздела.</span><span class="sxs-lookup"><span data-stu-id="36095-139">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-140">В следующем примере показано, как использовать строку подключения для чтения данных из базы данных.</span><span class="sxs-lookup"><span data-stu-id="36095-140">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="36095-141">В предыдущем примере предполагается, что проект содержит файл App.config, как показано ниже.</span><span class="sxs-lookup"><span data-stu-id="36095-141">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-142">Не удалось извлечь объект <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-142">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="36095-143">Путь и имя раздела конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-143">The configuration section path and name.</span>
          </span>
          <span data-ttu-id="36095-144">Имена узлов разделяются косой чертой, например system.net/mailSettings/smtp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-144">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-145">Извлекает указанный раздел конфигурации для конфигурации по умолчанию текущего приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-145">Retrieves a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-146">Указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> или <see langword="null" />, если раздел не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-146">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-147">Для клиентских приложений этот метод извлекает файл конфигурации, полученный посредством слияния файла конфигурации приложения, файле конфигурации локального пользователя и перемещаемого файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-147">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="36095-148"><xref:System.Configuration.ConfigurationManager.GetSection%2A> Метод получает сведения о конфигурации во время выполнения, его нельзя изменить.</span><span class="sxs-lookup"><span data-stu-id="36095-148">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="36095-149">Чтобы изменить конфигурацию, используйте <xref:System.Configuration.Configuration.GetSection%2A> метод в файле конфигурации, можно получить с помощью одного из следующих методов Open:</span><span class="sxs-lookup"><span data-stu-id="36095-149">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="36095-150">В следующем примере показано, как использовать метод <xref:System.Configuration.ConfigurationManager.GetSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="36095-150">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="36095-151">Пример является частью большего примера, приведенного для <xref:System.Configuration.ConfigurationManager> класса.</span><span class="sxs-lookup"><span data-stu-id="36095-151">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-152">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-152">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="36095-153">
            <para>Необходимо привести возвращаемое значение к ожидаемому типу конфигурации. Чтобы избежать возможных исключений приведения, следует использовать условное приведение например <see langword="as" /> оператор в C# или функцию в Visual Basic.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-153">
              <para>You must cast the return value to the expected configuration type. To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36095-154">Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-154">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel">
          <span data-ttu-id="36095-155">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-155">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-156">Открывает файл конфигурации для текущего приложения в качестве объекта <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-156">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-157">Объект <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-157">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-158">Клиентские приложения используют глобальную конфигурацию, которая применяется для всех пользователей, отдельные конфигурации, которые применяются к отдельным пользователям и конфигураций, которые применяются к пользователям в роуминге.</span><span class="sxs-lookup"><span data-stu-id="36095-158">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="36095-159">`userLevel` Определяет расположение файла конфигурации, открытого с указанием, имеет ли он уровень без пользователя (файл конфигурации находится в том же каталоге, что и приложение) или уровень пользователя (файл конфигурации находится в путь приложения, параметры определяются на уровне пользователя).</span><span class="sxs-lookup"><span data-stu-id="36095-159">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="36095-160">Укажите, какую конфигурацию следует получить посредством передачи одного из следующих значений для `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="36095-160">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="36095-161">Для получения <xref:System.Configuration.Configuration> набор объектов, который применяется ко всем пользователям `userLevel` для <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="36095-161">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="36095-162">Для получения локальной <xref:System.Configuration.Configuration> набор объектов, который применяется к текущему пользователю, `userLevel` для <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="36095-162">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="36095-163">Для получения перемещаемых <xref:System.Configuration.Configuration> набор объектов, который применяется к текущему пользователю, `userLevel` для <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="36095-163">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="36095-164">Для получения <xref:System.Configuration.Configuration> объекта для ресурса, код должен иметь разрешения на чтение всех файлов конфигурации, от которых он наследует параметры.</span><span class="sxs-lookup"><span data-stu-id="36095-164">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="36095-165">Чтобы обновить файл конфигурации, код Дополнительно требуются разрешения на запись для файла конфигурации и каталога, в котором он находится.</span><span class="sxs-lookup"><span data-stu-id="36095-165">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-166">В следующем примере кода показано применение метода <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="36095-166">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-167">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-167">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath">
          <span data-ttu-id="36095-168">Путь к исполняемому файлу (EXE-файлу).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-168">The path of the executable (exe) file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-169">Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-170">Объект <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-170">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-171">Клиентские приложения используют глобальную конфигурацию, которая применяется для всех пользователей, отдельные конфигурации, которые применяются к отдельным пользователям и конфигураций, которые применяются к пользователям в роуминге.</span><span class="sxs-lookup"><span data-stu-id="36095-171">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="36095-172">`userLevel` Значение определяет расположение открытого файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-172">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="36095-173">Указывает, имеет ли он уровень без пользователя (файл конфигурации находится в том же каталоге, что и приложение) или уровень пользователя (файл конфигурации находится в пути настроек приложения определяется типом уровня пользователя.).</span><span class="sxs-lookup"><span data-stu-id="36095-173">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="36095-174">Вызов перегрузки этого метода эквивалентен вызову <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> перегрузка с `preLoad` равным `false`.</span><span class="sxs-lookup"><span data-stu-id="36095-174">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-175">В следующем примере кода показано применение метода <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="36095-175">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-176">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-176">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36095-177">Открывает файл конфигурации компьютера на текущем компьютере в качестве объекта <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-177">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-178">Объект <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-178">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-179">Параметры конфигурации машины применяются для всего компьютера и всех приложений, находящихся в нем, если не переопределен для локального приложения.</span><span class="sxs-lookup"><span data-stu-id="36095-179">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="36095-180">Параметры конфигурации машины считываются из файла Machine.config выполняющаяся версия платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="36095-180">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="36095-181">Файл Machine.config находится в подкаталоге следующие:</span><span class="sxs-lookup"><span data-stu-id="36095-181">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="36095-182">*% windir %* \Microsoft.NET\Framework\\*версии*\config</span><span class="sxs-lookup"><span data-stu-id="36095-182">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36095-183">Для получения <xref:System.Configuration.Configuration> объекта для ресурса, код должен иметь разрешения на чтение всех файлов конфигурации, от которых он наследует параметры.</span><span class="sxs-lookup"><span data-stu-id="36095-183">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="36095-184">Чтобы обновить файл конфигурации, код Дополнительно требуются разрешения на запись для файла конфигурации и каталога, в котором он находится.</span><span class="sxs-lookup"><span data-stu-id="36095-184">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="36095-185">Доступ к файлу Machine.config для других версий платформы .NET Framework, которые могли быть установлены на компьютере невозможна.</span><span class="sxs-lookup"><span data-stu-id="36095-185">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-186">В следующем примере кода показано, как использовать <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> метод, чтобы получить все разделы, содержащиеся в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-186">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-187">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-187">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36095-188">Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-188">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="36095-189">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-189">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="36095-190">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-190">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-191">Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанные сопоставление файлов и уровень пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-191">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-192">Объект конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-192">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-193"><xref:System.Configuration.ConfigurationUserLevel> Объект определяет расположение открытого файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-193">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="36095-194">Указывает, имеет ли файл уровень без пользователя (файл конфигурации находится в том же каталоге, что и приложение) или уровень пользователя (файл конфигурации находится в пути настроек приложения, которые определяются `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="36095-194">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36095-195">Для получения <xref:System.Configuration.Configuration> объекта для ресурса, код должен иметь разрешения на чтение всех файлов конфигурации, от которых он наследует параметры.</span><span class="sxs-lookup"><span data-stu-id="36095-195">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="36095-196">Чтобы обновить файл конфигурации, код Дополнительно требуются разрешения на запись для файла конфигурации и каталога, в котором он находится.</span><span class="sxs-lookup"><span data-stu-id="36095-196">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-197">В следующем примере кода показано, как использовать <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> метод, чтобы получить все разделы, содержащиеся в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-197">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-198">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-198">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
        <Parameter Name="preLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="36095-199">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-199">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span>
          </span>
        </param>
        <param name="userLevel">
          <span data-ttu-id="36095-200">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-200">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span>
          </span>
        </param>
        <param name="preLoad">
          <span data-ttu-id="36095-201">Значение <see langword="true" /> для предварительной загрузки всех групп разделов и разделов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-201">
              <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-202">Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанное сопоставление файлов, уровень пользователя и параметр предварительной загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-202">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-203">Объект конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-203">The configuration object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-204"><xref:System.Configuration.ConfigurationUserLevel> Объект определяет расположение файла конфигурации, который открыт.</span><span class="sxs-lookup"><span data-stu-id="36095-204">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="36095-205">Указывает, имеет ли файл уровень без пользователя (файл конфигурации находится в том же каталоге, что и приложение) или уровень пользователя (файл конфигурации находится в пути настроек приложения, определяется `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="36095-205">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36095-206">Для получения <xref:System.Configuration.Configuration> объекта для ресурса, код должен иметь разрешения на чтение всех файлов конфигурации, от которых он наследует параметры.</span><span class="sxs-lookup"><span data-stu-id="36095-206">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="36095-207">Чтобы обновить файл конфигурации, код Дополнительно требуются разрешения на запись для файла конфигурации и каталога, в котором он находится.</span><span class="sxs-lookup"><span data-stu-id="36095-207">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="36095-208">Пример кода см. в разделе <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="36095-208">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-209">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-209">A configuration file could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap">
          <span data-ttu-id="36095-210">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-210">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-211">Открывает файл конфигурации компьютера, как объект <see cref="T:System.Configuration.Configuration" />, который использует указанное сопоставление файлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-211">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36095-212">Объект <see cref="T:System.Configuration.Configuration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-212">A <see cref="T:System.Configuration.Configuration" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-213">Параметры конфигурации машины применяются для всего компьютера и всех приложений, находящихся в нем, если не переопределен для локального приложения.</span><span class="sxs-lookup"><span data-stu-id="36095-213">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="36095-214">Параметры конфигурации машины считываются из файла Machine.config выполняющаяся версия платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="36095-214">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="36095-215">Файл Machine.config находится в подкаталоге следующие:</span><span class="sxs-lookup"><span data-stu-id="36095-215">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="36095-216">*% windir %* \Microsoft.NET\Framework\\*версии*\config</span><span class="sxs-lookup"><span data-stu-id="36095-216">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36095-217">Для получения <xref:System.Configuration.Configuration> объекта для ресурса, код должен иметь разрешения на чтение всех файлов конфигурации, от которых он наследует параметры.</span><span class="sxs-lookup"><span data-stu-id="36095-217">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="36095-218">Чтобы обновить файл конфигурации, код Дополнительно требуются разрешения на запись для файла конфигурации и каталога, в котором он находится.</span><span class="sxs-lookup"><span data-stu-id="36095-218">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="36095-219">Доступ к файлу Machine.config для других версий платформы .NET Framework, которые могли быть установлены на компьютере невозможна.</span><span class="sxs-lookup"><span data-stu-id="36095-219">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-220">В следующем примере кода показано, как использовать <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> для получения всех разделов в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="36095-220">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="36095-221">Не удалось загрузить файл конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-221">A configuration file could not be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="36095-222">Имя раздела конфигурации, или имя пути и раздела конфигурации раздела для обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-222">The configuration section name or the configuration path and section name of the section to refresh.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36095-223">Обновляет именованный раздел, чтобы при следующем извлечении он повторно считывался с диска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36095-223">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36095-224">Этот метод делает недействительным кэш для указанного раздела конфигурации, не затрагивая другие разделы.</span><span class="sxs-lookup"><span data-stu-id="36095-224">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36095-225">В следующем примере кода показано, как использовать <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> метод для обновления раздела конфигурации параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="36095-225">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>