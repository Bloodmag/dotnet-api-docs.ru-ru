<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="13ee0-101">Определяет расширенные возможности для поставщиков установок для клиентских приложений.</span><span class="sxs-lookup"><span data-stu-id="13ee0-101">Defines extended capabilities for client-based application settings providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ee0-102">Архитектура параметров приложения можно указать другого механизма хранения для параметров приложения, создав пользовательские параметры поставщика, который является классом, производным от <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="13ee0-102">The application settings architecture enables you to provide a custom storage mechanism for application settings by creating a custom settings provider, which is a class derived from <xref:System.Configuration.SettingsProvider>.</span></span> <span data-ttu-id="13ee0-103">Такой класс содержит базовую функциональность для хранения и извлечения свойств.</span><span class="sxs-lookup"><span data-stu-id="13ee0-103">Such a class contains the basic functionality for storing and retrieving properties.</span></span> <span data-ttu-id="13ee0-104">Тем не менее, можно добавить дополнительные функциональные возможности стандартных путем реализации <xref:System.Configuration.IApplicationSettingsProvider> интерфейса в поставщик пользовательских параметров.</span><span class="sxs-lookup"><span data-stu-id="13ee0-104">However, you can add additional standardized functionality by implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface in the custom settings provider.</span></span> <span data-ttu-id="13ee0-105">Этот интерфейс содержит три метода, которые в первую очередь включите поставщика параметров, более рационально обрабатывать изменения версий приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-105">This interface contains three methods that primarily enable the settings provider to more intelligently handle application version changes.</span></span> <span data-ttu-id="13ee0-106">Как правило поставщик параметров будет хранить параметров приложения для различных версий приложения раздельно, чтобы предусмотреть следующие обстоятельства:</span><span class="sxs-lookup"><span data-stu-id="13ee0-106">Typically, the settings provider will store application settings for different versions of an application separately to anticipate the following circumstances:</span></span>  
  
-   <span data-ttu-id="13ee0-107">Side-by-side выполнения различных версий приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-107">Side-by-side execution of different versions of an application.</span></span>  
  
-   <span data-ttu-id="13ee0-108">Сохранение параметров приложения при обновлении приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-108">Retaining application settings when upgrading an application.</span></span>  
  
-   <span data-ttu-id="13ee0-109">Возврат установок приложения к значениям по умолчанию для текущей используемой версии.</span><span class="sxs-lookup"><span data-stu-id="13ee0-109">Resetting the application settings to their default values for the currently used version.</span></span>  
  
 <span data-ttu-id="13ee0-110">Класс <xref:System.Configuration.LocalFileSettingsProvider> реализует интерфейс <xref:System.Configuration.IApplicationSettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="13ee0-110">The <xref:System.Configuration.LocalFileSettingsProvider> class implements the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="13ee0-111">Тот же набор методов, содержащихся в <xref:System.Configuration.IApplicationSettingsProvider> можно также найти в <xref:System.Configuration.ApplicationSettingsBase> класса, позволяя создать канал предопределенные связи между собой оболочку параметров приложения и его параметры поставщиком.</span><span class="sxs-lookup"><span data-stu-id="13ee0-111">The same set of methods contained by <xref:System.Configuration.IApplicationSettingsProvider> is also found in the <xref:System.Configuration.ApplicationSettingsBase> class, enabling the establishment of a predefined communication channel between an application settings wrapper and its settings provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ee0-112">Этот параметр является необязательным.</span><span class="sxs-lookup"><span data-stu-id="13ee0-112">This interface is optional.</span></span> <span data-ttu-id="13ee0-113">Если поставщик не реализует этот интерфейс, инфраструктура установок завершится сбоем без уведомления при попытке доступа к любому из методов, определенных этим интерфейсом.</span><span class="sxs-lookup"><span data-stu-id="13ee0-113">If a provider does not implement this interface, the settings infrastructure will fail without notification if it attempts to access any of the methods defined by this interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13ee0-114">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-114">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="property"><span data-ttu-id="13ee0-115"><see cref="T:System.Configuration.SettingsProperty" />, значение которого должно быть возвращено.</span><span class="sxs-lookup"><span data-stu-id="13ee0-115">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="13ee0-116">Возвращает значение указанного свойства установок для предыдущей версии того же приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-116">Returns the value of the specified settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="13ee0-117">Объект <see cref="T:System.Configuration.SettingsPropertyValue" />, содержащий значение указанного свойства установок, в том виде, как они были в последний раз установлены в предыдущей версии приложения; или <see langword="null" />, если установки не удается найти.</span><span class="sxs-lookup"><span data-stu-id="13ee0-117">A <see cref="T:System.Configuration.SettingsPropertyValue" /> containing the value of the specified property setting as it was last set in the previous version of the application; or <see langword="null" /> if the setting cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ee0-118">Можно использовать <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> в сочетании с <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> способ переноса параметров приложения во время или после установки новой версии приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-118">You can use the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="13ee0-119">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешение.</span><span class="sxs-lookup"><span data-stu-id="13ee0-119">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13ee0-120">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-120">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <summary><span data-ttu-id="13ee0-121">Возвращает установки, связанные с указанным приложением к значениям по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13ee0-121">Resets the application settings associated with the specified application to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ee0-122"><xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> Метод повторно инициализирует сохраненные значения группы параметров указанного приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-122">The <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> method reinitializes the stored values of the specified application settings group.</span></span> <span data-ttu-id="13ee0-123">Напротив <xref:System.Configuration.DefaultSettingValueAttribute> предоставляет значение по умолчанию для одного свойства параметра во время инициализации свойства, если она не содержит хранимые значения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-123">In contrast, <xref:System.Configuration.DefaultSettingValueAttribute> supplies a default value for a single settings property during property initialization, if it has no stored value.</span></span>  
  
 <span data-ttu-id="13ee0-124">Поставщик параметров определяются разумного значения по умолчанию для указанной группы параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-124">The settings provider determines what reasonable defaults are for the specified group of application settings.</span></span> <span data-ttu-id="13ee0-125">Например, реализация в <xref:System.Configuration.LocalFileSettingsProvider> пользовательских параметров, значения сбрасываются в общих в `application.exe.config` файл; напротив, оставляет параметры приложения без изменений.</span><span class="sxs-lookup"><span data-stu-id="13ee0-125">For example, the implementation in <xref:System.Configuration.LocalFileSettingsProvider> resets user-scoped settings to their shared values in the `application.exe.config` file; in contrast, it leaves the application-scoped settings unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="13ee0-126">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешение.</span><span class="sxs-lookup"><span data-stu-id="13ee0-126">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="13ee0-127">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="properties"><span data-ttu-id="13ee0-128">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</span><span class="sxs-lookup"><span data-stu-id="13ee0-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="13ee0-129">Указывает поставщику, что приложение было модернизировано.</span><span class="sxs-lookup"><span data-stu-id="13ee0-129">Indicates to the provider that the application has been upgraded.</span></span> <span data-ttu-id="13ee0-130">Это дает поставщику возможность обновлять хранимые параметры подходящим образом.</span><span class="sxs-lookup"><span data-stu-id="13ee0-130">This offers the provider an opportunity to upgrade its stored settings as appropriate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ee0-131">Платформа .NET Framework обеспечивает side-by-side установки и выполнения различных версий одного приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-131">The .NET Framework enables side-by-side installation and execution of different versions of the same application.</span></span> <span data-ttu-id="13ee0-132">Поставщик параметров приложения хранит параметры приложения для каждой версии приложения отдельно, чтобы обеспечить изоляцию.</span><span class="sxs-lookup"><span data-stu-id="13ee0-132">The application settings provider stores the application settings for each version of an application separately to ensure isolation.</span></span> <span data-ttu-id="13ee0-133">Тем не менее можно перенести параметры из предыдущей версии на текущую версию приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-133">However, you may want to migrate settings from the previous version of an application to the current one.</span></span> <span data-ttu-id="13ee0-134">Для обеспечения данной функциональности миграции, используйте <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> метода, реализованного в классе, производном от <xref:System.Configuration.SettingsProvider>.</span><span class="sxs-lookup"><span data-stu-id="13ee0-134">To provide this migration functionality, use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method, implemented in a class derived from <xref:System.Configuration.SettingsProvider>.</span></span>  
  
 <span data-ttu-id="13ee0-135">Можно использовать <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> в сочетании с <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> способ переноса параметров приложения во время или после установки новой версии приложения.</span><span class="sxs-lookup"><span data-stu-id="13ee0-135">You can use the <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> method in conjunction with the <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> method to migrate application settings during or after the installation of a new version of an application.</span></span>  
  
 <span data-ttu-id="13ee0-136">Этот метод следует отключить для каждого приложения, которые есть <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> применяется к нему, или весь класс-оболочка параметров, производный от <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="13ee0-136">This method should be suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> is applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="13ee0-137">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешение.</span><span class="sxs-lookup"><span data-stu-id="13ee0-137">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</span></span></permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>