<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2c737-101">Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="2c737-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-102">Как правило, можно добавить поддержку параметров приложения к приложению путем создания класса-оболочки параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавлять особые свойства к этому классу.</span><span class="sxs-lookup"><span data-stu-id="2c737-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="2c737-103">Тем не менее этот подход достаточным образом не инкапсулирует параметры приложения для элемента управления, чтобы контейнер защищен от деталей.</span><span class="sxs-lookup"><span data-stu-id="2c737-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="2c737-104"><xref:System.Configuration.IPersistComponentSettings> Интерфейс предоставляет приложение со стандартным интерфейсом для запросов на изменение состояния приложения параметры в модуль управления, компонента или библиотеки.</span><span class="sxs-lookup"><span data-stu-id="2c737-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="2c737-105">Средства разработки также зависят от этого интерфейса позволяет элементами управления и компонентов.</span><span class="sxs-lookup"><span data-stu-id="2c737-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c737-106">Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-106">Reads the control's application settings into their corresponding properties and updates the control's state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-107">Как правило <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> метод выполняет две основные операции:</span><span class="sxs-lookup"><span data-stu-id="2c737-107">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="2c737-108">Каждый экземпляр приложения параметров, содержащихся в элементе управления для обновления значения свойства параметров приложения обычно путем вызова вызывает их <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="2c737-108">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="2c737-109">При необходимости он обновляет эти общие свойства, которые зависят от этих перезагруженных значений свойств.</span><span class="sxs-lookup"><span data-stu-id="2c737-109">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="2c737-110">Например, если содержащиеся в классе параметров `location` свойства параметров <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> следует убедиться, что элемент управления <xref:System.Windows.Forms.Control.Location%2A> свойство обновляется для отражения этой перезагруженных значения.</span><span class="sxs-lookup"><span data-stu-id="2c737-110">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c737-111">Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2c737-111">Resets the control's application settings properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-112">Реализация <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> обычно вызывает метод <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> для каждого экземпляра класса параметров приложения, которые он содержит.</span><span class="sxs-lookup"><span data-stu-id="2c737-112">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2c737-113">Сохраняет свойства параметров приложения элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-113">Persists the control's application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-114"><xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Метод записывает значения свойств параметров приложения элемента управления в связанном хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="2c737-114">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="2c737-115">Метод использует метод сериализации и хранилища данных определяется поставщиком параметры, связанные с каждым классом параметров через <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="2c737-115">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="2c737-116">Выбор поставщика параметров можно переопределить с помощью <xref:System.Configuration.ISettingsProviderService> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2c737-116">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c737-117">Если <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство `true`, элемент управления должен вызывать <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> в свой собственный <xref:System.Windows.Forms.Control.Dispose%2A> метод, чтобы данные конфигурации элемента управления автоматически сохраняются до окончания работы приложения.</span><span class="sxs-lookup"><span data-stu-id="2c737-117">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c737-118">Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="2c737-118">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span></span></summary>
        <value>
          <span data-ttu-id="2c737-119"><see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2c737-119"><see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-120">Если элемент управления содержит данные конфигурации, он будет сохранен, обычно эти данные в ответ на явный вызов <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> метода или иногда неявно при элемента управления <xref:System.Windows.Forms.Control.Dispose%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="2c737-120">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="2c737-121"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Свойство определяет, является ли элемент управления автоматически сохраняет данные о конфигурации после его удаления.</span><span class="sxs-lookup"><span data-stu-id="2c737-121">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="2c737-122">Значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> зависит от реализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-122">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="2c737-123">Документация по элементу управления должно быть указано, использует ли параметры приложения, какие данные сохраняются и какое значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2c737-123">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c737-124">В следующем примере кода показан правильный способ для элемента управления проверить значение <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства перед попыткой автоматически сохранять данные о конфигурации.</span><span class="sxs-lookup"><span data-stu-id="2c737-124">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c737-125">Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-125">Gets or sets the value of the application settings key for the current instance of the control.</span></span></summary>
        <value><span data-ttu-id="2c737-126">Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-126">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c737-127">Используйте <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойство для однозначного определения группы свойств параметров приложения, когда несколько экземпляров одного класса программы-оболочки.</span><span class="sxs-lookup"><span data-stu-id="2c737-127">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="2c737-128">Например если элемент управления содержит связанный класс-оболочку, помещаться в одном приложении несколько экземпляров одного элемента управления обычно приведет несколько экземпляров класса-оболочки.</span><span class="sxs-lookup"><span data-stu-id="2c737-128">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="2c737-129">Параметры ключа требуется только в том случае, когда данные конфигурации отличаются на основе каждого экземпляра; например расположение динамично установленных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-129">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="2c737-130">Следующие общие правила применяются к использованию <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span><span class="sxs-lookup"><span data-stu-id="2c737-130">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="2c737-131">Элемент управления, как любой класс может содержать ноль или более классов параметров приложения, производный от <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="2c737-131">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="2c737-132">Каждый класс параметров содержит собственные <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство, которое помогает устранить неоднозначность несколько экземпляров этого класса.</span><span class="sxs-lookup"><span data-stu-id="2c737-132">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="2c737-133">Элемент управления должен распределять данные для каждого экземпляра и общие данные в отдельные классы параметров.</span><span class="sxs-lookup"><span data-stu-id="2c737-133">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="2c737-134">Для элемента управления с данные конфигурации для каждого экземпляра `get` доступа <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойства должна использовать по умолчанию <xref:System.Windows.Forms.Control.Name%2A> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2c737-134">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="2c737-135">В большинстве случаев имя элемента управления будет уникальным в пределах приложения.</span><span class="sxs-lookup"><span data-stu-id="2c737-135">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="2c737-136">Если элемент управления содержит только общие данные конфигурации `get` должна использовать по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="2c737-136">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="2c737-137">`set` Для этого свойства метод доступа должен быть реализован для проведения различия между классами параметров, содержащих для каждого экземпляра и общие данные конфигурации.</span><span class="sxs-lookup"><span data-stu-id="2c737-137">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="2c737-138">Для каждого класса параметров, содержащий данные для каждого экземпляра `set` следует просто к серверу для <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство класса параметров.</span><span class="sxs-lookup"><span data-stu-id="2c737-138">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="2c737-139">Для классов параметров, содержащих общие данные `set` следует выполнять никаких действий для данного класса параметров.</span><span class="sxs-lookup"><span data-stu-id="2c737-139">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>