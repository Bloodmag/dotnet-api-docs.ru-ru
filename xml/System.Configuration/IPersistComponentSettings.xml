<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36cdd14653e8d239fcffab82331de0392616795f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, можно добавить поддержку параметров приложения к приложению путем создания класса-оболочки параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавлять особые свойства к этому классу. Тем не менее этот подход достаточным образом не инкапсулирует параметры приложения для элемента управления, чтобы контейнер защищен от деталей. <xref:System.Configuration.IPersistComponentSettings> Интерфейс предоставляет приложение со стандартным интерфейсом для запросов на изменение состояния приложения параметры в модуль управления, компонента или библиотеки. Средства разработки также зависят от этого интерфейса позволяет элементами управления и компонентов.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> метод выполняет две основные операции:  
  
-   Каждый экземпляр приложения параметров, содержащихся в элементе управления для обновления значения свойства параметров приложения обычно путем вызова вызывает их <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> методы.  
  
-   При необходимости он обновляет эти общие свойства, которые зависят от этих перезагруженных значений свойств. Например, если содержащиеся в классе параметров `location` свойства параметров <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> следует убедиться, что элемент управления <xref:System.Windows.Forms.Control.Location%2A> свойство обновляется для отражения этой перезагруженных значения.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> обычно вызывает метод <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> для каждого экземпляра класса параметров приложения, которые он содержит.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет свойства параметров приложения элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Метод записывает значения свойств параметров приложения элемента управления в связанном хранилище данных. Метод использует метод сериализации и хранилища данных определяется поставщиком параметры, связанные с каждым классом параметров через <xref:System.Configuration.SettingsProviderAttribute>. Выбор поставщика параметров можно переопределить с помощью <xref:System.Configuration.ISettingsProviderService> интерфейса.  
  
> [!NOTE]
>  Если <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство `true`, элемент управления должен вызывать <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> в свой собственный <xref:System.Windows.Forms.Control.Dispose%2A> метод, чтобы данные конфигурации элемента управления автоматически сохраняются до окончания работы приложения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</summary>
        <value>
          <see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент управления содержит данные конфигурации, он будет сохранен, обычно эти данные в ответ на явный вызов <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> метода или иногда неявно при элемента управления <xref:System.Windows.Forms.Control.Dispose%2A> вызывается метод. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Свойство определяет, является ли элемент управления автоматически сохраняет данные о конфигурации после его удаления.  
  
 Значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> зависит от реализации элемента управления. Документация по элементу управления должно быть указано, использует ли параметры приложения, какие данные сохраняются и какое значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показан правильный способ для элемента управления проверить значение <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства перед попыткой автоматически сохранять данные о конфигурации.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</summary>
        <value>Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойство для однозначного определения группы свойств параметров приложения, когда несколько экземпляров одного класса программы-оболочки. Например если элемент управления содержит связанный класс-оболочку, помещаться в одном приложении несколько экземпляров одного элемента управления обычно приведет несколько экземпляров класса-оболочки. Параметры ключа требуется только в том случае, когда данные конфигурации отличаются на основе каждого экземпляра; например расположение динамично установленных элементов управления.  
  
 Следующие общие правила применяются к использованию <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Элемент управления, как любой класс может содержать ноль или более классов параметров приложения, производный от <xref:System.Configuration.ApplicationSettingsBase>. Каждый класс параметров содержит собственные <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство, которое помогает устранить неоднозначность несколько экземпляров этого класса.  
  
-   Элемент управления должен распределять данные для каждого экземпляра и общие данные в отдельные классы параметров.  
  
-   Для элемента управления с данные конфигурации для каждого экземпляра `get` доступа <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойства должна использовать по умолчанию <xref:System.Windows.Forms.Control.Name%2A> элемента управления. В большинстве случаев имя элемента управления будет уникальным в пределах приложения. Если элемент управления содержит только общие данные конфигурации `get` должна использовать по умолчанию `null`.  
  
-   `set` Для этого свойства метод доступа должен быть реализован для проведения различия между классами параметров, содержащих для каждого экземпляра и общие данные конфигурации. Для каждого класса параметров, содержащий данные для каждого экземпляра `set` следует просто к серверу для <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство класса параметров. Для классов параметров, содержащих общие данные `set` следует выполнять никаких действий для данного класса параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>