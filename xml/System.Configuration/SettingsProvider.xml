<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e349899c9a9eaa082e51bfa42237de5a3090e2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3170b-101">Действует как базовый класс для извлечения поставщиков пользовательских параметров в архитектуре параметров приложения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3170b-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3170b-102">Поставщик параметров определяет механизм для хранения данных конфигурации, используемых в архитектуре параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="3170b-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="3170b-103">Платформа .NET Framework содержит поставщик параметров по умолчанию один, <xref:System.Configuration.LocalFileSettingsProvider>, которая хранит данные конфигурации в локальной файловой системе.</span><span class="sxs-lookup"><span data-stu-id="3170b-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="3170b-104">Тем не менее, можно создать путем наследования от абстрактного механизмы хранения альтернативный <xref:System.Configuration.SettingsProvider> класса.</span><span class="sxs-lookup"><span data-stu-id="3170b-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="3170b-105">Поставщик, который использует класс-оболочку, определяется декорирования класс-оболочку с <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3170b-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="3170b-106">Если этот атрибут не указан, значение по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>, используется.</span><span class="sxs-lookup"><span data-stu-id="3170b-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="3170b-107">При создании настраиваемый поставщик параметров, как минимум, необходимо предоставить реализациями для трех методов этого класса: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> и <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span><span class="sxs-lookup"><span data-stu-id="3170b-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="3170b-108">Для клиентских приложений, можно добавить более стандартизированные функции для пользовательского поставщика путем реализации также <xref:System.Configuration.IApplicationSettingsProvider> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="3170b-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="3170b-109">Этот интерфейс отражает методов <xref:System.Configuration.ApplicationSettingsBase> класс, который главным образом включает поддержку управления версиями.</span><span class="sxs-lookup"><span data-stu-id="3170b-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="3170b-110">Как правило рекомендуется разработать поставщиков параметров в единственном экземпляре, чтобы избежать конфликта ресурсов хранилища.</span><span class="sxs-lookup"><span data-stu-id="3170b-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="3170b-111">Поставщики должны иметь поточно-, так как они могут быть вызваны одновременно из нескольких экземпляров программы-оболочки в одном домене приложения или из нескольких приложений в различных доменах.</span><span class="sxs-lookup"><span data-stu-id="3170b-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="3170b-112">Как минимум, поставщик параметров должен распознать три атрибута —<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, и <xref:System.Configuration.DefaultSettingValueAttribute>.</span><span class="sxs-lookup"><span data-stu-id="3170b-112">At minimum, a settings provider must recognize three attributes—<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="3170b-113">Полный список атрибутов, которые могут применяться к параметрам приложения см. в разделе [атрибуты параметров приложения](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span><span class="sxs-lookup"><span data-stu-id="3170b-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="3170b-114">Поставщик пользовательских параметров должен разрешать атрибуты, применяемые к свойствам параметров следующим образом:</span><span class="sxs-lookup"><span data-stu-id="3170b-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="3170b-115">Если поставщик может выполнить запрос, сделанный атрибутом, очевидно, что оно должно делать это.</span><span class="sxs-lookup"><span data-stu-id="3170b-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="3170b-116">Если поставщик не может выполнить запрос, его следует игнорировать без вмешательства пользователя.</span><span class="sxs-lookup"><span data-stu-id="3170b-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="3170b-117">В случае конфликта два или несколько свойств; Например, свойство помеченное атрибутами <xref:System.Configuration.ApplicationScopedSettingAttribute> и <xref:System.Configuration.UserScopedSettingAttribute>; поставщик должен вызывать <xref:System.Configuration.ConfigurationException>.</span><span class="sxs-lookup"><span data-stu-id="3170b-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3170b-118">Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-118">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3170b-119">Это защищенный конструктор по умолчанию для этого абстрактного класса.</span><span class="sxs-lookup"><span data-stu-id="3170b-119">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="3170b-120">Производные пользовательские параметры поставщиков не требуется предоставлять явный конструктор, так как <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> метод обычно выполняет все инициализации.</span><span class="sxs-lookup"><span data-stu-id="3170b-120">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="3170b-121">Код клиента обычно не создаются напрямую поставщик параметров; Вместо этого использовать следующую процедуру для поиска поставщика параметров для определенных параметров свойства:</span><span class="sxs-lookup"><span data-stu-id="3170b-121">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="3170b-122">Вызовите <xref:System.ComponentModel.Component.GetService%2A> метод в текущем <xref:System.ComponentModel.Component> или <xref:System.ComponentModel.ISite> возвращает ссылку на текущий <xref:System.Configuration.ISettingsProviderService>.</span><span class="sxs-lookup"><span data-stu-id="3170b-122">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="3170b-123">Вызовите <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> метод <xref:System.Configuration.ISettingsProviderService> полученные на первом шаге, для возврата поставщика параметров.</span><span class="sxs-lookup"><span data-stu-id="3170b-123">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3170b-124">Возвращает или задает имя работающего в данный момент приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-124">Gets or sets the name of the currently running application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3170b-125">Объект <see cref="T:System.String" /> , содержащее сокращенное имя приложения, которое содержит полный путь или расширение, например, <c>SimpleAppSettings</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-125">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3170b-126"><xref:System.Configuration.SettingsProvider.ApplicationName%2A> И <xref:System.Configuration.Provider.ProviderBase.Name%2A> свойства помогают устранить неоднозначность аналогично именованных параметров в разных приложениях.</span><span class="sxs-lookup"><span data-stu-id="3170b-126">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3170b-127">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="3170b-128">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3170b-129">Возвращает коллекцию значений свойства параметров для указанного экземпляра приложения и группы свойств параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-129">Returns the collection of settings property values for the specified application instance and settings property group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3170b-130">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, содержащий значения для указанной группы свойств параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-130">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3170b-131"><xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> Метод должен быть реализован для обработки специальные параметры, отмеченные <xref:System.Configuration.SpecialSettingAttribute>, также согласования параметров приложения и пользователя.</span><span class="sxs-lookup"><span data-stu-id="3170b-131">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3170b-132">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-132">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="3170b-133">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, представляющий группу параметров свойств, которые необходимо задать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3170b-134">Задает значения указанной группы параметров свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3170b-134">Sets the values of the specified group of property settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3170b-135"><xref:System.Configuration.ApplicationSettingsBase> содержит <xref:System.Configuration.ApplicationSettingsBase.Save%2A> метод, который вызывается для сохранения значений всех его свойств параметров.</span><span class="sxs-lookup"><span data-stu-id="3170b-135"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="3170b-136">Этот метод перечисляет все параметры поставщиков, связанных с параметрами свойства и вызывает <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> метод для каждого <xref:System.Configuration.SettingsProvider> для выполнения фактической сериализации операции.</span><span class="sxs-lookup"><span data-stu-id="3170b-136">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="3170b-137"><xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> Метод должен быть реализован с учетом безопасности:</span><span class="sxs-lookup"><span data-stu-id="3170b-137">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="3170b-138">Только полностью доверенный код должно быть разрешено обновлять параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="3170b-138">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="3170b-139">Частично доверенный код должно быть разрешено обновлять только параметры приложения пользователя.</span><span class="sxs-lookup"><span data-stu-id="3170b-139">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="3170b-140">Ненадежный код обычно не может обновлять параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="3170b-140">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="3170b-141">Чтобы защититься от атак ресурсов следует рассматривать квоты на использование приложений с частичным доверием.</span><span class="sxs-lookup"><span data-stu-id="3170b-141">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>