<Type Name="SettingsSerializeAsAttribute" FullName="System.Configuration.SettingsSerializeAsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e1a547674d4453100e7bb97cdee790dd33852cb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36695077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SettingsSerializeAsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SettingsSerializeAsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsSerializeAsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SettingsSerializeAsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsSerializeAsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SettingsSerializeAsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет механизм сериализации, который должен использовать поставщик параметров. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик параметров часто поддерживает несколько схем стандартной сериализацией .NET Framework. Эти схемы приведенному в <xref:System.Configuration.SettingsSerializeAs> перечисления и включать обычный текст, XML и двоичной сериализации. Кроме того поставщик может при желании поддержать пользовательскую схему сериализации.  
  
 С <xref:System.Configuration.SettingsSerializeAsAttribute>, можно указать, какой механизм сериализации должен использоваться для класса параметры данного приложения или свойства. Этот атрибут считается запросом к поставщику параметров. Он может быть пропущен или приводят к ошибке, если поставщик или тип индивидуального свойства не поддерживает конкретную схему сериализации. Если этот атрибут отсутствует, поставщик предоставит механизм сериализации по умолчанию, наиболее часто в виде обычного текста.  
  
 Несмотря на то, что поставщик параметров разрешается обеспечить динамическое изменение механизма сериализации во время выполнения, но это не типичные возможности.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsSerializeAs" />
    <altmember cref="P:System.Configuration.SettingsProperty.SerializeAs" />
    <altmember cref="P:System.Configuration.SettingElement.SerializeAs" />
    <altmember cref="T:System.Configuration.ISettingsProviderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SettingsSerializeAsAttribute (System.Configuration.SettingsSerializeAs serializeAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Configuration.SettingsSerializeAs serializeAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializeAs As SettingsSerializeAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SettingsSerializeAsAttribute(System::Configuration::SettingsSerializeAs serializeAs);" />
      <MemberSignature Language="F#" Value="new System.Configuration.SettingsSerializeAsAttribute : System.Configuration.SettingsSerializeAs -&gt; System.Configuration.SettingsSerializeAsAttribute" Usage="new System.Configuration.SettingsSerializeAsAttribute serializeAs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializeAs" Type="System.Configuration.SettingsSerializeAs" />
      </Parameters>
      <Docs>
        <param name="serializeAs">Перечисленное значение <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</param>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsSerializeAsAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если поставщик параметров или тип свойства, для преобразования не поддерживает схему сериализации, определяемое `serializeAs` параметр, операция может иметь одно из следующих результатов:  
  
-   Поставщик параметров может пропустить атрибут и использовать его схему сериализации по умолчанию.  
  
-   Процесс сериализации может прерваться без ответа. Свойства параметров приложения не будут сохранены.  
  
-   Исключения могут возникать во время сериализации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsSerializeAs" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAs">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsSerializeAs SerializeAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.SettingsSerializeAs SerializeAs" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializeAs As SettingsSerializeAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SettingsSerializeAs SerializeAs { System::Configuration::SettingsSerializeAs get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAs : System.Configuration.SettingsSerializeAs" Usage="System.Configuration.SettingsSerializeAsAttribute.SerializeAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSerializeAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение перечисления <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</summary>
        <value>Перечисленное значение <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство задается <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A> конструктора.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsSerializeAs" />
        <altmember cref="P:System.Configuration.SettingsProperty.SerializeAs" />
        <altmember cref="P:System.Configuration.SettingElement.SerializeAs" />
      </Docs>
    </Member>
  </Members>
</Type>