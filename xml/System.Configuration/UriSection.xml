<Type Name="UriSection" FullName="System.Configuration.UriSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54e8fc849ad3578ee35a97dc37b72c70c6dddcb5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UriSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UriSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.UriSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UriSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriSection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет собой раздел URI в файле конфигурации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существующий <xref:System.Uri?displayProperty=nameWithType> класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен. Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.  
  
 Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection> класса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.UriSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.UriSection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существующий <xref:System.Uri?displayProperty=nameWithType> класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен. Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.  
  
 Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection> класса.  
  
 Дополнительные сведения о поддержке IRI см. в разделе «Примечания» <xref:System.Uri?displayProperty=nameWithType> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idn">
      <MemberSignature Language="C#" Value="public System.Configuration.IdnElement Idn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IdnElement Idn" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Idn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Idn As IdnElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IdnElement ^ Idn { System::Configuration::IdnElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IdnElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Configuration.IdnElement" />, который содержит параметры конфигурации для международного домена имен (IDN), считываемые классом <see cref="T:System.Uri" />.</summary>
        <value>Параметр конфигурации для обработки международного доменного имени (IDN) в классе <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существующий <xref:System.Uri?displayProperty=nameWithType> класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен. Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.  
  
 Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection> класса. <xref:System.Configuration.UriSection.Idn%2A> Свойство возвращает параметр конфигурации для IDN обработку в <xref:System.Uri?displayProperty=nameWithType> класса.  
  
 Обработка IRI должна быть включена для обработки IDN. Если IRI-система не включена, то обработка IDN данных будет происходить по умолчанию, когда режим платформы .NET Framework 2.0 является совместимым и имена IDN не используются.  
  
 Только атрибут международного доменного имени (IDN) управляет работой. Все другие операции по обработке IRI (например, нормализация знаков) выполняются по умолчанию.  
  
 Параметр конфигурации для <xref:System.Configuration.IdnElement> будет считываться один раз при первой <xref:System.Uri?displayProperty=nameWithType> создается класс. Изменения, внесенные в параметры конфигурации после этого, игнорируются.  
  
 Дополнительные сведения о поддержке IRI см. в разделе «Примечания» <xref:System.Uri?displayProperty=nameWithType> класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="IriParsing">
      <MemberSignature Language="C#" Value="public System.Configuration.IriParsingElement IriParsing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IriParsingElement IriParsing" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.IriParsing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IriParsing As IriParsingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IriParsingElement ^ IriParsing { System::Configuration::IriParsingElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("iriParsing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IriParsingElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Configuration.IriParsingElement" />, который содержит параметры конфигурации для международного домена имен (IRI), считываемые классом <see cref="T:System.Uri" />.</summary>
        <value>Параметр конфигурации для разбора международных идентификаторов ресурсов (IRI) в классе <see cref="T:System.Uri" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существующий <xref:System.Uri?displayProperty=nameWithType> класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен. Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.  
  
 Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection> класса. <xref:System.Configuration.UriSection.IriParsing%2A> Свойство возвращает параметр конфигурации для синтаксического анализа IRI в <xref:System.Uri?displayProperty=nameWithType> класса.  
  
 Обработка IRI должна быть включена для обработки IDN. Если IRI-система не включена, то обработка IDN данных будет происходить по умолчанию, когда режим платформы .NET Framework 2.0 является совместимым и имена IDN не используются.  
  
 Только атрибут международного доменного имени (IDN) управляет работой. Все другие операции по обработке IRI (например, нормализация знаков) выполняются по умолчанию.  
  
 Параметр конфигурации для <xref:System.Configuration.IriParsingElement> будет считываться один раз при первой <xref:System.Uri?displayProperty=nameWithType> создается класс. Изменения, внесенные в параметры конфигурации после этого, игнорируются.  
  
 Дополнительные сведения о поддержке IRI см. в разделе «Примечания» <xref:System.Uri?displayProperty=nameWithType> класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemeSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SchemeSettingElementCollection SchemeSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.SchemeSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemeSettings As SchemeSettingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SchemeSettingElementCollection ^ SchemeSettings { System::Configuration::SchemeSettingElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("schemeSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SchemeSettingElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Configuration.SchemeSettingElementCollection" />, содержащий параметры конфигурации для разбора схем в классе <see cref="T:System.Uri" />.</summary>
        <value>Параметры конфигурации для разбора схем в классе <see cref="T:System.Uri" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.UriSection.SchemeSettings%2A> Свойство не является универсальным. Только genericUriParserOptions = параметр конфигурации «DontUnescapePathDotsAndSlashes» для поддерживаются схемы HTTP и HTTPS. Все остальные параметры игнорируются.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SchemeSettingElement" />
        <altmember cref="T:System.Configuration.SchemeSettingElementCollection" />
        <altmember cref="T:System.GenericUriParserOptions" />
      </Docs>
    </Member>
  </Members>
</Type>