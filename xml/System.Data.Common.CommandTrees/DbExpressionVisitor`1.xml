<Type Name="DbExpressionVisitor&lt;TResultType&gt;" FullName="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4dc1a9c99a3a60f976a34e56f1efa83fd8ffabf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37684887" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbExpressionVisitor&lt;TResultType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbExpressionVisitor`1&lt;TResultType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbExpressionVisitor(Of TResultType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResultType&gt;&#xA;public ref class DbExpressionVisitor abstract" />
  <TypeSignature Language="F#" Value="type DbExpressionVisitor&lt;'ResultType&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResultType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResultType">
      <span data-ttu-id="5984d-101">Тип результата, полученного в результате обхода.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5984d-101">The type of the result produced by the visitor.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="5984d-102">Определяет базовые возможности, которые должны реализовывать посетители, возвращающие результирующее значение определенного типа.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5984d-102">Defines the basic functionality that should be implemented by visitors that return a result value of a specific type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5984d-103">Класс <xref:System.Data.Common.CommandTrees.DbExpressionVisitor%601> является абстрактным классом, который описывает просмотр выражений.</span><span class="sxs-lookup"><span data-stu-id="5984d-103">The <xref:System.Data.Common.CommandTrees.DbExpressionVisitor%601> is an abstract class that describes expression traversal.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5984d-104">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-104">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5984d-105">Реализует шаблон «Посетитель» для выражений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-105">Implements the visitor pattern for expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbAndExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-106">Класс <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-106">The <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-107">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-107">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-108">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-108">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbApplyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-109">Класс <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-109">The <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-110">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-110">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-111">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-111">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbArithmeticExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-112">Класс <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-112">The <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-113">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-113">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-114">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-114">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCaseExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-115">Класс <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-115">The <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-116">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-116">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-117">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-117">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCastExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-118">Класс <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-118">The <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-119">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-119">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-120">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-120">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbComparisonExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-121">Класс <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-121">The <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-122">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-122">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-123">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-123">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbConstantExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-124">Класс <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-124">The <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-125">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-125">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-126">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-126">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCrossJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-127">Класс <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-127">The <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-128">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-128">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-129">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-129">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDerefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-130">Класс <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-130">The <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-131">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-131">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-132">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-132">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDistinctExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-133">Класс <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-133">The <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-134">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-134">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-135">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-135">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbElementExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-136">Класс <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-136">The <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-137">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-137">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-138">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-138">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbEntityRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-139">Класс <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-139">The <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-140">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-140">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-141">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-141">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExceptExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-142">Класс <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-142">The <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-143">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-143">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-144">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-144">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-145">Класс <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-145">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-146">В случае переопределения в производном классе обрабатывает все выражения неизвестного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-146">When overridden in a derived class, handles any expression of an unrecognized type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-147">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-147">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5984d-148">Этот метод вызывается, когда встречается выражение типа, которое в противном случае останется нераспознанным.</span><span class="sxs-lookup"><span data-stu-id="5984d-148">This method is called when an expression of an otherwise unrecognized type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFilterExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-149">Класс <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-149">The <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-150">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-150">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-151">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-151">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFunctionExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-152">Класс <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-152">The <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-153">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-153">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-154">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-154">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbGroupByExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-155">Класс <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-155">The <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-156">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-156">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-157">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-157">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIntersectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-158">Класс <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-158">The <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-159">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-159">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-160">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-160">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsEmptyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-161">Класс <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-161">The <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-162">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-162">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-163">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-163">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-164">Класс <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-164">The <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-165">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-165">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-166">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-166">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsOfExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-167">Класс <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-167">The <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-168">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-168">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-169">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-169">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-170">Класс <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-170">The <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-171">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-171">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-172">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-172">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResultType Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Visit (expression As DbLambdaExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResultType Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType&#xA;override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-173">Класс <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-173">The <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-174">При переопределении в производном классе реализует метод шаблона посетителя для <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-174">When overridden in a derived class, implements the visitor pattern method for <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-175">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-175">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLikeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-176">Класс <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-176">The <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-177">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-177">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-178">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-178">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLimitExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-179">Класс <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-179">The <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-180">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-180">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-181">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-181">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNewInstanceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-182">Класс <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-182">The <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-183">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-183">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-184">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-184">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNotExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-185">Класс <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-185">The <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-186">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-186">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-187">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-187">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-188">Класс <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-188">The <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-189">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-189">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-190">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-190">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOfTypeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-191">Класс <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-191">The <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-192">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-192">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-193">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-193">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOrExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-194">Класс <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-194">The <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-195">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-195">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-196">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-196">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbParameterReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-197">Класс <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-197">The <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-198">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-198">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-199">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-199">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbProjectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-200">Класс <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-200">The <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-201">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-201">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-202">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-202">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbPropertyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-203">Класс <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-203">The <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-204">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-204">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-205">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-205">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbQuantifierExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-206">Класс <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-206">The <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-207">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-207">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-208">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-208">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-209">Класс <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-209">The <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-210">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-210">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-211">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-211">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefKeyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-212">Класс <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-212">The <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-213">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-213">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-214">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-214">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRelationshipNavigationExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-215">Класс <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-215">The <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-216">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-216">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-217">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-217">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbScanExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-218">Класс <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-218">The <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-219">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-219">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-220">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-220">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSkipExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-221">Класс <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-221">The <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-222">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-222">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-223">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-223">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSortExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-224">Класс <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-224">The <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-225">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-225">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-226">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-226">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbTreatExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-227">Класс <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-227">The <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-228">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-228">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-229">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-229">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbUnionAllExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-230">Класс <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-230">The <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-231">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-231">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-232">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-232">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbVariableReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5984d-233">Класс <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, посещение которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-233">The <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that is being visited.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5984d-234">В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-234">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5984d-235">Результирующее значение определенного типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5984d-235">A result value of a specific type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>