<Type Name="DbLambdaExpression" FullName="System.Data.Common.CommandTrees.DbLambdaExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35c635663d5e2a42064ce48ef385f7379e6d2d4f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377548" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbLambdaExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbLambdaExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbLambdaExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbLambdaExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbLambdaExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет применять лямбда-функцию к аргументам, представляемым объектами <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
        <summary>Метод шаблона посетителя для посетителей-выражений, которые не производят результирующее значение.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="visitor" /> имеет значение null</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">Тип результата, формируемого <c>посетителя</c></typeparam>
        <param name="visitor">Экземпляр типизированного класса <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, который производит результирующее значение типа TResultType.</param>
        <summary>Метод шаблона посетителя для посетителей-выражений, которые производят результирующее значение определенного типа.</summary>
        <returns>Тип результата, произведенного посетителем-выражением.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="visitor" /> имеет значение null</exception>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arguments As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ Arguments { System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает список объектов <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, предоставляющий аргументы, к которым следует применить лямбда-функцию.</summary>
        <value>Список объектов <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbLambda Lambda { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbLambda Lambda" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Lambda As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbLambda ^ Lambda { System::Data::Common::CommandTrees::DbLambda ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Data.Common.CommandTrees.DbLambda" />, представляющий лямбда-функцию, применяемую к данному выражению.</summary>
        <value>Объект <see cref="T:System.Data.Common.CommandTrees.DbLambda" />, представляющий лямбда-функцию, применяемую к данному выражению.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>