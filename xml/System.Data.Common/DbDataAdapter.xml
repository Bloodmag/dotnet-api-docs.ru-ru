<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bb95e-101">Помогает в реализации интерфейса <see cref="T:System.Data.IDbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="bb95e-102">Разработчики производных классов <see cref="T:System.Data.Common.DbDataAdapter" /> реализуют набор функций, обеспечивающий строгую типизацию, но наследуют большинство функций, необходимых для полной реализации **DataAdapter**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-103"><xref:System.Data.Common.DbDataAdapter> Класс наследует от <xref:System.Data.Common.DataAdapter> класс и реализует <xref:System.Data.IDbDataAdapter> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="bb95e-104">Это помогает реализовать класс **DataAdapter** предназначен для работы с реляционной базой данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="bb95e-105">Приложение не создает экземпляр <xref:System.Data.Common.DbDataAdapter> напрямую, но создает экземпляр класса, который наследует от него.</span><span class="sxs-lookup"><span data-stu-id="bb95e-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="bb95e-106">Классы, наследующие <xref:System.Data.Common.DbDataAdapter> должны реализовывать наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="bb95e-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="bb95e-107">Например <xref:System.Data.Common.DbDataAdapter> класс определяет <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство и <xref:System.Data.Common.DbDataAdapter> класс определяет восемь перегрузки <xref:System.Data.IDataAdapter.Fill%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="bb95e-108">В свою очередь <xref:System.Data.OleDb.OleDbDataAdapter> класс наследует <xref:System.Data.Common.DbDataAdapter.Fill%2A> метода, а также определяет две дополнительные перегрузки <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> , принимающие объект ADO Recordset в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="bb95e-109">При наследовании от <see cref="T:System.Data.Common.DbDataAdapter" /> класс, рекомендуется реализовать следующие конструкторы:</span><span class="sxs-lookup"><span data-stu-id="bb95e-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span>  
  
 <span data-ttu-id="bb95e-110"><list type="table"><listheader><term> Элемент</span><span class="sxs-lookup"><span data-stu-id="bb95e-110"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="bb95e-111"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="bb95e-111"></term><description> Description</span></span>  
  
 <span data-ttu-id="bb95e-112"></description></listheader><item><term> *Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="bb95e-112"></description></listheader><item><term> *Prv*DataAdapter()</span></span>  
  
 <span data-ttu-id="bb95e-113"></term><description> Инициализирует новый экземпляр *Prv*класс DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-113"></term><description> Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 <span data-ttu-id="bb95e-114"></description></item><item><term> *Prv*DataAdapter (*Prv*команда *selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="bb95e-114"></description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span>  
  
 <span data-ttu-id="bb95e-115"></term><description> Инициализирует новый экземпляр *Prv*класс DataAdapter с указанной инструкцией SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-115"></term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="bb95e-116"></description></item><item><term> *Prv*DataAdapter (строка *selectCommandText*, строка *selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="bb95e-116"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span>  
  
 <span data-ttu-id="bb95e-117"></term><description> Инициализирует новый экземпляр *Prv*класса DataAdapter инструкцию SQL SELECT и строку соединения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-117"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="bb95e-118"></description></item><item><term> *Prv*DataAdapter (строка *selectCommandText*, *Prv*подключения *selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="bb95e-118"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span>  
  
 <span data-ttu-id="bb95e-119"></term><description> Инициализирует новый экземпляр *Prv*класс DataAdapter с помощью инструкции SQL SELECT и *Prv*объект соединения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-119"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="bb95e-120">Для обеспечения согласованности между поставщиками данных .NET Framework следует имя наследующий класс в форме *Prv*DataAdapter, где *Prv* имеет стандартный префикс, назначаемый всем классам в определенной версии .NET Пространства имен поставщика данных платформы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="bb95e-121">Например, «Sql» — префикс <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> класса в **System.Data.SqlClient** пространства имен.</span><span class="sxs-lookup"><span data-stu-id="bb95e-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb95e-122">Инициализирует новый экземпляр класса <see langword="DataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-122">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-123">Инициализирует новый экземпляр класса **DataAdapter**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-123">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-124">При создании экземпляра <xref:System.Data.Common.DbDataAdapter>, следующие свойства чтения и записи присваиваются следующие начальные значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-124">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="bb95e-125">Свойства</span><span class="sxs-lookup"><span data-stu-id="bb95e-125">Properties</span></span>|<span data-ttu-id="bb95e-126">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="bb95e-126">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="bb95e-127">Новый объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-127">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="bb95e-128">Новый объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-128">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="bb95e-129">Новый объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-129">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="bb95e-130">Новый объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="bb95e-131">Можно изменить значение любого из этих свойств, вызвав его отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-131">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="bb95e-132">Объект <see langword="DataAdapter" /> используется для создания нового <see langword="DataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-132">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="bb95e-133">Инициализирует новый экземпляр класса <see langword="DataAdapter" /> из существующего объекта того же типа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-133">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-134">Эта перегрузка <xref:System.Data.Common.DbDataAdapter> конструктор предназначен для использования с помощью поставщика данных .NET Framework при реализации похожего конструктора для использования в реализации клона.</span><span class="sxs-lookup"><span data-stu-id="bb95e-134">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="bb95e-135">Интерфейс <see cref="T:System.Data.IDbCommand" />, добавляемый к пакету.</span><span class="sxs-lookup"><span data-stu-id="bb95e-135">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="bb95e-136">Добавляет интерфейс <see cref="T:System.Data.IDbCommand" /> к текущему пакету.</span><span class="sxs-lookup"><span data-stu-id="bb95e-136">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="bb95e-137">Число команд в пакете, имевшееся до добавления интерфейса <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-137">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-138">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-138">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-139">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-139">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb95e-140">Адаптер не поддерживает пакеты.</span><span class="sxs-lookup"><span data-stu-id="bb95e-140">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-141">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-141">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-142">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод, чтобы разрешить пользователям добавлять команды в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-142">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-143">Удаляет все объекты <see cref="T:System.Data.IDbCommand" /> из пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-143">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-144">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-144">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-145">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-145">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb95e-146">Адаптер не поддерживает пакеты.</span><span class="sxs-lookup"><span data-stu-id="bb95e-146">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-147">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-147">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-148">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод, чтобы разрешить пользователям удалять команды из пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-148">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="bb95e-149">Объект <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-149">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-150">Интерфейс <see cref="T:System.Data.IDbCommand" /> выполняется во время использования метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-150">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="bb95e-151">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-151">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="bb95e-152">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-152">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="bb95e-153">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-153">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="bb95e-154">Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-154">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-155">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-155">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="bb95e-156">Объект <see cref="T:System.Data.DataRow" />, который обновляет источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-156">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-157">Интерфейс <see cref="T:System.Data.IDbCommand" /> для выполнения при применении метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-157">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="bb95e-158">Является ли команда оператором UPDATE, INSERT, DELETE или SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-158">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="bb95e-159">Объект <see cref="T:System.Data.Common.DataTableMapping" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-159">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="bb95e-160">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-160">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="bb95e-161">Новый экземпляр класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-161">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-162">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-162">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-163">Имя по умолчанию, используемое объектом <see cref="T:System.Data.Common.DataAdapter" /> для сопоставлений таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-163">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-164">«Table» — имя по умолчанию, используемые <xref:System.Data.Common.DataAdapter> для сопоставления таблицы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-164">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="bb95e-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> Когда приложение добавляет сопоставление таблицы для использования с <xref:System.Data.Common.DbDataAdapter.Fill%2A>, но не указывает <xref:System.Data.DataTable> имя.</span><span class="sxs-lookup"><span data-stu-id="bb95e-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-166">Возвращает или задает команду для удаления записей из набора данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-166">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="bb95e-167">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-167">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-168">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> создается автоматически.</span><span class="sxs-lookup"><span data-stu-id="bb95e-168">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-169">В следующем примере создается производный класс <xref:System.Data.OleDb.OleDbDataAdapter> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-169">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bb95e-170">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bb95e-171">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Data.Common.DbDataAdapter" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-171">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-172">Выполняет текущий пакет.</span><span class="sxs-lookup"><span data-stu-id="bb95e-172">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="bb95e-173">Возвращает значение из последней команды в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-173">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-174">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-174">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-175">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-175">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-176">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-176">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-177">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод, чтобы разрешить пользователям выполнять пакет.</span><span class="sxs-lookup"><span data-stu-id="bb95e-177">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="bb95e-178">Реализация этого метода объединяет команды в адаптеры в пакете, а затем выполняет пакет и возвращает возвращаемое значение пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-178">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb95e-179">Заполняет объект <see cref="T:System.Data.DataSet" /> или объект <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-179">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-180">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-180">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="bb95e-181">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-181">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-182">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-182">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="bb95e-183">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-183">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-184"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод получает данные из источника данных, с помощью инструкции SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-184">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bb95e-185"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией select должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-185">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-186">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.Fill%2A> — вызывается, он открывается для получения данных и затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-186">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bb95e-187">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-187">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-188">Если произошла ошибка или исключение при заполнении таблиц данных, строки добавляются до возникновения ошибки сохраняется в таблицах данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-188">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bb95e-189">В оставшейся части операция прерывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-189">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bb95e-190">Если команда не возвращает строк, таблицы не будут добавлены <xref:System.Data.DataSet>, и исключение не вызывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-190">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="bb95e-191">Если <xref:System.Data.Common.DbDataAdapter> объект обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон "*columnname*1 «,»*columnname*2", " *columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-191">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-192">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-192">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bb95e-193">Если указанный запрос возвращает несколько результатов, результирующий набор для каждой строки запроса, возвращающего помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-193">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="bb95e-194">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-194">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-195">Поскольку таблицы не создается для запроса, который не возвращает строк, если обработать запрос insert, а затем выберите запрос, таблица, созданная для запроса select называется «Table», так как это первая созданная таблица.</span><span class="sxs-lookup"><span data-stu-id="bb95e-195">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="bb95e-196">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-196">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-197">Если инструкция SELECT, используемая для заполнения <xref:System.Data.DataSet> возвращает несколько результатов, например пакетные инструкции SQL, если один из результатов содержит ошибку, все последующие результаты пропускаются и не добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-197">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bb95e-198">При использовании последующих <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызовы обновить содержимое <xref:System.Data.DataSet>, должны быть выполнены два условия:</span><span class="sxs-lookup"><span data-stu-id="bb95e-198">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bb95e-199">Инструкция SQL должна совпадать с той, изначально используются для заполнения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-199">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bb95e-200">**Ключ** сведения о столбце должен присутствовать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-200">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="bb95e-201">Если имеется информация о первичных ключах, все повторяющиеся строки согласовываются и появляются только один раз в <xref:System.Data.DataTable> , соответствующий <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-201">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-202">Может задать сведения о первичном ключе, либо с помощью <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, указав <xref:System.Data.DataTable.PrimaryKey%2A> свойство <xref:System.Data.DataTable>, или установив <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> свойства `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-202">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-203">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-203">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-204">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-204">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-205">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-205">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-206">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-206">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-207">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-207">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="bb95e-208">Имя объекта <see cref="T:System.Data.DataTable" />, используемое для сопоставления таблицы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-208">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="bb95e-209">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имени <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-209">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="bb95e-210">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-210">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="bb95e-211">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-211">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-212"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод извлекает строки из источника данных, с помощью инструкции SELECT, указанной и связанной <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bb95e-212">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bb95e-213">Объект подключения, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-213">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-214">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-214">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-215">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-215">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-216"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Операция затем добавляет строки в целевой <xref:System.Data.DataTable> объекты в <xref:System.Data.DataSet>, создавая <xref:System.Data.DataTable> объекты, если они еще не существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-216">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bb95e-217">При создании <xref:System.Data.DataTable> объектов, <xref:System.Data.Common.DbDataAdapter.Fill%2A> операции обычно создает только метаданные имени столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-217">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bb95e-218">Однако если <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> свойству `AddWithKey`, также создаются соответствующие первичные ключи и ограничения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-218">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bb95e-219">Если <xref:System.Data.Common.DbDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-219">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-220">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-220">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-221">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-221">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="bb95e-222">Перегрузка <xref:System.Data.Common.DbDataAdapter.Fill%2A> , который принимает `DataTable` как параметр получает только первый результат.</span><span class="sxs-lookup"><span data-stu-id="bb95e-222">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="bb95e-223">Используйте перегрузку <xref:System.Data.Common.DbDataAdapter.Fill%2A> , который принимает `DataSet` как параметр, чтобы получить несколько результатов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-223">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="bb95e-224"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-224">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-225">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.Fill%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-225">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-226">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-226">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-227">Если <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-227">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-228">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-228">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-229">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-229">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-230">Можно использовать <xref:System.Data.Common.DbDataAdapter.Fill%2A> метода несколько раз на том же <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-230">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-231">Если первичный ключ существует, входящие строки объединяются с соответствующими строками, которые уже существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-231">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bb95e-232">Если первичный ключ отсутствует, входящие строки добавляются в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-232">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-233">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-233">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-234">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-234">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-235">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-235">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-236">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.Fill%2A> и <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для данных .NET Framework поставщик возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-236">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-237">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-237">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-238">Эта перегрузка <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-238">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-239">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-239">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-240">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-240">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="bb95e-241">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-241">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="bb95e-242">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-242">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="bb95e-243">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-243">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-244"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод получает данные из источника данных, с помощью инструкции SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-244">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bb95e-245"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией select должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-245">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-246">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-246">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-247">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-247">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-248">Если команда не возвращает строк, таблицы не будут добавлены <xref:System.Data.DataSet>, и исключение не вызывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-248">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="bb95e-249">Если <xref:System.Data.Common.DbDataAdapter> объект обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя «имя_столбца1», «columnname2», «имя_столбца3» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-249">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="bb95e-250">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-250">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bb95e-251">Если указанный запрос возвращает несколько результатов, каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-251">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-252">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-252">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-253">Поскольку таблицы не создается для запроса, который не возвращает строк, если бы обработать запрос insert, а затем выберите запрос, таблица, созданная для запроса select будет называться «Table», поскольку это первая созданная таблица.</span><span class="sxs-lookup"><span data-stu-id="bb95e-253">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="bb95e-254">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-254">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-255"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-255">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-256">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.Fill%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-256">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-257">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-257">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-258">Если <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-258">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-259">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-259">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-260">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-260">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-261">Если произошла ошибка или исключение при заполнении таблиц данных, строки добавляются до возникновения ошибки сохраняется в таблицах данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-261">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bb95e-262">В оставшейся части операция прерывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-262">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bb95e-263">Если инструкция SELECT, используемая для заполнения <xref:System.Data.DataSet> возвращает несколько результатов, такие как пакетной инструкции SQL, следует учитывать следующее:</span><span class="sxs-lookup"><span data-stu-id="bb95e-263">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bb95e-264">Если один из результатов содержит ошибку, все последующие результаты, пропущен и не добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-264">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bb95e-265">При использовании последующих <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызовы обновить содержимое <xref:System.Data.DataSet>, должны быть выполнены два условия:</span><span class="sxs-lookup"><span data-stu-id="bb95e-265">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bb95e-266">Инструкция SQL должна совпадать с той, изначально используются для заполнения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-266">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bb95e-267">**Ключ** сведения о столбце должен присутствовать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-267">The **Key** column information must be present.</span></span> <span data-ttu-id="bb95e-268">Если имеется информация о первичных ключах, все повторяющиеся строки согласовываются и появляются только один раз в <xref:System.Data.DataTable> , соответствующий <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-268">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-269">Может задать сведения о первичном ключе, либо с помощью <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, указав <xref:System.Data.DataTable.PrimaryKey%2A> свойство <xref:System.Data.DataTable>, или установив <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> свойства `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-269">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-270">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-270">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-271">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-271">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-272">Дополнительные сведения см. в разделе[Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-272">For more information, see[Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-273">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-273">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-274">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-274">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-275">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, для заполнения <xref:System.Data.DataSet> со строками из таблицы categories.</span><span class="sxs-lookup"><span data-stu-id="bb95e-275">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="bb95e-276">В этом примере предполагается, что вы создали <xref:System.Data.OleDb.OleDbDataAdapter> и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-276">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-277">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-277">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-278">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-278">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="bb95e-279">Объект <see cref="T:System.Data.DataTable" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-279">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-280">Оператор SQL SELECT используется для извлечения строки из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-280">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="bb95e-281">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-281">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-282">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных с помощью указанного объекта <see cref="T:System.Data.DataTable" />, интерфейса <see cref="T:System.Data.IDbCommand" /> и значения типа <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-282">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-283">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-283">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="bb95e-284">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-284">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-285"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод извлекает строки из источника данных, с помощью инструкции SELECT, указанной и связанной <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bb95e-285">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bb95e-286">Объект подключения, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-286">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-287">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.Fill%2A> — вызывается, он открывается для получения данных и затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-287">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bb95e-288">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-288">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-289"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Операция затем добавляет строки в указанное назначение <xref:System.Data.DataTable> объекта в <xref:System.Data.DataSet>, создавая <xref:System.Data.DataTable> объекта, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-289">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="bb95e-290">При создании <xref:System.Data.DataTable> объекта, <xref:System.Data.Common.DbDataAdapter.Fill%2A> операции обычно создает только метаданные имени столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-290">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bb95e-291">Однако если <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> свойству `AddWithKey`, также создаются соответствующие первичные ключи и ограничения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-291">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bb95e-292">Если <xref:System.Data.Common.DbDataAdapter> объект обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон "*columnname*1», «*columnname*2 «, "*columnname*3», и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-292">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-293">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-293">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bb95e-294">Перегрузка <xref:System.Data.Common.DbDataAdapter.Fill%2A> , который принимает `DataTable` как параметр получает только первый результат.</span><span class="sxs-lookup"><span data-stu-id="bb95e-294">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="bb95e-295">Используйте перегрузку <xref:System.Data.Common.DbDataAdapter.Fill%2A> , который принимает `DataSet` как параметр, чтобы получить несколько результатов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-295">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="bb95e-296">Можно использовать <xref:System.Data.Common.DbDataAdapter.Fill%2A> метода несколько раз на том же <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-296">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-297">Если первичный ключ существует, входящие строки объединяются с соответствующими строками, которые уже существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-297">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bb95e-298">Если первичный ключ отсутствует, входящие строки добавляются в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-298">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-299">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-300">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-301">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-302">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-303">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-304">Эта перегрузка <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-304">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="bb95e-305">Номер записи (с нуля), с которой необходимо начать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-305">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="bb95e-306">Максимальное число извлекаемых записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-306">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="bb95e-307">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-307">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="bb95e-308">Добавляет или обновляет строки в объекте <see cref="T:System.Data.DataTable" /> для получения соответствия строкам в источнике данных, начиная с указанной записи и вплоть до заданного максимального количества получаемых записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-308">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="bb95e-309">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-309">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="bb95e-310">Это значение не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-310">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-311"><xref:System.Data.Common.DataAdapter.Fill%2A> Метод извлекает строки из источника данных, с помощью инструкции SELECT, указанной и связанной <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bb95e-311">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bb95e-312">Объект подключения, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-312">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-313">Если подключение было закрыто до <xref:System.Data.Common.DataAdapter.Fill%2A> — вызывается, он открывается для получения данных и затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-313">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="bb95e-314">Если подключение является открытым до <xref:System.Data.Common.DataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-314">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-315"><xref:System.Data.Common.DataAdapter.Fill%2A> Операция затем добавляет строки в целевой <xref:System.Data.DataTable> объекты в <xref:System.Data.DataSet>, создавая <xref:System.Data.DataTable> объекты, если они еще не существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-315">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bb95e-316">При создании <xref:System.Data.DataTable> объектов, <xref:System.Data.Common.DataAdapter.Fill%2A> операции обычно создает только метаданные имени столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-316">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bb95e-317">Однако если <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> свойству `AddWithKey`, также создаются соответствующие первичные ключи и ограничения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-317">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bb95e-318">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-318">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-319">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-319">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-320">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-320">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="bb95e-321">Если адаптер данных обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя «имя_столбца1», «columnname2», «имя_столбца3» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-321">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="bb95e-322">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-322">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-323">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet>, каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-323">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-324">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-324">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-325">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-325">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-326">Если инструкция SELECT, используемая для заполнения <xref:System.Data.DataSet> возвращает несколько результатов, например пакетные инструкции SQL, если один из результатов содержит ошибку, все последующие результаты, пропущен и не добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-326">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bb95e-327">Можно использовать <xref:System.Data.Common.DataAdapter.Fill%2A> метода несколько раз на том же <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-327">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-328">Если первичный ключ существует, входящие строки объединяются с соответствующими строками, которые уже существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bb95e-329">Если первичный ключ отсутствует, входящие строки добавляются в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-330">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-330">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-331">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-331">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-332">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-332">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="bb95e-333">Номер записи (с нуля), с которой необходимо начать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-333">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="bb95e-334">Максимальное число извлекаемых записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-334">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-335">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-335">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="bb95e-336">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-336">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="bb95e-337">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-337">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="bb95e-338">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-338">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-339">Объект `maxRecords` все записи, найденные после начальной записи возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-339">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="bb95e-340">Если `maxRecords` больше, чем число оставшихся строк только возвращаются оставшиеся строки и ошибка не выдается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-340">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="bb95e-341">Если инструкция возвращает несколько результатов, соответствующей команды select <xref:System.Data.Common.DbDataAdapter.Fill%2A> применяется только `maxRecords` к первому результату.</span><span class="sxs-lookup"><span data-stu-id="bb95e-341">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="bb95e-342"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод получает данные из источника данных, с помощью инструкции SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-342">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bb95e-343"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-343">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-344">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.Fill%2A> — вызывается, он открывается для получения данных и затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-344">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="bb95e-345">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-345">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-346">Если команда не возвращает строк, таблицы не будут добавлены <xref:System.Data.DataSet>, но исключение не вызывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-346">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="bb95e-347">Если <xref:System.Data.Common.DbDataAdapter> объект обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон "*columnname*1», «*columnname*2 «, "*columnname*3», и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-347">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-348">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-348">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bb95e-349">Если указанный запрос возвращает несколько результатов, каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-349">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-350">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-350">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-351">Поскольку таблицы не создается для запроса, который не возвращает строк, если обработать запрос insert, а затем запрос select, таблица, созданная для запроса select называется «Table», поскольку это первая созданная таблица.</span><span class="sxs-lookup"><span data-stu-id="bb95e-351">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="bb95e-352">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-352">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-353"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-353">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-354">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.Fill%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-354">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-355">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-355">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-356">Если <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-356">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-357">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-357">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-358">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-358">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-359">Если произошла ошибка или исключение при заполнении таблиц данных, строки добавляются до возникновения ошибки сохраняется в таблицах данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-359">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bb95e-360">В оставшейся части операция прерывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-360">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bb95e-361">Если инструкция SELECT, используемая для заполнения <xref:System.Data.DataSet> возвращает несколько результатов, например пакетные инструкции SQL, следует учитывать следующее:</span><span class="sxs-lookup"><span data-stu-id="bb95e-361">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bb95e-362">При обработке нескольких результатов пакетной инструкции SQL, `maxRecords` применяется только к первому результату.</span><span class="sxs-lookup"><span data-stu-id="bb95e-362">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="bb95e-363">То же самое верно для строк, содержащих разбитые на разделы результаты (Framework поставщик данных .NET для OLE DB только).</span><span class="sxs-lookup"><span data-stu-id="bb95e-363">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="bb95e-364">Результат верхнего уровня ограничен `maxRecords`, но добавляются все дочерние строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-364">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="bb95e-365">Если один из результатов содержит ошибку, все последующие результаты, пропущен и не добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-365">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="bb95e-366">При использовании последующих <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызовы обновить содержимое <xref:System.Data.DataSet>, должны быть выполнены два условия:</span><span class="sxs-lookup"><span data-stu-id="bb95e-366">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="bb95e-367">Инструкция SQL должна совпадать с той, изначально используются для заполнения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-367">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="bb95e-368">**Ключ** сведения о столбце должен присутствовать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-368">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="bb95e-369">Если имеется информация о первичных ключах, все повторяющиеся строки будут согласованы и появляются только один раз в <xref:System.Data.DataTable> , соответствующий <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-369">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-370">Может задать сведения о первичном ключе, либо с помощью <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, указав <xref:System.Data.DataTable.PrimaryKey%2A> свойство <xref:System.Data.DataTable>, или установив <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> свойства `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-370">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-371">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-371">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-372">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-372">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-373">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-373">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-374">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-374">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-375">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-375">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-376">`DataSet` Не будет содержать больше чем число записей, обозначенном `maxRecords`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-376">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="bb95e-377">Однако весь результирующий набор, сформированный запросом по-прежнему возвращается с сервера.</span><span class="sxs-lookup"><span data-stu-id="bb95e-377">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-378">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, для заполнения <xref:System.Data.DataSet> 15 строк, начиная со строки 10, из **категории** таблицы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-378">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="bb95e-379">В этом примере предполагается, что вы создали <xref:System.Data.OleDb.OleDbDataAdapter> и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-379">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-380"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-380">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-381">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-381">The source table is invalid.</span></span>  
  
 <span data-ttu-id="bb95e-382">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-382">-or-</span></span>  
  
 <span data-ttu-id="bb95e-383">Подключение является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-383">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb95e-384">Не удалось найти подключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-384">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb95e-385">Значение параметра <paramref name="startRecord" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-385">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="bb95e-386">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-386">-or-</span></span>  
  
 <span data-ttu-id="bb95e-387">Значение параметра <paramref name="maxRecords" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-387">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-388">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-388">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="bb95e-389">Объект <see cref="T:System.Data.DataTable" /> для заполнения из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-389">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="bb95e-390">Номер записи (с нуля), с которой необходимо начать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-390">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="bb95e-391">Максимальное число извлекаемых записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-391">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-392">Интерфейс <see cref="T:System.Data.IDbCommand" />, исполняемый для заполнения объектов <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-392">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="bb95e-393">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-393">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-394">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с использованием имен <see cref="T:System.Data.DataSet" /> и <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-394">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="bb95e-395">Количество строк, успешно добавленных или обновленных в таблицах данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-395">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-396">Объект `maxRecords` все записи, найденные после начальной записи возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-396">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="bb95e-397">Если `maxRecords` больше, чем число оставшихся строк только возвращаются оставшиеся строки и ошибка не выдается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-397">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="bb95e-398"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод получает данные из источника данных, с помощью инструкции SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-398">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="bb95e-399"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-399">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-400">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-400">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-401">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-401">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-402">Если команда не возвращает строк, таблицы не будут добавлены <xref:System.Data.DataSet>, но исключение не вызывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-402">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="bb95e-403">Если <xref:System.Data.Common.DbDataAdapter> объект обнаруживает дублированные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон "*columnname*1», «*columnname*2 «, "*columnname*3», и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-403">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-404">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-404">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="bb95e-405">Если указанный запрос возвращает несколько результатов, каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-405">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-406">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-406">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-407">Поскольку таблицы не создается для запроса, который не возвращает строк, если бы обработать запрос insert, а затем выберите запрос, таблица, созданная для запроса select будет называться «Table», поскольку это первая созданная таблица.</span><span class="sxs-lookup"><span data-stu-id="bb95e-407">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="bb95e-408">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-408">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-409"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-409">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-410">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.Fill%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-410">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-411">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-411">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-412">Если <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-412">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-413">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-413">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-414">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-414">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-415">Если произошла ошибка или исключение при заполнении таблиц данных, строки добавляются до возникновения ошибки сохраняется в таблицах данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-415">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="bb95e-416">В оставшейся части операция прерывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-416">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="bb95e-417">Если инструкция SELECT, используемая для заполнения <xref:System.Data.DataTable> объекты возвращает несколько результатов, такие как пакетной инструкции SQL, следует учитывать следующее:</span><span class="sxs-lookup"><span data-stu-id="bb95e-417">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="bb95e-418">При обработке нескольких результатов пакетной инструкции SQL, `maxRecords` применяется только к первому результату.</span><span class="sxs-lookup"><span data-stu-id="bb95e-418">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="bb95e-419">То же самое верно для строк, содержащих разбитые на разделы результаты (Framework поставщик данных .NET для OLE DB только).</span><span class="sxs-lookup"><span data-stu-id="bb95e-419">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="bb95e-420">Результат верхнего уровня ограничен `maxRecords`, но добавляются все дочерние строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-420">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="bb95e-421">Если один из результатов содержит ошибку, все последующие результаты пропускаются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-421">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-422">`DataSet` Не будет содержать больше чем число записей, обозначенном `maxRecords`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-422">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="bb95e-423">Однако весь результирующий набор, сформированный запросом по-прежнему возвращается с сервера.</span><span class="sxs-lookup"><span data-stu-id="bb95e-423">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-424"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-424">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-425">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-425">The source table is invalid.</span></span>  
  
 <span data-ttu-id="bb95e-426">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-426">-or-</span></span>  
  
 <span data-ttu-id="bb95e-427">Подключение является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-427">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="bb95e-428">Не удалось найти подключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-428">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb95e-429">Значение параметра <paramref name="startRecord" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-429">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="bb95e-430">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-430">-or-</span></span>  
  
 <span data-ttu-id="bb95e-431">Значение параметра <paramref name="maxRecords" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-431">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-432">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-432">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-433">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-433">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="bb95e-434">Номер записи (с нуля), с которой необходимо начать.</span><span class="sxs-lookup"><span data-stu-id="bb95e-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="bb95e-435">Максимальное число извлекаемых записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-435">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-436">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-436">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-437">Оператор SQL SELECT используется для извлечения строки из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-437">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="bb95e-438">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-438">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-439">Добавляет или обновляет строки в указанном диапазоне в объект <see cref="T:System.Data.DataSet" /> для получения соответствия строкам в источнике данных с помощью имен <see cref="T:System.Data.DataSet" /> и исходной таблицы, командной строки и поведения команды.</span><span class="sxs-lookup"><span data-stu-id="bb95e-439">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="bb95e-440">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-440">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="bb95e-441">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-441">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-442"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод извлекает строки из источника данных, с помощью инструкции SELECT, указанной и связанной <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bb95e-442">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="bb95e-443">Объект подключения, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-443">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-444">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-444">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-445">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-445">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Операция затем добавляет строки в целевой <xref:System.Data.DataTable> объекты в <xref:System.Data.DataSet>, создавая <xref:System.Data.DataTable> объекты, если они еще не существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="bb95e-447">При создании <xref:System.Data.DataTable> объектов, <xref:System.Data.Common.DbDataAdapter.Fill%2A> операции обычно создает только метаданные имени столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-447">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="bb95e-448">Однако если <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> свойству `AddWithKey`, также создаются соответствующие первичные ключи и ограничения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-448">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="bb95e-449">Если <xref:System.Data.Common.DbDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-449">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-450">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-450">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-451">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-451">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-452">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="bb95e-452">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="bb95e-453">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-453">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-454"><xref:System.Data.Common.DbDataAdapter.Fill%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-454">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-455">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.Fill%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-455">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-456">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-456">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-457">Если <xref:System.Data.Common.DbDataAdapter.Fill%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-457">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-458">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-458">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-459">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-459">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-460">Можно использовать <xref:System.Data.Common.DbDataAdapter.Fill%2A> метода несколько раз на том же <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-460">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-461">Если первичный ключ существует, входящие строки объединяются с соответствующими строками, которые уже существуют.</span><span class="sxs-lookup"><span data-stu-id="bb95e-461">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="bb95e-462">Если первичный ключ отсутствует, входящие строки добавляются в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-462">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-463">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-463">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-464">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-464">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="bb95e-465">Дополнительные сведения см. в разделе[Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-465">For more information, see[Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-466">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.Fill%2A> и <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для данных .NET Framework поставщик возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-466">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-467">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-467">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb95e-468">Значение параметра <paramref name="startRecord" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-468">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="bb95e-469">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-469">-or-</span></span>  
  
 <span data-ttu-id="bb95e-470">Значение параметра <paramref name="maxRecords" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="bb95e-470">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-471">Эта перегрузка <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-471">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-472">Возвращает или задает реакцию команды, использованной для заполнения адаптера данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-472">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="bb95e-473">Значение типа <see cref="T:System.Data.CommandBehavior" /> команды, использованной для заполнения адаптера данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-473">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb95e-474">Добавляет объект <see cref="T:System.Data.DataTable" /> в объект <see cref="T:System.Data.DataSet" /> и настраивает схему для получения соответствия со схемой в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-474">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-475">Объект <see cref="T:System.Data.DataSet" /> для вставки схемы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-475">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="bb95e-476">Одно из значений типа <see cref="T:System.Data.SchemaType" />, указывающее, как вставлять схему.</span><span class="sxs-lookup"><span data-stu-id="bb95e-476">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="bb95e-477">Добавляет объект <see cref="T:System.Data.DataTable" /> с именем "Таблица" к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-477">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-478">Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в объект <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-478">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-479">Этот метод извлекает сведения о схеме из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-479">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="bb95e-480">Объект <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> операция добавляет <xref:System.Data.DataTable> в место назначения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-480">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-481">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable>и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="bb95e-481">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bb95e-482"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-482"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bb95e-483">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-483">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bb95e-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="bb95e-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bb95e-485">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-485">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bb95e-486">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ только в том случае, если все они не допускающий значения NULL.</span><span class="sxs-lookup"><span data-stu-id="bb95e-486">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bb95e-487">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но <xref:System.Data.DataTable.PrimaryKey%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-487">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bb95e-488">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-488">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-489">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с предыдущими правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-489">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bb95e-490">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="bb95e-490">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bb95e-491">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-491">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bb95e-492">Дополнительные сведения об указании подсказок см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="bb95e-492">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bb95e-493">Сведения о первичном ключе используется во время <xref:System.Data.Common.DbDataAdapter.Fill%2A> для поиска и замены строк, столбцы ключа которых совпадают.</span><span class="sxs-lookup"><span data-stu-id="bb95e-493">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="bb95e-494">Если это не желательно, используйте <xref:System.Data.Common.DbDataAdapter.Fill%2A> без запроса сведений схемы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-494">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="bb95e-495">Если <xref:System.Data.IDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-495">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-496">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-496">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-497">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-497">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-498">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="bb95e-498">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bb95e-499">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-499">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-500"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией select должен быть допустимым, но не требуется открыть.</span><span class="sxs-lookup"><span data-stu-id="bb95e-500">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="bb95e-501">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-501">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-502">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-502">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-503">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-503">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-504">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-504">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-505">При использовании метода <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору.</span><span class="sxs-lookup"><span data-stu-id="bb95e-505">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bb95e-506">Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON.</span><span class="sxs-lookup"><span data-stu-id="bb95e-506">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bb95e-507">Дополнительные сведения см. в электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="bb95e-507">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-508">В следующем примере используется производный класс <xref:System.Data.SqlClient.SqlDataAdapter>, для заполнения <xref:System.Data.DataSet> с схеме и возвращает <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-508">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="bb95e-509">Объект <see cref="T:System.Data.DataTable" />, который необходимо заполнить сведениями схемы из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-509">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="bb95e-510">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-510">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-511">Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-511">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-512">Объект <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-512">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-513"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Метод извлекает схему из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-513">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bb95e-514">Объект подключения, связанный с <xref:System.Data.IDbDataAdapter.SelectCommand%2A> должны быть допустимыми, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-514">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-515">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-515">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-516">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-516">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-517">Объект <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> возвращает <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-517">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="bb95e-518">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable>и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="bb95e-518">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bb95e-519"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-519"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bb95e-520">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-520">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bb95e-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="bb95e-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bb95e-522">Если <xref:System.Data.DataTable.PrimaryKey%2A> уже был определен для `DataTable`, или `DataTable` содержит данные, `PrimaryKey` свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-522">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="bb95e-523">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-523">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="bb95e-524">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ только в том случае, если все они не допускающий значения NULL.</span><span class="sxs-lookup"><span data-stu-id="bb95e-524">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bb95e-525">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но `PrimaryKey` свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-525">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="bb95e-526">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-526">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="bb95e-527">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с предыдущими правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-527">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="bb95e-528">Этот процесс может потребовать несколько циклов приема-передачи на сервер.</span><span class="sxs-lookup"><span data-stu-id="bb95e-528">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="bb95e-529">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="bb95e-529">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bb95e-530">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-530">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bb95e-531">Дополнительные сведения об указании подсказок см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="bb95e-531">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bb95e-532">Если <xref:System.Data.Common.DbDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-532">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-533">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-533">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-534">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-534">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-535">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="bb95e-535">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bb95e-536">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-536">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> не возвращает никаких строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bb95e-538">Используйте <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод для добавления строк к <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-538">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-539">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-539">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-540">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-540">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-541">При использовании метода <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору.</span><span class="sxs-lookup"><span data-stu-id="bb95e-541">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bb95e-542">Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON.</span><span class="sxs-lookup"><span data-stu-id="bb95e-542">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bb95e-543">Дополнительные сведения см. в электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="bb95e-543">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-544">В следующем примере используется производный класс <xref:System.Data.SqlClient.SqlDataAdapter>, для заполнения <xref:System.Data.DataSet> с схеме и возвращает <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-544">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-545">Объект <see cref="T:System.Data.DataSet" /> для вставки схемы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-545">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="bb95e-546">Одно из значений типа <see cref="T:System.Data.SchemaType" />, указывающее, как вставлять схему.</span><span class="sxs-lookup"><span data-stu-id="bb95e-546">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-547">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-547">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="bb95e-548">Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" /> и объекте <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-548">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-549">Ссылка на коллекцию объектов <see cref="T:System.Data.DataTable" />, которые были добавлены в объект <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-549">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-550">Этот метод извлекает сведения о схеме из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-550">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="bb95e-551">Объект <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> операция добавляет <xref:System.Data.DataTable> в место назначения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-551">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-552">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable>и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="bb95e-552">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bb95e-553"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-553"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bb95e-554">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-554">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bb95e-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="bb95e-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bb95e-556">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-556">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bb95e-557">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ только в том случае, если все они не допускающий значения NULL.</span><span class="sxs-lookup"><span data-stu-id="bb95e-557">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bb95e-558">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но <xref:System.Data.DataTable.PrimaryKey%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-558">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bb95e-559">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-559">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-560">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с предыдущими правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-560">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bb95e-561">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="bb95e-561">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bb95e-562">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-562">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bb95e-563">Дополнительные сведения об указании подсказок см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="bb95e-563">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bb95e-564">Сведения о первичном ключе используется во время <xref:System.Data.Common.DbDataAdapter.Fill%2A> для поиска и замены строк, столбцы ключа которых совпадают.</span><span class="sxs-lookup"><span data-stu-id="bb95e-564">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="bb95e-565">Если это не желательно, используйте <xref:System.Data.Common.DbDataAdapter.Fill%2A> без запроса сведений схемы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-565">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="bb95e-566">Если <xref:System.Data.Common.DbDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-566">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-567">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-567">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-568">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-568">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-569">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="bb95e-569">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bb95e-570">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-570">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-571"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-571">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-572">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-572">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-573">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-573">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-574">Если <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-574">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-575">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-575">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-576">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-576">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-577"><xref:System.Data.IDbConnection> Объект, связанный с инструкцией select должен быть допустимым, но не требуется открыть.</span><span class="sxs-lookup"><span data-stu-id="bb95e-577">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="bb95e-578">Если <xref:System.Data.IDbConnection> закрыт до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-578">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-579">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-579">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-580">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-580">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-581">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-581">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-582">При использовании метода <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору.</span><span class="sxs-lookup"><span data-stu-id="bb95e-582">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bb95e-583">Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON.</span><span class="sxs-lookup"><span data-stu-id="bb95e-583">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bb95e-584">Дополнительные сведения см. в электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="bb95e-584">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-585">В следующем примере используется производный класс <xref:System.Data.SqlClient.SqlDataAdapter>, для заполнения <xref:System.Data.DataSet> с схеме и возвращает <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-585">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb95e-586">Не удалось найти исходную таблицу для получения схемы.</span><span class="sxs-lookup"><span data-stu-id="bb95e-586">A source table from which to get the schema could not be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="bb95e-587">Объект <see cref="T:System.Data.DataTable" />, который необходимо заполнить сведениями схемы из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-587">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="bb95e-588">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-588">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-589">Оператор SQL SELECT используется для извлечения строки из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-589">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="bb95e-590">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-590">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-591">Настраивает схему для указанного объекта <see cref="T:System.Data.DataTable" />, основываясь на указанном значении типа <see cref="T:System.Data.SchemaType" />, командной строке и значениях типа <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-591">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="bb95e-592">Объект <see cref="T:System.Data.DataTable" /> содержит сведения схемы, возвращенные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-592">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-593"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Метод извлекает схему из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-593">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bb95e-594">Объект подключения, связанный с <xref:System.Data.IDbDataAdapter.SelectCommand%2A> должны быть допустимыми, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-594">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-595">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-595">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-596">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-596">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-597">Объект <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> операция добавляет <xref:System.Data.DataTable> в место назначения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-597">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-598">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable>и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="bb95e-598">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bb95e-599"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-599"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bb95e-600">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-600">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bb95e-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="bb95e-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bb95e-602">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-602">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bb95e-603">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ только в том случае, если все они не допускающий значения NULL.</span><span class="sxs-lookup"><span data-stu-id="bb95e-603">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bb95e-604">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но <xref:System.Data.DataTable.PrimaryKey%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-604">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bb95e-605">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-605">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-606">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с предыдущими правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-606">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bb95e-607">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="bb95e-607">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bb95e-608">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-608">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bb95e-609">Дополнительные сведения об указании подсказок см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="bb95e-609">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bb95e-610">Если <xref:System.Data.IDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-610">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-611">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-611">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-612">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-612">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-613">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="bb95e-613">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bb95e-614">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-614">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> не возвращает никаких строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bb95e-616">Используйте <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод для добавления строк к <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-616">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-617">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-617">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-618">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-618">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-619">При использовании метода <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору.</span><span class="sxs-lookup"><span data-stu-id="bb95e-619">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bb95e-620">Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON.</span><span class="sxs-lookup"><span data-stu-id="bb95e-620">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bb95e-621">Дополнительные сведения см. в электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="bb95e-621">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-622">Эта реализация <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-622">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-623">Объект <see cref="T:System.Data.DataSet" />, который необходимо заполнить сведениями схемы из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-623">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="bb95e-624">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-624">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="bb95e-625">Оператор SQL SELECT используется для извлечения строки из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-625">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-626">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-626">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="bb95e-627">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-627">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="bb95e-628">Добавляет объект <see cref="T:System.Data.DataTable" /> к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-628">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-629">Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-629">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-630"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Метод извлекает схему из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-630">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="bb95e-631">Объект подключения, связанный с <xref:System.Data.IDbDataAdapter.SelectCommand%2A> должны быть допустимыми, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="bb95e-631">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="bb95e-632">Если подключение было закрыто до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-632">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="bb95e-633">Если подключение является открытым до <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-633">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="bb95e-634">Объект <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> операция добавляет <xref:System.Data.DataTable> в место назначения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-634">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-635">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable>и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="bb95e-635">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="bb95e-636"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-636"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="bb95e-637">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-637">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="bb95e-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="bb95e-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="bb95e-639">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-639">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="bb95e-640">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ только в том случае, если все они не допускающий значения NULL.</span><span class="sxs-lookup"><span data-stu-id="bb95e-640">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="bb95e-641">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но <xref:System.Data.DataTable.PrimaryKey%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-641">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="bb95e-642">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-642">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-643">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с предыдущими правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-643">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="bb95e-644">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="bb95e-644">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="bb95e-645">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="bb95e-645">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="bb95e-646">Дополнительные сведения об указании подсказок см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="bb95e-646">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="bb95e-647">Если <xref:System.Data.IDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя шаблон»*columnname*1», «*columnname*2»,»*columnname*3" и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-647">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="bb95e-648">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="bb95e-648">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="bb95e-649">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet> каждый результирующий набор помещается в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="bb95e-649">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="bb95e-650">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="bb95e-650">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="bb95e-651">Приложения, использующие имена столбцов и таблиц следует убедиться, что конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="bb95e-651">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="bb95e-652"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-652">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-653">В таких ситуациях <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает новую таблицу, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-653">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="bb95e-654">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-654">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="bb95e-655">Если <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-655">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-656">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-656">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-657">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-657">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> не возвращает никаких строк.</span><span class="sxs-lookup"><span data-stu-id="bb95e-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="bb95e-659">Используйте <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод для добавления строк к <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-659">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-660">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> для поставщик данных .NET Framework для OLE DB возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="bb95e-660">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="bb95e-661">Получить сведения о схеме для нескольких результатов с помощью <xref:System.Data.Common.DbDataAdapter.Fill%2A> с <xref:System.Data.MissingSchemaAction> значение `AddWithKey`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-661">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="bb95e-662">При использовании метода <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> поставщик данных .NET Framework для SQL Server добавляет предложение FOR BROWSE к выполняемому оператору.</span><span class="sxs-lookup"><span data-stu-id="bb95e-662">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="bb95e-663">Пользователь должен быть осведомлен о возможных побочных эффектах, например о проблемах, возникающих при использовании операторов SET FMTONLY ON.</span><span class="sxs-lookup"><span data-stu-id="bb95e-663">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="bb95e-664">Дополнительные сведения см. в электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="bb95e-664">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-665">Эта реализация <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-665">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="bb95e-666">Индекс команды, из которой извлекается параметр.</span><span class="sxs-lookup"><span data-stu-id="bb95e-666">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="bb95e-667">Индекс параметра внутри команды.</span><span class="sxs-lookup"><span data-stu-id="bb95e-667">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="bb95e-668">Возвращает интерфейс <see cref="T:System.Data.IDataParameter" /> из одной из команд в текущем пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-668">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="bb95e-669">Указанный <see cref="T:System.Data.IDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-669">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-670">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-670">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-671">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-671">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb95e-672">Адаптер не поддерживает пакеты.</span><span class="sxs-lookup"><span data-stu-id="bb95e-672">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-673">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-673">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-674">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод, чтобы разрешить пользователям выполнять пакет.</span><span class="sxs-lookup"><span data-stu-id="bb95e-674">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="bb95e-675">Реализация использует <paramref name="commandIdentifier" /> позволяет найти запрашиваемую команду, а затем использует <paramref name="parameterIndex" /> указанный для поиска запрошенного параметра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-675">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="bb95e-676">Например <paramref name="commandIdentifier" /> 0 и <paramref name="parameterIndex" /> 0 возвращает первый параметр из первой команды в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-676">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="bb95e-677">Порядковый номер (с нуля) столбца отдельной команды в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-677">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="bb95e-678">Количество строк в хранилище данных, на которые было оказано воздействие указанной командой в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-678">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="bb95e-679">Исключение <see cref="T:System.Exception" />, выданное при выполнении указанной команды.</span><span class="sxs-lookup"><span data-stu-id="bb95e-679">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="bb95e-680">Возвращает значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic), если исключение не было выдано.</span><span class="sxs-lookup"><span data-stu-id="bb95e-680">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="bb95e-681">Возвращает сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-681">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="bb95e-682">Сведения об отдельной попытке обновления в рамках большего по своему объему пакета обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-682">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-683">Поставщики данных, поддерживающие логику пакетного обновления должны переопределять ряд виртуальных методов на <xref:System.Data.Common.DbDataAdapter> класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-683">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="bb95e-684">`GetBatchedRecordsAffected` Представляет один из этих виртуальных методов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-684">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="bb95e-685">`DbDataAdapter` Класс использует `GetBatchedRecordsAffected` для определения успешности попыток отдельного обновления в пакете, поэтому его можно пометить каждый соответствующий <xref:System.Data.DataRow> соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="bb95e-685">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-686">Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="bb95e-686">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="bb95e-687">Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</span><span class="sxs-lookup"><span data-stu-id="bb95e-687">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-688">Инициализирует пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-688">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-689">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-689">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-690">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-690">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb95e-691">Адаптер не поддерживает пакеты.</span><span class="sxs-lookup"><span data-stu-id="bb95e-691">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-692">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-692">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-693">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-693">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="bb95e-694">Этот метод предоставляет классу возможность инициализировать все ресурсы, необходимые для поддержки пакетной обработки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-694">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="bb95e-695">Например класс может выделять структуру данных для хранения набора команд в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-695">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-696">Возвращает или задает команду SQL для вставки новых записей в источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-696">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-697">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-697">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-698">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> будут создаваться автоматически.</span><span class="sxs-lookup"><span data-stu-id="bb95e-698">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-699">В следующем примере создается производный класс <xref:System.Data.OleDb.OleDbDataAdapter> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-699">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bb95e-700">Объект <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="bb95e-700">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bb95e-701">Вызывает событие <see langword="RowUpdated" /> поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-701">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-702">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="bb95e-702">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bb95e-703">Общие сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-703">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-704">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-704">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bb95e-705">Объект класса <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="bb95e-705">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="bb95e-706">Вызывает событие <see langword="RowUpdating" /> поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-706">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-707">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="bb95e-707">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="bb95e-708">Общие сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-708">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-709">При переопределении метода <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-709">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-710">Возвращает или задает команду, используемую для выбора записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-710">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-711">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-711">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb95e-712">В следующем примере создается производный класс <xref:System.Data.OleDb.OleDbDataAdapter> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-712">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-713">Возвращает или задает оператор SQL для удаления записей из набора данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-713">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="bb95e-714">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-714">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-715">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-715">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bb95e-716">Он может использоваться, только если экземпляр <xref:System.Data.Common.DbDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-716">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bb95e-717">Дополнительные сведения см. в разделе <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-717">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-718">Возвращает или задает оператор SQL для вставки новых записей в источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-718">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-719">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-719">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-720">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-720">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bb95e-721">Он может использоваться, только если экземпляр <xref:System.Data.Common.DbDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-721">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bb95e-722">Дополнительные сведения см. в разделе <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-722">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-723">Возвращает или задает оператор SQL для выбора записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-723">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-724">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-724">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-725">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bb95e-726">Он может использоваться, только если экземпляр <xref:System.Data.Common.DbDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-726">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bb95e-727">Дополнительные сведения см. в разделе <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-727">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-728">Возвращает или задает оператор SQL для обновления записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-728">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-729">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-729">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-730">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-730">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bb95e-731">Он может использоваться, только если экземпляр <xref:System.Data.Common.DbDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-731">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="bb95e-732">Дополнительные сведения см. в разделе <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-732">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-733">Создает новый объект, являющийся копией текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-733">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="bb95e-734">Новый объект, являющийся копией этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-734">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-735">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-735">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bb95e-736">Он может использоваться, только если экземпляр <xref:System.Data.Common.DbDataAdapter> приведен к типу интерфейса <xref:System.ICloneable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-736">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="bb95e-737">Дополнительные сведения см. в разделе <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-737">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb95e-738">Завершает пакетную обработку для объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-738">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-739">В <xref:System.Data.Common.DbDataAdapter>, этот метод создает исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-739">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="bb95e-740">Классы, наследующие от <xref:System.Data.Common.DbDataAdapter> Переопределите этот метод для предоставления поддержки для пакетов.</span><span class="sxs-lookup"><span data-stu-id="bb95e-740">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bb95e-741">Адаптер не поддерживает пакеты.</span><span class="sxs-lookup"><span data-stu-id="bb95e-741">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bb95e-742">Этот метод является защищенным и предназначен для использования с помощью поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-742">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="bb95e-743">Если класс, наследуемый от <see cref="T:System.Data.Common.DbDataAdapter" /> поддерживает пакеты, что класс переопределяет этот метод.</span><span class="sxs-lookup"><span data-stu-id="bb95e-743">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="bb95e-744">Этот метод предоставляет классу возможность удалять любые ресурсы, выделенные для поддержки пакетной обработки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-744">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="bb95e-745">Например класс может освободить структуры данных, поддерживающей команды в пакете.</span><span class="sxs-lookup"><span data-stu-id="bb95e-745">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb95e-746">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-746">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="bb95e-747">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-747">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="bb95e-748">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-748">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-749">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-749">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-750">Если приложение вызывает <xref:System.Data.Common.DbDataAdapter.Update%2A> метода <xref:System.Data.Common.DbDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-750">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-751">Например <xref:System.Data.Common.DbDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует инструкция INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-751">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-752">Следует отметить, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-752">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bb95e-753">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод в ситуациях, когда необходимо управлять последовательностью инструкции типов (например, перед обновлением).</span><span class="sxs-lookup"><span data-stu-id="bb95e-753">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bb95e-754">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-754">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bb95e-755">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DbDataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-755">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bb95e-756">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-756">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bb95e-757">Затем создаются все дополнительные инструкции SQL, которые не заданы **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-757">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bb95e-758">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-758">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-759">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-759">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bb95e-760"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-760">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bb95e-761"><xref:System.Data.Common.DbDataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-761">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bb95e-762">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-762">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bb95e-763">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-763">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bb95e-764">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-764">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bb95e-765">При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="bb95e-765">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bb95e-766">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="bb95e-766">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bb95e-767">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-767">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bb95e-768">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="bb95e-768">The command executes.</span></span>  
  
4.  <span data-ttu-id="bb95e-769">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-769">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bb95e-770">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-770">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bb95e-771">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-771">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bb95e-772">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="bb95e-772"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bb95e-773">Каждая команда, связанная с <xref:System.Data.Common.DbDataAdapter> обычно имеет коллекцию параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="bb95e-773">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bb95e-774">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-774">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bb95e-775">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.Common.DbDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-775">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bb95e-776">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-776">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bb95e-777">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-777">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bb95e-778">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="bb95e-778">Enumeration value</span></span>|<span data-ttu-id="bb95e-779">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="bb95e-779">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bb95e-780">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-780">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bb95e-781">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-781">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bb95e-782">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно является результатом ошибки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-782">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bb95e-783">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-783">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bb95e-784">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-784">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bb95e-785">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="bb95e-785">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bb95e-786">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать версию оригинал, Current или Proposed значение столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-786">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bb95e-787">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="bb95e-787">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-788">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-788">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bb95e-789">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-789">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bb95e-790">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-790">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bb95e-791">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-791">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-792">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, чтобы обновить источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-792">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb95e-793"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-793">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-794">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-794">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-795">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-795">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-796">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-796">-or-</span></span>  
  
 <span data-ttu-id="bb95e-797">Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-797">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-798">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-798">-or-</span></span>  
  
 <span data-ttu-id="bb95e-799">Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="bb95e-799">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="bb95e-800">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-800">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-801">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-801">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="bb95e-802">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-802">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-803">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-803">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-804">Если приложение вызывает <xref:System.Data.Common.DbDataAdapter.Update%2A> метода <xref:System.Data.Common.DbDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-804">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-805">Например <xref:System.Data.Common.DbDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует инструкция INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-805">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-806">Следует отметить, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-806">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bb95e-807">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод в ситуациях, когда необходимо управлять последовательностью инструкции типов (например, перед обновлением).</span><span class="sxs-lookup"><span data-stu-id="bb95e-807">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bb95e-808">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-808">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bb95e-809">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DbDataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-809">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bb95e-810">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-810">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bb95e-811">Затем создаются все дополнительные инструкции SQL, которые не заданы **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-811">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bb95e-812">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-812">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-813">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-813">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bb95e-814"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-814">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bb95e-815"><xref:System.Data.Common.DbDataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-815">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bb95e-816">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-816">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bb95e-817">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-817">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bb95e-818">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-818">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bb95e-819">При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="bb95e-819">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bb95e-820">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="bb95e-820">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bb95e-821">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-821">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bb95e-822">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="bb95e-822">The command executes.</span></span>  
  
4.  <span data-ttu-id="bb95e-823">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-823">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bb95e-824">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-824">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bb95e-825">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-825">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bb95e-826">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="bb95e-826"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bb95e-827">Каждая команда, связанная с <xref:System.Data.Common.DbDataAdapter> обычно имеет коллекцию параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="bb95e-827">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bb95e-828">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-828">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bb95e-829">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.Common.DbDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-829">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bb95e-830">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-830">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bb95e-831">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-831">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bb95e-832">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="bb95e-832">Enumeration value</span></span>|<span data-ttu-id="bb95e-833">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="bb95e-833">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bb95e-834">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-834">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bb95e-835">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-835">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bb95e-836">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно является результатом ошибки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-836">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bb95e-837">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-837">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bb95e-838">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-838">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bb95e-839">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="bb95e-839">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bb95e-840">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать версию оригинал, Current или Proposed значение столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-840">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bb95e-841">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="bb95e-841">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-842">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-842">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bb95e-843">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-843">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bb95e-844">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-844">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bb95e-845">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-845">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-846">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, чтобы обновить источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-846">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-847">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-847">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="bb95e-848">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-848">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="bb95e-849">Объект <see cref="T:System.Data.DataTable" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-849">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="bb95e-850">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-850">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="bb95e-851">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-851">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-852">Если приложение вызывает <xref:System.Data.Common.DbDataAdapter.Update%2A> метода <xref:System.Data.Common.DbDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-852">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-853">Например <xref:System.Data.Common.DbDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует инструкция INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-853">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-854">Следует отметить, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-854">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bb95e-855">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод в ситуациях, когда необходимо управлять последовательностью инструкции типов (например, перед обновлением).</span><span class="sxs-lookup"><span data-stu-id="bb95e-855">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bb95e-856">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-856">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bb95e-857">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DbDataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-857">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bb95e-858">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-858">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bb95e-859">Затем создаются все дополнительные инструкции SQL, которые не заданы **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-859">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bb95e-860">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-860">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-861">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-861">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bb95e-862"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-862">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bb95e-863"><xref:System.Data.Common.DbDataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-863">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bb95e-864">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-864">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bb95e-865">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-865">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bb95e-866">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-866">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bb95e-867">При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="bb95e-867">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bb95e-868">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="bb95e-868">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bb95e-869">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-869">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bb95e-870">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="bb95e-870">The command executes.</span></span>  
  
4.  <span data-ttu-id="bb95e-871">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-871">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bb95e-872">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-872">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bb95e-873">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-873">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bb95e-874">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="bb95e-874"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bb95e-875">Каждая команда, связанная с <xref:System.Data.Common.DbDataAdapter> обычно имеет коллекцию параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="bb95e-875">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bb95e-876">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-876">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bb95e-877">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.Common.DbDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-877">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bb95e-878">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-878">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bb95e-879">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-879">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bb95e-880">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="bb95e-880">Enumeration value</span></span>|<span data-ttu-id="bb95e-881">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="bb95e-881">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bb95e-882">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-882">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bb95e-883">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-883">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bb95e-884">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно является результатом ошибки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-884">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bb95e-885">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-885">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bb95e-886">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-886">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bb95e-887">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="bb95e-887">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bb95e-888">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать версию оригинал, Current или Proposed значение столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-888">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bb95e-889">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="bb95e-889">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-890">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-890">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bb95e-891">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-891">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bb95e-892">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-892">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bb95e-893">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-893">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-894">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, чтобы обновить источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-894">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb95e-895"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-895">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-896">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-896">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-897">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-897">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-898">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-898">-or-</span></span>  
  
 <span data-ttu-id="bb95e-899">Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-899">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-900">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-900">-or-</span></span>  
  
 <span data-ttu-id="bb95e-901">Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="bb95e-901">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="bb95e-902">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-902">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="bb95e-903">Массив объектов <see cref="T:System.Data.DataRow" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-903">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="bb95e-904">Используемая коллекция <see cref="P:System.Data.IDataAdapter.TableMappings" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-904">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="bb95e-905">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном массиве объектов <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-905">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="bb95e-906">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-906">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-907">Если приложение вызывает <xref:System.Data.Common.DbDataAdapter.Update%2A> метода <xref:System.Data.Common.DbDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-907">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-908">Например <xref:System.Data.Common.DbDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует инструкция INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-908">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-909">Следует отметить, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-909">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bb95e-910">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод в ситуациях, когда необходимо управлять последовательностью инструкции типов (например, перед обновлением).</span><span class="sxs-lookup"><span data-stu-id="bb95e-910">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="bb95e-911">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-911">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bb95e-912">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DbDataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-912">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bb95e-913">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-913">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bb95e-914">Затем создаются все дополнительные инструкции SQL, которые не заданы **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-914">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bb95e-915">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-915">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-916">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-916">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bb95e-917"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-917">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bb95e-918"><xref:System.Data.Common.DbDataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-918">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bb95e-919">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-919">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bb95e-920">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-920">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bb95e-921">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-921">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bb95e-922">При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="bb95e-922">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bb95e-923">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="bb95e-923">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bb95e-924">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-924">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bb95e-925">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="bb95e-925">The command executes.</span></span>  
  
4.  <span data-ttu-id="bb95e-926">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-926">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bb95e-927">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-927">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bb95e-928">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-928">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bb95e-929">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="bb95e-929"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bb95e-930">Каждая команда, связанная с <xref:System.Data.Common.DbDataAdapter> обычно имеет коллекцию параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="bb95e-930">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bb95e-931">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-931">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bb95e-932">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.Common.DbDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-932">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bb95e-933">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-933">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bb95e-934">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-934">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bb95e-935">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="bb95e-935">Enumeration value</span></span>|<span data-ttu-id="bb95e-936">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="bb95e-936">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bb95e-937">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-937">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bb95e-938">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-938">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bb95e-939">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно является результатом ошибки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-939">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bb95e-940">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-940">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bb95e-941">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-941">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bb95e-942">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="bb95e-942">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bb95e-943">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать версию оригинал, Current или Proposed значение столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-943">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bb95e-944">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="bb95e-944">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-945">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-945">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bb95e-946">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-946">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bb95e-947">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-947">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bb95e-948">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-948">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb95e-949"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-949">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-950">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-950">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="bb95e-951">Не существует объект <see cref="T:System.Data.DataRow" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-951">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-952">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-952">-or-</span></span>  
  
 <span data-ttu-id="bb95e-953">Не существует объект <see cref="T:System.Data.DataTable" /> для обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-953">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="bb95e-954">- или -</span><span class="sxs-lookup"><span data-stu-id="bb95e-954">-or-</span></span>  
  
 <span data-ttu-id="bb95e-955">Не существует объект <see cref="T:System.Data.DataSet" /> для использования в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="bb95e-955">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="bb95e-956">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-956">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="bb95e-957">Объект <see cref="T:System.Data.DataSet" />, используемый для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-957">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="bb95e-958">Имя исходной таблицы, используемое для сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-958">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="bb95e-959">Обновляет значения в базе данных, выполняя соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в <see cref="T:System.Data.DataSet" /> с заданным именем <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-959">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="bb95e-960">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="bb95e-960">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-961">Если приложение вызывает <xref:System.Data.Common.DbDataAdapter.Update%2A> метода <xref:System.Data.Common.DbDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-961">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-962">Например <xref:System.Data.Common.DbDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует инструкция INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-962">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="bb95e-963">Следует отметить, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-963">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="bb95e-964">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод в случаях, когда необходимо управлять последовательностью типов инструкций (например, ВСТАВЬТЕ перед ОБНОВЛЕНИЕМ).</span><span class="sxs-lookup"><span data-stu-id="bb95e-964">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="bb95e-965">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-965">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="bb95e-966">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DbDataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-966">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="bb95e-967">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="bb95e-967">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="bb95e-968">Затем создаются все дополнительные инструкции SQL, которые не заданы **CommandBuilder**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-968">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="bb95e-969">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-969">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-970">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="bb95e-970">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="bb95e-971"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод поддерживает сценарии где <xref:System.Data.DataSet> содержит несколько <xref:System.Data.DataTable> объекты, имена которых отличаются только регистром.</span><span class="sxs-lookup"><span data-stu-id="bb95e-971">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="bb95e-972">Если существует несколько таблиц с одинаковыми именами, но в другом регистре в `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> выполняет сравнение с учетом регистра для поиска соответствующей таблицы и создает исключение, если точного соответствия не существует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-972">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="bb95e-973">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-973">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="bb95e-974">Если <xref:System.Data.Common.DbDataAdapter.Update%2A> вызывается и <xref:System.Data.DataSet> содержит только одну <xref:System.Data.DataTable> , имя которой отличается только регистром, который <xref:System.Data.DataTable> обновляется.</span><span class="sxs-lookup"><span data-stu-id="bb95e-974">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="bb95e-975">В этом сценарии сравнение выполняется без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="bb95e-975">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="bb95e-976">Это демонстрируется в следующем коде C#.</span><span class="sxs-lookup"><span data-stu-id="bb95e-976">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="bb95e-977"><xref:System.Data.Common.DbDataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="bb95e-977">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="bb95e-978"><xref:System.Data.Common.DbDataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-978">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="bb95e-979">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="bb95e-979">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="bb95e-980">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-980">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="bb95e-981">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-981">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="bb95e-982">При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="bb95e-982">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="bb95e-983">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="bb95e-983">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="bb95e-984">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-984">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="bb95e-985">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="bb95e-985">The command executes.</span></span>  
  
4.  <span data-ttu-id="bb95e-986">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-986">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="bb95e-987">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-987">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="bb95e-988">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-988">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="bb95e-989">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="bb95e-989"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="bb95e-990">Каждая команда, связанная с <xref:System.Data.Common.DbDataAdapter> обычно имеет коллекцию параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="bb95e-990">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="bb95e-991">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="bb95e-991">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="bb95e-992">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.Common.DbDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-992">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="bb95e-993">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="bb95e-993">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="bb95e-994">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-994">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="bb95e-995">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="bb95e-995">Enumeration value</span></span>|<span data-ttu-id="bb95e-996">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="bb95e-996">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="bb95e-997">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="bb95e-997">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="bb95e-998">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-998">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="bb95e-999">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно является результатом ошибки.</span><span class="sxs-lookup"><span data-stu-id="bb95e-999">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="bb95e-1000">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1000">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="bb95e-1001">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1001">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="bb95e-1002">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1002">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="bb95e-1003">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать версию оригинал, Current или Proposed значение столбца.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1003">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="bb95e-1004">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1004">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb95e-1005">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1005">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="bb95e-1006">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1006">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="bb95e-1007">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1007">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="bb95e-1008">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1008">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-1009">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>, чтобы обновить источник данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1009">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb95e-1010"><see cref="T:System.Data.DataSet" /> не является допустимым.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1010">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb95e-1011">Исходная таблица является недопустимой.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1011">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="bb95e-1012">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1012">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-1013">Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут выполняться в рамках одного пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1013">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="bb95e-1014">Количество строк, которые необходимо обработать с помощью одного пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1014">The number of rows to process per batch.</span></span>  
  
 <span data-ttu-id="bb95e-1015"><list type="table"><listheader><term> Значение</span><span class="sxs-lookup"><span data-stu-id="bb95e-1015"><list type="table"><listheader><term> Value is</span></span>  
  
 <span data-ttu-id="bb95e-1016"></term><description> Effect</span><span class="sxs-lookup"><span data-stu-id="bb95e-1016"></term><description> Effect</span></span>  
  
 <span data-ttu-id="bb95e-1017"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="bb95e-1017"></description></listheader><item><term> 0</span></span>  
  
 <span data-ttu-id="bb95e-1018"></term><description> Нет ограничений на размер пакета.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1018"></term><description> There is no limit on the batch size.</span></span>  
  
 <span data-ttu-id="bb95e-1019"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="bb95e-1019"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="bb95e-1020"></term><description> Обновление пакета отключено.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1020"></term><description> Disables batch updating.</span></span>  
  
 <span data-ttu-id="bb95e-1021"></description></item><item><term> &gt; 1</span><span class="sxs-lookup"><span data-stu-id="bb95e-1021"></description></item><item><term> &gt; 1</span></span>  
  
 <span data-ttu-id="bb95e-1022"></term><description> Изменения отправляются с помощью пакетов <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> операций одновременно.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1022"></term><description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="bb95e-1023">Этому параметру присвоено значение, отличное от 1, все команды, связанное с <see cref="T:System.Data.Common.DbDataAdapter" /> должен иметь их <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> свойство **нет** или **выходные параметры**.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1023">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="bb95e-1024">В противном случае будет выдаваться исключение.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1024">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-1025">Используйте <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> свойства для обновления источника данных изменениями, сделанными <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1025">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="bb95e-1026">Если поставщик данных поддерживает пакетную обработку, это может повысить производительность приложения путем сокращения числа циклов приема-передачи на сервер.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1026">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="bb95e-1027">В ADO.NET 2.0 это свойство поддерживается для поставщиков данных .NET для SQL Server (SqlClient) и Oracle (OracleClient).</span><span class="sxs-lookup"><span data-stu-id="bb95e-1027">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="bb95e-1028">Выполнение очень больших пакетов может снизить производительность.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1028">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="bb95e-1029">Поэтому необходимо экспериментальным путем найти параметр оптимального размера пакета перед реализацией приложения.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1029">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="bb95e-1030"><xref:System.ArgumentOutOfRangeException> Возникает, если число имеет значение меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1030">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb95e-1031">Возвращает или задает команду, используемую для обновления записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1031">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="bb95e-1032">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1032">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb95e-1033">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> будут создаваться автоматически.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1033">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb95e-1034">В следующем примере создается производный класс <xref:System.Data.OleDb.OleDbDataAdapter> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="bb95e-1034">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>