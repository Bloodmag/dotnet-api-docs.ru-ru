<Type Name="DbProviderManifest" FullName="System.Data.Common.DbProviderManifest">
  <TypeSignature Language="C#" Value="public abstract class DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderManifest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderManifest abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3d8ea-101">Интерфейс метаданных для всех типов среды CLR</span><span class="sxs-lookup"><span data-stu-id="3d8ea-101">Metadata Interface for all CLR types types</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d8ea-102">Содержимое не будет обновлено. Просьба не добавлять сюда материал.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderManifest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbProviderManifest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d8ea-103">Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderManifest" />.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-103">Initializes a new instance of the <see cref="T:System.Data.Common.DbProviderManifest" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinition;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-104">Значение, которое должно быть передано GetInformation для получения ConceptualSchemaDefinitionVersion.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-104">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinitionVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-105">Значение, которое должно быть передано GetInformation для получения ConceptualSchemaDefinitionVersion3.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-105">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLikeArgument">
      <MemberSignature Language="C#" Value="public virtual string EscapeLikeArgument (string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeLikeArgument(string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EscapeLikeArgument (argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ EscapeLikeArgument(System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="3d8ea-106">Аргумент, подвергаемый escape-преобразованию.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-106">The argument to be escaped.</span></span></param>
        <summary><span data-ttu-id="3d8ea-107">Разработчики поставщиков должны переопределять этот метод для возвращения аргумента со знаками подстановки и преобразованным escape-символом.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-107">Provider writers should override this method to return the argument with the wildcards and the escape character escaped.</span></span> <span data-ttu-id="3d8ea-108">Этот метод используется только в том случае, если метод SupportsEscapingLikeArgument возвращает значение true.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-108">This method is only used if SupportsEscapingLikeArgument returns true.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-109">Аргумент с подстановочными знаками и преобразованным escape-символом.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-109">The argument with the wildcards and the escape character escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbInformation">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlReader GetDbInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetDbInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlReader ^ GetDbInformation(System::String ^ informationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="3d8ea-110">Тип возвращаемых сведений.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-110">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="3d8ea-111">При переопределении в производном классе этот метод возвращает сведения, касающиеся конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-111">When overridden in a derived class, this method returns provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-112">Объект XmlReader, представляющий сопоставление с базовым каталогом хранилища данных.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-112">The XmlReader object that represents the mapping to the underlying data store catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetEdmType(class System.Data.Metadata.Edm.TypeUsage storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEdmType (storeType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetEdmType(System::Data::Metadata::Edm::TypeUsage ^ storeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="storeType"><span data-ttu-id="3d8ea-113">Экземпляр TypeUsage, описывающий тип хранилища и набор аспектов этого типа, которые должны быть сопоставлены с типом модели EDM.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-113">The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.</span></span></param>
        <summary><span data-ttu-id="3d8ea-114">При переопределении в производном классе этот метод сопоставляет указанный тип хранилища и набор аспектов этого типа с типом модели EDM.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-114">When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-115">Экземпляр <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, описывающий тип EDM и набор аспектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-115">The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes an EDM type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ edmType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="3d8ea-116">Тип модели EDM, для которого требуется получить описание аспектов.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-116">The EDM type to return the facet description for.</span></span></param>
        <summary><span data-ttu-id="3d8ea-117">Возвращает объекты FacetDescription для определенного типа.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-117">Returns the FacetDescription objects for a particular type.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-118">Объекты FacetDescription для заданного типа EDM.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-118">The FacetDescription objects for the specified EDM type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInformation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader GetInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader GetInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ GetInformation(System::String ^ informationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="3d8ea-119">Тип возвращаемых сведений.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-119">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="3d8ea-120">Получает сведения, касающиеся конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-120">Gets the provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-121">Сведения, касающиеся конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-121">The provider-specific information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d8ea-122">При переопределении в производном классе возвращает коллекцию функций EDM, поддерживаемых манифестом поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-122">When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-123">Коллекция функций EDM.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-123">A collection of EDM functions.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetStoreType(class System.Data.Metadata.Edm.TypeUsage edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreType (edmType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetStoreType(System::Data::Metadata::Edm::TypeUsage ^ edmType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="3d8ea-124">Экземпляр TypeUsage, описывающий тип EDM и набор аспектов этого типа, которые должны быть сопоставлены с типом хранилища.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-124">The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.</span></span></param>
        <summary><span data-ttu-id="3d8ea-125">При переопределении в производном классе этот метод сопоставляет указанный тип модели EDM и набор аспектов этого типа с типом хранилища.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-125">When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-126">Экземпляр TypeUsage, описывающий тип хранилища и набор аспектов этого типа.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-126">The TypeUsage instance that describes a storage type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d8ea-127">При переопределении в производном классе возвращает набор типов-примитивов, поддерживаемых источником данных.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-127">When overridden in a derived class, returns the set of primitive types supported by the data source.</span></span></summary>
        <returns><span data-ttu-id="3d8ea-128">Набор типов, поддерживаемых источником данных.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-128">The set of types supported by the data source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public abstract string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-129">Получает пространство имен, используемое манифестом этого поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-129">Gets the namespace used by this provider manifest.</span></span></summary>
        <value><span data-ttu-id="3d8ea-130">Пространство имен, используемое манифестом этого поставщика.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-130">The namespace used by this provider manifest.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinition;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-131">Значение, которое должно быть передано GetInformation для получения StoreSchemaDefinitionVersion.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-131">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinitionVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-132">Значение, которое должно быть передано GetInformation для получения StoreSchemaDefinitionVersion3.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-132">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMapping">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMapping" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMapping As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMapping;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-133">Значение, которое должно быть передано методу GetInformation для получения StoreSchemaMappingVersion.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-133">Value to pass to GetInformation to get the StoreSchemaMappingVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMappingVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMappingVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMappingVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMappingVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMappingVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d8ea-134">Значение, которое должно быть передано методу GetInformation для получения StoreSchemaMappingVersion3.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-134">Value to pass to GetInformation to get the StoreSchemaMappingVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEscapingLikeArgument">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsEscapingLikeArgument([out] char&amp; escapeCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsEscapingLikeArgument (ByRef escapeCharacter As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsEscapingLikeArgument([Runtime::InteropServices::Out] char % escapeCharacter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="escapeCharacter" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="escapeCharacter"><span data-ttu-id="3d8ea-135">Если поставщик поддерживает escape-преобразование, данный символ используется как escape-символ.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-135">If the provider supports escaping, the character that would be used as the escape character.</span></span></param>
        <summary><span data-ttu-id="3d8ea-136">Указывает, поддерживает ли поставщик escape-преобразование строк, используемых как шаблоны в выражении LIKE.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-136">Indicates if the provider supports escaping strings to be used as patterns in a Like expression.</span></span></summary>
        <returns>
          <span data-ttu-id="3d8ea-137">Значение <see langword="True" />, если данный поставщик поддерживает escape-преобразование строк, используемых в качестве шаблонов в выражении Like; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3d8ea-137"><see langword="True" /> if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>