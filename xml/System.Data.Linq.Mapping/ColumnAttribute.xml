<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdaccd3505909035cae08bf74e9fe432de1f1bb7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681689" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Associates a class with a column in a database table.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот атрибут используется для назначения члена класса сущности, представляющего столбец в таблице базы данных. Этот атрибут можно применять к любому полю или свойству, `public`, `private`, или `internal`.  
  
 Только те члены класса определяться как столбцы сохраняются при [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] сохраняет изменения в базе данных.  
  
 Используйте запятые для разделения нескольких свойств атрибута.  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</summary>
        <value>Значение <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether a column can contain null values.</summary>
        <value>По умолчанию = <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это значение равно `false`, предполагается, что данные в соответствующем столбце является отличное от null.  
  
> [!NOTE]
>  Это свойство дублируется из <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> свойство для удобства. <xref:System.Data.Linq.DataContext.CreateDatabase%2A> Метод использует только <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> свойство. По этой причине необходимо указать, может ли столбец содержать значения null в <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> свойство также.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of the database column.</summary>
        <value>Строковое значение, указывающее точный текст, который определяет столбец в объявлении таблицы Transact-SQL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для задания точного текста, определяющего столбец в объявлении таблицы Transact-SQL. Укажите <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> свойства только в том случае, если вы планируете использовать <xref:System.Data.Linq.DataContext.CreateDatabase%2A> для создания экземпляра базы данных.  
  
 Значение по умолчанию <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> выводится из типа члена. Дополнительные сведения см. в разделе [сопоставления типов SQL-CLR](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether a column is a computed column in a database.</summary>
        <value>По умолчанию — пустое.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется при использовании <xref:System.Data.Linq.DataContext.CreateDatabase%2A> для определения столбца как содержащий вычисленные значения.  
  
 Например, если вы хотите создать столбец, определенный в SQL как `InventoryVal AS UnitPrice * UnitsInStock`, используйте следующую команду *выражение* строка: `"UnitPrice * UnitsInStock"`.  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] не поддерживает вычисляемые столбцы в качестве первичных ключей.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether a column contains values that the database auto-generates.</summary>
        <value>По умолчанию = <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> сразу после вставки строки данных, и члены доступны после синхронизируются элементы <xref:System.Data.Linq.DataContext.SubmitChanges%2A> завершения.  
  
> [!NOTE]
>  Если столбец содержит значения первичного ключа задано <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> как `true`, вам также следует добавить <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> свойства с помощью `IDENTITY` модификатор.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</summary>
        <value>По умолчанию = <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда `true`, это свойство определяет член класса как содержащий значение дискриминатора для иерархии наследования.  
  
 Это свойство можно задать `true` нет более чем одним элементом, который должен принадлежать к высшему уровню сопоставленный класс в иерархии.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</summary>
        <value>По умолчанию = <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При условии, что класс сущностей, необходимо указать хотя бы один член с этим атрибутом, и она должна быть сопоставлена с первичного ключа или уникального ключа в соответствующей таблице или представлении. Невыполнение этого требования этого запросы [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] необходимо учитывать экземпляры класса доступны только для чтения, для отправки изменений в базу данных.  
  
 Если указывается несколько членов класса с помощью этого свойства, считается, что ключ входить в состав связанных столбцов.  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] не поддерживает вычисляемые столбцы в качестве первичных ключей.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the column type of the member is a database timestamp or version number.</summary>
        <value>Значение по умолчанию = <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Увеличение номера версии и столбцы отметок времени обновляются при каждом обновлении связанная строка. (Это свойство сообщает [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] что столбец должен быть обновлен, чтобы показать, что новая версия; он не предназначен для записи сведений, например, кто внес обновление.)  
  
 Обратите внимание на следующее при `IsVersion` имеет значение true:  
  
-   Используйте <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> для указания нужных модификаторов можно назначить столбец, номер или метка времени версии. Если вы не укажете <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] определяет правильный модификаторы.  
  
 Увеличение номера версии и столбцы отметок времени обновляются при каждом обновлении связанная строка. Члены с `IsVersion=true` синхронизируются немедленно после обновления строки данных. Новые значения видны после <xref:System.Data.Linq.DataContext.SubmitChanges%2A> завершения.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</summary>
        <value>По умолчанию = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, если не <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> является <see langword="true" /> для элемента.  Другие значения: <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> и <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда это свойство используется с одним из трех перечислений, он определяет, каким образом [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] обнаруживает конфликты параллелизма.  
  
 Если член не разработано как `IsVersion=true`, исходные значения членов сравниваются с текущим состоянием базы данных.  
  
 Доступны следующие перечисления.  
  
-   `Always` Всегда используете этот столбец для обнаружения конфликтов.  
  
-   `Never` Никогда не используйте этот столбец для обнаружения конфликтов.  
  
-   `WhenChanged` Используйте этот столбец только в том случае, если элемент был изменен для приложения.  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>