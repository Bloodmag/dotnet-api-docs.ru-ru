<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ea3424fd0e7afc1846d6ea82a4b3b405ef18927" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53448237" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <TypeSignature Language="F#" Value="type MetaDataMember = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d115-101">Представляет сопоставление между полем или свойством объекта домена с одной стороны и столбцом таблицы базы данных с другой стороны.</span><span class="sxs-lookup"><span data-stu-id="2d115-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d115-102">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Association : System.Data.Linq.Mapping.MetaAssociation" Usage="System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-103">При переопределении в производном классе получает <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />, соответствующий этому элементу.</span><span class="sxs-lookup"><span data-stu-id="2d115-103">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="2d115-104">Соответствующий объект <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />, если таковой имеется; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-105">Это свойство представляет ассоциацию базы данных как внешний ключ — для первичного ключа связи.</span><span class="sxs-lookup"><span data-stu-id="2d115-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync" Usage="System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-106">При переопределении в производном классе получает значение, идентифицирующее поведение этого элемента, связанное с чтением после записи, для операций вставки и обновления.</span><span class="sxs-lookup"><span data-stu-id="2d115-106">When overridden in a derived class, gets the read-back behavior for this member for insert and update operations.</span></span></summary>
        <value><span data-ttu-id="2d115-107">Одно из значений перечисления, определяющее поведение обратной чтения для вставки и обновления.</span><span class="sxs-lookup"><span data-stu-id="2d115-107">One of the enumeration values that indicates the read-back behavior for insert and update operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-108">При переопределении в производном классе получает значение, указывающее, можно ли значению этого элемента присвоить значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-108">When overridden in a derived class, gets a value that indicates whether the value of this member can be assigned the <see langword="null" /> value.</span></span></summary>
        <value><span data-ttu-id="2d115-109">Значение <see langword="true" />, если этому члену может быть присвоено значение <see langword="null" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-109"><see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-110">Это свойство зависит от <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> свойство и предоставляется для удобства.</span><span class="sxs-lookup"><span data-stu-id="2d115-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string" Usage="System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-111">При переопределении в производном классе получает тип соответствующего столбца базы данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-111">When overridden in a derived class, gets the type of the corresponding database column.</span></span></summary>
        <value><span data-ttu-id="2d115-112">Тип столбца базы данных в виде строки.</span><span class="sxs-lookup"><span data-stu-id="2d115-112">The type of the database column as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-113">Это будет точный текст, используемый для определения столбца в команде объявления таблицы Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="2d115-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="2d115-114">Если не определено, тип столбца базы данных выводится из типа члена.</span><span class="sxs-lookup"><span data-stu-id="2d115-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-115">При переопределении в производном классе получает объект <see cref="T:System.Data.Linq.Mapping.MetaType" />, содержащий этот элемент данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-115">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span></span></summary>
        <value><span data-ttu-id="2d115-116">Метатип, содержащий текущий член.</span><span class="sxs-lookup"><span data-stu-id="2d115-116">The meta-type that contains the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredSourceAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-117">При переопределении в производном классе получает метод доступа, используемый для получения и задания отложенного источника для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-117">When overridden in a derived class, gets the accessor that is used to get and set the deferred source of this member.</span></span></summary>
        <value><span data-ttu-id="2d115-118">Метод доступа, используемый для доступа к отложенному источнику для этого члена.</span><span class="sxs-lookup"><span data-stu-id="2d115-118">The accessor used to access the deferred source for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredValueAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-119">При переопределении в производном классе получает метод доступа, используемый для получения и задания отложенного значения для этого элемента (не вызывая принесение).</span><span class="sxs-lookup"><span data-stu-id="2d115-119">When overridden in a derived class, gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span></span></summary>
        <value><span data-ttu-id="2d115-120">Метод доступа, используемый для доступа к отложенному значению для этого члена.</span><span class="sxs-lookup"><span data-stu-id="2d115-120">The accessor used to access the deferred value for this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-121">При переопределении в производном классе получает выражение, которое определяет вычисляемый столбец.</span><span class="sxs-lookup"><span data-stu-id="2d115-121">When overridden in a derived class, gets the expression that defines a computed column.</span></span></summary>
        <value><span data-ttu-id="2d115-122">Выражение для вычисляемого столбца в виде строки.</span><span class="sxs-lookup"><span data-stu-id="2d115-122">The expression for the computed column as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssociation : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-123">При переопределении в производном классе получает значение, указывающее, определяет ли этот элемент отношение связи.</span><span class="sxs-lookup"><span data-stu-id="2d115-123">When overridden in a derived class, gets a value that indicates whether this member defines an association relationship.</span></span></summary>
        <value><span data-ttu-id="2d115-124">Значение <see langword="true" />, если данный член определяет отношение ассоциации; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-124"><see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-125">При переопределении в производном классе получает значение, указывающее, создается ли этот элемент автоматически базой данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-125">When overridden in a derived class, gets a value that indicates whether this member is automatically generated by the database.</span></span></summary>
        <value><span data-ttu-id="2d115-126"><see langword="true" /> Если этот член автоматически сгенерирован базой данных; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-126"><see langword="true" /> if this member is automatically generated by the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-127">Автоматически созданные члены синхронизируются сразу после вставки соответствующей строкой данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="2d115-128">Вставьте ключ, сформированных триггером, значения не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2d115-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsDeclaredBy : System.Data.Linq.Mapping.MetaType -&gt; bool" Usage="metaDataMember.IsDeclaredBy type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2d115-129">Проверяемый тип.</span><span class="sxs-lookup"><span data-stu-id="2d115-129">The type to check.</span></span></param>
        <summary><span data-ttu-id="2d115-130">При переопределении в производном классе указывает, объявлен ли этот элемент в заданном типе.</span><span class="sxs-lookup"><span data-stu-id="2d115-130">When overridden in a derived class, specifies whether this member is declared by the specified type.</span></span></summary>
        <returns><span data-ttu-id="2d115-131">Значение <see langword="true" />, если этот член объявлен в заданном типе; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-131"><see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeferred : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-132">При переопределении в производном классе получает значение, указывающее, является ли поведением по умолчанию отложенная загрузка данного элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-132">When overridden in a derived class, gets a value that indicates whether the default behavior is to load this member on a deferred basis.</span></span></summary>
        <value><span data-ttu-id="2d115-133"><see langword="true" /> Если этот элемент загружается отложена по умолчанию; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-133"><see langword="true" /> if this member is loaded on a deferred basis by default; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-134">При переопределении в производном классе получает значение, указывающее, представляет ли этот элемент дискриминатор наследования.</span><span class="sxs-lookup"><span data-stu-id="2d115-134">When overridden in a derived class, gets a value that indicates whether this member represents the inheritance discriminator.</span></span></summary>
        <value><span data-ttu-id="2d115-135">Значение <see langword="true" />, если этот член представляет дискриминатор наследования; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-135"><see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-136">Это свойство может быть `true` для не более одного элемента самого верхнего сопоставленный класс в иерархии.</span><span class="sxs-lookup"><span data-stu-id="2d115-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-137">При переопределении в производном классе получает значение, указывающее, сопоставляется ли этот элемент со столбцом (или ограничением).</span><span class="sxs-lookup"><span data-stu-id="2d115-137">When overridden in a derived class, gets a value that indicates whether this member is mapped to a column (or constraint).</span></span></summary>
        <value><span data-ttu-id="2d115-138">Значение <see langword="true" />, если этот член сопоставляется столбцу (или ограничению); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-138"><see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-139">Класс может иметь сочетания элементов постоянные и временные.</span><span class="sxs-lookup"><span data-stu-id="2d115-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="2d115-140">Постоянные члены сопоставляются, пока не сопоставлены непостоянный элементы.</span><span class="sxs-lookup"><span data-stu-id="2d115-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="2d115-141">Сопоставляемый класс должен иметь по крайней мере один постоянный член.</span><span class="sxs-lookup"><span data-stu-id="2d115-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-142">При переопределении в производном классе получает значение, указывающее, является ли этот элемент частью идентификатора типа.</span><span class="sxs-lookup"><span data-stu-id="2d115-142">When overridden in a derived class, gets a value that indicates whether this member is part of the type's identity.</span></span></summary>
        <value><span data-ttu-id="2d115-143">Значение <see langword="true" />, этот член является частью идентификатора типа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-143"><see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-144">Если это свойство имеет `true`, член класса представляет столбец, который является частью уникального ключа таблицы.</span><span class="sxs-lookup"><span data-stu-id="2d115-144">If this property is `true`, the class member represents a column that is part of the table's unique key.</span></span> <span data-ttu-id="2d115-145">Несколько членов класса могут иметь для этого свойства задано `true` для ключа, который состоит из связанных столбцов.</span><span class="sxs-lookup"><span data-stu-id="2d115-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="2d115-146">Для классов сущностей по крайней мере один член должен иметь этот атрибут и должны сопоставляться со первичного ключа или уникального ключа в соответствующей таблице или представлении.</span><span class="sxs-lookup"><span data-stu-id="2d115-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="2d115-147">В противном случае LINQ to SQL считает, что экземпляры класса доступны только для чтения, для отправки изменений в базу данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="2d115-148">Набор столбцов, определенных с помощью <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> не требуются в качестве первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="2d115-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="2d115-149">Они просто указывают набор, который уникально определяет сущность.</span><span class="sxs-lookup"><span data-stu-id="2d115-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="2d115-150">Распространенные варианты включения кластеризации столбцов индекса и другие уникальные ключевые столбцы.</span><span class="sxs-lookup"><span data-stu-id="2d115-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-151">При переопределении в производном классе получает значение, указывающее, представляет ли этот элемент версию строки или метку времени.</span><span class="sxs-lookup"><span data-stu-id="2d115-151">When overridden in a derived class, gets a value that indicates whether this member represents the row version or timestamp.</span></span></summary>
        <value><span data-ttu-id="2d115-152">Значение <see langword="true" />, если этот член представляет отметку времени или версию строки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-152"><see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-153">Увеличение номера версии и столбцы отметок времени обновляются при каждом обновлении строки.</span><span class="sxs-lookup"><span data-stu-id="2d115-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-154">При переопределении в производном классе получает метод <see cref="T:System.Data.Linq.DataContext" />, используемый для выполнения операций загрузки.</span><span class="sxs-lookup"><span data-stu-id="2d115-154">When overridden in a derived class, gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span></span></summary>
        <value><span data-ttu-id="2d115-155">Метод загрузки в виде <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappedName : string" Usage="System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-156">При переопределении в производном классе получает имя столбца (или ограничения) в базе данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-156">When overridden in a derived class, gets the name of the column (or constraint) in the database.</span></span></summary>
        <value><span data-ttu-id="2d115-157">Имя столбца (или ограничения) в виде строки.</span><span class="sxs-lookup"><span data-stu-id="2d115-157">The name of the column (or constraint) as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-158">При переопределении в производном классе получает базовый <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-158">When overridden in a derived class, gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="2d115-159">Член атрибута и сведения о метаданных.</span><span class="sxs-lookup"><span data-stu-id="2d115-159">The member attribute and metadata information.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-160">При переопределении в производном классе получает метод доступа, используемый для получения и задания значения для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-160">When overridden in a derived class, gets the accessor that is used to get or set the value of this member.</span></span></summary>
        <value><span data-ttu-id="2d115-161">Метод доступа.</span><span class="sxs-lookup"><span data-stu-id="2d115-161">The accessor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-162">При переопределении в производном классе получает или задает имя элемента, которое совпадает с именем <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2d115-162">When overridden in a derived class, gets the name of the member, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></summary>
        <value><span data-ttu-id="2d115-163">Имя, так как <see cref="T:System.Reflection.MemberInfo" /> имя.</span><span class="sxs-lookup"><span data-stu-id="2d115-163">The name, which is the same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-164">При переопределении в производном классе получает исходную позицию этого элемента в структуре по умолчанию результатов запроса.</span><span class="sxs-lookup"><span data-stu-id="2d115-164">When overridden in a derived class, gets the ordinal position of this member in the default layout of query results.</span></span></summary>
        <value><span data-ttu-id="2d115-165">Исходная позиция.</span><span class="sxs-lookup"><span data-stu-id="2d115-165">The ordinal position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-166">При переопределении в производном классе получает метод доступа, используемый для получения и задания значения хранения для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-166">When overridden in a derived class, gets the accessor that is used to get or set the storage value of this member.</span></span></summary>
        <value><span data-ttu-id="2d115-167">Метод доступа хранимого значения этого члена.</span><span class="sxs-lookup"><span data-stu-id="2d115-167">The accessor for the storage value of this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageMember : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-168">При переопределении в производном классе получает элемент, который хранит данные для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-168">When overridden in a derived class, gets the member that stores the data for this member.</span></span></summary>
        <value><span data-ttu-id="2d115-169">Член, используемый для хранения.</span><span class="sxs-lookup"><span data-stu-id="2d115-169">The storage member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-170">При переопределении в производном классе получает тип данного элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-170">When overridden in a derived class, gets the type of this member.</span></span></summary>
        <value><span data-ttu-id="2d115-171">Тип текущего члена.</span><span class="sxs-lookup"><span data-stu-id="2d115-171">The type of the current member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck" Usage="System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d115-172">При переопределении в производном классе получает политику проверки оптимистической блокировки для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-172">When overridden in a derived class, gets the optimistic concurrency check policy for this member.</span></span></summary>
        <value><span data-ttu-id="2d115-173">Одно из значений перечисления, указывающих оптимистичного параллелизма проверить политику для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="2d115-173">One of the enumeration values that indicates the optimistic concurrency check policy for this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d115-174">Если класс не содержит элемент версии (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> присвоено `true`), выполняется путем сравнения исходные значения членов с текущим состоянием базы данных.</span><span class="sxs-lookup"><span data-stu-id="2d115-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="2d115-175"><xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> Свойство определяет, как LINQ to SQL реализует обнаружение конфликтов в соответствии оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="2d115-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="2d115-176">Только тех элементов, это свойство равным <xref:System.Data.Linq.Mapping.UpdateCheck.Always> или <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> считаются во время обнаружения конфликтов.</span><span class="sxs-lookup"><span data-stu-id="2d115-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
