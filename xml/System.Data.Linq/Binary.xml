<Type Name="Binary" FullName="System.Data.Linq.Binary">
  <TypeSignature Language="C#" Value="public sealed class Binary : IEquatable&lt;System.Data.Linq.Binary&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Binary extends System.Object implements class System.IEquatable`1&lt;class System.Data.Linq.Binary&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Binary" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Binary&#xA;Implements IEquatable(Of Binary)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binary sealed : IEquatable&lt;System::Data::Linq::Binary ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.Linq.Binary&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f6f7f-101">Представляет неизменяемый блок двоичных данных.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-101">Represents an immutable block of binary data.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binary (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binary(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f6f7f-102">Байты, представляющие двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-102">The bytes representing the binary data.</span></span></param>
        <summary><span data-ttu-id="f6f7f-103">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.Binary" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-103">Initializes a new instance of the <see cref="T:System.Data.Linq.Binary" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f7f-104">Когда`null` передается конструктору, а не требуется массив байтов, <xref:System.ArgumentNullException?displayProperty=nameWithType> исключения.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-104">When`null` is passed to this constructor instead of the required array of bytes, a <xref:System.ArgumentNullException?displayProperty=nameWithType> exception is thrown.</span></span> <span data-ttu-id="f6f7f-105">Не следует полагаться на это поведение, поскольку он может измениться в будущем.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-105">Do not rely on this behavior because it may change in the future.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6f7f-106">Определяет, равны ли два двоичных объекта.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-106">Determines whether two binary objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.Linq.Binary other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.Linq.Binary other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Binary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::Linq::Binary ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.Linq.Binary" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f6f7f-107">Объект <see cref="T:System.Object" />, с которым сравнивается текущий объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-107">The <see cref="T:System.Object" /> to which the current object is being compared.</span></span></param>
        <summary><span data-ttu-id="f6f7f-108">Определяет, равны ли два двоичных объекта.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-108">Determines whether two binary objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="f6f7f-109">Значение <see langword="true" />, если два двоичных объекта равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-109"><see langword="true" /> if the two binary objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f6f7f-110">Объект <see cref="T:System.Object" />, с которым сравнивается текущий объект <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-110">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="f6f7f-111">Определяет, равен ли указанный объект <see cref="T:System.Object" /> текущему объекту <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-111">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</span></span></summary>
        <returns>
          <span data-ttu-id="f6f7f-112">Значение <see langword="true" />, если два двоичных объекта равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-112"><see langword="true" /> if the two binary objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6f7f-113">Служит хэш-функцией для определенного типа.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-113">Serves as a hash function for a particular type.</span></span></summary>
        <returns><span data-ttu-id="f6f7f-114">Хэш-код для текущего двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-114">A hash code for the current binary object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Binary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6f7f-115">Возвращает длину двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-115">Gets the length of the binary object.</span></span></summary>
        <value><span data-ttu-id="f6f7f-116">Целое число, представляющее длину.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-116">An integer representing the length.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.Linq.Binary binary1, class System.Data.Linq.Binary binary2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (binary1 As Binary, binary2 As Binary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::Linq::Binary ^ binary1, System::Data::Linq::Binary ^ binary2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binary1" Type="System.Data.Linq.Binary" />
        <Parameter Name="binary2" Type="System.Data.Linq.Binary" />
      </Parameters>
      <Docs>
        <param name="binary1"><span data-ttu-id="f6f7f-117">Первый двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-117">First binary object.</span></span></param>
        <param name="binary2"><span data-ttu-id="f6f7f-118">Второй двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-118">Second binary object.</span></span></param>
        <summary><span data-ttu-id="f6f7f-119">Описывает равенство между двумя двоичными объектами.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-119">Describes the equality relationship between two binary objects.</span></span></summary>
        <returns>
          <span data-ttu-id="f6f7f-120">Значение <see langword="true" />, если двоичные объекты равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-120"><see langword="true" /> if the binary objects are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f7f-121">Возвращает `true` при одновременном `null` , но возвращает `false` если только один имеет `null`.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-121">Returns `true` if both are `null` but returns `false` if only one is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.Linq.Binary (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Data.Linq.Binary op_Implicit(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte()) As Binary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::Linq::Binary ^(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Binary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f6f7f-122">Массив байтов для преобразования в экземпляр типа <see cref="T:System.Data.Linq.Binary" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-122">The array of bytes to convert into an instance of the <see cref="T:System.Data.Linq.Binary" /> type.</span></span></param>
        <summary><span data-ttu-id="f6f7f-123">Позволяет неявно привести массивы байтов к типу <see cref="T:System.Data.Linq.Binary" /> в языке программирования.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-123">Enables arrays of bytes to be implicitly coerced to the <see cref="T:System.Data.Linq.Binary" /> type in a programming language.</span></span></summary>
        <returns><span data-ttu-id="f6f7f-124">Класс <see cref="T:System.Data.Linq.Binary" />, содержащий приведенное значение.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-124">A <see cref="T:System.Data.Linq.Binary" /> class containing the coerced value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f7f-125">Когда `null` передается этому оператору, а не требуется массив байтов, [неявное преобразование (Byte\<xref:System.ArgumentNullException?displayProperty=nameWithType > исключения.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-125">When `null` is passed to this operator instead of the required array of bytes, a [Implicit Conversion (Byte\<xref:System.ArgumentNullException?displayProperty=nameWithType> exception is thrown.</span></span> <span data-ttu-id="f6f7f-126">Не следует полагаться на это поведение, поскольку он может измениться в будущем.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-126">Do not rely on this behavior because it may change in the future.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.Linq.Binary binary1, class System.Data.Linq.Binary binary2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (binary1 As Binary, binary2 As Binary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::Linq::Binary ^ binary1, System::Data::Linq::Binary ^ binary2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binary1" Type="System.Data.Linq.Binary" />
        <Parameter Name="binary2" Type="System.Data.Linq.Binary" />
      </Parameters>
      <Docs>
        <param name="binary1"><span data-ttu-id="f6f7f-127">Первый двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-127">The first binary object.</span></span></param>
        <param name="binary2"><span data-ttu-id="f6f7f-128">Второй двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-128">The second binary object.</span></span></param>
        <summary><span data-ttu-id="f6f7f-129">Описывает неравенство между двумя двоичными объектами.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-129">Describes the inequality relationship between two binary objects.</span></span></summary>
        <returns>
          <span data-ttu-id="f6f7f-130">Значение <see langword="true" />, если двоичные объекты не равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-130"><see langword="true" /> if the binary objects are not equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6f7f-131">Возвращает `false` при одновременном `null`, но возвращает `true` при выполнении любого `null`.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-131">Returns `false` if both are `null`, but returns `true` if either is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public byte[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6f7f-132">Возвращает массив байтов, который представляет текущий двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-132">Returns an array of bytes that represents the current binary object.</span></span></summary>
        <returns><span data-ttu-id="f6f7f-133">Массив байтов, содержащий значение текущего двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-133">A byte array that contains the value of the current binary object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Binary.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6f7f-134">Возвращает строку <see cref="T:System.String" />, представляющую текущий двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-134">Returns a <see cref="T:System.String" /> that represents the current binary object.</span></span></summary>
        <returns><span data-ttu-id="f6f7f-135">Строка <see cref="T:System.String" />, представляющая текущий двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="f6f7f-135">A <see cref="T:System.String" /> that represents the current binary object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>