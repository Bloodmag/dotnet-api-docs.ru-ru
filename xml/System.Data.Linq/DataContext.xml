<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8de4bbcd3573fc7457ff33807f196953cca74d35" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1f735-101">Представляет основную точку входа для платформы LINQ to SQL.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f735-101">Represents the main entry point for the LINQ to SQL framework.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-102"><xref:System.Data.Linq.DataContext> Является источником всех сущностей, сопоставленный через подключение к базе данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="1f735-103">Она отслеживает изменения, внесенные для всех извлеченных сущностей и поддерживает «кэш удостоверения», представленный гарантии, что сущности, извлеченные более чем один раз с помощью тот же экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="1f735-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="1f735-104">В общем случае <xref:System.Data.Linq.DataContext> экземпляр предназначен для последнего для одну «единицу работы», однако приложение определяет этот термин.</span><span class="sxs-lookup"><span data-stu-id="1f735-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="1f735-105">Объект <xref:System.Data.Linq.DataContext> , являются упрощенными и не занимает много времени.</span><span class="sxs-lookup"><span data-stu-id="1f735-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="1f735-106">Типичный [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] приложение создает <xref:System.Data.Linq.DataContext> экземпляров в области метода или члена кратковременных классов, представляющих логический набор связанных операций базы данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-107">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
          <span data-ttu-id="1f735-108">Используемая строка подключения может представлять собой строку подключения ADO.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-108">The connection string you use can be an ADO.NET connection string.</span>
          </span>
          <span data-ttu-id="1f735-109">Кроме того, можно задать имя файла в файле SQL Server Express или SQL Server Compact.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="1f735-110">Подключение, используемое [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-111">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на подключение, используемое [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-112">Объект <xref:System.Data.Linq.DataContext> открывает и закрывает подключение к базе данных, при необходимости, при указании закрытия подключения или строки подключения.</span><span class="sxs-lookup"><span data-stu-id="1f735-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="1f735-113">В общем случае не следует необходимо вызвать `Dispose` на <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="1f735-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="1f735-114">При указании открытое соединение, <xref:System.Data.Linq.DataContext> не закроет его.</span><span class="sxs-lookup"><span data-stu-id="1f735-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="1f735-115">Таким образом, не следует создавать экземпляры <xref:System.Data.Linq.DataContext> с открытым соединением, если у вас есть веская причина для этого.</span><span class="sxs-lookup"><span data-stu-id="1f735-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="1f735-116">В <xref:System.Transactions> транзакции, <xref:System.Data.Linq.DataContext> не открыть или закрыть подключение во избежание повышения роли.</span><span class="sxs-lookup"><span data-stu-id="1f735-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="1f735-117">Соединение, используемое платформой .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-117">The connection used by the .NET Framework.</span>
          </span>
        </param>
        <param name="mapping">
          <span data-ttu-id="1f735-118">Источник сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-118">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-119">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на подключение и источник сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">
          <span data-ttu-id="1f735-120">Этот аргумент может принимать любое из следующих значений:</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-120">This argument can be any one of the following:</span>
          </span>
          <span data-ttu-id="1f735-121">Имя файла, где находится база данных SQL Server Express.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-121">The name of a file where a SQL Server Express database resides.</span>
          </span>
          <span data-ttu-id="1f735-122">Имя сервера, где находится база данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-122">The name of a server where a database is present.</span>
          </span>
          <span data-ttu-id="1f735-123">В этом случае поставщик использует для пользователя базу данных по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-123">In this case the provider uses the default database for a user.</span>
          </span>
          <span data-ttu-id="1f735-124">Полная строка подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-124">A complete connection string.</span>
          </span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="1f735-125"> просто передает строку поставщику без изменений.</span><span class="sxs-lookup"><span data-stu-id="1f735-125"> just passes the string to the provider without modification.</span></span></param>
        <param name="mapping">
          <span data-ttu-id="1f735-126">Источник сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-126">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-127">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на источник файлов и источник сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">To be added.</param>
        <summary>
          <span data-ttu-id="1f735-128">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на источник файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-128">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-129">Возвращает коллекцию объектов, ставшую причиной конфликта параллелизма, когда был вызван метод <see cref="M:System.Data.Linq.DataContext.SubmitChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-129">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-130">Коллекция объектов, ставшая причиной конфликта параллелизма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-130">A collection of objects that caused concurrency conflicts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-131">В следующем примере показано, как коллекции может быть выполнен обход для получения сведений о конфликте.</span><span class="sxs-lookup"><span data-stu-id="1f735-131">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-132">Возвращает или задает значение, которое увеличивает время ожидания для запросов, для которых в противном случае истекло время ожидание в течение времени ожидания по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-132">Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-133">Целое число, которое увеличивает время ожидания для запросов, для которых в противном случае истекло время ожидание в течение времени ожидания по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-133">An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-134">Это свойство Возвращает или задает время ожидания команды, используемые для выполнения сгенерированных команд (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="1f735-134">This property gets or sets the command time-out used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="1f735-135">Дополнительные сведения см. в разделе <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-135">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="1f735-136">Если это свойство не задано, значение по умолчанию <xref:System.Data.IDbCommand.CommandTimeout%2A> используется для выполнения команды запроса.</span><span class="sxs-lookup"><span data-stu-id="1f735-136">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="1f735-137">Это значение по умолчанию задается поставщиком хранилища.</span><span class="sxs-lookup"><span data-stu-id="1f735-137">This default value is set by the storage provider.</span></span> <span data-ttu-id="1f735-138">Обратите внимание, что некоторые поставщики могут вызывать исключения, если это значение равно ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="1f735-138">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-139">Возвращает подключение, используемое платформой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-139">Gets the connection used by the framework.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-140">Подключение, используемое платформой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-140">The connection used by the framework.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-141">Это свойство можно использовать для взаимодействия с реляционным кодом ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="1f735-141">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="1f735-142">Возвращенное подключение будет закрыто, если он был явно открыт пользователем.</span><span class="sxs-lookup"><span data-stu-id="1f735-142">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-143">Создает базу данных на сервере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-143">Creates a database on the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-144">Имя базы данных создается с помощью следующего алгоритма:</span><span class="sxs-lookup"><span data-stu-id="1f735-144">The name of the database is derived by using the following algorithm:</span></span>  
  
-   <span data-ttu-id="1f735-145">Если база данных определена в строке подключения, используется его имя.</span><span class="sxs-lookup"><span data-stu-id="1f735-145">If a database is identified in the connection string, its name is used.</span></span>  
  
-   <span data-ttu-id="1f735-146">Если <xref:System.Data.Linq.Mapping.DatabaseAttribute> присутствует атрибут, ее <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> свойство используется в качестве имени базы данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-146">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
  
-   <span data-ttu-id="1f735-147">Если ни один тег базы данных в строке подключения и строго типизированные <xref:System.Data.Linq.DataContext> используется, базу данных с тем же именем, что <xref:System.Data.Linq.DataContext> наследование класса проверяется.</span><span class="sxs-lookup"><span data-stu-id="1f735-147">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked.</span></span>  
  
-   <span data-ttu-id="1f735-148">Если слабо типизированным <xref:System.Data.Linq.DataContext> — используется, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-148">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1f735-149">Если <xref:System.Data.Linq.DataContext> был создан с помощью имени файла, создается база данных, соответствующее имени этого файла.</span><span class="sxs-lookup"><span data-stu-id="1f735-149">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f735-150">Ниже показано, как настроить временную базу данных, а затем удалите его.</span><span class="sxs-lookup"><span data-stu-id="1f735-150">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="1f735-151">Тип элементов в возвращаемой коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-151">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="1f735-152">Экземпляр вызова метода (текущий объект).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-152">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="1f735-153">
            <see cref="T:System.Reflection.MethodInfo" />, который определяет метод CLR, соответствующий методу базы данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-153">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="1f735-154">Массив параметров для передачи команде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-154">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-155">Выполняет табличную функцию базы данных, связанную с указанным методом CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-155">Executes the table-valued database function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-156">Коллекция результирующих значений, возвращаемых запросом базы данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-156">A collection of resultant values returned by the database query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-157"><xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> Метод используется в автоматически создаваемый код и действует как прокси для функции базы данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-157">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-158">Определяет, можно ли открыть связанную базу данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-158">Determines whether the associated database can be opened.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-159">Значение <see langword="true" />, если указанную базу данных можно открыть; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-159">
              <see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-160">Этот метод использует подключение в <xref:System.Data.Linq.DataContext.Connection%2A> свойство попыток открытия связанной базы данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-160">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f735-161">В следующем примере этот метод используется для определения, является ли база данных уже существует.</span><span class="sxs-lookup"><span data-stu-id="1f735-161">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-162">Возвращает или задает значение, указывающее, следует ли загружать с задержкой связи "один к одному" или "один ко многим".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-162">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-163">
            <see langword="true" />, если отложенная загрузка разрешена; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-163">
              <see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-164">Если код обращается к одной из таких связей, значение null возвращается, если связь является один к одному и возвращается пустая коллекция, если один ко многим.</span><span class="sxs-lookup"><span data-stu-id="1f735-164">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="1f735-165">Связи по-прежнему может быть заполнен, задав <xref:System.Data.Linq.DataContext.LoadOptions%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1f735-165">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="1f735-166">Чтобы можно было извлечь часть объектной модели и отправить ее (например, веб-служба) является основным сценарием для этого свойства.</span><span class="sxs-lookup"><span data-stu-id="1f735-166">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f735-167">Если это свойство имеет значение `false` после выполнения запроса возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-167">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="1f735-168">В разделе **допустимые режимы** ниже, в разделе для получения дополнительной информации.</span><span class="sxs-lookup"><span data-stu-id="1f735-168">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="1f735-169">Допустимые режимы</span><span class="sxs-lookup"><span data-stu-id="1f735-169">Valid modes</span></span>  
 <span data-ttu-id="1f735-170">Отложенная загрузка требует отслеживания объектов.</span><span class="sxs-lookup"><span data-stu-id="1f735-170">Deferred loading requires object tracking.</span></span> <span data-ttu-id="1f735-171">Допустимы только следующие три режима:</span><span class="sxs-lookup"><span data-stu-id="1f735-171">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="1f735-172"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="1f735-172"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="1f735-173"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> пропускается и выведен как `false`.</span><span class="sxs-lookup"><span data-stu-id="1f735-173"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="1f735-174">Это поведение соответствует только для чтения <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="1f735-174">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="1f735-175"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="1f735-175"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="1f735-176"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="1f735-176"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="1f735-177">Такой ситуации соответствует <xref:System.Data.Linq.DataContext> , которая позволяет пользователям для загрузки граф объектов с помощью <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> директивы, но он не поддерживает отложенной загрузки.</span><span class="sxs-lookup"><span data-stu-id="1f735-177">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="1f735-178">Оба равным `true`.</span><span class="sxs-lookup"><span data-stu-id="1f735-178">Both are set to `true`.</span></span> <span data-ttu-id="1f735-179">Это значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1f735-179">This is the default.</span></span>  
  
 <span data-ttu-id="1f735-180">Флаги не могут изменяться после выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="1f735-180">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="1f735-181">После выполнения первого запроса, который использует любое изменение <xref:System.Data.Linq.DataContext> приводит к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="1f735-181">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-182">Удаляет связанную базу данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-182">Deletes the associated database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-183">Этот метод использует подключение в <xref:System.Data.Linq.DataContext.Connection%2A> свойство для идентификации базы данных для удаления.</span><span class="sxs-lookup"><span data-stu-id="1f735-183">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f735-184">Приведенный ниже показано, как удалить базу данных, созданной временно.</span><span class="sxs-lookup"><span data-stu-id="1f735-184">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-185">Освобождение ресурсов, используемых классом <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-185">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-186">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-186">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1f735-187">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-187">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-188">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Data.Linq.DataContext" /> (при необходимости освобождает и управляемые ресурсы).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-188">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="1f735-189">Выполняемая команда SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-189">The SQL command to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="1f735-190">Массив параметров для передачи команде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-190">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="1f735-191">Обратите внимание на следующее поведение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-191">Note the following behavior:</span>
          </span>
          <span data-ttu-id="1f735-192">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-192">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-193">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-193">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-194">Если значение одного из параметров равно NULL, оно преобразуется в значение <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-194">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-195">Выполняет команды SQL непосредственно в базе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-195">Executes SQL commands directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-196">Количество строк, измененных выполненной командой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-196">The number of rows modified by the executed command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-197">Этот метод является транзитным механизмом для случаев, где [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] обеспечивает должным образом для того или иного сценария.</span><span class="sxs-lookup"><span data-stu-id="1f735-197">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="1f735-198">Синтаксис для команды аналогично синтаксиса, используемого для создания ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="1f735-198">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="1f735-199">Единственное отличие заключается в том, как параметры заданы.</span><span class="sxs-lookup"><span data-stu-id="1f735-199">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="1f735-200">В частности, параметры указываются путем заключения в фигурные скобки ({}...) и перечислить их начиная с 0.</span><span class="sxs-lookup"><span data-stu-id="1f735-200">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="1f735-201">Параметр связан с объектом с таким же номером в массиве параметров.</span><span class="sxs-lookup"><span data-stu-id="1f735-201">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="1f735-202">`ExecuteQuery` и `ExecuteCommand` позволяют задавать переменное число аргументов для параметра подстановки.</span><span class="sxs-lookup"><span data-stu-id="1f735-202">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="1f735-203">Например, можно указать параметры при вызове метода ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="1f735-203">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="1f735-204">Кроме того, еще один пример:</span><span class="sxs-lookup"><span data-stu-id="1f735-204">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="1f735-205">Следующий пример открывает соединение и передает SQL `UPDATE` командой SQL engine.</span><span class="sxs-lookup"><span data-stu-id="1f735-205">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="1f735-206">Сущность, которая будет удалена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-206">The entity to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-207">Выполняет внутренние методы переопределения удаления для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-207">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-208">См. раздел <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-208">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="1f735-209">Сущность, которая будет вставлена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-209">The entity to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-210">Выполняет внутренние методы переопределения вставки для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций вставки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-210">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-211">Обратите внимание на следующие аспекты:</span><span class="sxs-lookup"><span data-stu-id="1f735-211">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="1f735-212">Так как метод с модификатором protected, его использование требует создания подкласса <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="1f735-212">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="1f735-213">Исключение возникает в том случае, если эта операция не вызывается внутри <xref:System.Data.Linq.DataContext.SubmitChanges%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="1f735-213">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="1f735-214">Он не предназначен для вызова как автономной работе за пределами области <xref:System.Data.Linq.DataContext.SubmitChanges%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="1f735-214">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="1f735-215"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> сама вызывает переопределить методы при их реализации и рассмотренные выше методы являются предназначен для непосредственного вызова внутренние переопределенные методы.</span><span class="sxs-lookup"><span data-stu-id="1f735-215"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="1f735-216">Он отвечает разработчик для передачи в правильную сущность.</span><span class="sxs-lookup"><span data-stu-id="1f735-216">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="1f735-217">Реализация подтверждает, что отслеживается переданной сущности.</span><span class="sxs-lookup"><span data-stu-id="1f735-217">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="1f735-218">Тем не менее он отвечает разработчик сохранить порядок или передавать в той же сущности два раза.</span><span class="sxs-lookup"><span data-stu-id="1f735-218">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="1f735-219">Возлагается на разработчика вызвать правильный динамический API-Интерфейс.</span><span class="sxs-lookup"><span data-stu-id="1f735-219">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="1f735-220">Например, в `Update` Переопределите метод, только <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> метод может вызываться.</span><span class="sxs-lookup"><span data-stu-id="1f735-220">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="1f735-221"> не обнаруживает и не проверяет вызванный динамический метод на предмет соответствия применяемой операции.</span><span class="sxs-lookup"><span data-stu-id="1f735-221"> does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="1f735-222">Результаты не определены, если вызывается неприменимый метод (например, вызов <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> для обновления объекта).</span><span class="sxs-lookup"><span data-stu-id="1f735-222">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="1f735-223">Сущность, которая будет обновлена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-223">The entity to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-224">Выполняет внутренние методы переопределения обновления для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-224">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-225">См. раздел <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-225">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1f735-226">Экземпляр вызова метода (текущий объект).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-226">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="1f735-227">Определяет метод CLR, соответствующий методу базы данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-227">Identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="1f735-228">Массив параметров для передачи команде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-228">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-229">Выполняет хранимую процедуру базы данных или скалярную функцию, связанную с указанным методом среды CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-229">Executes the stored database procedure or scalar function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-230">Результат (возвращаемое значение и выходные параметры) выполнения указанного метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-230">The result (the return value and output parameters) of executing the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-231"><xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> Метод используется в автоматически создаваемый код и действует как прокси для функции базы данных.</span><span class="sxs-lookup"><span data-stu-id="1f735-231">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="1f735-232">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-232">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="1f735-233">Алгоритм сопоставления столбцов в результате запроса с полями или свойствами в объекте работает, как показано далее.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-233">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span>
          </span>
          <span data-ttu-id="1f735-234">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-234">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="1f735-235">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-235">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="1f735-236">Сначала в сравнении выполняется поиск совпадения с учетом регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-236">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="1f735-237">Если это совпадение не найдено, следующий поиск выполняется для совпадений без учета регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-237">If this match is not found, a subsequent search occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="1f735-238">Запрос должен возвращать все отслеженные поля и свойства объекта (кроме тех, загрузка которых отложена), если выполняются все следующие условия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-238">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span>
          </span>
          <span data-ttu-id="1f735-239">
            <c>T</c> является сущностью, явно отслеживаемой <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-239">
              <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="1f735-240">Свойство <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-240">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="1f735-241">Сущность имеет первичный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-241">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="1f735-242">В противном случае возникает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-242">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="1f735-243">Запрос SQL для выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-243">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="1f735-244">Массив параметров для передачи команде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-244">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="1f735-245">Обратите внимание на следующее поведение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-245">Note the following behavior:</span>
          </span>
          <span data-ttu-id="1f735-246">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-246">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-247">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-247">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-248">Если значение параметра равно <see langword="null" />, он преобразовывается в <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-248">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-249">Выполняет SQL-запросы непосредственно в базе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-249">Executes SQL queries directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-250">Коллекция объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, возвращаемых запросом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-250">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="1f735-251">Тип элементов в возвращаемой коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-251">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="1f735-252">Запрос SQL для выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-252">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="1f735-253">Массив параметров для передачи команде.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-253">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="1f735-254">Обратите внимание на следующее поведение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-254">Note the following behavior:</span>
          </span>
          <span data-ttu-id="1f735-255">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-255">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-256">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-256">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="1f735-257">Если значение параметра равно NULL, он преобразуется в <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-257">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-258">Выполняет запросы SQL непосредственно в базе данных и возвращает объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-258">Executes SQL queries directly on the database and returns objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-259">Коллекция объектов, возвращенных запросом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-259">A collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-260">Этот метод является транзитным механизмом для случаев, где [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] не предоставляет для того или иного сценария.</span><span class="sxs-lookup"><span data-stu-id="1f735-260">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="1f735-261">Алгоритм сопоставления столбцов в результатах запроса с полями и свойствами в объекте работает следующим образом:</span><span class="sxs-lookup"><span data-stu-id="1f735-261">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="1f735-262">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="1f735-262">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="1f735-263">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="1f735-263">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="1f735-264">Сравнение выполняется первой ищет совпадение с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="1f735-264">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="1f735-265">Если такое совпадение не найдено, следующий поиск выполняется без учета регистра соответствия.</span><span class="sxs-lookup"><span data-stu-id="1f735-265">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="1f735-266">Запрос должен возвращать все отслеженные поля и свойства объекта (кроме тех элементов, которые относятся к отложенной загрузке) Если выполняются все следующие:</span><span class="sxs-lookup"><span data-stu-id="1f735-266">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="1f735-267">Если `<T>` сущность явно отслеживается <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="1f735-267">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="1f735-268">ObjectTrackingEnabled имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="1f735-268">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="1f735-269">Сущность имеет первичный ключ.</span><span class="sxs-lookup"><span data-stu-id="1f735-269">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="1f735-270">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-270">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1f735-271">Во всех остальных случаях запрос может извлекать только подмножество отслеженные поля и свойства для объекта.</span><span class="sxs-lookup"><span data-stu-id="1f735-271">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="1f735-272">В следующем фрагменте на C# показано один использования для этого метода:</span><span class="sxs-lookup"><span data-stu-id="1f735-272">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="1f735-273">В Visual Basic</span><span class="sxs-lookup"><span data-stu-id="1f735-273">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-274">Возвращает измененные объекты, отслеживаемые <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-274">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-275">Набор объектов возвращается как три коллекции, доступные только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-275">The set of objects is returned as three read-only collections.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-276">Обратите внимание на следующие аспекты:</span><span class="sxs-lookup"><span data-stu-id="1f735-276">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="1f735-277"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> может иметь побочные эффекты, например вывод вставки и удаления, которые обычно выполняются во время <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-277"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="1f735-278">Например объекты, которые используются в следующих операциях можно создать соответствующие выделенные операции в следующем списке:</span><span class="sxs-lookup"><span data-stu-id="1f735-278">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="1f735-279"><xref:System.Data.Linq.EntitySet%601.Add%2A> Чтобы <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-279"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="1f735-280"><xref:System.Data.Linq.EntityRef%601> Присвоение null (возможно из-за <xref:System.Data.Linq.EntitySet%601.Remove%2A> для <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-280"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="1f735-281">Набор не может быть упорядочены в соответствии с ограничениями внешнего ключа.</span><span class="sxs-lookup"><span data-stu-id="1f735-281">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="1f735-282">Генерируемые базой данных значения (например, значения первичного и внешнего ключей, отметки времени и так далее) недоступны.</span><span class="sxs-lookup"><span data-stu-id="1f735-282">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="1f735-283">Такие данные требуют выполнения команд базы данных и возможно, распространения извлеченных сведений (например, внешний ключ из первичного ключа).</span><span class="sxs-lookup"><span data-stu-id="1f735-283">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="1f735-284">Набор измененных объектов вычисляется во время вызова.</span><span class="sxs-lookup"><span data-stu-id="1f735-284">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="1f735-285">Последующие вызовы <xref:System.Data.Linq.DataContext.SubmitChanges%2A> может создать другой набор, если были внесены дополнительные изменения.</span><span class="sxs-lookup"><span data-stu-id="1f735-285">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="1f735-286">Если не были внесены изменения получается следующий результат:</span><span class="sxs-lookup"><span data-stu-id="1f735-286">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="1f735-287">Запрос, сведения о команде SQL которого должны быть извлечены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-287">The query whose SQL command information is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-288">Возвращает сведения о командах SQL, созданных [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-288">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-289">Запрошенный объект данных команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-289">The requested command information object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-290">Этот метод предназначен только для считывания и не влияет на <xref:System.Data.Linq.DataContext> состояние.</span><span class="sxs-lookup"><span data-stu-id="1f735-290">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="1f735-291">Обратите внимание на следующие аспекты:</span><span class="sxs-lookup"><span data-stu-id="1f735-291">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="1f735-292">Аргумент должен быть непустым.</span><span class="sxs-lookup"><span data-stu-id="1f735-292">The argument must be non-null.</span></span> <span data-ttu-id="1f735-293">В противном случае — значение null, аргумент возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-293">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="1f735-294">Обычные исключения преобразования запросов во время [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] выполнение запроса применяются для запроса, который не может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="1f735-294">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="1f735-295">Возвращается только команда первого запроса.</span><span class="sxs-lookup"><span data-stu-id="1f735-295">Only the first query command is returned.</span></span> <span data-ttu-id="1f735-296">В частности, дополнительные команды, которые используются для упреждающую (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) не включаются.</span><span class="sxs-lookup"><span data-stu-id="1f735-296">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="1f735-297"><xref:System.Data.Linq.DataContext> не отслеживает действия пользователя с помощью команды.</span><span class="sxs-lookup"><span data-stu-id="1f735-297"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="1f735-298">Например, результаты из выполнения возвращенной команды, не отслеживаются и не влияют на <xref:System.Data.Linq.DataContext> состояние.</span><span class="sxs-lookup"><span data-stu-id="1f735-298">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1f735-299">Тип возвращаемых объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-299">The type of the objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-300">Возвращает коллекцию объектов определенного типа, где тип определяется параметром <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-300">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-301">Коллекция объектов, определенных параметром <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-301">A collection of objects defined by the <paramref name="type" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-302">Это слабо типизированным версия <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-302">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="1f735-303">Важно иметь слабо типизированной версии, так как он является относительно распространенной практикой для динамического построения запросов.</span><span class="sxs-lookup"><span data-stu-id="1f735-303">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="1f735-304">Будет неудобно, чтобы принудительно применить использовать отражение для вызова правильного универсального метода.</span><span class="sxs-lookup"><span data-stu-id="1f735-304">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="1f735-305">Если отсутствует коллекция для определенного типа, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-305">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">
          <span data-ttu-id="1f735-306">Тип возвращаемых объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-306">The type of the objects to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="1f735-307">Возвращает коллекцию объектов определенного типа, где тип определяется параметром <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-307">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-308">Коллекция объектов, определенных параметром <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-308">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-309">Этот метод является главную точку входа для выполнения запросов.</span><span class="sxs-lookup"><span data-stu-id="1f735-309">This method is the main entry point for querying.</span></span> <span data-ttu-id="1f735-310">Когда со строгой типизацией <xref:System.Data.Linq.DataContext> будет создан, новые созданные свойства инкапсулируют вызовы этого метода.</span><span class="sxs-lookup"><span data-stu-id="1f735-310">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="1f735-311">Например `Customers` создать свойство, возвращающее `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="1f735-311">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="1f735-312">Если отсутствует коллекция для определенного типа, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1f735-312">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-313">Возвращает или задает объект <see cref="T:System.Data.Linq.DataLoadOptions" />, связанный с данным объектом <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-313">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-314">Предварительно выбранные параметры загрузки для связанных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-314">The prefetch load options for related data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-315">Это свойство Возвращает или задает параметры, которые используются для определения поведения предварительную загрузку для элементов с отложенной загрузкой и членства связанных коллекций.</span><span class="sxs-lookup"><span data-stu-id="1f735-315">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-316">Возвращает или задает назначение для записи команды или запроса SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-316">Gets or sets the destination to write the SQL query or command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-317">Объект <see cref="T:System.IO.TextReader" /> для записи команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-317">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-318">Присвойте этому свойству значение `null` отключение ведения журнала команд.</span><span class="sxs-lookup"><span data-stu-id="1f735-318">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f735-319">В следующем примере отображается созданный код SQL в окне консоли перед его отображением результатов запроса.</span><span class="sxs-lookup"><span data-stu-id="1f735-319">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-320">Возвращает <see cref="T:System.Data.Linq.Mapping.MetaModel" />, на котором основано сопоставление.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-320">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-321">Сопоставление между базой данных и объектами домена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-321">The mapping between a database and domain objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-322">Возвращает или задает значение, указывающее, включено ли отслеживание объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-322">Gets or sets a value that indicates whether object tracking is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-323">Значение <see langword="true" />, если отслеживание объекта включено; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-323">
              <see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1f735-324">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-324">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-325">Присвоение этому свойству `false` повысить производительность во время извлечения, поскольку меньшее количество элементов для отслеживания.</span><span class="sxs-lookup"><span data-stu-id="1f735-325">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="1f735-326">Порождено исключение:</span><span class="sxs-lookup"><span data-stu-id="1f735-326">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="1f735-327">Если свойство имеет значение `false` после выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="1f735-327">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="1f735-328">Дополнительные сведения см. в разделе допустимые режимы <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="1f735-328">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="1f735-329">Если свойство имеет значение `false` и <xref:System.Data.Linq.DataContext.SubmitChanges%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="1f735-329">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="1f735-330">Если <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> — `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> игнорируется и обрабатывается `false`.</span><span class="sxs-lookup"><span data-stu-id="1f735-330">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="1f735-331">В этом случае <xref:System.Data.Linq.DataContext> доступно только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f735-331">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="1f735-332">Если <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> — `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> — `false`.</span><span class="sxs-lookup"><span data-stu-id="1f735-332">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="1f735-333">В этом случае <xref:System.Data.Linq.DataContext> позволяет загрузить граф объектов с помощью <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> директивы, но не включает отложенная загрузка.</span><span class="sxs-lookup"><span data-stu-id="1f735-333">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-334">Обновляет состояние объекта, используя данные в базе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-334">Refreshes object state by using data in the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-335">Этот метод полезно использовать после возникновения ошибки оптимистичного параллелизма, чтобы привести элементы в состояние для следующей попытки.</span><span class="sxs-lookup"><span data-stu-id="1f735-335">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="1f735-336">Обновляет состояние примитивов поля и свойства объектов.</span><span class="sxs-lookup"><span data-stu-id="1f735-336">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f735-337">Если объект находится на *много* стороне связи «один ко многим», внешний ключ для объекта будет установлено и указателя на объект на стороне связи присваивается новое значение.</span><span class="sxs-lookup"><span data-stu-id="1f735-337">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="1f735-338">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-338">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="1f735-339">Коллекция сущностей, которые должны быть обновлены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-339">The collection of entities to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-340">Обновляет коллекцию объектов сущности согласно указанному режиму.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-340">Refreshes a collection of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="1f735-341">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-341">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entity">
          <span data-ttu-id="1f735-342">Обновляемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-342">The object to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-343">Обновляет объект сущности согласно указанному режиму.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-343">Refreshes an entity object according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="1f735-344">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-344">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="1f735-345">Обновляемый массив объектов сущности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-345">The array of entity objects to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-346">Обновляет массив объектов сущности согласно указанному режиму.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-346">Refreshes an array of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-347">Вычисляет набор измененных объектов, которые следует вставить, обновить или удалить, и выполняет соответствующие команды для внесения изменений в базу данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-347">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-348">Если для инструкции insert, update или delete, методы переопределения <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполняет эти методы вместо значения по умолчанию [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] команд.</span><span class="sxs-lookup"><span data-stu-id="1f735-348">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="1f735-349"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> Начинает транзакцию и будет откатываться, если исключение возникает во время <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполняется.</span><span class="sxs-lookup"><span data-stu-id="1f735-349"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="1f735-350">Однако это не откатить изменения в памяти, или контролируется системой <xref:System.Data.Linq.DataContext>; эти изменения будет необходимо выполнить откат вручную.</span><span class="sxs-lookup"><span data-stu-id="1f735-350">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="1f735-351">Можно начать с нового экземпляра <xref:System.Data.Linq.DataContext> Если изменения в памяти, будут отменены.</span><span class="sxs-lookup"><span data-stu-id="1f735-351">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f735-352">Вычисляет набор измененных объектов, которые следует вставить, обновить или удалить, и выполняет соответствующие команды для внесения изменений в базу данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-352">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-353">Если для инструкции insert, update или delete, методы переопределения <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполняет эти методы вместо значения по умолчанию [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] команд.</span><span class="sxs-lookup"><span data-stu-id="1f735-353">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode">
          <span data-ttu-id="1f735-354">Действие, выполняемое в случае сбоя отправки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-354">The action to be taken if the submission fails.</span>
          </span>
          <span data-ttu-id="1f735-355">Ниже приведены допустимые аргументы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-355">Valid arguments are as follows:</span>
          </span>
          <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" />
          <see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" />
        </param>
        <summary>
          <span data-ttu-id="1f735-356">Отправляет изменения, которые были внесены в извлеченные объекты для основной базы данных, и указывает действие, которое следует выполнить, если не удастся осуществить передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-356">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-357">Режим сбоя по умолчанию — <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="1f735-357">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-358">Возвращает или задает локальную транзакцию для использования [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] для доступа к базе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-358">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f735-359">Объект транзакции, который используется объектом <see cref="T:System.Data.Linq.DataContext" /> при выполнении запросов и команд.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-359">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-360">Основной сценарий для этого свойства — это взаимодействие с реляционными [!INCLUDE[vstecado](~/includes/vstecado-md.md)] кода.</span><span class="sxs-lookup"><span data-stu-id="1f735-360">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="1f735-361">Например, это свойство при написании собственного `Create` / `Update` / `Delete` способа установить `Transaction` свойство ADO `Command` объекта.</span><span class="sxs-lookup"><span data-stu-id="1f735-361">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="1f735-362">Обратите внимание на следующее условия:</span><span class="sxs-lookup"><span data-stu-id="1f735-362">Note the following:</span></span>  
  
-   <span data-ttu-id="1f735-363">Если это свойство не было задано явно, метод считывания возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="1f735-363">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="1f735-364">Если код выполняется в <xref:System.Transactions.Transaction> контекста, задание этого свойства приводит к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="1f735-364">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="1f735-365">Если это свойство имеет набор и новый <xref:System.Transactions.Transaction> будет открыт, создается исключение при выполнении запроса или обновления.</span><span class="sxs-lookup"><span data-stu-id="1f735-365">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f735-366">Преобразовывает существующий <see cref="T:System.Data.IDataReader" /> в объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-366">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f735-367">Каждая строка в <xref:System.Data.IDataReader> преобразуется в объект <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="1f735-367">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="1f735-368">Описание: Этот метод используется для преобразования существующего <xref:System.Data.Common.DbDataReader> к объектам.</span><span class="sxs-lookup"><span data-stu-id="1f735-368">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="1f735-369">Каждая строка в <xref:System.Data.Common.DbDataReader> преобразуется в объект <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="1f735-369">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="1f735-370">**Универсальные параметры:**</span><span class="sxs-lookup"><span data-stu-id="1f735-370">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="1f735-371">`T`: Просмотреть <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-371">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="1f735-372">**Параметры:**</span><span class="sxs-lookup"><span data-stu-id="1f735-372">**Parameters:**</span></span>  
  
 <span data-ttu-id="1f735-373">`Query`: См. в описании команды в разделе <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-373">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="1f735-374">`Parameters`: См. в описании параметров в разделе <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f735-374">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="1f735-375">**Тип возвращаемого значения:**</span><span class="sxs-lookup"><span data-stu-id="1f735-375">**Return type:**</span></span>  
  
 <span data-ttu-id="1f735-376"><xref:System.Collections.Generic.IEnumerable%601>: Коллекция объектов, возвращаемых преобразованием.</span><span class="sxs-lookup"><span data-stu-id="1f735-376"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="1f735-377">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-377">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-378">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-378">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-379">Список объектов, возвращаемых преобразованием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-379">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="1f735-380">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-380">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="1f735-381">Алгоритм сопоставления столбцов в результате с полями и свойствами в объекте работает таким образом:</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-381">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span>
          </span>
          <span data-ttu-id="1f735-382">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-382">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="1f735-383">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-383">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="1f735-384">Сначала в сравнении выполняется поиск совпадения с учетом регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-384">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="1f735-385">Если это совпадение не найдено, следующий поиск выполняется для совпадений без учета регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-385">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="1f735-386">Запрос должен возвращать все отслеженные поля и свойства объекта (кроме тех, загрузка которых отложена), если выполняются все следующие условия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-386">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span>
          </span>
          <span data-ttu-id="1f735-387">
            <c>T</c> является сущностью, явно отслеживаемой <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-387">
              <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="1f735-388">Свойство <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-388">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="1f735-389">Сущность имеет первичный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-389">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="1f735-390">В противном случае возникает исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-390">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="1f735-391">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-391">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-392">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-392">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-393">Список объектов, возвращаемых преобразованием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-393">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="1f735-394">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-394">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="1f735-395">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-395">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f735-396">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-396">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f735-397">Коллекция объектов, возвращаемых преобразованием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f735-397">A collection of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>