<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="89c88-101">Представляет компонент службы среды выполнения метаданных ADO.NET, обеспечивающий поддержку извлечения метаданных из различных источников.</span><span class="sxs-lookup"><span data-stu-id="89c88-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89c88-102"><xref:System.Data.Metadata.Edm.MetadataWorkspace> Класс предоставляет центра служебный компонент времени выполнения, можно использовать для взаимодействия с метаданными концептуальной модели в контексте конкретного приложения.</span><span class="sxs-lookup"><span data-stu-id="89c88-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span> <span data-ttu-id="89c88-103">Дополнительные сведения см. в разделе [рабочая область метаданных](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span><span class="sxs-lookup"><span data-stu-id="89c88-103">For more information, see [Metadata Workspace](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-104">Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89c88-105">Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-105">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="89c88-106">Пути к метаданным рабочей области.</span><span class="sxs-lookup"><span data-stu-id="89c88-106">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="89c88-107">Имена сборок, используемых при создании рабочего пространства.</span><span class="sxs-lookup"><span data-stu-id="89c88-107">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="89c88-108">Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> с использованием указанных путей и сборок.</span><span class="sxs-lookup"><span data-stu-id="89c88-108">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89c88-109">Удаляет все записи из кэша метаданных.</span><span class="sxs-lookup"><span data-stu-id="89c88-109">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89c88-110">Создает <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" />, настроенный для использования пространства данных <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-110">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="89c88-111">Созданный объект синтаксического анализатора.</span><span class="sxs-lookup"><span data-stu-id="89c88-111">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="89c88-112"><see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющий запрос.</span><span class="sxs-lookup"><span data-stu-id="89c88-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="89c88-113">Создает новое дерево команд <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />, привязанное к данной рабочей области метаданных и основанное на указанном выражении запроса.</span><span class="sxs-lookup"><span data-stu-id="89c88-113">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="89c88-114">Новый <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> с заданным выражением в качестве свойства <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-114">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" />
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="query" />
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-115">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, который совпадает с типом, представляемым параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-115">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="89c88-116">Объект <see cref="T:System.Data.Metadata.Edm.EnumlType" />, представляющий тип в пространстве объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-116">A <see cref="T:System.Data.Metadata.Edm.EnumlType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="89c88-117">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, который совпадает с типом, представляемым параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-117">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="89c88-118">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="89c88-119">Если нет соответствующих типов, этот метод возвращает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="89c88-119">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="89c88-120">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип в пространстве объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="89c88-121">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, который совпадает с типом, представляемым параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-121">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="89c88-122">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="89c88-123">Если нет соответствующих типов, этот метод возвращает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="89c88-123">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-124">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-124">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-125">Имя контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-125">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-126">Концептуальная модель, в которой производится поиск контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-126">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-127">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-127">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-128">Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-128">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-129">Имя контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-129">The name of the entity container.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-130"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-130"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-131">Концептуальная модель, в которой производится поиск контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-131">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-132">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-132">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-133">Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-133">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-134">Возвращает все случаи перегрузки функций с использованием указанного имени, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-134">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-135">Имя функции.</span><span class="sxs-lookup"><span data-stu-id="89c88-135">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-136">Пространство имен функции.</span><span class="sxs-lookup"><span data-stu-id="89c88-136">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-137">Концептуальная модель, в которой производится поиск функций.</span><span class="sxs-lookup"><span data-stu-id="89c88-137">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="89c88-138">Возвращает все случаи перегрузки функций с использованием указанного имени, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-138">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-139">Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем из указанного пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-139">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-140">Имя функции.</span><span class="sxs-lookup"><span data-stu-id="89c88-140">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-141">Пространство имен функции.</span><span class="sxs-lookup"><span data-stu-id="89c88-141">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-142">Концептуальная модель, в которой производится поиск функций.</span><span class="sxs-lookup"><span data-stu-id="89c88-142">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-143"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-143"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="89c88-144">Возвращает все случаи перегрузки функций с использованием указанного имени, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-144">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-145">Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем из указанного пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-145">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-146">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-146">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89c88-147">Тип, возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="89c88-147">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="89c88-148">Идентификатор элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-148">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-149">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-149">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-150">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-150">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-151">Элемент, соответствующий указанному идентификатору в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-151">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89c88-152">Тип, возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="89c88-152">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="89c88-153">Идентификатор элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-153">The identity of the item.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-154"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-154"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-155">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-155">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-156">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-156">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-157">Элемент, соответствующий указанному идентификатору в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-157">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="89c88-158"><see cref="T:System.Data.Metadata.Edm.DataSpace" />, из которого получаются элементы.</span><span class="sxs-lookup"><span data-stu-id="89c88-158">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="89c88-159">Получает элементы <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-159">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="89c88-160">Элементы <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-160">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="89c88-161">Концептуальная модель, для которой необходим список элементов.</span><span class="sxs-lookup"><span data-stu-id="89c88-161">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="89c88-162">Возвращает все элементы в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-162">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-163">Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все элементы в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-163">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89c88-164">Тип, возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="89c88-164">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="89c88-165">Концептуальная модель, для которой необходим список элементов.</span><span class="sxs-lookup"><span data-stu-id="89c88-165">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="89c88-166">Возвращает все элементы в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-166">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-167">Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все элементы в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-167">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-168">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип объектного пространства, который совпадает с типом, представляемым параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-168">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="89c88-169">Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="89c88-170">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип объектного пространства, который совпадает с типом, представляемым параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-170">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="89c88-171">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="89c88-172">Если нет соответствующих типов, этот метод возвращает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="89c88-172">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="89c88-173">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="89c88-174">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип объектного пространства, который совпадает с типом, представляемым параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-174">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="89c88-175">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="89c88-176">Если нет соответствующих типов, этот метод возвращает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="89c88-176">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="89c88-177">Модель данных, для которой необходим список типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="89c88-177">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="89c88-178">Возвращает список типов-примитивов в указанной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-178">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-179">Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все типы-примитивы в заданной модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-179">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="89c88-180"><see cref="T:System.Data.Metadata.Edm.EntitySet" /> принадлежащий C-Space.</span><span class="sxs-lookup"><span data-stu-id="89c88-180">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="89c88-181">Объект <see cref="T:System.Data.Metadata.Edm.EntityType" />, участвующий в заданном <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-181">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported">
          <span data-ttu-id="89c88-182"><see langword="true" />, если сущности могут быть частично обновлены; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-182"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="89c88-183">Возвращает члены данного <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" />, для которого требуются исходные значения при изменении сущности.</span><span class="sxs-lookup"><span data-stu-id="89c88-183">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="89c88-184"><see cref="T:System.Data.Metadata.Edm.EdmMember" />, для которых требуется исходное значение.</span><span class="sxs-lookup"><span data-stu-id="89c88-184">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="89c88-185">Набор сущностей, из которого извлекаются исходные значения.</span><span class="sxs-lookup"><span data-stu-id="89c88-185">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="89c88-186">Тип сущности, из которого извлекаются исходные значения.</span><span class="sxs-lookup"><span data-stu-id="89c88-186">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="89c88-187">Возвращает элементы исходных значений из набора сущностей и типа сущности.</span><span class="sxs-lookup"><span data-stu-id="89c88-187">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="89c88-188">Элементы исходных значений из набора сущностей и типа сущности.</span><span class="sxs-lookup"><span data-stu-id="89c88-188">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-189">Возвращает метаданные типа, описанные при помощи объекта <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданного имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-189">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-190">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-190">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-191">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-191">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-192">Концептуальная модель, в которой производится поиск типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-192">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-193">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-193">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-194">Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий тип, который соответствует заданному имени типа и имени пространства имен в этой модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-194">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="89c88-195">Если нет соответствующих типов, этот метод возвращает значение NULL.</span><span class="sxs-lookup"><span data-stu-id="89c88-195">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-196">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-196">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-197">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-197">The namespace of the type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-198"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-198"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-199">Концептуальная модель, в которой производится поиск типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-199">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="89c88-200">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-200">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="89c88-201">Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-201">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-202">Загружает метаданные из сборки.</span><span class="sxs-lookup"><span data-stu-id="89c88-202">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="89c88-203">Сборка, из которой будут загружаться метаданные.</span><span class="sxs-lookup"><span data-stu-id="89c88-203">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="89c88-204">Загружает метаданные из заданной сборки.</span><span class="sxs-lookup"><span data-stu-id="89c88-204">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="89c88-205">Сборка, из которой будут загружаться метаданные.</span><span class="sxs-lookup"><span data-stu-id="89c88-205">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="89c88-206">Делегат для ведения журнала сообщений о загрузке.</span><span class="sxs-lookup"><span data-stu-id="89c88-206">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="89c88-207">Загружает метаданные из заданной сборки.</span><span class="sxs-lookup"><span data-stu-id="89c88-207">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89c88-208">Представляет собой наиболее новую версию модели EDM, поддерживаемую платформой времени выполнения Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="89c88-208">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="89c88-209">Коллекция выходных параметров, которую нужно заполнить.</span><span class="sxs-lookup"><span data-stu-id="89c88-209">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="89c88-210">Регистрирует коллекцию элементов в каждой связанной с ней модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-210">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-211">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" /> или <see cref="T:System.Data.Metadata.Edm.EnumType" /> с помощью выходного параметра <paramref name="edmSpaceType" />, представляющего <see cref="T:System.Data.Metadata.Edm.EdmType" />, который соответствует типу, предоставленному параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-211">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="89c88-212">Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, представляющий тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-212">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="89c88-213">При возврате этого метода он содержит объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-213">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="89c88-214">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-214">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-215">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EnumType" /> посредством параметра out <paramref name="edmSpaceType" />, представляющий тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, который совпадает с типом, представляемым параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-215">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-216"><see langword="true" /> в случае успеха, <see langword="false" /> в случае неудачи.</span><span class="sxs-lookup"><span data-stu-id="89c88-216"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="89c88-217">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-217">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="89c88-218">При возврате этого метода он содержит объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-218">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="89c88-219">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-219">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-220">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" /> посредством параметра out <paramref name="edmSpaceType" />, представляющий тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, который совпадает с типом, представляемым параметром <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-220">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-221"><see langword="true" />, если существует тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-221"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-222">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-222">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-223">Имя контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-223">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-224">Концептуальная модель, в которой производится поиск контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-224">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="89c88-225">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-225">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="89c88-226">Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он возвращает первый контейнер сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-226">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="89c88-227">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-227">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-228">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-228">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-229"><see langword="true" />, если существует контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-229"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-230">Имя контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-230">The name of the entity container.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-231"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-231"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-232">Концептуальная модель, в которой производится поиск контейнера сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-232">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="89c88-233">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-233">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="89c88-234">Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он возвращает первый контейнер сущностей.</span><span class="sxs-lookup"><span data-stu-id="89c88-234">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="89c88-235">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-235">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-236">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-236">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-237"><see langword="true" />, если существует контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-237"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-238">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-238">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89c88-239">Тип, возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="89c88-239">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="89c88-240">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-240">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="89c88-241">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-241">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="89c88-242">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-242">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span></span> <span data-ttu-id="89c88-243">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-243">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-244">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-244">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-245"><see langword="true" />, если существует элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-245"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89c88-246">Тип, возвращаемый методом.</span><span class="sxs-lookup"><span data-stu-id="89c88-246">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="89c88-247">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-247">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-248"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-248"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-249">Концептуальная модель, в которой производится поиск элемента.</span><span class="sxs-lookup"><span data-stu-id="89c88-249">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="89c88-250">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-250">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span></span> <span data-ttu-id="89c88-251">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-251">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-252">Возвращает элемент с использованием заданного идентификатора и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-252">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-253"><see langword="true" />, если существует элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-253"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="89c88-254"><see cref="T:System.Data.Metadata.Edm.DataSpace" />, из которого производится попытка извлечения <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-254">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="89c88-255">При возврате этого метода содержит коллекцию элементов.</span><span class="sxs-lookup"><span data-stu-id="89c88-255">When this method returns, contains the item collection.</span></span> <span data-ttu-id="89c88-256">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-256">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-257">Проверяет извлечение <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-257">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-258"><see langword="true" />, если извлечение проведено успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-258"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-259">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" /> или <see cref="T:System.Data.Metadata.Edm.EnumType" /> с помощью выходного параметра <paramref name="objectSpaceType" />, представляющего тип, который соответствует <see cref="T:System.Data.Metadata.Edm.EdmType" />, предоставленному параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-259">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="89c88-260">Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-260">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="89c88-261">Когда выполнение этого метода завершается, содержит объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-261">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="89c88-262">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-262">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-263">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EnumType" /> посредством параметра out <paramref name="objectSpaceType" />, представляющий тип, который совпадает с типом <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляемым параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-263">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-264"><see langword="true" />, если существует тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-264"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="89c88-265">Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-265">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="89c88-266">Когда выполнение этого метода завершается, содержит объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип пространства объектов.</span><span class="sxs-lookup"><span data-stu-id="89c88-266">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="89c88-267">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-267">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-268">Возвращает объект <see cref="T:System.Data.Metadata.Edm.StructuralType" /> посредством параметра out <paramref name="objectSpaceType" />, представляющий тип, который совпадает с типом <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляемым параметром <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-268">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-269"><see langword="true" />, если существует тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-269"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89c88-270">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-270">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-271">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-271">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-272">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-272">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-273">Концептуальная модель, в которой производится поиск типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-273">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="89c88-274">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-274">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="89c88-275">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-275">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-276">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-276">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-277"><see langword="true" />, если существует тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-277"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="89c88-278">Имя типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-278">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="89c88-279">Пространство имен типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-279">The namespace of the type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="89c88-280"><see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-280"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="89c88-281">Концептуальная модель, в которой производится поиск типа.</span><span class="sxs-lookup"><span data-stu-id="89c88-281">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="89c88-282">Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-282">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="89c88-283">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="89c88-283">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89c88-284">Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.</span><span class="sxs-lookup"><span data-stu-id="89c88-284">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns>
          <span data-ttu-id="89c88-285"><see langword="true" />, если существует тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89c88-285"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>