<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04df848b1203f1b60ad08ee6bb0b30d5b8871b36" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30387188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="18a05-101">Базовый класс для сложных типов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="18a05-101">Base class for complex types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a05-102"><xref:System.Data.Objects.DataClasses.ComplexObject> Реализует базовую функциональность для сложных типов.</span><span class="sxs-lookup"><span data-stu-id="18a05-102"><xref:System.Data.Objects.DataClasses.ComplexObject> implements the basic functionality for complex types.</span></span> <span data-ttu-id="18a05-103">Дополнительные сведения см. в разделе [сложные объекты типа](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span><span class="sxs-lookup"><span data-stu-id="18a05-103">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
 <span data-ttu-id="18a05-104">При реализации пользовательских классов данных с помощью концептуальной модели, рекомендуется наследование от классов данных, представляющих сложные типы <xref:System.Data.Objects.DataClasses.ComplexObject>.</span><span class="sxs-lookup"><span data-stu-id="18a05-104">When implementing custom data classes with a conceptual model, we recommend that your data classes that represent complex types inherit from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span> <span data-ttu-id="18a05-105">Дополнительные сведения см. в разделе [Настройка объектов](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span><span class="sxs-lookup"><span data-stu-id="18a05-105">For more information, see [Customizing Objects](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span></span>  
  
 <span data-ttu-id="18a05-106">Сложный тип может быть свойством типа сущности или другого сложного типа.</span><span class="sxs-lookup"><span data-stu-id="18a05-106">A complex type can be a property of an entity type or of another complex type.</span></span>  
  
 <span data-ttu-id="18a05-107">Возврат сложных типов осуществляется с помощью нескалярных свойств типов сущностей.</span><span class="sxs-lookup"><span data-stu-id="18a05-107">Complex types are returned by non-scalar properties of entity types.</span></span> <span data-ttu-id="18a05-108">Это позволяет организовывать скалярные свойства в сущностях.</span><span class="sxs-lookup"><span data-stu-id="18a05-108">This enables scalar properties to be organized within entities.</span></span> <span data-ttu-id="18a05-109">Подобно сущностям, сложные типы состоят из скалярных свойств или свойств других сложных типов.</span><span class="sxs-lookup"><span data-stu-id="18a05-109">Like entities, complex types consist of scalar properties or other complex type properties.</span></span> <span data-ttu-id="18a05-110">Сложный тип не может использоваться без связанного типа сущности.</span><span class="sxs-lookup"><span data-stu-id="18a05-110">A complex type cannot be used without an associated entity type.</span></span> <span data-ttu-id="18a05-111">Поскольку сложные типы не имеют ключей, объекты таких типов не могут управляться без связанного типа сущности.</span><span class="sxs-lookup"><span data-stu-id="18a05-111">Because complex types do not have keys, complex type objects cannot be managed without an associated entity type.</span></span> <span data-ttu-id="18a05-112">Дополнительные сведения см. в разделе [сложные объекты типа](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span><span class="sxs-lookup"><span data-stu-id="18a05-112">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18a05-113">В следующем примере класс пользовательские данные `OrderInfo` наследует от <xref:System.Data.Objects.DataClasses.ComplexObject> и сопоставляется `OrderInfo` сложный тип, определенный в концептуальной модели.</span><span class="sxs-lookup"><span data-stu-id="18a05-113">In the following example, the custom data class `OrderInfo` inherits from <xref:System.Data.Objects.DataClasses.ComplexObject> and is mapped to the `OrderInfo` complex type defined in the conceptual model.</span></span>  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18a05-114">Создает экземпляр класса <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-114">Creates an instance of <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="18a05-115">Имя измененного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-115">The name of the changed property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18a05-116">Уведомляет объект отслеживания изменений об изменении свойства сложного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-116">Notifies the change tracker that a property of a complex object has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a05-117">При формировании сложного типа средствами модели EDM, <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> метод вызывается после изменения свойства для фиксации кэшированное значение в <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> как исходное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="18a05-117">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> method is called after a property change to commit the cached value in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> as the original value of the property.</span></span>  
  
 <span data-ttu-id="18a05-118">Этот метод вызывает метод <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> в объекте отслеживания изменений.</span><span class="sxs-lookup"><span data-stu-id="18a05-118">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="18a05-119">Во время отслеживания изменений, вносимых в свойство пользовательского сложного объекта, необходимо вызывать метод <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="18a05-119">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>.</span></span> <span data-ttu-id="18a05-120">Выполняйте это, если сложный объект наследуется от объекта <xref:System.Data.Objects.DataClasses.ComplexObject>.</span><span class="sxs-lookup"><span data-stu-id="18a05-120">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18a05-121">Свойство <paramref name="property" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-121">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="18a05-122">Имя изменяемого свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-122">The name of the changing property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18a05-123">Уведомляет объект отслеживания изменений об ожидающем изменении свойства сложного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-123">Notifies the change tracker that a property change is pending on a complex object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18a05-124">При формировании сложного типа средствами модели EDM, <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> метод вызывается перед изменением типа свойства для кэширования текущее значение свойства в <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> , чтобы это значение может использоваться в качестве исходного значения для свойства.</span><span class="sxs-lookup"><span data-stu-id="18a05-124">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> method is called before a property change to cache the current value of the property in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> so that this value can be used as the original value for the property.</span></span>  
  
 <span data-ttu-id="18a05-125">Этот метод вызывает метод <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> в объекте отслеживания изменений.</span><span class="sxs-lookup"><span data-stu-id="18a05-125">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="18a05-126">Во время отслеживания изменений, вносимых в свойство пользовательского сложного объекта, необходимо вызывать метод <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>.</span><span class="sxs-lookup"><span data-stu-id="18a05-126">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>.</span></span> <span data-ttu-id="18a05-127">Выполняйте это, если сложный объект наследуется от объекта <xref:System.Data.Objects.DataClasses.ComplexObject>.</span><span class="sxs-lookup"><span data-stu-id="18a05-127">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="18a05-128">Свойство <paramref name="property" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="18a05-128">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>