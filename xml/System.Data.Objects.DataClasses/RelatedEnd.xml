<Type Name="RelatedEnd" FullName="System.Data.Objects.DataClasses.RelatedEnd">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1df1847f51618930d9534de82fb5f25a8bddbf0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390028" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RelatedEnd extends System.Object implements class System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelatedEnd&#xA;Implements IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelatedEnd abstract : System::Data::Objects::DataClasses::IRelatedEnd" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IRelatedEnd</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет базовый класс, реализующий общие функции для связанного окончания.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Data.Objects.DataClasses.RelatedEnd> является базовым для классов <xref:System.Data.Objects.DataClasses.EntityCollection%601> и <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 Класс <xref:System.Data.Objects.DataClasses.RelatedEnd> реализует функции, которые совместно используются классами <xref:System.Data.Objects.DataClasses.EntityCollection%601> и <xref:System.Data.Objects.DataClasses.EntityReference%601>.  
  
 Этот класс не предназначен для непосредственного использования в коде.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociationChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler AssociationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssociationChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ AssociationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если изменяется связанный элемент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged> создается следующими методами.  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=nameWithType>  
  
 События могут блокироваться во время массовых операций, таких как `Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> и <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает интерфейс <see cref="T:System.Collections.IEnumerator" />, проходящий по коллекции связанных объектов.</summary>
        <returns>Объект <see cref="T:System.Collections.IEnumerator" />, выполняющий итерацию коллекции связанных объектов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, все ли связанные объекты загружены.</summary>
        <value>
          Значение <see langword="true" />, если связанное окончание содержит все связанные объекты из базы данных; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> метода задает <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> флаг `true`.  
  
 Вызов <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> метод <xref:System.Data.Objects.DataClasses.EntityCollection%601> задает <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> для `false`.  
  
 Также можно загрузить объект <xref:System.Data.Objects.DataClasses.EntityCollection%601> или <xref:System.Data.Objects.DataClasses.EntityReference%601>, если связанный элемент включен в путь запроса. Дополнительные сведения о диапазоне см. в разделе [загрузка связанных объектов](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).  
  
 `Load` Метод <xref:System.Data.Objects.DataClasses.EntityCollection%601> и <xref:System.Data.Objects.DataClasses.EntityReference%601> загружает связанные объекты из источника данных ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> — `true`.  
  
 При отсоединении объекта <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> флаг изменяется с `false` для `true`.  
  
 Чтобы гарантировать, что связанный элемент полной загрузки перед выполнением операции обработки, следует проверить ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> — `false`. Если <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> — `false`, следует вызвать метод <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>В случае переопределения в производном классе загружает связанные объекты в локальную коллекцию или ссылку.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>В случае переопределения в производном классе загружает связанный объект или объекты в связанный элемент с параметром слияния по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию параметр слияния равен <xref:System.Data.Objects.MergeOption.AppendOnly> для отслеживаемых объектов или <xref:System.Data.Objects.MergeOption.NoTracking>, если объект не отслеживается в <xref:System.Data.Objects.ObjectStateManager>. Позволяет задать параметры слияния, отличный от <xref:System.Data.Objects.MergeOption.AppendOnly>, вызовите `Load` метод <xref:System.Data.Objects.DataClasses.EntityCollection%601> или <xref:System.Data.Objects.DataClasses.EntityReference%601> , который принимает определенный <xref:System.Data.Objects.MergeOption> параметра.  
  
 Вызов <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> метода задает <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> флаг `true`.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> Метод загружает связанные объекты из источника данных ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> — `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Если исходный объект был получен с помощью запроса <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, а параметр <see cref="T:System.Data.Objects.MergeOption" /> отличен от <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> или связанные объекты уже загружены.  
  
 - или -  
  
 Если исходный объект не присоединен к <see cref="T:System.Data.Objects.ObjectContext" />.  
  
 - или -  
  
 Если исходный объект отслеживается, но находится в состоянии <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Deleted" />, либо параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />, имеет значение <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для слияния объектов в существующую коллекцию <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</param>
        <summary>Этот метод, переопределенный в производном классе, загружает объекты из связанного элемента с заданным параметром слияния.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В классах <xref:System.Data.Objects.DataClasses.EntityCollection%601> и <xref:System.Data.Objects.DataClasses.EntityReference%601> этот метод переопределяется, чтобы загружать связанные объекты. `Load` вызывается для явной загрузки связанных объектов из связанного элемента, доступного с помощью свойства навигации. Дополнительные сведения см. в разделе [загрузка связанных объектов](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).  
  
 Вызов <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> метода задает <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> флаг `true`.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> Метод загружает связанные объекты из источника данных ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> — `true`.  
  
 По умолчанию параметр слияния равен <xref:System.Data.Objects.MergeOption.AppendOnly> для отслеживаемых объектов или <xref:System.Data.Objects.MergeOption.NoTracking>, если объект не отслеживается в <xref:System.Data.Objects.ObjectStateManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Если исходный объект был получен с помощью запроса <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, а параметр <see cref="T:System.Data.Objects.MergeOption" /> отличен от <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> или связанные объекты уже загружены.  
  
 - или -  
  
 Если исходный объект не присоединен к <see cref="T:System.Data.Objects.ObjectContext" />.  
  
 - или -  
  
 Если исходный объект отслеживается, но находится в состоянии <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Deleted" />, либо параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />, имеет значение <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Сериализованный поток.</param>
        <summary>Используется внутренне для десериализации объектов сущности вместе с экземплярами <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя связи, в которой участвует этот связанный элемент.</summary>
        <value>Имя связи, в которой участвует этот элемент <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" />. В имени связи не указано пространство имен.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на метаданные для связанного окончания.</summary>
        <value>Объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />, который содержит метаданные для окончания отношения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя роли в исходном элементе связи.</summary>
        <value>Объект типа <see cref="T:System.String" />, содержащий имя роли.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя роли задано `Role` атрибут `End` элемента ассоциации, которая определяет отношение в концептуальной модели. Дополнительные сведения см. в разделе [Элемент Association (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), которая была создана мастером [мастер моделей EDM](http://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  
  
 В следующем примере добавляются новые `SalesOrderHeader` сущности для `Contact` сущности. Затем он получает все связанные элементы из `Contact` сущности и отображает имя связи, имя исходной роли и имя целевой роли для каждого связанного элемента.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет объект в связанный элемент.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As IEntityWithRelationships) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Объект для добавления в коллекцию. В этом объекте должен реализовываться интерфейс <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</param>
        <summary>Добавляет объект в связанный элемент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.Objects.DataClasses.RelatedEnd> приведен к типу интерфейса <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Add%2A> Метод сохраняется только для совместимости с предыдущими версиями платформы .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As Object) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Экземпляр сущности для добавления в связанное окончание.</param>
        <summary>Добавляет объект в связанный элемент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если исходный объект сущности присоединен к кэшу, то все подключенные элементы добавляются в кэш объектов и их соответствующие связи также добавляются <xref:System.Data.Objects.ObjectStateManager>. <xref:System.Data.Objects.DataClasses.RelatedEnd> Связи также является фиксированным.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Присоединяет объект к связанному элементу.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As IEntityWithRelationships) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Присоединяемый объект.</param>
        <summary>Присоединяет объект к связанному элементу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.Objects.DataClasses.RelatedEnd> приведен к типу интерфейса <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Attach%2A> Метод сохраняется только для совместимости с предыдущими версиями платформы .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As Object) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Экземпляр сущности для присоединения к связанному окончанию.</param>
        <summary>Присоединяет объект к связанному окончанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если связанный элемент уже имеет некоторые сущности, присоединенные к ней, будут объединены существующих сущностей с новым объектом. Предполагается, что новая сущность не имеет полный набор связанных сущностей.  
  
 Исходный объект сущности и всех объектов сущностей, переданному должны находиться в <xref:System.Data.EntityState.Unchanged> или <xref:System.Data.EntityState.Modified> состояния. Удаленные элементы допускаются только в том случае, когда диспетчер состояний уже отслеживает экземпляр связи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerable System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Function CreateSourceQuery () As IEnumerable Implements IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerable ^ System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() = System::Data::Objects::DataClasses::IRelatedEnd::CreateSourceQuery;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие к связанному элементу.</summary>
        <returns>Интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие связанному элементу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.Objects.DataClasses.RelatedEnd> приведен к типу интерфейса <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 В классах <xref:System.Data.Objects.DataClasses.EntityCollection%601> и <xref:System.Data.Objects.DataClasses.EntityReference%601> переопределяется свойство <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A>, чтобы возвращать запрос <xref:System.Data.Objects.ObjectQuery%601>. В результате выполнения этого запроса возвращается тот же набор объектов, который принадлежит к связанному элементу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет объект из связанного окончания.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As IEntityWithRelationships) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">Экземпляр сущности для удаления из коллекции.</param>
        <summary>Удаляет объект из связанного элемента коллекции.</summary>
        <returns>Значение, указывающее, удален ли объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.Objects.DataClasses.RelatedEnd> приведен к типу интерфейса <xref:System.Data.Objects.DataClasses.IRelatedEnd>.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Remove%2A> Метод сохраняется только для совместимости с предыдущими версиями платформы .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As Object) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Экземпляр сущности для удаления из связанного окончания.</param>
        <summary>Удаляет объект из связанного окончания, если объект является его частью.</summary>
        <returns>
          Значение <see langword="true" />, если сущность успешно удалена; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если исходный объект сущности присоединен к кэшу, связь помечена для удаления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя роли в целевом элементе связи.</summary>
        <value>Объект типа <see cref="T:System.String" />, содержащий имя роли.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя роли задано `Role` атрибут `End` элемента ассоциации, которая определяет отношение в концептуальной модели. Дополнительные сведения см. в разделе [Элемент Association (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые `SalesOrderHeader` сущности для `Contact` сущности. Затем он получает все связанные элементы из `Contact` сущности и отображает имя связи, имя исходной роли и имя целевой роли для каждого связанного элемента.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
  </Members>
</Type>