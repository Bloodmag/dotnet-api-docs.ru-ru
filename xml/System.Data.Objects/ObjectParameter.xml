<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="287c1e3a614433c65f8c80a03d4bbedb82fc46b7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39952872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <TypeSignature Language="F#" Value="type ObjectParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет параметр запроса, передаваемый запросу объектов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Представляет параметр запроса, передающийся запросу <xref:System.Data.Objects.ObjectQuery%601> или методу построителя запросов. Дополнительные сведения см. в разделе [методы построителя запросов](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Объектный параметр состоит из имени, типа и значения.  
  
 Этот класс не наследуется. Дополнительные сведения см. в разделе <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые параметры в коллекцию. Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и отображает имя, тип и значение каждого параметра в коллекции.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * obj -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Имя параметра. Это имя не должно содержать маркер параметра «@», используемый для инструкций [!INCLUDE[esql](~/includes/esql-md.md)], а только фактическое имя. Выражение должно начинаться с буквы. Все последующие символы должны быть буквами, цифрами или символами подчеркивания (_).</param>
        <param name="value">Исходное значение (и по существу тип) параметра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" /> с помощью указанного имени и значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает параметр из заданного имени и значения. Тип параметра выводится из значения.  
  
 При добавлении к <xref:System.Data.Objects.ObjectParameterCollection> имя параметра нельзя изменить. Значение параметра можно изменить с помощью свойства <xref:System.Data.Objects.ObjectParameter.Value%2A>. После компиляции запроса значение нельзя изменить. Дополнительные сведения см. в разделе [методы построителя запросов](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые параметры в коллекцию. Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и выводит имя, тип и значение каждого параметра в коллекции.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение любого из аргументов равно null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Если аргумент имени имеет недопустимое значение. Имена параметров должны начинаться с буквы и могут состоять из букв, цифр и символов подчеркивания.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * Type -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">Имя параметра. Это имя не должно содержать токен параметра "@", используемый в операторах [!INCLUDE[esql](~/includes/esql-md.md)], а только фактическое имя. Первый символ выражения должен быть буквой. Все последующие символы должны быть буквами, цифрами или символами подчеркивания (_).</param>
        <param name="type">CLR-тип параметра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" /> с заданными именем и типом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Во время создания экземпляра значение параметра нельзя изменить. Значение параметра можно задать или изменить с помощью свойства <xref:System.Data.Objects.ObjectParameter.Value%2A>. После компиляции запроса значение нельзя изменить. Дополнительные сведения см. в разделе [методы построителя запросов](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение любого из аргументов равно null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Если аргумент имени имеет недопустимое значение. Имена параметров должны начинаться с буквы и могут состоять из букв, цифр и символов подчеркивания.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Objects.ObjectParameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя параметра, которое может быть задано только через конструктор.</summary>
        <value>Имя параметра, которое можно задать только с помощью конструктора.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Во время создания экземпляра значение параметра нельзя изменить. Значение параметра можно задать или изменить с помощью свойства <xref:System.Data.Objects.ObjectParameter.Value%2A>. После компиляции запроса значение нельзя изменить. Дополнительные сведения см. в разделе [методы построителя запросов](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые параметры в коллекцию. Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и отображает имя, тип и значение каждого параметра в коллекции.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type" Usage="System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип параметра.</summary>
        <value>Сигнатура <see cref="T:System.Type" /> параметра.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Тип параметра можно задать только с помощью конструктора.  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые параметры в коллекцию. Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и отображает имя, тип и значение каждого параметра в коллекции.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Objects.ObjectParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение параметра.</summary>
        <value>Значение параметра.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После компиляции запроса значение нельзя изменить. Дополнительные сведения см. в разделе [методы построителя запросов](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Если новое значение несовместимо с типом, объявленным в конструкторе, оно может вызвать исключение времени выполнения. Поставщик должен определять, совместимо ли это значение с объявленным типом. Например, если начальное значение имеет тип <xref:System.Int32>, а новое — тип <xref:System.Guid>, может возникнуть исключение.  
  
   
  
## Examples  
 Пример в этом разделе основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). В примере добавляются новые параметры в коллекцию. Он проходит по коллекции <xref:System.Data.Objects.ObjectParameterCollection> и выводит имя, тип и значение каждого параметра в коллекции.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>