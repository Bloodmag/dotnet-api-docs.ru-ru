<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="754ba74c3af6b88ffda378f845dd52a3dc15dff0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390358" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Автоматически генерирует однотабличные команды, которые позволяют согласовать изменения, вносимые в объект <see cref="T:System.Data.DataSet" />, со связанным источником данных. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataAdapter> Не создает автоматически инструкции SQL, необходимые для согласования изменений, внесенных в <xref:System.Data.DataSet> связанные с источником данных. Однако можно создать <xref:System.Data.Odbc.OdbcCommandBuilder> объект, который создает инструкции SQL для отдельных обновлений, задав <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство <xref:System.Data.Odbc.OdbcDataAdapter>. <xref:System.Data.Odbc.OdbcCommandBuilder> Создает любые дополнительные инструкции SQL, которые не заданы.  
  
 Связь между <xref:System.Data.Odbc.OdbcDataAdapter> и соответствующим <xref:System.Data.Odbc.OdbcCommandBuilder> всегда равно одному. Чтобы создать данное отношение, необходимо задать <xref:System.Data.Odbc.OdbcDataAdapter> свойство <xref:System.Data.Odbc.OdbcCommandBuilder> объекта. В результате <xref:System.Data.Odbc.OdbcCommandBuilder> регистрируется как прослушиватель, который приводит к выдаче <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> события, влияющие на <xref:System.Data.DataSet>.  
  
 Для создания инструкций INSERT, UPDATE или DELETE, <xref:System.Data.Odbc.OdbcCommandBuilder> использует <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство для получения требуемого набора метаданных. Если изменить значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> после метаданные получения, такие как после первого обновления, необходимо вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> метод для обновления метаданных.  
  
> [!NOTE]
>  Если инструкция SELECT, присвоенная <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство использует имена столбцов с псевдонимами, результирующие инструкции INSERT, UPDATE, и может оказаться неточным или вызвать сбой инструкции DELETE. Если основной драйвер ODBC не может предоставить имя соответствующего базового столбца для имени псевдонима столбца (с помощью значения SQL_DESC_BASE_COLUMN_NAME `SQLColAttribute`), псевдоним может использоваться в созданный инструкций INSERT, UPDATE и DELETE. Например драйвер Microsoft ODBC для Oracle возвращает псевдоним имени базового столбца. Таким образом созданных инструкций INSERT, UPDATE и DELETE может привести к ошибкам.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Также использует <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, и <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> ссылается <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>. Следует вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Если одна или несколько из этих свойств будут изменены или если значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> изменить само свойство. В противном случае <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, и <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> свойства сохраняют свои предыдущие значения.  
  
 При вызове метода <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Odbc.OdbcCommandBuilder> отсоединяется от <xref:System.Data.Odbc.OdbcDataAdapter>, и созданные команды больше не используются.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.Odbc.OdbcCommand>вместе с <xref:System.Data.Odbc.OdbcDataAdapter> и <xref:System.Data.Odbc.OdbcConnection>для выборки строк из источника данных. В примере передаются инициализированный <xref:System.Data.DataSet>, строки подключения, строки запроса, которая является инструкцией SQL SELECT и строка, представляющая имя таблицы источника данных. Затем пример создает <xref:System.Data.Odbc.OdbcCommandBuilder>.  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовый конструктор инициализирует все поля значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, который необходимо связать с объектом <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> вместе со связанным объектом <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Регистрирует себя в качестве прослушивателя для <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter> указанный в этом свойстве.  
  
 При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder> связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter> освобождается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, для которого данный объект <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> будет генерировать операторы SQL.</summary>
        <value>Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, связанный с этим объектом <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder> Регистрирует себя в качестве прослушивателя для <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter> указанный в этом свойстве.  
  
 При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder> связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter> освобождается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.Data.Odbc.OdbcCommand" /> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах. Извлеченные параметры добавляются в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> объекта <see cref="T:System.Data.Odbc.OdbcCommand" />.</param>
        <summary>Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <see cref="T:System.Data.Odbc.OdbcCommand" />, и включает их в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> указанного объекта <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> перезаписывает любые существующие данные параметров для <xref:System.Data.Odbc.OdbcCommand>.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> требуется дополнительное обращение к источнику данных для получения сведений. Если сведения о параметрах известна заранее, более эффективно будет заполнить коллекцию параметров путем задания сведений явным образом.  
  
 Можно использовать только <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> с хранимыми процедурами. Нельзя использовать <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> для заполнения <xref:System.Data.Odbc.OdbcParameterCollection> произвольными инструкциями Transact-SQL, таких как инструкции SELECT с параметрами.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Основной драйвер ODBC не поддерживает возврат сведений о параметрах хранимой процедуры, или текст команды содержит неверное имя хранимой процедуры, или указанный объект <see cref="T:System.Data.CommandType" /> не является <see langword="CommandType.StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций удаления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций удаления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.  
  
 Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Odbc.OdbcCommandBuilder> для создания параметров на основании вместо имен столбцов. Он завершается успешно только в том случае, если выполняются следующие условия.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.  
  
-   Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.  
  
-   Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций вставки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций вставки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.  
  
 Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder> для создания параметров на основании вместо имен столбцов. Он завершается успешно только в том случае, если выполняются следующие условия.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.  
  
-   Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.  
  
-   Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций обновления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</param>
        <summary>Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</summary>
        <returns>Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций обновления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.  
  
 Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды. Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.  
  
 После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом. В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.  
  
 Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder> для создания параметров на основании вместо имен столбцов. Он завершается успешно только в том случае, если выполняются следующие условия.  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.  
  
-   Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.  
  
-   Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
        <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
        <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Исходный идентификатор без кавычек.</param>
        <param name="connection">Если подключение выполнено, заставляет управляемую оболочку получить символ кавычки от драйвера ODBC, вызывая SQLGetInfo (SQL_IDENTIFIER_QUOTE_CHAR). Если подключение не выполнено, строка заключается в кавычки, используя значения из свойств <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> и <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</param>
        <summary>При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме. При этом корректно исключаются встроенные в идентификатор кавычки.</summary>
        <returns>Версия идентификатора, заключенного кавычки. Кавычки, внедренные в идентификатор, корректно исключаются.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
        <summary>Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</summary>
        <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Идентификатор, из которого будут удалены внедренные кавычки.</param>
        <param name="connection">
          <see cref="T:System.Data.Odbc.OdbcConnection" />.</param>
        <summary>Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</summary>
        <returns>Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>