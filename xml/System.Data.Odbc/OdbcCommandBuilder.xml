<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d7041-101">Автоматически генерирует однотабличные команды, которые позволяют согласовать изменения, вносимые в объект <see cref="T:System.Data.DataSet" />, со связанным источником данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated data source.</span></span> <span data-ttu-id="d7041-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="d7041-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-103"><xref:System.Data.Odbc.OdbcDataAdapter> Не создает автоматически инструкции SQL, необходимые для согласования изменений, внесенных в <xref:System.Data.DataSet> связанные с источником данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-103">The <xref:System.Data.Odbc.OdbcDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> associated with the data source.</span></span> <span data-ttu-id="d7041-104">Однако можно создать <xref:System.Data.Odbc.OdbcCommandBuilder> объект, который создает инструкции SQL для отдельных обновлений, задав <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-104">However, you can create an <xref:System.Data.Odbc.OdbcCommandBuilder> object that generates SQL statements for single-table updates by setting the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="d7041-105"><xref:System.Data.Odbc.OdbcCommandBuilder> Создает любые дополнительные инструкции SQL, которые не заданы.</span><span class="sxs-lookup"><span data-stu-id="d7041-105">The <xref:System.Data.Odbc.OdbcCommandBuilder> then generates any additional SQL statements that you do not set.</span></span>  
  
 <span data-ttu-id="d7041-106">Связь между <xref:System.Data.Odbc.OdbcDataAdapter> и соответствующим <xref:System.Data.Odbc.OdbcCommandBuilder> всегда равно одному.</span><span class="sxs-lookup"><span data-stu-id="d7041-106">The relationship between an <xref:System.Data.Odbc.OdbcDataAdapter> and its corresponding <xref:System.Data.Odbc.OdbcCommandBuilder> is always one-to-one.</span></span> <span data-ttu-id="d7041-107">Чтобы создать данное отношение, необходимо задать <xref:System.Data.Odbc.OdbcDataAdapter> свойство <xref:System.Data.Odbc.OdbcCommandBuilder> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7041-107">To create this correspondence, you set the <xref:System.Data.Odbc.OdbcDataAdapter> property of the <xref:System.Data.Odbc.OdbcCommandBuilder> object.</span></span> <span data-ttu-id="d7041-108">В результате <xref:System.Data.Odbc.OdbcCommandBuilder> регистрируется как прослушиватель, который приводит к выдаче <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> события, влияющие на <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d7041-108">This causes the <xref:System.Data.Odbc.OdbcCommandBuilder> to register itself as a listener, which produces the output of <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that affect the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="d7041-109">Для создания инструкций INSERT, UPDATE или DELETE, <xref:System.Data.Odbc.OdbcCommandBuilder> использует <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство для получения требуемого набора метаданных.</span><span class="sxs-lookup"><span data-stu-id="d7041-109">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Odbc.OdbcCommandBuilder> uses the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata.</span></span> <span data-ttu-id="d7041-110">Если изменить значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> после метаданные получения, такие как после первого обновления, необходимо вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> метод для обновления метаданных.</span><span class="sxs-lookup"><span data-stu-id="d7041-110">If you change the value of <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should then call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7041-111">Если инструкция SELECT, присвоенная <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> свойство использует имена столбцов с псевдонимами, результирующие инструкции INSERT, UPDATE, и может оказаться неточным или вызвать сбой инструкции DELETE.</span><span class="sxs-lookup"><span data-stu-id="d7041-111">If the SELECT statement assigned to the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property uses aliased column names, the resulting INSERT, UPDATE, and DELETE statements may be inaccurate or fail.</span></span> <span data-ttu-id="d7041-112">Если основной драйвер ODBC не может предоставить имя соответствующего базового столбца для имени псевдонима столбца (с помощью значения SQL_DESC_BASE_COLUMN_NAME `SQLColAttribute`), псевдоним может использоваться в созданный инструкций INSERT, UPDATE и DELETE.</span><span class="sxs-lookup"><span data-stu-id="d7041-112">If the underlying ODBC driver cannot provide the appropriate base column name for the alias column name (using the SQL_DESC_BASE_COLUMN_NAME value of `SQLColAttribute`), the alias name could be used in the generated INSERT, UPDATE, and DELETE statements.</span></span> <span data-ttu-id="d7041-113">Например драйвер Microsoft ODBC для Oracle возвращает псевдоним имени базового столбца.</span><span class="sxs-lookup"><span data-stu-id="d7041-113">For example, the Microsoft ODBC Driver for Oracle returns the alias name as the base column name.</span></span> <span data-ttu-id="d7041-114">Таким образом созданных инструкций INSERT, UPDATE и DELETE может привести к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="d7041-114">Therefore, the generated INSERT, UPDATE, and DELETE statements would cause errors.</span></span>  
  
 <span data-ttu-id="d7041-115"><xref:System.Data.Odbc.OdbcCommandBuilder> Также использует <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, и <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> ссылается <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-115">The <xref:System.Data.Odbc.OdbcCommandBuilder> also uses the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, and <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> properties referenced by the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="d7041-116">Следует вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Если одна или несколько из этих свойств будут изменены или если значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> изменить само свойство.</span><span class="sxs-lookup"><span data-stu-id="d7041-116">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the value of the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property itself is changed.</span></span> <span data-ttu-id="d7041-117">В противном случае <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, и <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> свойства сохраняют свои предыдущие значения.</span><span class="sxs-lookup"><span data-stu-id="d7041-117">Otherwise the <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="d7041-118">При вызове метода <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Odbc.OdbcCommandBuilder> отсоединяется от <xref:System.Data.Odbc.OdbcDataAdapter>, и созданные команды больше не используются.</span><span class="sxs-lookup"><span data-stu-id="d7041-118">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Odbc.OdbcCommandBuilder> is disassociated from the <xref:System.Data.Odbc.OdbcDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7041-119">В следующем примере используется <xref:System.Data.Odbc.OdbcCommand>вместе с <xref:System.Data.Odbc.OdbcDataAdapter> и <xref:System.Data.Odbc.OdbcConnection>для выборки строк из источника данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-119">The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source.</span></span> <span data-ttu-id="d7041-120">В примере передаются инициализированный <xref:System.Data.DataSet>, строки подключения, строки запроса, которая является инструкцией SQL SELECT и строка, представляющая имя таблицы источника данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-120">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="d7041-121">Затем пример создает <xref:System.Data.Odbc.OdbcCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="d7041-121">The example then creates an <xref:System.Data.Odbc.OdbcCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-122">Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-122">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7041-123">Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-123">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-124">Базовый конструктор инициализирует все поля значениями по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="d7041-124">The base constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="d7041-125">Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, который необходимо связать с объектом <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-125">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object to associate with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span></span></param>
        <summary><span data-ttu-id="d7041-126">Инициализирует новый экземпляр класса <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> вместе со связанным объектом <see cref="T:System.Data.Odbc.OdbcDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-126">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class with the associated <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-127"><xref:System.Data.Odbc.OdbcCommandBuilder> Регистрирует себя в качестве прослушивателя для <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter> указанный в этом свойстве.</span><span class="sxs-lookup"><span data-stu-id="d7041-127">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="d7041-128">При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder> связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter> освобождается.</span><span class="sxs-lookup"><span data-stu-id="d7041-128">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7041-129">Возвращает или задает объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, для которого данный объект <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> будет генерировать операторы SQL.</span><span class="sxs-lookup"><span data-stu-id="d7041-129">Gets or sets an <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object for which this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> object will generate SQL statements.</span></span></summary>
        <value><span data-ttu-id="d7041-130">Объект <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, связанный с этим объектом <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-130">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object that is associated with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-131"><xref:System.Data.Odbc.OdbcCommandBuilder> Регистрирует себя в качестве прослушивателя для <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter> указанный в этом свойстве.</span><span class="sxs-lookup"><span data-stu-id="d7041-131">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="d7041-132">При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder> связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter> освобождается.</span><span class="sxs-lookup"><span data-stu-id="d7041-132">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="d7041-133">Объект <see cref="T:System.Data.Odbc.OdbcCommand" /> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах.</span><span class="sxs-lookup"><span data-stu-id="d7041-133">The <see cref="T:System.Data.Odbc.OdbcCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span></span> <span data-ttu-id="d7041-134">Извлеченные параметры добавляются в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> объекта <see cref="T:System.Data.Odbc.OdbcCommand" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-134">The derived parameters are added to the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</span></span></param>
        <summary><span data-ttu-id="d7041-135">Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <see cref="T:System.Data.Odbc.OdbcCommand" />, и включает их в коллекцию параметров <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> указанного объекта <see cref="T:System.Data.Odbc.OdbcCommand" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Odbc.OdbcCommand" /> and populates the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the specified <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> перезаписывает любые существующие данные параметров для <xref:System.Data.Odbc.OdbcCommand>.</span><span class="sxs-lookup"><span data-stu-id="d7041-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
 <span data-ttu-id="d7041-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> требуется дополнительное обращение к источнику данных для получения сведений.</span><span class="sxs-lookup"><span data-stu-id="d7041-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="d7041-138">Если сведения о параметрах известна заранее, более эффективно будет заполнить коллекцию параметров путем задания сведений явным образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="d7041-139">Можно использовать только <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> с хранимыми процедурами.</span><span class="sxs-lookup"><span data-stu-id="d7041-139">You can only use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="d7041-140">Нельзя использовать <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> для заполнения <xref:System.Data.Odbc.OdbcParameterCollection> произвольными инструкциями Transact-SQL, таких как инструкции SELECT с параметрами.</span><span class="sxs-lookup"><span data-stu-id="d7041-140">You cannot use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.Odbc.OdbcParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7041-141">Основной драйвер ODBC не поддерживает возврат сведений о параметрах хранимой процедуры, или текст команды содержит неверное имя хранимой процедуры, или указанный объект <see cref="T:System.Data.CommandType" /> не является <see langword="CommandType.StoredProcedure" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-141">The underlying ODBC driver does not support returning stored procedure parameter information, or the command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not <see langword="CommandType.StoredProcedure" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-142">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-142">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-143">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-143">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-144">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-144">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-145">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-145">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-146">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-146">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-147">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-147">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-148">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-148">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7041-149">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-149">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-150">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций удаления.</span><span class="sxs-lookup"><span data-stu-id="d7041-150">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-151">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-151">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-152">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-152">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-153">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-153">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-154">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-154">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-155">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-155">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-156">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-156">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="d7041-157">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="d7041-157">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="d7041-158">Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</span><span class="sxs-lookup"><span data-stu-id="d7041-158">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="d7041-159">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций удаления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-159">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-160">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций удаления.</span><span class="sxs-lookup"><span data-stu-id="d7041-160">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-161">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-161">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-162">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-162">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-163">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-163">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-164">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-164">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-165">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-165">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-166">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-166">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="d7041-167">Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7041-167">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="d7041-168">Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Odbc.OdbcCommandBuilder> для создания параметров на основании вместо имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="d7041-168">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Odbc.OdbcCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="d7041-169">Он завершается успешно только в том случае, если выполняются следующие условия.</span><span class="sxs-lookup"><span data-stu-id="d7041-169">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="d7041-170"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.</span><span class="sxs-lookup"><span data-stu-id="d7041-170">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="d7041-171">Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="d7041-171">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="d7041-172">Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.</span><span class="sxs-lookup"><span data-stu-id="d7041-172">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-173">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-173">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-174">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-174">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-175">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-175">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-176">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-176">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-177">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-177">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-178">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-178">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-179">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-179">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7041-180">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-180">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-181">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций вставки.</span><span class="sxs-lookup"><span data-stu-id="d7041-181">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-182">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-182">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-183">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-183">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-184">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-184">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-185">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-185">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-186">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-186">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-187">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-187">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="d7041-188">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="d7041-188">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="d7041-189">Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</span><span class="sxs-lookup"><span data-stu-id="d7041-189">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="d7041-190">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций вставки в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-190">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-191">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций вставки.</span><span class="sxs-lookup"><span data-stu-id="d7041-191">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-192">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-192">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-193">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-193">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-194">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-194">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-195">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-195">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-196">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-196">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-197">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-197">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="d7041-198">Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7041-198">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="d7041-199">Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder> для создания параметров на основании вместо имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="d7041-199">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="d7041-200">Он завершается успешно только в том случае, если выполняются следующие условия.</span><span class="sxs-lookup"><span data-stu-id="d7041-200">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="d7041-201"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.</span><span class="sxs-lookup"><span data-stu-id="d7041-201">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="d7041-202">Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="d7041-202">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="d7041-203">Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.</span><span class="sxs-lookup"><span data-stu-id="d7041-203">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-204">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-204">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-205">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-205">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-206">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-206">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-207">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-207">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-208">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-208">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-209">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-209">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-210">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-210">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7041-211">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-211">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-212">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций обновления.</span><span class="sxs-lookup"><span data-stu-id="d7041-212">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-213">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-213">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-214">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-214">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-215">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-215">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-216">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-216">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-217">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-217">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-218">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-218">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="d7041-219">Если значение равно <see langword="true" />, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</span><span class="sxs-lookup"><span data-stu-id="d7041-219">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span></span> <span data-ttu-id="d7041-220">Если значение равно <see langword="false" />, создаются @p1, @p2 и т. д.</span><span class="sxs-lookup"><span data-stu-id="d7041-220">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="d7041-221">Возвращает автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, который требуется для выполнения операций обновления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="d7041-221">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span></span></summary>
        <returns><span data-ttu-id="d7041-222">Автоматически созданный объект <see cref="T:System.Data.Odbc.OdbcCommand" />, необходимый для выполнения операций обновления.</span><span class="sxs-lookup"><span data-stu-id="d7041-222">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7041-223">Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand> объект для выполнения.</span><span class="sxs-lookup"><span data-stu-id="d7041-223">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="d7041-224">Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> в качестве основы для измененной команды.</span><span class="sxs-lookup"><span data-stu-id="d7041-224">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="d7041-225">Например, можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> и изменения <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> и явно задать, на <xref:System.Data.Odbc.OdbcDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d7041-225">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="d7041-226">После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> если она изменяет инструкцию каким-либо образом.</span><span class="sxs-lookup"><span data-stu-id="d7041-226">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="d7041-227">В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</span><span class="sxs-lookup"><span data-stu-id="d7041-227">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="d7041-228">Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A> или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7041-228">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="d7041-229">Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7041-229">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="d7041-230">Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder> для создания параметров на основании вместо имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="d7041-230">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="d7041-231">Он завершается успешно только в том случае, если выполняются следующие условия.</span><span class="sxs-lookup"><span data-stu-id="d7041-231">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="d7041-232"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Был определен, и его длина меньше, чем имя создаваемого параметра.</span><span class="sxs-lookup"><span data-stu-id="d7041-232">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="d7041-233">Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> регулярного выражения.</span><span class="sxs-lookup"><span data-stu-id="d7041-233">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="d7041-234">Объект <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> указано.</span><span class="sxs-lookup"><span data-stu-id="d7041-234">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-235">При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме.</span><span class="sxs-lookup"><span data-stu-id="d7041-235">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="d7041-236">При этом корректно исключаются встроенные в идентификатор кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-236">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier"><span data-ttu-id="d7041-237">Исходный идентификатор без кавычек.</span><span class="sxs-lookup"><span data-stu-id="d7041-237">The original unquoted identifier.</span></span></param>
        <summary><span data-ttu-id="d7041-238">При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме.</span><span class="sxs-lookup"><span data-stu-id="d7041-238">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="d7041-239">При этом корректно исключаются встроенные в идентификатор кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-239">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="d7041-240">Версия идентификатора, заключенного кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-240">The quoted version of the identifier.</span></span> <span data-ttu-id="d7041-241">Кавычки, внедренные в идентификатор, корректно исключаются.</span><span class="sxs-lookup"><span data-stu-id="d7041-241">Embedded quotes within the identifier are correctly escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier"><span data-ttu-id="d7041-242">Исходный идентификатор без кавычек.</span><span class="sxs-lookup"><span data-stu-id="d7041-242">The original unquoted identifier.</span></span></param>
        <param name="connection"><span data-ttu-id="d7041-243">Если подключение выполнено, заставляет управляемую оболочку получить символ кавычки от драйвера ODBC, вызывая SQLGetInfo (SQL_IDENTIFIER_QUOTE_CHAR).</span><span class="sxs-lookup"><span data-stu-id="d7041-243">When a connection is passed, causes the managed wrapper to get the quote character from the ODBC driver, calling SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR).</span></span> <span data-ttu-id="d7041-244">Если подключение не выполнено, строка заключается в кавычки, используя значения из свойств <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> и <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-244">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span></span></param>
        <summary><span data-ttu-id="d7041-245">При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме.</span><span class="sxs-lookup"><span data-stu-id="d7041-245">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span></span> <span data-ttu-id="d7041-246">При этом корректно исключаются встроенные в идентификатор кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-246">This includes correctly escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="d7041-247">Версия идентификатора, заключенного кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-247">The quoted version of the identifier.</span></span> <span data-ttu-id="d7041-248">Кавычки, внедренные в идентификатор, корректно исключаются.</span><span class="sxs-lookup"><span data-stu-id="d7041-248">Embedded quotes within the identifier are correctly escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7041-249">Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</span><span class="sxs-lookup"><span data-stu-id="d7041-249">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier"><span data-ttu-id="d7041-250">Идентификатор, из которого будут удалены внедренные кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-250">The identifier that will have its embedded quotes removed.</span></span></param>
        <summary><span data-ttu-id="d7041-251">Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</span><span class="sxs-lookup"><span data-stu-id="d7041-251">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="d7041-252">Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-252">The unquoted identifier, with embedded quotes correctly unescaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier"><span data-ttu-id="d7041-253">Идентификатор, из которого будут удалены внедренные кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-253">The identifier that will have its embedded quotes removed.</span></span></param>
        <param name="connection"><span data-ttu-id="d7041-254"><see cref="T:System.Data.Odbc.OdbcConnection" />.</span><span class="sxs-lookup"><span data-stu-id="d7041-254">The <see cref="T:System.Data.Odbc.OdbcConnection" />.</span></span></param>
        <summary><span data-ttu-id="d7041-255">Если идентификатор заключен в кавычки, возвращает правильную форму этого идентификатора без кавычек, при этом корректно учитываются кавычки, внедренные в идентификатор.</span><span class="sxs-lookup"><span data-stu-id="d7041-255">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="d7041-256">Идентификатор без кавычек, в котором корректно сохранены все внедренные кавычки.</span><span class="sxs-lookup"><span data-stu-id="d7041-256">The unquoted identifier, with embedded quotes correctly unescaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>