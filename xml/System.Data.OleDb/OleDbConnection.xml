<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b802cc1a9b4877005b91b1d9770aa1885b696e12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет открытое подключение к источнику данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> Представляет уникальное соединение с источником данных. В систему клиента и сервера базы данных является эквивалентом сетевого подключения к серверу. В зависимости от функциональных возможностей, поддерживаемых собственным поставщиком OLE DB, некоторые методы или свойства <xref:System.Data.OleDb.OleDbConnection> может оказаться недоступным.  
  
 При создании экземпляра <xref:System.Data.OleDb.OleDbConnection>, всем свойствам присваиваются их начальные значения. Список этих значений см. в разделе <xref:System.Data.OleDb.OleDbConnection> конструктор.  
  
 Вы можете открыть более одного объекта DataReader на отдельном <xref:System.Data.OleDb.OleDbConnection>. Если используемый поставщик OLE DB не поддерживает более одного объекта DataReader для одного подключения, поставщиком неявно открывается дополнительное подключение для каждого.  
  
 Если <xref:System.Data.OleDb.OleDbConnection> выходит за границы области, он не закрыт. Таким образом, необходимо явно закрыть подключение путем вызова <xref:System.Data.OleDb.OleDbConnection.Close%2A> или **Dispose**, или с помощью <xref:System.Data.OleDb.OleDbConnection> объекта внутри `Using` инструкции.  
  
> [!NOTE]
>  Чтобы развернуть высокопроизводительные приложения, необходимо использовать пул подключений. При использовании поставщика данных .NET Framework для OLE DB, у вас для включения пула подключений, поскольку поставщик сделал это автоматически. Дополнительные сведения об использовании подключения пулами с помощью поставщика данных .NET Framework для OLE DB см. [OLE DB, ODBC и Oracle пулов соединений](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  
  
 Если возникло неустранимое исключение <xref:System.Data.OleDb.OleDbException> (например, SQL Server уровнем важности 20 и выше) создается путем вызова метода, выполняющего <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbConnection> может быть закрыт. Тем не менее, пользователь может опять открыть подключение и продолжить работу.  
  
 Приложение, которое создает экземпляр <xref:System.Data.OleDb.OleDbConnection> объекта может потребовать все прямые и непрямые вызывающие имеет достаточных разрешений для кода, установив требования декларативной или принудительной безопасности. <xref:System.Data.OleDb.OleDbConnection> делает требования безопасности с помощью <xref:System.Data.OleDb.OleDbPermission> объекта. Пользователи могут проверить наличие необходимых разрешений кода с помощью <xref:System.Data.OleDb.OleDbPermissionAttribute> объекта. Пользователи и Администраторы могут также использовать [Caspol.exe (средство политики безопасности доступа кода)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) изменения политики безопасности на уровне компьютера, пользователя и предприятия. Дополнительные сведения см. в разделе [Управление доступом для кода и ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Дополнительные сведения об обработке предупреждений и информационных сообщений с сервера данных см. в разделе [события соединения](~/docs/framework/data/adonet/connection-events.md).  
  
> [!NOTE]
>  <xref:System.Data.OleDb.OleDbConnection> Объект не поддерживает установку или получение динамических свойств, определенных для поставщика OLE DB. Поддерживаются только те свойства, которые можно передать в строке соединения поставщику OLE DB.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbCommand> и <xref:System.Data.OleDb.OleDbConnection>. <xref:System.Data.OleDb.OleDbConnection> Открыто и задано как <xref:System.Data.OleDb.OleDbCommand.Connection%2A> для <xref:System.Data.OleDb.OleDbCommand>. Затем в примере вызывается <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> и закрывает соединение. Чтобы выполнить это, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> передается строка подключения и строку запроса, которая является инструкцией SQL INSERT.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра <xref:System.Data.OleDb.OleDbConnection> создается для чтения записи свойствам присваиваются следующие начальные значения, если они заданы особым образом соответствующими ключевыми словами в <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойство.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|Пустая строка (»»)|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|Пустая строка (»»)|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|Пустая строка (»»)|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойство.  
  
   
  
## Examples  
 В следующем примере создается и открывается <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Соединение, используемое для открытия базы данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.OleDb.OleDbConnection" /> с заданной строкой подключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании нового экземпляра <xref:System.Data.OleDb.OleDbConnection> создается для чтения записи свойствам присваиваются следующие начальные значения, если они заданы особым образом соответствующими ключевыми словами в <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойство.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|Пустая строка (»»)|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|Пустая строка (»»)|  
  
 Значение этих свойств можно изменить только с помощью <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойство.  
  
   
  
## Examples  
 В следующем примере создается и открывается <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает транзакцию базы данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Запускает транзакцию базы данных с текущим значением <see cref="T:System.Data.IsolationLevel" />.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> или <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> метод. Чтобы обеспечить правильную работу поставщик данных .NET Framework для OLE DB модели управления транзакциями, избегайте использования других моделей управления транзакциями, таких как предоставляемые источником данных.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и <xref:System.Data.OleDb.OleDbTransaction>. Также демонстрируется использование <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, и <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Уровень изоляции, с которым должна выполняться транзакция.</param>
        <summary>Начинает транзакцию базы данных с указанным уровнем изоляции.</summary>
        <returns>Объект, представляющий новую транзакцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо явно зафиксировать или откатить транзакцию с помощью <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> или <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> метод. Чтобы обеспечить правильную работу поставщик данных .NET Framework для OLE DB модели управления транзакциями, избегайте использования других моделей управления транзакциями, таких как предоставляемые источником данных.  
  
> [!NOTE]
>  Если уровень изоляции не указан, используется уровень изоляции по умолчанию для базового поставщика. Для указания уровня изоляции с <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> метода, используйте перегрузку, которая принимает `isolationLevel` параметра.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и <xref:System.Data.OleDb.OleDbTransaction>. Также демонстрируется использование <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, и <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> методы.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Параллельные транзакции не поддерживаются.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Имя базы данных.</param>
        <summary>Осуществляет смену текущей базы данных для открытого соединения <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, указанное в `database` параметр должен быть действительным именем базы данных. `database` Параметр не может содержать значение null, пустой строкой или строкой, содержащей только из пустых символов.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и отображаются некоторые его свойства только для чтения.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Недопустимое имя базы данных.</exception>
        <exception cref="T:System.InvalidOperationException">Соединение не открыто.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Невозможно изменить базу данных.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает подключение к источнику данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Close%2A> Метод откатывает все отложенные транзакции. Освобождает соединение в пул подключений или закрывает подключение, если пул подключений отключен. Если <xref:System.Data.OleDb.OleDbConnection.Close%2A> вызывается при обработке <xref:System.Data.Common.DbConnection.StateChange> события, дополнительные <xref:System.Data.Common.DbConnection.StateChange> происходят события.  
  
 Приложение может вызвать <xref:System.Data.OleDb.OleDbConnection.Close%2A> более одного раза. Исключение не формируется.  
  
> [!CAUTION]
>  Не вызывайте <xref:System.Data.OleDb.OleDbConnection.Close%2A> или **Dispose** на <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbDataReader>, или любого другого управляемого объекта в `Finalize` метод класса. Метод завершения следует только освобождать неуправляемые ресурсы, которыми ваш класс непосредственно владеет. Если класс не владеет какими-либо неуправляемыми ресурсами, не включайте в его определение метод `Finalize`. Дополнительные сведения см. в разделе [мусора](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, используемую для открытия базы данных.</summary>
        <value>Строка подключения поставщика OLE DB, содержащая имя источника данных и другие параметры, необходимые для установки начального подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> Соответствует формату строки подключения OLE DB максимально со следующими исключениями:  
  
-   «Provider = `value` » предложение является обязательным. Тем не менее, нельзя использовать «поставщик = MSDASQL», так как поставщик данных .NET Framework для OLE DB не поддерживает поставщик OLE DB для ODBC (MSDASQL). Для доступа к источникам данных ODBC, используйте <xref:System.Data.Odbc.OdbcConnection> объекта, находящегося в <xref:System.Data.Odbc> пространства имен.  
  
-   В отличие от ODBC или ADO, возвращаемая строка соединения является заданной пользователем <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, за вычетом сведений о безопасности при `Persist Security Info` задано значение `false` (по умолчанию). Поставщик данных .NET Framework для OLE DB не сохраняет и не возвращает пароль в строке подключения, если не задать `Persist Security Info` ключевое слово `true` (не рекомендуется). Чтобы обеспечить высокий уровень безопасности, настоятельно рекомендуется использовать `Integrated Security` ключевого слова with `Persist Security Info` значение `false`.  
  
 Можно использовать <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойства для подключения к различным источникам данных. В следующем примере показано несколько возможных строк подключения.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 Если `Data Source` не указано ключевое слово в строке подключения, поставщик предпримет попытку подключения к локальному серверу, если он доступен.  
  
 Дополнительные сведения о строках соединения см. в разделе [с помощью ключевых слов строки подключения с собственным клиентом SQL Server](http://go.microsoft.com/fwlink/?LinkId=126696).  
  
 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> Может быть установлено только в том случае, если подключение закрывается. Многие значения строки подключения имеют соответствующие свойства только для чтения. Когда задана строка соединения, эти свойства обновляются, за исключением того, при обнаружении ошибки. В этом случае ни одно свойство обновляются. <xref:System.Data.OleDb.OleDbConnection> свойства возвращают только те параметры, которые содержатся в <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  
  
 Сброс <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> для закрытого соединения сбрасывает все значения строки подключения и связанные свойства. Сюда входят пароль. Например, если задать строку подключения, которая включает «Initial Catalog = AdventureWorks», а затем снова строку подключения к «поставщика = SQLOLEDB; источник данных = MySQLServer; IntegratedSecurity = SSPI», <xref:System.Data.OleDb.OleDbConnection.Database%2A> больше не задано значение AdventureWorks. (В строке подключения значение начального каталога соответствует `Database` свойство.)  
  
 Если свойство имеет значение, выполняется предварительная проверка строки подключения. Если значения для `Provider`, `Connect Timeout`, `Persist Security Info`, или `OLE DB Services` включаются в строке, проверяются следующие значения. Если приложение вызывает <xref:System.Data.OleDb.OleDbConnection.Open%2A> метод в строке подключения полностью подтверждено. Если строка подключения содержит недопустимые или неподдерживаемые свойства, исключение времени выполнения, такие как <xref:System.ArgumentException>, создается.  
  
> [!CAUTION]
>  Можно указать сведения о соединении для <xref:System.Data.OleDb.OleDbConnection> в файле универсальной Data Link (UDL); Однако вам следует избегать. UDL-файлы не шифруются и строки соединения хранятся в виде открытого текста. Так как UDL-файл представляет собой внешний файловый ресурс для приложения, его нельзя защитить средствами .NET Framework.  
  
 Базовый формат строки подключения содержит ряд пар ключевых слов и значений, разделенных точкой с запятой. Знак равенства (=) соединяет каждое ключевое слово и его значение. Чтобы включить значения, содержащие точку с запятой, знак одинарной или двойной кавычки, значение должно заключаться в двойные кавычки. Если значение содержит точку с запятой и символ двойной кавычки, значение может заключаться в одинарные кавычки. Одинарная кавычка также полезна, если значение начинается с символа двойной кавычки. И наоборот двойные кавычки можно использовать, если значение начинается с одинарной кавычки. Если значение содержит символы одинарных и двойных кавычек,-знак кавычек для выделения значения необходимо повторить все вхождения в пределах значения.  
  
 Чтобы включить начальные или конечные пробелы в строковое значение, значение должны заключаться в одинарные кавычки или двойные кавычки. Все начальные или конечные пробелы вокруг целое число, логическое значение или последовательность значений, игнорируются, даже если они заключены в кавычки. Однако пробелы внутри ключевое слово-литерал строки или значения сохраняются. Одинарные или двойные кавычки могут использоваться в строке подключения без разделителей (например, `Data Source= my'Server` или `Data Source= my"Server`), если знак кавычки не является первым или последним символом в значении.  
  
 Чтобы включить знак равенства (=) в зарезервированное слово или значение, он должен предшествовать еще один знак равенства. Например в строке подключения  
  
```  
"key==word=value"  
```  
  
 Ключевое слово «ключ = word» и «значение».  
  
 Если ключевое слово, определяемое в ключевом слове = значение пары встречается несколько раз в строке подключения, в наборе значений используется последнее вхождение.  
  
 Ключевые слова не учитывают регистр.  
  
> [!CAUTION]
>  Следует проявлять осторожность при построении строки подключения на основе ввода пользователя, например, при получении идентификатора и пароля пользователя из диалоговое окно и добавить его в строку подключения. Приложение должно гарантировать, что пользователь не может внедрить параметры дополнительные строки подключения в эти значения, например, ввести пароль в виде «validpassword; базы данных = somedb» при попытке присоединения к другой базе данных. При использовании параметра расширенные свойства строки подключения для соединений OLE DB, избежать передачи идентификаторов пользователей и пароли, поскольку следует избегать хранения идентификаторов пользователей и пароли в виде открытого текста, если это возможно, а значение по умолчанию `Persist Security Info= false` — нет влияет на `Extended Properties` параметра.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и задает некоторые его свойства в строке подключения.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Передан недопустимый аргумент строки соединения, или не задан обязательный аргумент строки соединения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает время ожидания при попытке установки подключения, по истечении которого попытка подключения завершается и создается ошибка.</summary>
        <value>Выраженное в секундах время ожидания открытия подключения. Значение по умолчанию - 15 секунды.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение 0 означает отсутствие ограничений и следует избегать в <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> так, как попытка подключения будет ждать бесконечно долго.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и задает некоторые его свойства в строке подключения.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Заданное значение меньше 0.</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект <see cref="T:System.Data.OleDb.OleDbCommand" />, связанный с объектом <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Объект <see cref="T:System.Data.OleDb.OleDbCommand" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.</summary>
        <value>Имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.Database%2A> Свойство обновляется динамически. При изменении текущей базы данных с помощью инструкции SQL или <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> , метод информационное сообщение отправляется и свойство обновляется автоматически.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и отображаются некоторые его свойства только для чтения.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя сервера или имя файла источника данных.</summary>
        <value>Имя сервера или имя файла источника данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если соединение с базой данных закрыто, `DataSource` свойство возвращает все, что содержится в `ConnectionString` для ключевого слова источника данных. Если соединение открыто и `ConnectionString` значение ключевого слова источника данных начинается с «&#124;datadirectory&#124;«, свойство возвращает все, что содержится в `ConnectionString` для ключевого источника данных только. Если открыто подключение к базе данных, свойство возвращает возвращает собственный поставщик для `DBPROP_INIT_DATASOURCE,` и если это пустой, собственный поставщик `DBPROP_DATASOURCENAME` возвращается.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и отображаются некоторые его свойства только для чтения.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.EnterpriseServices.ITransaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новое в ADO.NET 2.0 является поддержка использования <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> метод прикрепление к распределенной транзакции. Так как он прикрепляет подключение к <xref:System.Transactions.Transaction> экземпляра, **EnlistTransaction** использует преимущества функций, доступных в <xref:System.Transactions> пространство имен для управления распределенные транзакции, сделав его более предпочтительным, чем ** EnlistDistributedTransaction** для этой цели. Дополнительные сведения см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Можно продолжить прикрепить его к существующей распределенной транзакции с помощью <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> метод, если автоматическое прикрепление отключено. Прикрепление к существующей распределенной транзакции гарантирует, что, если транзакция фиксируется или откатывается назад, изменения, выполненные кодом в источнике данных также фиксации или отката. Дополнительные сведения о распределенных транзакциях см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> Возвращает исключение, если <xref:System.Data.OleDb.OleDbConnection> уже запустил транзакцию, используя <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. Тем не менее если транзакция является локальной транзакции, запущенной из источника данных (например, путем явного выполнения инструкции BEGIN TRANSACTION с помощью <xref:System.Data.OleDb.OleDbCommand> объекта), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> откатывает локальную транзакцию и выполняет зачисление в существующем распределенные транзакции, что запрошенный. Вы не получите уведомления об откате локальной транзакции ответственность за управление любыми локальными транзакциями не запущены с использованием <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Ссылка на существующий объект <see cref="T:System.Transactions.Transaction" />, к которому выполняется присоединение.</param>
        <summary>Выполняет присоединение указанной транзакции как распределенной транзакции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новое в ADO.NET 2.0 является поддержка использования <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> метод прикрепление к распределенной транзакции. Так как он прикрепляет подключение к <xref:System.Transactions.Transaction> экземпляра, **EnlistTransaction** использует преимущества функций, доступных в <xref:System.Transactions> пространство имен для управления распределенные транзакции, сделав его более предпочтительным, чем ** EnlistDistributedTransaction**, которая использует <xref:System.EnterpriseServices.ITransaction> объекта. Он также имеет различную семантику: после явного прикрепления соединения к транзакции, не может быть откреплено или прикреплено в другой транзакции до завершения первой транзакции. Дополнительные сведения о распределенных транзакциях см. в разделе [распределенные транзакции](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">Одно из значений <see cref="T:System.Data.OleDb.OleDbSchemaGuid" />, указывающее возвращаемую таблицу схемы.</param>
        <param name="restrictions">Массив <see cref="T:System.Object" /> значений ограничений. Они применяются в порядке следования столбцов ограничений. Это означает, что первое значение ограничения применяется к первому столбцу ограничений, второе — ко второму столбцу ограничений и т. д.</param>
        <summary>Возвращает сведения схемы из источника данных, как указано в GUID, и после применения указанных ограничений.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий запрошенные сведения о схеме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблица схемы возвращается в виде <xref:System.Data.DataTable> , имеет тот же формат, как набор строк схемы OLE DB, заданные `schema` параметра. Используйте `restrictions` параметра для фильтрации строк, возвращаемых в <xref:System.Data.DataTable> (например, путем указания ограничений для имени таблицы, типа, владельца или схемы). При передаче значения в массиве, включите пустые строки или значения NULL для элементов массива, которые не содержат значений. Если передать пустой массив `restrictions`, по одному для каждой таблицы, будут возвращены все строки в используемом по умолчанию порядке. Значения в массиве соответствует порядку столбцов в исходной таблице и <xref:System.Data.DataTable>. Каждый элемент массива ограничений сравнивается с содержимым соответствующего столбца в наборе строк схемы. Например первый элемент массива ограничений сравнивается с первым столбцом в наборе строк. Если элемент ограничения не равен null, в результирующую таблицу добавляются только строки из набора строк схемы, точно соответствующие значению ограничения <xref:System.Data.DataTable>.  
  
 <xref:System.Data.OleDb.OleDbConnection> Метод вызывает метод базового OLE DB **IDBSchemaRowset::GetRowset** метод, с помощью стандартных правил преобразования среды выполнения. Дополнительные сведения см. в разделе [COM-типы данных](http://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).  
  
 Сведения о литералах можно получить с помощью <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. Предоставляет сведения, эквивалентно вызову OLE DB **IDBInfo::GetLiteralInfo** интерфейса или ADO **Connection.OpenSchema** метод с `adSchemaDBInfoLiterals` константой.  
  
   
  
## Examples  
 Следующий пример возвращает список таблиц в базе данных.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">Указанный набор ограничений недопустим.</exception>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.OleDb.OleDbConnection" /> закрыт.</exception>
        <exception cref="T:System.ArgumentException">Указанный набор строк схемы не поддерживается поставщиком OLE DB.  -или- Параметр <paramref name="schema" /> содержит значение <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" />, а параметр <paramref name="restrictions" /> содержит одно или несколько ограничений.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения схемы.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />, используя указанную строку для имени схемы.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда `collectionName` указано значение null, <xref:System.Data.DataTable> будет содержать сведения о всех метаданных, которая доступна и его ограничения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Определяет имя схемы, которая должна быть возвращена.</param>
        <param name="restrictionValues">Задает набор значений ограничений для запрошенной схемы.</param>
        <summary>Возвращает сведения схемы для источника данных этого объекта <see cref="T:System.Data.OleDb.OleDbConnection" />, используя указанную строку для имени схемы и указанный массив строк для значений ограничений.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, содержащий сведения схемы.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда `collectionName` указано значение null, <xref:System.Data.DataTable> будет содержать сведения о всех метаданных, которая доступна и его ограничения.  
  
 `restrictionValues` Можно указать параметр *n* глубина значений, которые указаны в коллекции ограничений для конкретной коллекции. Чтобы задать значения в данном ограничении и не задавать значения в других ограничениях, необходимо задать значение null, а затем указать соответствующее значение в ограничении, необходимо указать значение для ранее ограничениям.  
  
 Примером этого является коллекцией «Таблицы». Если требуется вернуть только таблицы, связанные с владельцем «Carl» коллекция «Tables» имеет три ограничения (база данных, владелец и имя таблицы), следует передать в (как минимум) следующие значения: null, «Carl». Если значение ограничения не передается, для этого ограничения используются значения по умолчанию. Это же сопоставление соответствует передаче значения null, что отличается от передачи пустой строки для значения параметра. В этом случае пустая строка ("») считается значение указанного параметра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда поставщик отправляет предупреждение или информационное сообщение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клиенты, которые нужно обработать предупреждения или информационные сообщения, отправляемые сервером следует создать <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> делегат для прослушивания этого события.  
  
 <xref:System.Data.OleDb.OleDbConnection.InfoMessage> Событие происходит, когда из источника данных возвращается сообщение с низким уровнем серьезности. Низкого уровня серьезности сообщения, которые не вызывают исключение. Для Microsoft SQL Server такие сообщения об ошибках с уровнем серьезности 10 или меньше.  
  
 Дополнительные сведения и пример см. в разделе [события соединения](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает подключение к базе данных со значениями свойств, определяемыми объектом <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection> Удаляет подключение из пула соединений, если он доступен. В противном случае он устанавливает новое соединение с источником данных. Вы можете открыть более одного объекта DataReader на отдельном <xref:System.Data.OleDb.OleDbConnection>. Если используемый поставщик OLEDB не поддерживает более одного активного объекта DataReader для одного подключения, поставщик OLE DB неявно открывается для каждого дополнительного соединения.  
  
> [!NOTE]
>  Если <xref:System.Data.OleDb.OleDbConnection> выходит за границы области, он не закрыт. Таким образом, необходимо явно закрыть подключение путем вызова <xref:System.Data.OleDb.OleDbConnection.Close%2A> или **Dispose**, или с помощью соединения в `Using` инструкции.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Подключение уже открыто.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">При открытии подключения произошла ошибка на уровне подключения.</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя поставщика OLE DB, указанное в выражении "Provider= " строки подключения.</summary>
        <value>Имя поставщика, указанное в выражении "Provider= " строки подключения. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и отображаются некоторые его свойства только для чтения.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Означает, что пул объектов <see cref="T:System.Data.OleDb.OleDbConnection" /> может быть освобожден, когда последнее основное подключение будет освобождено.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` можно вызвать, чтобы освободить ресурсы, которые в противном случае резервируются для в составе пула <xref:System.Data.OleDb.OleDbConnection> объектов. Вы можете вызвать этот метод, если, например, объект подключения не будет использоваться повторно в течение времени, службы OLE DB обычно поддерживают подключения в пуле active. Обратите внимание, что только вызов этого метода в действительности не освобождает активные подключения, имеющиеся в пуле.  
  
 Перед окончательным удалением пула должно произойти следующее:  
  
1.  Вызовите <xref:System.Data.OleDb.OleDbConnection.Close%2A> для возврата объекта соединения в пул.  
  
2.  Разрешить любому объекту подключения истекло время ожидания в пуле.  
  
3.  Вызовите метод <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  
  
4.  Вызов сборщика мусора.  
  
 И наоборот при вызове метода <xref:System.Data.OleDb.OleDbConnection.Close%2A> для всех активных соединений и вызывается сборка мусора, но не следует вызывать <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, ресурсы, зарезервированные для объектов пула, остаются доступными.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection>, открывает его, отображаются некоторые его свойства, закрывает подключение и освобождает пула объектов с целью экономии ресурсов.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет свойство <see cref="P:System.Data.OleDb.OleDbConnection.State" /> объекта <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые поставщики OLE DB можно проверить текущее состояние соединения. Например, если после перезапуска сервера базы данных, так как вы открыли вашей <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbConnection.State%2A> свойство будет продолжать возвращать `Open`. Если вы работаете с помощью поставщика OLE DB, поддерживающий опроса эти сведения на активное подключение, вызов метода <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> метода и затем проверив <xref:System.Data.OleDb.OleDbConnection.State%2A> свойство сообщит, что соединения больше не является открытым. <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> Метод зависит от функциональности в поставщике OLE DB для проверки текущего состояния соединения. Чтобы определить, если поставщик OLE DB поддерживает данную функцию, проверьте документацию поставщика, сведения о DBPROP_CONNECTIONSTATUS.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, содержащую номер версии сервера, к которому подключается клиент.</summary>
        <value>Версия подключенного сервера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> Свойство сопоставляется свойству OLE DB DBPROP_DBMSVER. Если <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> не поддерживается от основного поставщика OLE DB, возвращается пустая строка.  
  
 Версия представляется в виде *##. ##. ###*, где первые две цифры являются основной номер версии, следующие две цифры — дополнительный номер версии, а последние четыре цифры — номер редакции. Поставщик должен представлять версию продукта в этой форме, но можно также добавить версию конкретного продукта — например, «04.01.0000 Rdb 4.1». Строка имеет форму *виде основная.дополнительная.сборка*, где основной и дополнительный номер ровно две цифры и построении строго четыре цифры.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.OleDb.OleDbConnection> и отображаются некоторые его свойства только для чтения.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение закрыто.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущее состояние подключения.</summary>
        <value>Поразрядное сочетание значений <see cref="T:System.Data.ConnectionState" />. По умолчанию — "Closed" (Закрыто).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разрешены следующие изменения состояния:  
  
-   Из `Closed` для `Open`, с использованием <xref:System.Data.OleDb.OleDbConnection.Open%2A> метод <xref:System.Data.OleDb.OleDbConnection> объекта.  
  
-   Из `Open` для `Closed`, с помощью <xref:System.Data.OleDb.OleDbConnection.Close%2A> метода или **Dispose** метод <xref:System.Data.OleDb.OleDbConnection> объекта.  
  
> [!NOTE]
>  В предыдущей версии платформы .NET Framework вызвав <xref:System.Data.OleDb.OleDbConnection.State%2A> свойство увеличена издержек в приложении, так как при каждом вызове причиной вызова свойство OLE DB DBPROP_CONNECTIONSTATUS для открытого соединения. С выпуском .NET Framework 2.0 это не проблема.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.Object" />, являющийся копией данного экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.OleDb.OleDbConnection> приведен к типу интерфейса <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>