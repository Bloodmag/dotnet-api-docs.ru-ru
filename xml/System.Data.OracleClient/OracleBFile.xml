<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="459475433844047b61ade7ae3edf80506077e29a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390458" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет управляемый объект <see cref="T:System.Data.OracleClient.OracleBFile" />, предназначенный для работы с типом данных Oracle <see langword="BFILE" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` имеет тип данных Oracle `LOB` тип данных, который содержит ссылку на двоичные данные с максимальным размером 4 гигабайта. Oracle `BFILE` отличается от других Oracle `LOB` типы данных, в том, что его данные хранятся в физическом файле в операционной системе, а не на сервере. Обратите внимание, что `BFILE` тип данных обеспечивает доступ к данным только для чтения. Таким образом, методы записи наследуется от <xref:System.IO.Stream> класса не поддерживаются.  
  
 Другие характеристики `BFILE` тип данных, отличающие его от `LOB` типа данных:  
  
-   содержит неструктурированные данные;  
  
-   поддерживает обработку данных на сервере в виде фрагментов;  
  
-   использует ссылочную семантику копирования. Например, если выполнить операцию копирования на `BFILE`только `BFILE` копируется локатора (который является ссылкой на файл). Данные файла не копируются.  
  
 `BFILE` Тип данных должен использоваться для ссылки на `LOB`, которые имеют большой размер и, следовательно, нецелесообразно хранить в базе данных. Накладные затраты клиента, сервера и обмена данными с помощью `BFILE` тип данных по сравнению с `LOB` тип данных. Более эффективно для доступа к `BFILE` Если вам нужно получить небольшой объем данных. Более эффективно, находящихся в базе данных доступ `LOB`s, если необходимо получить весь объект.  
  
 Каждый НЕПУСТОЙ <xref:System.Data.OracleClient.OracleBFile> объект связан с двумя сущностями, определяющими местоположение базового физического файла:  
  
-   Объект Oracle DIRECTORY, который является псевдонимом базы данных для каталога в файловой системе.  
  
-   Имя файла базового физического файла, расположенного в каталоге, связанном с объектом DIRECTORY.  
  
 После `BFILE` будет создан, можно извлечь его локатор в форме <xref:System.Data.OracleClient.OracleBFile> с помощью <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> или <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> методы.  
  
 Для получения <xref:System.Data.OracleClient.OracleBFile> , вызовите <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> метод.  
  
 Физический файл, <xref:System.Data.OracleClient.OracleBFile> объект связан с не должны существовать до попытки получить доступ. Приложение может привязать <xref:System.Data.OracleClient.OracleBFile> на несуществующий файл, создать физический файл в ожидаемом расположении, а затем вызвать <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  
  
 Любая попытка доступа к закрытому <xref:System.Data.OracleClient.OracleBFile> с помощью <xref:System.Data.OracleClient.OracleBFile.Read%2A> или <xref:System.Data.OracleClient.OracleBFile.Seek%2A> повторно открывает методы <xref:System.Data.OracleClient.OracleBFile> поток включается автоматически.  
  
 В следующем примере C# показано, как можно создать `BFILE` в Oracle таблицы, а затем извлечь его в виде <xref:System.Data.OracleClient.OracleBFile> объекта. В примере показано использование <xref:System.Data.OracleClient.OracleDataReader> объекта и <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> и <xref:System.Data.OracleClient.OracleBFile.Read%2A> методы.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 Дополнительные сведения о создании и использовании Oracle `BFILE`, см. в соответствующем разделе в документации Oracle.  
  
> [!NOTE]
>  `BeginWrite`, `EndWrite`, И `WriteByte` методы, которые наследуются от `System.IO.Stream` класса, не поддерживаются, так как `BFILE` тип данных доступен только для чтения.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, определяющее возможность чтения потока <see langword="BFILE" />.</summary>
        <value>
          Значение <see langword="false" />, если <see langword="BFILE" /> закрыт или удален; в противном случае — значение <see langword="true" />. Всегда значение <see langword="true" /> для <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, могут ли быть выполнены операции прямого и обратного поиска.</summary>
        <value>
          Значение <see langword="false" />, если <see langword="BFILE" /> закрыт или удален; в противном случае — значение <see langword="true" />. Всегда значение <see langword="true" /> для <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, поддерживает ли объект запись.</summary>
        <value>Всегда возвращает значение <see langword="false" />, поскольку тип данных Oracle <see langword="BFILE" /> доступен только для чтения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию данного объекта <see cref="T:System.Data.OracleClient.OracleBFile" />, связанную с тем же файлом, что и исходный объект.</summary>
        <returns>Новый объект <see cref="T:System.Data.OracleClient.OracleBFile" />, связанный с тем же файлом, что и исходный объект <see langword="OracleBFile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства нового <xref:System.Data.OracleClient.OracleBFile> объекта изначально имеют те же значения, что и исходный объект. Однако после <xref:System.Data.OracleClient.OracleBFile.Clone%2A> завершена, каждый <xref:System.Data.OracleClient.OracleBFile> объекта не зависит от другого. Например, изменение значения <xref:System.Data.OracleClient.OracleBFile.Position%2A> свойство на исходном <xref:System.Data.OracleClient.OracleBFile> не изменяет значение <xref:System.Data.OracleClient.OracleBFile.Position%2A> копии.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Data.OracleClient.OracleConnection" />, используемый данным экземпляром <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Подключение к источнику данных. Значение по умолчанию null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Копирует данные из <see cref="T:System.Data.OracleClient.OracleBFile" /> в конечный объект <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">
          <see cref="T:System.Data.OracleClient.OracleLob" /> — объект назначения.</param>
        <summary>Копирует все содержимое данного объекта <see cref="T:System.Data.OracleClient.OracleBFile" /> в начало конечного объекта <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Скопированное число байт.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile> и назначение <xref:System.Data.OracleClient.OracleLob> должны быть совместимы. Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob> с символьными данными.  
  
 Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob> для <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> операции будет выполняться правильно.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Конечный объект <see langword="OracleLob" /> представляет собой ссылку на пустой объект.</exception>
        <exception cref="T:System.InvalidOperationException">Объект назначение <see langword="OracleLob" /> является пустым.  
  
 - или -  
  
 Подключение, с которым связан данный объект <see langword="OracleBFile" />, закрыто.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see langword="OracleBFile" /> закрыт или удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">Назначение <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Смещение, в которое выполняется копирование.</param>
        <summary>Копирует все содержимое из <see cref="T:System.Data.OracleClient.OracleBFile" /> в конечный объект <see cref="T:System.Data.OracleClient.OracleLob" /> с заданным смещением.</summary>
        <returns>Скопированное число байт.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile> и назначение <xref:System.Data.OracleClient.OracleLob> должны быть совместимы. Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob> с символьными данными.  
  
 Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob> для <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> операции будет выполняться правильно.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Конечный объект <see langword="OracleLob" /> представляет собой ссылку на пустой объект.</exception>
        <exception cref="T:System.InvalidOperationException">Объект назначение <see langword="OracleLob" /> является пустым.  
  
 - или -  
  
 Подключение, с которым связан данный объект <see langword="OracleBFile" />, закрыто.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see langword="OracleBFile" /> закрыт или удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">Смещение, из которого выполняется копирование.</param>
        <param name="destination">Назначение <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Смещение, в которое выполняется копирование.</param>
        <param name="amount">Количество данных, которое необходимо скопировать, в байтах.</param>
        <summary>Копирует из <see cref="T:System.Data.OracleClient.OracleBFile" /> в объект назначения <see cref="T:System.Data.OracleClient.OracleLob" />, с заданным объемом данных, смещением источника и смещением объекта назначения.</summary>
        <returns>Скопированное число байт.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile> и назначение <xref:System.Data.OracleClient.OracleLob> должны быть совместимы. Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob> с символьными данными.  
  
 Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob> для <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> операции будет выполняться правильно.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра количества меньше нуля или больше 4 гигабайт.</exception>
        <exception cref="T:System.ArgumentNullException">Конечный объект <see langword="OracleLob" /> представляет собой ссылку на пустой объект.</exception>
        <exception cref="T:System.InvalidOperationException">Объект назначение <see langword="OracleLob" /> является пустым.  
  
 - или -  
  
 Подключение, с которым связан данный объект <see langword="OracleBFile" />, закрыто.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see langword="OracleBFile" /> закрыт или удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя объекта DIRECTORY, с которым связан объект <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Имя объекта DIRECTORY.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый НЕПУСТОЙ <xref:System.Data.OracleClient.OracleBFile> объект связан с двумя сущностями, определяющими местоположение базового физического файла:  
  
-   Объект Oracle DIRECTORY, который является псевдонимом базы данных для каталога в файловой системе.  
  
-   Имя файла базового физического файла, расположенного в каталоге, связанном с объектом DIRECTORY.  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Свойство возвращает имя объекта КАТАЛОГА из базы данных Oracle.  
  
 Дополнительные сведения о создании и использовании Oracle `BFILE`, см. в соответствующем разделе в документации Oracle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Выполняет попытку вызвать <see langword="DirectoryName" /> для закрытого или удаленного объекта <see langword="OracleBFile" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, существует ли в операционной системе файл, в котором содержатся данные типа <see langword="BFILE" />.</summary>
        <value>
          Значение <see langword="true" />, если файл, содержащий данные типа <see langword="BFILE" />, существует; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Data.OracleClient.OracleBFile" /> закрыт или удален.</exception>
        <exception cref="T:System.InvalidOperationException">Подключение, с которым связан <see langword="BFILE" />, закрыто.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя <see langword="BFILE" /> без пути.</summary>
        <value>Имя BFILE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Data.OracleClient.OracleBFile.Null>, возвращается пустая строка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Data.OracleClient.OracleBFile" /> закрыт или удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>В настоящее время не поддерживается.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, определяющее, является ли <see cref="T:System.Data.OracleClient.OracleBFile" /> потоком <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</summary>
        <value>
          Значение <see langword="true" />, если <see cref="T:System.Data.OracleClient.OracleBFile" /> является потоком <see cref="F:System.Data.OracleClient.OracleBFile.Null" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, возвращающее длину файла, с которым связан объект <see cref="T:System.Data.OracleClient.OracleBFile" />, в байтах.</summary>
        <value>Длинное значение, представляющее длину файла в байтах.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия или удаления потока.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет пустой объект <see cref="T:System.Data.OracleClient.OracleBFile" />, который не привязан ни к какому файлу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> можно использовать, если требуется выполнить операцию сравнения для <xref:System.Data.OracleClient.OracleBFile> для определения допустимости значений NULL.  
  
 Любая попытка выполнить операцию чтения на <xref:System.Data.OracleClient.OracleBFile.Null> объекта выполняется успешно, но не возвращать данные. Любая попытка выполнить операцию записи в <xref:System.Data.OracleClient.OracleBFile.Null> объекта приводит к возникновению исключения. При выборе `BFILE` столбец, содержащий значение null возвращает <xref:System.Data.OracleClient.OracleBFile.Null>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущую позицию чтения в потоке <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Текущая позиция в потоке <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поиск в любом месте за пределами потока не поддерживается.  
  
 `Position` Свойства не хранить список число байтов из потока, который были использованы, пропущена, или оба.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выполняет попытку задать для позиции отрицательное значение или значение, превышающее длину потока.</exception>
        <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия или удаления потока.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив байтов. После завершения выполнения данного метода буфер содержит указанный массив байтов, в котором значения в интервале между <c>offset</c> и величиной (<c>offset</c> + <c>count</c>) заменены байтами, считанными из текущего источника.</param>
        <param name="offset">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается сохранение данных, считанных из текущего потока.</param>
        <param name="count">Максимальное количество байтов, которое должно быть считано из текущего потока.</param>
        <summary>Считывает последовательность байтов из текущего потока <see cref="T:System.Data.OracleClient.OracleBFile" /> и перемещает позицию внутри потока на число считанных байтов.</summary>
        <returns>Общее количество байтов, считанных в буфер. Это число может быть меньше, чем количество запрошенных байтов, если столько байтов в настоящее время недоступно, или равняться нулю, если достигнут конец файла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Read%2A> Метод считывать более `count` байтов из текущего потока и сохраняет их в `buffer` начиная `offset`. Текущее положение в потоке увеличивается на число считанных байтов; Однако при возникновении исключения текущее положение в потоке не изменяется. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Возвращает число считанных байтов. Возвращаемое значение равно нулю, только в том случае, если текущее положение находится в конце потока. <xref:System.Data.OracleClient.OracleBFile.Read%2A> будет блокироваться, пока не может прочитать хотя бы один байт данных, в случае, если данные недоступны. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Возвращает 0 только в том случае, если достигнут конец файла. <xref:System.Data.OracleClient.OracleBFile.Read%2A> может вернуть меньше байтов, чем было запрошено, даже если не достигнут конец потока.  
  
 Любая попытка доступа к закрытому <xref:System.Data.OracleClient.OracleBFile> с помощью <xref:System.Data.OracleClient.OracleBFile.Read%2A> или <xref:System.Data.OracleClient.OracleBFile.Seek%2A> повторно открывает методы <xref:System.Data.OracleClient.OracleBFile> поток включается автоматически.  
  
 В следующем примере C# предполагается этой схемы в таблице Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 В примере показано использование <xref:System.Data.OracleClient.OracleBFile.Read%2A> и <xref:System.Data.OracleClient.OracleBFile.Seek%2A> методы для доступа к <xref:System.Data.OracleClient.OracleBFile> объекта.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</exception>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="buffer" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</exception>
        <exception cref="T:System.InvalidOperationException">Подключение, с которым связан <see langword="BFILE" />, закрыто.</exception>
        <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
        <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия или удаления потока.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение в байтах по отношению к источнику. Если значение параметра <c>offset</c> является отрицательным, новая позиция будет предшествовать позиции, заданной параметром <c>origin</c>, при этом расстояние между позициями будет равняться числу байтов, заданному параметром <c>offset</c>. Если значение параметра <c>offset</c> равно нулю, новая позиция будет совпадать с позицией, заданной параметром <c>origin</c>. Если значение параметра <c>offset</c> является положительным, новая позиция будет следовать за позицией, заданной параметром <c>origin</c>, при этом расстояние между позициями будет равняться числу байтов, заданному параметром <c>offset</c>.</param>
        <param name="origin">Значение типа <see langword="System.IO.SeekOrigin" />, указывающее точку ссылки, которая используется для получения новой позиции.</param>
        <summary>Задает позицию в текущем потоке <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <returns>Новая позиция в текущем потоке.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `offset` является отрицательным, новая позиция должна предшествовать позиции, заданной параметром `origin` на число байтов, указанное в `offset`. Если `offset` равен нулю, новая позиция должна быть задана с помощью `origin`. Если `offset` положительное, новое положение должно следовать за позиции, указанной параметром `origin` на число байтов, указанное в `offset`.  
  
 Поиск в любом месте за пределами потока не поддерживается.  
  
 Любая попытка доступа к закрытому <xref:System.Data.OracleClient.OracleBFile> с помощью <xref:System.Data.OracleClient.OracleBFile.Read%2A> или <xref:System.Data.OracleClient.OracleBFile.Seek%2A> повторно открывает методы <xref:System.Data.OracleClient.OracleBFile> поток включается автоматически.  
  
 В следующем примере C# предполагается этой схемы в таблице Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 В примере показано использование <xref:System.Data.OracleClient.OracleBFile.Read%2A> и <xref:System.Data.OracleClient.OracleBFile.Seek%2A> методы для доступа к <xref:System.Data.OracleClient.OracleBFile> объекта.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выполняет попытку задать для позиции отрицательное значение или значение, превышающее длину потока.</exception>
        <exception cref="T:System.ObjectDisposedException">Методы были вызваны после закрытия или удаления потока.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">Псевдоним объекта папки, в которой содержится физический файл.</param>
        <param name="file">Имя файла в операционной системе.</param>
        <summary>Привязывает объект <see cref="T:System.Data.OracleClient.OracleBFile" /> к другому файлу в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> Операция должна быть в пределах транзакции, для успешного выполнения. Просто вызов <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> на `BFILE` связывает <xref:System.Data.OracleClient.OracleBFile> объекта с другим файлом, но не обновлять таблицу Oracle. Чтобы обновить таблицу Oracle после вызова <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, необходимо вызвать `Update` метод <xref:System.Data.OracleClient.OracleDataAdapter> и затем зафиксировать транзакцию.  
  
 После получения <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> или <xref:System.Data.OracleClient.OracleBFile.FileName%2A> свойства, они сохраняются в кэше <xref:System.Data.OracleClient.OracleBFile> объекта и не влияет на любой клонировать <xref:System.Data.OracleClient.OracleBFile> вызовы объектов <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, или путем изменения `BFILE` в базе данных. Другими словами, они не могут представлять фактические значения `BFILE` объект на сервере.  
  
 Кроме того, получения любого свойства (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> или <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) приводит оба значения свойств, которые извлекаются с сервера и кэшируются в <xref:System.Data.OracleClient.OracleBFile> объекта.  
  
 В следующем примере C# предполагается этой схемы в таблице Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 В примере показано использование <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> и <xref:System.Data.OracleClient.OracleBFile.Seek%2A> методы для доступа к <xref:System.Data.OracleClient.OracleBFile> объекта.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Данная операция должна быть в транзакции.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">В настоящее время не поддерживается.</param>
        <summary>В настоящее время не поддерживается.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Исключение, которое выдается, если вызываемый метод не поддерживается, или при попытке чтения, поиска или записи в поток, который не поддерживает вызванную функцию.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />, в котором содержатся данные <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>
          <see cref="T:System.Array" /> типа <see cref="T:System.Byte" />, в котором содержатся данные <see cref="T:System.Data.OracleClient.OracleBFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Value%2A> Свойство считывает весь `BFILE` за один раз.  
  
> [!NOTE]
>  Преимуществом использования `BFILE`s является возможность извлечения больших фрагментов данных на клиенте. Тем не менее, при использовании <xref:System.Data.OracleClient.OracleBFile.Value%2A>, получение всех данных для столбца BFILE как одного непрерывного фрагмента, который может существенно увеличить нагрузку приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">В настоящее время не поддерживается.</param>
        <param name="offset">В настоящее время не поддерживается.</param>
        <param name="count">В настоящее время не поддерживается.</param>
        <summary>В настоящее время не поддерживается.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Исключение, которое выдается, если вызываемый метод не поддерживается, или при попытке чтения, поиска или записи в поток, который не поддерживает вызванную функцию.</exception>
      </Docs>
    </Member>
  </Members>
</Type>