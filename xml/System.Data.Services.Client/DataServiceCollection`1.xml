<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f7b278d015e6d86633b4ded520037c7d887e501" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Тип сущности.</typeparam>
    <summary>Представляет динамическую коллекцию сущностей, которая выдает уведомления при добавлении, удалении элементов или при обновлении списка.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] предоставляет <xref:System.Data.Services.Client.DataServiceCollection%601> класс для поддержки привязки данных к элементам управления в клиентских приложениях. Этот класс наследует от <xref:System.Collections.ObjectModel.ObservableCollection%601> класса, который реализует <xref:System.Collections.Specialized.INotifyCollectionChanged> интерфейса и является основным механизмом привязки данных для Windows Presentation Foundation (WPF) и приложений на основе Silverlight.  
  
 Загрузить коллекцию привязок <xref:System.Collections.ObjectModel.ObservableCollection%601> можно с помощью любой коллекции, реализующей интерфейс <xref:System.Collections.Generic.IEnumerable%601>. Элементы, загруженные в коллекцию привязок, должны реализовать интерфейс <xref:System.ComponentModel.INotifyPropertyChanged>. Дополнительные сведения см. в разделе [привязка данных к элементам управления](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 Следующий пример взят из страницы с выделенным кодом для страницы на языке XAML, которая определяет окно `SalesOrders` в WPF. При загрузке окна создается коллекция <xref:System.Data.Services.Client.DataServiceCollection%601> на основе результатов запроса, который возвращает данные о клиентах со связанными объектами, отфильтрованными по стране. Результат привязывается к свойству <xref:System.Windows.FrameworkElement.DataContext%2A> объекта <xref:System.Windows.Controls.StackPanel>, являющегося корневым элементом управления макетом в окне WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 Ниже приводится код XAML, определяющий окно `SalesOrders` в WPF для предыдущего примера.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Автоматическое отслеживание изменений начинается после загрузки элементов в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Запрос <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, которые используются для инициализации коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основе выполнения запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекция объектов <xref:System.Collections.Generic.IEnumerable%601>, предоставляемых для `items`, обычно представляет собой запрос, который возвращает элементы в коллекцию. При этом может поставляться любая коллекция <xref:System.Collections.Generic.IEnumerable%601> правильного типа.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">Контекст <see cref="T:System.Data.Services.Client.DataServiceContext" /> используется для отслеживания изменений объектов в коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />, использующий указанный <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания пустой коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, в которую можно добавлять объекты сущностей без выполнения запроса службы или в случае, если недоступно перечисление <xref:System.Collections.Generic.IEnumerable%601>.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, которое указывает, будут ли автоматически отслеживаться изменения, внесенные в элементы в коллекции,</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основе выполнения запроса и с указанным режимом отслеживания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Используйте этот конструктор классов и укажите значение <xref:System.Data.Services.Client.TrackingMode.None> для `trackingMode`, чтобы создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, использующий отслеживание изменений вручную. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Коллекция объектов <xref:System.Collections.Generic.IEnumerable%601>, предоставляемых для `items`, обычно представляет собой запрос, который возвращает элементы в коллекцию. При этом может поставляться любая коллекция <xref:System.Collections.Generic.IEnumerable%601> правильного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Data.Services.Client.DataServiceContext" />, используемый для отслеживания элементов в коллекции.</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущности.</param>
        <param name="collectionChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущностей в коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> с предоставленными делегатами метода изменений, который использует указанный <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания пустой коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, в которую можно добавлять объекты сущностей без выполнения запроса службы или в случае, если недоступно перечисление <xref:System.Collections.Generic.IEnumerable%601>.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, которое указывает, будут ли автоматически отслеживаться изменения, внесенные в элементы в коллекции,</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущности.</param>
        <param name="collectionChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущностей в коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основе выполнения запроса и с указанными делегатами метода изменений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функции `entityChanged` и `collectionChanged` вызываются соответственно событиями <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. Метод `entityChanged` принимает значение <xref:System.Data.Services.Client.EntityCollectionChangedParams>, а метод `collectionChanged` принимает значение <xref:System.Data.Services.Client.EntityChangedParams>. Оба метода должны возвращать логическое значение, указывающее, было ли событие обработано функцией. Когда этот метод возвращает `true`, по-прежнему используется поведение по умолчанию.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Data.Services.Client.DataServiceContext" />, используемый для отслеживания элементов в коллекции.</param>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, которое указывает, будут ли автоматически отслеживаться изменения, внесенные в элементы в коллекции,</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущности.</param>
        <param name="collectionChangedCallback">Делегат, инкапсулирующий метод, который вызывается при изменении сущностей в коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основе выполнения запроса с указанными делегатами метода изменений и использует указанный <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Используйте этот конструктор классов и укажите значение <xref:System.Data.Services.Client.TrackingMode.None> для `trackingMode`, чтобы создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, использующий отслеживание изменений вручную. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Data.Services.Client.DataServiceContext> должен всегда предоставляться, если `items` не является <xref:System.Data.Services.Client.DataServiceQuery%601> или <xref:System.Data.Services.Client.QueryOperationResponse%601>, ссылающимся на экземпляр <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Функции `entityChanged` и `collectionChanged` вызываются соответственно событиями <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. Метод `entityChanged` принимает значение <xref:System.Data.Services.Client.EntityCollectionChangedParams>, а метод `collectionChanged` принимает значение <xref:System.Data.Services.Client.EntityChangedParams>. Оба метода должны возвращать логическое значение, указывающее, было ли событие обработано функцией. Когда этот метод возвращает `true`, поведение по умолчанию будет выполняться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">При значении <see langword="true" /> отсоединяет все элементы от контекста <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Удаляет все элементы из коллекции и при необходимости отсоединяет все элементы из <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При отсоединении элемента все связанные объекты в графе данных также отсоединяются от <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект-продолжение, который используется для возврата следующего набора результатов, разбитых по страницам.</summary>
        <value>Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, который содержит URI для возврата следующего набора результатов, разбитых по страницам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> возвращает ссылку, которая используется для доступа к следующему набору результатов, разбитых по страницам, если в службе данных включено разбиение по страницам. Дополнительные сведения см. в разделе [Настройка службы данных](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 При загрузке постраничного результата в <xref:System.Data.Services.Client.DataServiceCollection%601> необходимо явно загрузить страницы путем вызова метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> в коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, передавая результат выполнения URI, полученный из свойства <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A>.  
  
   
  
## Examples  
 Следующий пример взят из страницы с выделенным кодом для страницы на языке XAML, которая определяет окно `SalesOrders` в WPF. При загрузке окна создается коллекция <xref:System.Data.Services.Client.DataServiceCollection%601> на основе результатов запросов клиентов, отфильтрованных по стране. Загружаются все страницы разбитого на страницы результата вместе со связанными заказами. После этого данные привязываются к свойству <xref:System.Windows.FrameworkElement.DataContext%2A> объекта <xref:System.Windows.Controls.StackPanel>, который является корневым элементом управления макетом в окне WPF. Дополнительные сведения см. в разделе [как: привязка данных к элементам Windows Presentation Foundation](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md).  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отключает отслеживание <see cref="T:System.Data.Services.Client.DataServiceContext" /> всех элементов в коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> можно вызывать только в том случае, если <xref:System.Data.Services.Client.DataServiceCollection%601> является корневой коллекцией.  
  
 Если метод <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> вызывается для коллекции, которая является корневой, отслеживание также прекращается для всех связанных объектов в графе данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">Индекс, по которому добавляется элемент.</param>
        <param name="item">Добавляемый элемент.</param>
        <summary>Добавляет указанный элемент в коллекцию по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если отслеживание изменений в коллекции выполняется вручную, необходимо переопределить метод <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A>, чтобы предотвратить автоматическое добавление элементов в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает сущности в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Коллекция объектов сущностей, добавляемая к <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Загружает коллекцию объектов сущностей в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метод <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> присоединяет все объекты в коллекции, если они еще не присоединены к <xref:System.Data.Services.Client.DataServiceContext>, который связан с <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Если объект присоединен с помощью метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, присоединяются также все связанные объекты.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">Добавляемый объект сущности.</param>
        <summary>Загружает один объект сущности в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метод <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> присоединяет объект, если он еще не присоединен к <xref:System.Data.Services.Client.DataServiceContext>, который связан с <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Если объект присоединен с помощью метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, присоединяются также все связанные объекты.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>