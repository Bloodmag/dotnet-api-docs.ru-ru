<Type Name="SqlBulkCopy" FullName="System.Data.SqlClient.SqlBulkCopy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a80d561b0c9bc59b9ca0282a097b2b36df933f88" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36681050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopy : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopy extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopy&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopy sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SqlBulkCopy = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f9b00-101">Обеспечивает эффективную массовую загрузку таблицы SQL Server данными из другого источника.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9b00-101">Lets you efficiently bulk load a SQL Server table with data from another source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-102">Microsoft SQL Server включает популярную программу командной строки **bcp** для перемещения данных из одной таблицы в другую, либо на одном сервере или между серверами.</span><span class="sxs-lookup"><span data-stu-id="f9b00-102">Microsoft SQL Server includes a popular command-prompt utility named **bcp** for moving data from one table to another, whether on a single server or between servers.</span></span> <span data-ttu-id="f9b00-103"><xref:System.Data.SqlClient.SqlBulkCopy> Позволяет разрабатывать решения на управляемом коде, обеспечивающие аналогичную функциональность.</span><span class="sxs-lookup"><span data-stu-id="f9b00-103">The <xref:System.Data.SqlClient.SqlBulkCopy> class lets you write managed code solutions that provide similar functionality.</span></span> <span data-ttu-id="f9b00-104">Существуют другие способы загрузки данных в таблицу SQL Server (инструкции INSERT, например), но <xref:System.Data.SqlClient.SqlBulkCopy> предлагает значительное преимущество в производительности по ним.</span><span class="sxs-lookup"><span data-stu-id="f9b00-104">There are other ways to load data into a SQL Server table (INSERT statements, for example), but <xref:System.Data.SqlClient.SqlBulkCopy> offers a significant performance advantage over them.</span></span>  
  
 <span data-ttu-id="f9b00-105">Класс <xref:System.Data.SqlClient.SqlBulkCopy> может использоваться для записи данных только в таблицы SQL Server.</span><span class="sxs-lookup"><span data-stu-id="f9b00-105">The <xref:System.Data.SqlClient.SqlBulkCopy> class can be used to write data only to SQL Server tables.</span></span> <span data-ttu-id="f9b00-106">Источник данных не только SQL Server; можно использовать любой источник данных, при условии, что данные можно будет загрузить в <xref:System.Data.DataTable> экземпляра или считать <xref:System.Data.IDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-106">However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <xref:System.Data.DataTable> instance or read with a <xref:System.Data.IDataReader> instance.</span></span>  
  
 <span data-ttu-id="f9b00-107"><xref:System.Data.SqlClient.SqlBulkCopy> завершится ошибкой, если осуществлять массовую загрузку <xref:System.Data.DataTable> столбец типа <xref:System.Data.SqlTypes.SqlDateTime> в SQL Server добавлен столбец, тип которого является одним из типов даты и времени в SQL Server 2008.</span><span class="sxs-lookup"><span data-stu-id="f9b00-107"><xref:System.Data.SqlClient.SqlBulkCopy> will fail when bulk loading a <xref:System.Data.DataTable> column of type <xref:System.Data.SqlTypes.SqlDateTime> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-108">Следующее приложение командной строки демонстрирует, как загружать данные при помощи класса <xref:System.Data.SqlClient.SqlBulkCopy>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-108">The following console application demonstrates how to load data using the <xref:System.Data.SqlClient.SqlBulkCopy> class.</span></span> <span data-ttu-id="f9b00-109">В этом примере <xref:System.Data.SqlClient.SqlDataReader> используется для копирования данных из **Production.Product** таблицы в SQL Server **AdventureWorks** базы данных в аналогичную таблицу в той же базе данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-109">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-110">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-110">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-111">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-111">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-112">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-112">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-113">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-113">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="f9b00-114">Уже открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />, который будет использоваться для выполнения массового копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-114">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation.</span>
          </span>
          <span data-ttu-id="f9b00-115">Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-115">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-116">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />, используя открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-116">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-117">Так как подключение уже открыто при <xref:System.Data.SqlClient.SqlBulkCopy> экземпляр инициализирован, подключение остается открытым после <xref:System.Data.SqlClient.SqlBulkCopy> экземпляр закрыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-117">Because the connection is already open when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is initialized, the connection remains open after the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="f9b00-118">Если `connection` аргумент имеет значение null, <xref:System.ArgumentNullException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-118">If the `connection` argument is null, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-119">Следующее консольное приложение демонстрирует массовой загрузки данных с помощью соединения, который уже открыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-119">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="f9b00-120">В этом примере <xref:System.Data.SqlClient.SqlDataReader> используется для копирования данных из **Production.Product** таблицы в SQL Server **AdventureWorks** базы данных в аналогичную таблицу в той же базе данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-120">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span> <span data-ttu-id="f9b00-121">Этот пример приведен только в качестве демонстрации.</span><span class="sxs-lookup"><span data-stu-id="f9b00-121">This example is for demonstration purposes only.</span></span> <span data-ttu-id="f9b00-122">Нет смысла использовать `SqlBulkCopy` для перемещения данных из одной таблицы в другую в той же базе данных в реальном приложении.</span><span class="sxs-lookup"><span data-stu-id="f9b00-122">You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application.</span></span> <span data-ttu-id="f9b00-123">Обратите внимание, что источник данных не может быть установлено на SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-123">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-124">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-124">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-125">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-125">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-126">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-126">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="f9b00-127">Строка, определяющая подключение, которое будет открыто для использования экземпляром <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-127">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
          <span data-ttu-id="f9b00-128">Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> или <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> и <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-128">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-129">Инициализирует и открывает новый экземпляр класса<see cref="T:System.Data.SqlClient.SqlConnection" /> с использованием заданной <paramref name="connectionString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-129">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span>
          </span>
          <span data-ttu-id="f9b00-130">Этот конструктор использует <see cref="T:System.Data.SqlClient.SqlConnection" /> для инициализации нового экземпляра класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-130">The constructor uses the <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-131">Соединение закрывается автоматически в конце операции массового копирования.</span><span class="sxs-lookup"><span data-stu-id="f9b00-131">The connection is automatically closed at the end of the bulk copy operation.</span></span>  
  
 <span data-ttu-id="f9b00-132">Если `connectionString` имеет значение null, <xref:System.ArgumentNullException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-132">If `connectionString` is null, an <xref:System.ArgumentNullException> is thrown.</span></span> <span data-ttu-id="f9b00-133">Если `connectionString` является пустой строкой, <xref:System.ArgumentException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-133">If `connectionString` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-134">В следующем консольном приложении демонстрируется массовая загрузка данных с использованием заданной строки подключения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-134">The following console application demonstrates how to bulk load data by using a connection specified as a string.</span></span> <span data-ttu-id="f9b00-135">Соединение закрывается автоматически при <xref:System.Data.SqlClient.SqlBulkCopy> экземпляр закрыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-135">The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="f9b00-136">В этом примере исходные данные сначала считывается из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-136">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-137">Источник данных не имеет должны размещаться в SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-137">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-138">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-138">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-139">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-139">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-140">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-140">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, copyOptions As SqlBulkCopyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString, System::Data::SqlClient::SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string * System.Data.SqlClient.SqlBulkCopyOptions -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connectionString, copyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="f9b00-141">Строка, определяющая подключение, которое будет открыто для использования экземпляром <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-141">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
          <span data-ttu-id="f9b00-142">Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> или <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> и <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-142">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <param name="copyOptions">
          <span data-ttu-id="f9b00-143">Комбинация значений из перечисления <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" />, определяющая, какие строки из источника данных будут скопированы в конечную таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-143">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-144">Инициализирует и открывает новый экземпляр класса<see cref="T:System.Data.SqlClient.SqlConnection" /> с использованием заданной <paramref name="connectionString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-144">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span>
          </span>
          <span data-ttu-id="f9b00-145">Этот конструктор использует <see cref="T:System.Data.SqlClient.SqlConnection" /> для инициализации нового экземпляра класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-145">The constructor uses that <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
          <span data-ttu-id="f9b00-146">Экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" /> ведет себя соответственно установкам, заданным в параметре <paramref name="copyOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-146">The <see cref="T:System.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-147">Можно получить подробные сведения обо всех параметрах массового копирования в <xref:System.Data.SqlClient.SqlBulkCopyOptions> разделе.</span><span class="sxs-lookup"><span data-stu-id="f9b00-147">You can obtain detailed information about all the bulk copy options in the <xref:System.Data.SqlClient.SqlBulkCopyOptions> topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-148">Следующее консольное приложение демонстрирует выполнение массовой загрузки с использованием заданной строки подключения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-148">The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</span></span> <span data-ttu-id="f9b00-149">Включен режим использовать значение в столбце идентификаторов исходной таблицы во время загрузки в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-149">An option is set to use the value in the identity column of the source table when you load the destination table.</span></span> <span data-ttu-id="f9b00-150">В этом примере исходные данные сначала считывается из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-150">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-151">Исходная таблица и целевая таблица содержат столбец идентификаторов.</span><span class="sxs-lookup"><span data-stu-id="f9b00-151">The source table and destination table each include an Identity column.</span></span> <span data-ttu-id="f9b00-152">По умолчанию, новое значение для **удостоверение** столбец создается в целевой таблице для каждой добавляемой строки.</span><span class="sxs-lookup"><span data-stu-id="f9b00-152">By default, a new value for the **Identity** column is generated in the destination table for each row added.</span></span> <span data-ttu-id="f9b00-153">В этом примере был установлен при открытии соединения принудительное использование процессом массовой загрузки **удостоверение** вместо значений из исходной таблицы.</span><span class="sxs-lookup"><span data-stu-id="f9b00-153">In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead.</span></span> <span data-ttu-id="f9b00-154">Чтобы увидеть, как параметр изменяет способ массовой загрузки, выполните этот пример с **dbo. BulkCopyDemoMatchingColumns** пустая таблица.</span><span class="sxs-lookup"><span data-stu-id="f9b00-154">To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty.</span></span> <span data-ttu-id="f9b00-155">Все строки, загруженные из источника.</span><span class="sxs-lookup"><span data-stu-id="f9b00-155">All rows load from the source.</span></span> <span data-ttu-id="f9b00-156">Затем выполните пример снова, не очищая таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-156">Then run the sample again without emptying the table.</span></span> <span data-ttu-id="f9b00-157">Возникает исключение и код выводит сообщение на консоль, уведомляющее о том, что строки не добавлены из-за нарушения ограничения первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="f9b00-157">An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-158">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-158">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-159">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-159">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-160">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-160">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions, class System.Data.SqlClient.SqlTransaction externalTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlBulkCopyOptions copyOptions, System::Data::SqlClient::SqlTransaction ^ externalTransaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlBulkCopyOptions * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connection, copyOptions, externalTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
        <Parameter Name="externalTransaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="f9b00-161">Уже открытый экземпляр <see cref="T:System.Data.SqlClient.SqlConnection" />, который будет использоваться для выполнения массового копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-161">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy.</span>
          </span>
          <span data-ttu-id="f9b00-162">Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-162">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span>
          </span>
        </param>
        <param name="copyOptions">
          <span data-ttu-id="f9b00-163">Комбинация значений из перечисления <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" />, определяющая, какие строки из источника данных будут скопированы в конечную таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-163">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span>
          </span>
        </param>
        <param name="externalTransaction">
          <span data-ttu-id="f9b00-164">Существующий экземпляр <see cref="T:System.Data.SqlClient.SqlTransaction" />, для которого будет выполняться массовое копирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-164">An existing <see cref="T:System.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-165">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />, используя заданный открытый экземпляр класса <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-165">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
          <span data-ttu-id="f9b00-166">Экземпляр <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> ведет себя соответственно установкам, заданным в параметре <paramref name="copyOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-166">The <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span>
          </span>
          <span data-ttu-id="f9b00-167">Если задан объект <see cref="T:System.Data.SqlClient.SqlTransaction" />, не равный null, операция копирования выполняется в рамках транзакции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-167">If a non-null <see cref="T:System.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-168">Если параметры включают в себя `UseInternalTransaction` и `externalTransaction` аргумент не равен null, **InvalidArgumentException** возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-168">If options include `UseInternalTransaction` and the `externalTransaction` argument is not null, an **InvalidArgumentException** is thrown.</span></span>  
  
 <span data-ttu-id="f9b00-169">Примеры, демонстрирующие использование `SqlBulkCopy` в транзакции, в разделе [транзакции и операции массового копирования](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-169">For examples demonstrating how to use `SqlBulkCopy` in a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-170">Количество строк в каждом пакете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-170">Number of rows in each batch.</span>
          </span>
          <span data-ttu-id="f9b00-171">В конце каждого пакета строки, содержащиеся в пакете, отправляются на сервер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-171">At the end of each batch, the rows in the batch are sent to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-172">Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> или нуль, если его значение не задано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-172">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-173">Пакет — полный при <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> обработки строк, или отсутствуют дополнительные строки для отправки в целевой источник данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-173">A batch is complete when <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows have been processed or there are no more rows to send to the destination data source.</span></span>  
  
 <span data-ttu-id="f9b00-174">Ноль (по умолчанию) указывает, что каждый <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> операция представляет один пакет.</span><span class="sxs-lookup"><span data-stu-id="f9b00-174">Zero (the default) indicates that each <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is a single batch.</span></span>  
  
 <span data-ttu-id="f9b00-175">Если <xref:System.Data.SqlClient.SqlBulkCopy> экземпляр был объявлен без <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> параметр фактически строки отправляются на сервер <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> берется строк во время, но никакие действия, связанные с транзакциями.</span><span class="sxs-lookup"><span data-stu-id="f9b00-175">If the <xref:System.Data.SqlClient.SqlBulkCopy> instance has been declared without the <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> option in effect, rows are sent to the server <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows at a time, but no transaction-related action is taken.</span></span> <span data-ttu-id="f9b00-176">Если <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> действует, каждый пакет строк вставляется как отдельная транзакция.</span><span class="sxs-lookup"><span data-stu-id="f9b00-176">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is in effect, each batch of rows is inserted as a separate transaction.</span></span>  
  
 <span data-ttu-id="f9b00-177"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> Может быть установлено в любое время.</span><span class="sxs-lookup"><span data-stu-id="f9b00-177">The <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> property can be set at any time.</span></span> <span data-ttu-id="f9b00-178">Если уже выполняется массовое копирование, текущий пакет изменяется в соответствии с размером предыдущего пакета.</span><span class="sxs-lookup"><span data-stu-id="f9b00-178">If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</span></span> <span data-ttu-id="f9b00-179">Последующие пакеты используют новый размер.</span><span class="sxs-lookup"><span data-stu-id="f9b00-179">Subsequent batches use the new size.</span></span> <span data-ttu-id="f9b00-180">Если <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> равно нулю и измененные при <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> операция уже выполняется, что операция загружает данные в виде единого пакета.</span><span class="sxs-lookup"><span data-stu-id="f9b00-180">If the <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> is initially zero and changed while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is already in progress, that operation loads the data as a single batch.</span></span> <span data-ttu-id="f9b00-181">Любые последующие <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> операций на том же <xref:System.Data.SqlClient.SqlBulkCopy> используйте новый экземпляр <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-181">Any subsequent <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operations on the same <xref:System.Data.SqlClient.SqlBulkCopy> instance use the new <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-182">Следующее консольное приложение демонстрирует массовой загрузки данных в пакетах 50 строк.</span><span class="sxs-lookup"><span data-stu-id="f9b00-182">The following console application demonstrates how to bulk load data in batches of 50 rows.</span></span> <span data-ttu-id="f9b00-183">Для наглядного примера как <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> работает с транзакциями, в разделе [транзакции и операции массового копирования](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-183">For an example illustrating how <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> works with a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 <span data-ttu-id="f9b00-184">В этом примере исходные данные сначала считывается из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-184">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-185">Источник данных не имеет должны размещаться в SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-185">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-186">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-186">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-187">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-187">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-188">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-188">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulkCopyTimeout">
      <MemberSignature Language="C#" Value="public int BulkCopyTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulkCopyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BulkCopyTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulkCopyTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulkCopyTimeout : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-189">Число секунд, отводимых для завершения операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-189">Number of seconds for the operation to complete before it times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-190">Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-190">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property.</span>
          </span>
          <span data-ttu-id="f9b00-191">По умолчанию используется значение 30 секунд.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-191">The default is 30 seconds.</span>
          </span>
          <span data-ttu-id="f9b00-192">Значение 0 означает отсутствие ограничений. Операция массового копирования будет находиться в состоянии ожидания бесконечно долго.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-192">A value of 0 indicates no limit; the bulk copy will wait indefinitely.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-193">Если операция включает время ожидания, транзакция не фиксируется и все скопированные строки будут удалены из целевой таблицы.</span><span class="sxs-lookup"><span data-stu-id="f9b00-193">If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-194">В следующем консольном приложении показано, как изменить время ожидания до 60 секунд при массовой загрузке данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-194">The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</span></span>  
  
 <span data-ttu-id="f9b00-195">В этом примере исходные данные сначала считывается из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-195">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-196">Источник данных не имеет должны размещаться в SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-196">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-197">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-197">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-198">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-198">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-199">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать [!INCLUDE[tsql](~/includes/tsql-md.md)] `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-199">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="sqlBulkCopy.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-200">Закрывает экземпляр <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-200">Closes the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-201">После вызова метода <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> на <xref:System.Data.SqlClient.SqlBulkCopy> объекта, никакая другая операция не завершится.</span><span class="sxs-lookup"><span data-stu-id="f9b00-201">After you call a <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> on the <xref:System.Data.SqlClient.SqlBulkCopy> object, no other operation will succeed.</span></span> <span data-ttu-id="f9b00-202">Вызовы <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> метод вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-202">Calls to the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9b00-203">Вызов <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> метод <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> событие вызывает <xref:System.InvalidOperationException> исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-203">Calling the <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method from the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event causes an <xref:System.InvalidOperationException> to be thrown.</span></span>  
  
 <span data-ttu-id="f9b00-204">Обратите внимание, что открыть <xref:System.Data.SqlClient.SqlBulkCopy> экземпляры закрыты неявно в конце `using` блока.</span><span class="sxs-lookup"><span data-stu-id="f9b00-204">Note that open <xref:System.Data.SqlClient.SqlBulkCopy> instances are closed implicitly at the end of a `using` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-205">В следующем примере используется же <xref:System.Data.SqlClient.SqlBulkCopy> добавляемый экземпляр заказы на продажу и связанных с ними сведений в две таблицы назначения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-205">The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables.</span></span> <span data-ttu-id="f9b00-206">Поскольку **AdventureWorks** таблиц заказов на продажу слишком велик, образец считывает только заказы, размещенные несколько учетных записей и копирует эти заказы и данных в целевые таблицы.</span><span class="sxs-lookup"><span data-stu-id="f9b00-206">Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</span></span> <span data-ttu-id="f9b00-207"><xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> Метод используется только после выполнения обеих операций массового копирования.</span><span class="sxs-lookup"><span data-stu-id="f9b00-207">The <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method is used only after both bulk copy operations are complete.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-208">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-208">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-209">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-209">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-210">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-210">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ ColumnMappings { System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" Usage="System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-211">Возвращает коллекцию элементов <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-211">Returns a collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items.</span>
          </span>
          <span data-ttu-id="f9b00-212">Сопоставления столбцов определяют связи между столбцами в источнике данных и столбцами в месте назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-212">Column mappings define the relationships between columns in the data source and columns in the destination.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-213">Коллекция сопоставлений столбцов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-213">A collection of column mappings.</span>
          </span>
          <span data-ttu-id="f9b00-214">По умолчанию является пустой коллекцией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-214">By default, it is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-215">Если источник данных и целевой таблицы имеют одинаковое количество столбцов, а также порядковый номер каждого исходного столбца в источнике данных соответствует порядковый номер соответствующего столбца назначения <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> коллекции не требуется.</span><span class="sxs-lookup"><span data-stu-id="f9b00-215">If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is unnecessary.</span></span> <span data-ttu-id="f9b00-216">Тем не менее, если столбец количества различаются или порядковые не соответствуют, необходимо использовать <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> чтобы убедиться в том, что данные копируются в нужные столбцы.</span><span class="sxs-lookup"><span data-stu-id="f9b00-216">However, if the column counts differ, or the ordinal positions are not consistent, you must use <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> to make sure that data is copied into the correct columns.</span></span>  
  
 <span data-ttu-id="f9b00-217">Во время выполнения операции массового копирования Чтобы получить доступ к этой коллекции, но не может быть изменено.</span><span class="sxs-lookup"><span data-stu-id="f9b00-217">During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</span></span> <span data-ttu-id="f9b00-218">Любая попытка изменить вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-218">Any attempt to change it will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Docs>
    </Member>
    <Member MemberName="DestinationTableName">
      <MemberSignature Language="C#" Value="public string DestinationTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationTableName : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-219">Имя целевой таблицы на сервере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-219">Name of the destination table on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-220">Строковое значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> или значение NULL, если значение не указано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-220">The string value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-221">Если <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> не был задан при <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> вызове <xref:System.ArgumentNullException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-221">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> has not been set when <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> is called, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="f9b00-222">Если <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> изменяется во время <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> операция выполняется, это изменение не влияет на текущую операцию.</span><span class="sxs-lookup"><span data-stu-id="f9b00-222">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is modified while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is running, the change does not affect the current operation.</span></span> <span data-ttu-id="f9b00-223">Новый <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> значение будет использоваться в следующий раз <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="f9b00-223">The new <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> value is used the next time a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called.</span></span>  
  
 <span data-ttu-id="f9b00-224"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> является именем трех частей (`<database>.<owningschema>.<name>`).</span><span class="sxs-lookup"><span data-stu-id="f9b00-224"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is a three-part name (`<database>.<owningschema>.<name>`).</span></span> <span data-ttu-id="f9b00-225">При выборе можно уточнить имя таблицы базы данных и схемы-владельца.</span><span class="sxs-lookup"><span data-stu-id="f9b00-225">You can qualify the table name with its database and owning schema if you choose.</span></span> <span data-ttu-id="f9b00-226">Тем не менее, если имя таблицы используется символ подчеркивания («_») или другие специальные символы, необходимо экранировать квадратные скобки, как в имени (`[<database>.<owningschema>.<name_01>]`).</span><span class="sxs-lookup"><span data-stu-id="f9b00-226">However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (`[<database>.<owningschema>.<name_01>]`).</span></span> <span data-ttu-id="f9b00-227">Дополнительные сведения см. в разделе «Идентификаторы» электронной документации по SQL Server.</span><span class="sxs-lookup"><span data-stu-id="f9b00-227">For more information, see "Identifiers" in SQL Server Books Online.</span></span>  
  
 <span data-ttu-id="f9b00-228">Можно выполнить массовое копирование данных во временную таблицу с помощью значения, такие как `tempdb..#table` или `tempdb.<owner>.#table` для <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="f9b00-228">You can bulk-copy data to a temporary table by using a value such as `tempdb..#table` or `tempdb.<owner>.#table` for the <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-229">Следующее консольное приложение демонстрирует массовой загрузки данных с помощью соединения, который уже открыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-229">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="f9b00-230">Целевой таблицы — это таблица **AdventureWorks** базы данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-230">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="f9b00-231">В этом примере сначала используется соединение для чтения данных из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-231">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-232">Источник данных не имеет должны размещаться в SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-232">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-233">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-233">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-234">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-234">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-235">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-235">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableStreaming">
      <MemberSignature Language="C#" Value="public bool EnableStreaming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableStreaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableStreaming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableStreaming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableStreaming : bool with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-236">Включает или отключает объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> для потоковой передачи данных из объекта <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-236">Enables or disables a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-237">
            <see langword="true" />, если объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> может осуществлять потоковую передачу данных из объекта <see cref="T:System.Data.IDataReader" />; в противном случае — значение false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-237">
              <see langword="true" /> if a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false.</span>
          </span>
          <span data-ttu-id="f9b00-238">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-238">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-239">Когда <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> — `true`, <xref:System.Data.SqlClient.SqlBulkCopy> считывает из <xref:System.Data.IDataReader> с помощью <xref:System.Data.CommandBehavior.SequentialAccess>, оптимизация использования памяти с помощью <xref:System.Data.IDataReader> возможности потоковой передачи.</span><span class="sxs-lookup"><span data-stu-id="f9b00-239">When <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> is `true`, <xref:System.Data.SqlClient.SqlBulkCopy> reads from an <xref:System.Data.IDataReader> object using <xref:System.Data.CommandBehavior.SequentialAccess>, optimizing memory usage by using the <xref:System.Data.IDataReader> streaming capabilities.</span></span> <span data-ttu-id="f9b00-240">Если значение false, <xref:System.Data.SqlClient.SqlBulkCopy> класс загружает все данные, возвращенные <xref:System.Data.IDataReader> объект в памяти перед отправкой в SQL Server или SQL Azure.</span><span class="sxs-lookup"><span data-stu-id="f9b00-240">When it’s set to false, the <xref:System.Data.SqlClient.SqlBulkCopy> class loads all the data returned by the <xref:System.Data.IDataReader> object into memory before sending it to SQL Server or SQL Azure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyAfter">
      <MemberSignature Language="C#" Value="public int NotifyAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyAfter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyAfter : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-241">Определяет количество строк, обрабатываемых перед созданием события уведомления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-241">Defines the number of rows to be processed before generating a notification event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9b00-242">Целочисленное значение свойства <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> или нуль, если его значение не задано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-242">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-243">Это свойство предназначено для компонентов пользовательского интерфейса, отображающих прогресс операции массового копирования.</span><span class="sxs-lookup"><span data-stu-id="f9b00-243">This property is designed for user interface components that illustrate the progress of a bulk copy operation.</span></span> <span data-ttu-id="f9b00-244">Он указывает количество строк, обрабатываемых перед созданием события уведомления.</span><span class="sxs-lookup"><span data-stu-id="f9b00-244">It indicates the number of rows to be processed before generating a notification event.</span></span> <span data-ttu-id="f9b00-245"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> Может быть установлено в любое время, даже во время операции массового копирования.</span><span class="sxs-lookup"><span data-stu-id="f9b00-245">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property can be set at any time, even while a bulk copy operation is underway.</span></span> <span data-ttu-id="f9b00-246">Изменения, внесенные во время операции массового копирования вступают в силу после следующего уведомления.</span><span class="sxs-lookup"><span data-stu-id="f9b00-246">Changes made during a bulk copy operation take effect after the next notification.</span></span> <span data-ttu-id="f9b00-247">Новый параметр применяется для всех последующих операций на том же экземпляре.</span><span class="sxs-lookup"><span data-stu-id="f9b00-247">The new setting applies to all subsequent operations on the same instance.</span></span>  
  
 <span data-ttu-id="f9b00-248">Если <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> следует устанавливать значение меньше нуля, <xref:System.ArgumentOutOfRangeException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-248">If <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> is set to a number less than zero, an <xref:System.ArgumentOutOfRangeException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-249">Следующее консольное приложение демонстрирует массовой загрузки данных с помощью соединения, который уже открыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-249">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="f9b00-250"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> Свойству, чтобы обработчик событий вызывается после каждых 50 строк копируются в таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-250">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="f9b00-251">В этом примере сначала используется соединение для чтения данных из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-251">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-252">Затем открывается второе подключение для массового копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-252">Then a second connection is opened to bulk copy the data.</span></span> <span data-ttu-id="f9b00-253">Обратите внимание, что источник данных не может быть установлено на SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-253">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-254">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-254">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-255">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-255">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-256">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-256">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlRowsCopied">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SqlRowsCopied As SqlRowsCopiedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowsCopiedEventHandler ^ SqlRowsCopied;" />
      <MemberSignature Language="F#" Value="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " Usage="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowsCopiedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-257">Генерируется всякий раз после обработки количества строк, заданного в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-257">Occurs every time that the number of rows specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-258">Обратите внимание, что параметры <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> и <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> независимы.</span><span class="sxs-lookup"><span data-stu-id="f9b00-258">Note that the settings of <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> and <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> are independent.</span></span> <span data-ttu-id="f9b00-259">Поступления из <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> событий не означает, что все строки, отправляются на сервер или зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="f9b00-259">Receipt of a <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event does not imply that any rows have been sent to the server or committed.</span></span>  
  
 <span data-ttu-id="f9b00-260">Не удается вызвать SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) или SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) из этого события.</span><span class="sxs-lookup"><span data-stu-id="f9b00-260">You cannot call SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) or SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) from this event.</span></span> <span data-ttu-id="f9b00-261">Результате <xref:System.InvalidOperationException> возникшего исключения и <xref:System.Data.SqlClient.SqlBulkCopy> состояние объекта не изменится.</span><span class="sxs-lookup"><span data-stu-id="f9b00-261">Doing this will cause an <xref:System.InvalidOperationException> being thrown, and the <xref:System.Data.SqlClient.SqlBulkCopy> object state will not change.</span></span> <span data-ttu-id="f9b00-262">Если пользователю необходимо отменить операцию от события, <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> свойства <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> может использоваться.</span><span class="sxs-lookup"><span data-stu-id="f9b00-262">If the user wants to cancel the operation from the event, the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property of the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> can be used.</span></span> <span data-ttu-id="f9b00-263">(См. [транзакции и операции массового копирования](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) примеры использования <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> свойство.)</span><span class="sxs-lookup"><span data-stu-id="f9b00-263">(See [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) for examples that use the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property.)</span></span>  
  
 <span data-ttu-id="f9b00-264">Никаких действий, например операций транзакций поддерживается в подключении во время выполнения операции массового копирования, а также рекомендуется не использовать то же подключение во время <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> событий.</span><span class="sxs-lookup"><span data-stu-id="f9b00-264">No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event.</span></span> <span data-ttu-id="f9b00-265">Тем не менее можно открыть другое подключение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-265">However, you can open a different connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-266">Следующее консольное приложение демонстрирует массовой загрузки данных с помощью соединения, который уже открыт.</span><span class="sxs-lookup"><span data-stu-id="f9b00-266">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="f9b00-267"><xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> Свойству, чтобы обработчик событий вызывается после каждых 50 строк копируются в таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-267">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="f9b00-268">В этом примере сначала используется соединение для чтения данных из таблицы SQL Server, чтобы <xref:System.Data.SqlClient.SqlDataReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="f9b00-268">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="f9b00-269">Обратите внимание, что источник данных не может быть установлено на SQL Server. можно использовать любой источник данных, который могут прочитать, чтобы <xref:System.Data.IDataReader> или загрузке в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-269">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-270">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-270">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-271">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-271">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-272">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-272">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-273">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-273">Releases all resources used by the current instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-274">Вызовите метод `Dispose` по окончании использования класса <xref:System.Data.SqlClient.SqlBulkCopy>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-274">Call `Dispose` when you are finished using the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="f9b00-275">Метод `Dispose` оставляет класс <xref:System.Data.SqlClient.SqlBulkCopy> в непригодном для использования состоянии.</span><span class="sxs-lookup"><span data-stu-id="f9b00-275">The `Dispose` method leaves the <xref:System.Data.SqlClient.SqlBulkCopy> in an unusable state.</span></span> <span data-ttu-id="f9b00-276">После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.Data.SqlClient.SqlBulkCopy> , сборщик мусора мог освободить память, <xref:System.Data.SqlClient.SqlBulkCopy> занимаемую.</span><span class="sxs-lookup"><span data-stu-id="f9b00-276">After calling `Dispose`, you must release all references to the <xref:System.Data.SqlClient.SqlBulkCopy> so the garbage collector can reclaim the memory that the <xref:System.Data.SqlClient.SqlBulkCopy> was occupying.</span></span>  
  
 <span data-ttu-id="f9b00-277">Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-277">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b00-278">Всегда вызывайте метод `Dispose` перед освобождением последней ссылки на класс <xref:System.Data.SqlClient.SqlBulkCopy>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-278">Always call `Dispose` before you release your last reference to the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="f9b00-279">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Data.SqlClient.SqlBulkCopy> метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="f9b00-279">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.SqlClient.SqlBulkCopy> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServer">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-280">Копирует все строки из источника данных в таблицу назначения, заданную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-280">Copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-281">Если несколько активных результирующих наборов (MARS) отключено, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> устанавливает подключение занято.</span><span class="sxs-lookup"><span data-stu-id="f9b00-281">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="f9b00-282">Если включен режим MARS, можно чередовать вызовы <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> с другими командами, в то же соединение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-282">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.Common.DbDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-283">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-283">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-284">Копирует все строки из заданного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, указанную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-284">Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (rows As DataRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataRow[] -&gt; unit" Usage="sqlBulkCopy.WriteToServer rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="f9b00-285">Массив объектов<see cref="T:System.Data.DataRow" />, подлежащих копированию в целевую таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-285">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-286">Копирует все строки из заданного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, указанную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-286">Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-287">Операция массового копирования во время выполнения, соответствующий целевой <xref:System.Data.SqlClient.SqlConnection> является его занят обслуживанием, и никакие другие операции можно выполнить для соединения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-287">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="f9b00-288"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Коллекции сопоставления из <xref:System.Data.DataRow> столбцы базы данных в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-288">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataRow> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-289">Следующее консольное приложение демонстрирует массовую загрузку данных из <xref:System.Data.DataRow> массива.</span><span class="sxs-lookup"><span data-stu-id="f9b00-289">The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array.</span></span> <span data-ttu-id="f9b00-290">Целевой таблицы — это таблица **AdventureWorks** базы данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-290">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="f9b00-291">В этом примере <xref:System.Data.DataTable> создается во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-291">In this example, a <xref:System.Data.DataTable> is created at run time.</span></span> <span data-ttu-id="f9b00-292">Одна строка выбирается из <xref:System.Data.DataTable> для копирования в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-292">A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-293">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-293">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-294">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-294">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-295">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-295">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable -&gt; unit" Usage="sqlBulkCopy.WriteToServer table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-296">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-296">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-297">Копирует все строки из заданного объекта <see cref="T:System.Data.DataTable" /> в целевую таблицу, указанную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-297">Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-298">Все строки в <xref:System.Data.DataTable> копируются в целевую таблицу, за исключением тех, которые были удалены.</span><span class="sxs-lookup"><span data-stu-id="f9b00-298">All rows in the <xref:System.Data.DataTable> are copied to the destination table except those that have been deleted.</span></span>  
  
 <span data-ttu-id="f9b00-299">Операция массового копирования во время выполнения, соответствующий целевой <xref:System.Data.SqlClient.SqlConnection> является его занят обслуживанием, и никакие другие операции можно выполнить для соединения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-299">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="f9b00-300"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Коллекции сопоставления из <xref:System.Data.DataTable> столбцы базы данных в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-300">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-301">Следующее консольное приложение демонстрирует массовую загрузку данных из <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-301">The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f9b00-302">Целевой таблицы — это таблица **AdventureWorks** базы данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-302">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="f9b00-303">В этом примере <xref:System.Data.DataTable> создается во время выполнения и является источником `SqlBulkCopy` операции.</span><span class="sxs-lookup"><span data-stu-id="f9b00-303">In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-304">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-304">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-305">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-305">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-306">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-306">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.IDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-307">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-307">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-308">Копирует все строки из заданного объекта <see cref="T:System.Data.IDataReader" /> в целевую таблицу, указанную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-308">Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-309">Операция копирования начинается следующую доступную строку в модуле чтения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-309">The copy operation starts at the next available row in the reader.</span></span> <span data-ttu-id="f9b00-310">В большинстве случаев, средство чтения просто возвращенный <xref:System.Data.IDbCommand.ExecuteReader%2A> или аналогичные вызов, поэтому следующую доступную строку является первой строкой.</span><span class="sxs-lookup"><span data-stu-id="f9b00-310">Most of the time, the reader was just returned by <xref:System.Data.IDbCommand.ExecuteReader%2A> or a similar call, so the next available row is the first row.</span></span> <span data-ttu-id="f9b00-311">Для обработки нескольких результатов, вызовите <xref:System.Data.IDataReader.NextResult%2A> в модуль чтения данных и вызов <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> еще раз.</span><span class="sxs-lookup"><span data-stu-id="f9b00-311">To process multiple results, call <xref:System.Data.IDataReader.NextResult%2A> on the data reader and call <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> again.</span></span>  
  
 <span data-ttu-id="f9b00-312">Обратите внимание, что использование <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> изменяет состояние средства чтения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-312">Note that using <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> modifies the state of the reader.</span></span> <span data-ttu-id="f9b00-313">Вызывает метод <xref:System.Data.IDataReader.Read%2A> до возвращается значение false, операция прервана или возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="f9b00-313">The method will call <xref:System.Data.IDataReader.Read%2A> until it returns false, the operation is aborted, or an error occurs.</span></span> <span data-ttu-id="f9b00-314">Это означает, что модуль чтения данных в другом состоянии, возможно, в конце результирующего набора, когда <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> операция будет завершена.</span><span class="sxs-lookup"><span data-stu-id="f9b00-314">This means that the data reader will be in a different state, probably at the end of the result set, when the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is complete.</span></span>  
  
 <span data-ttu-id="f9b00-315">Операция массового копирования во время выполнения, соответствующий целевой <xref:System.Data.SqlClient.SqlConnection> является его занят обслуживанием, и никакие другие операции можно выполнить для соединения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-315">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="f9b00-316"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Коллекции сопоставляет из данных столбцов чтения базы данных в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-316">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the data reader columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-317">Следующее консольное приложение демонстрирует массовую загрузку данных из <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-317">The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="f9b00-318">Целевой таблицы — это таблица **AdventureWorks** базы данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-318">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-319">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-319">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-320">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-320">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-321">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-321">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable, rowState As DataRowState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable * System.Data.DataRowState -&gt; unit" Usage="sqlBulkCopy.WriteToServer (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-322">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-322">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="f9b00-323">Значение из перечисления <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-323">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="f9b00-324">В целевую таблицу копируются только строки, соответствующие состоянию строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-324">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-325">Копирует только строки, соответствующие заданному состоянию строки, из заданного объекта <see cref="T:System.Data.DataTable" /> в целевую таблицу, указанную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-325">Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-326">Только строки в <xref:System.Data.DataTable> , находятся в состоянии, указанном в `rowState` аргумент и не были удалены, копируются в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-326">Only rows in the <xref:System.Data.DataTable> that are in the states indicated in the `rowState` argument and have not been deleted are copied to the destination table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9b00-327">Если <xref:System.Data.DataRowState.Deleted> указан, все <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, и <xref:System.Data.DataRowState.Modified> строки также будут скопированы на сервер.</span><span class="sxs-lookup"><span data-stu-id="f9b00-327">If <xref:System.Data.DataRowState.Deleted> is specified, any <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, and <xref:System.Data.DataRowState.Modified> rows will also be copied to the server.</span></span> <span data-ttu-id="f9b00-328">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="f9b00-328">No exception will be raised.</span></span>  
  
 <span data-ttu-id="f9b00-329">Операция массового копирования во время выполнения, соответствующий целевой <xref:System.Data.SqlClient.SqlConnection> является его занят обслуживанием, и никакие другие операции можно выполнить для соединения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-329">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="f9b00-330"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Коллекции сопоставления из <xref:System.Data.DataTable> столбцы базы данных в целевую таблицу.</span><span class="sxs-lookup"><span data-stu-id="f9b00-330">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9b00-331">Консоль следующие приложения показано, как выполнить массовое загружаются только строки в <xref:System.Data.DataTable> , соответствующих указанным состоянием.</span><span class="sxs-lookup"><span data-stu-id="f9b00-331">The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state.</span></span> <span data-ttu-id="f9b00-332">В этом случае добавляются только не измененные строки.</span><span class="sxs-lookup"><span data-stu-id="f9b00-332">In this case, only unchanged rows are added.</span></span> <span data-ttu-id="f9b00-333">Целевой таблицы — это таблица **AdventureWorks** базы данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-333">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="f9b00-334">В этом примере <xref:System.Data.DataTable> создается во время выполнения и три строки добавляются к нему.</span><span class="sxs-lookup"><span data-stu-id="f9b00-334">In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it.</span></span> <span data-ttu-id="f9b00-335">Прежде чем <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> выполняется метод, одна из строк изменяется.</span><span class="sxs-lookup"><span data-stu-id="f9b00-335">Before the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is executed, one of the rows is edited.</span></span> <span data-ttu-id="f9b00-336"><xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> Метод вызывается с `DataRowState.Unchanged` `rowState` аргумент, чтобы только две строки без изменений выполняются операции массового копирования в место назначения.</span><span class="sxs-lookup"><span data-stu-id="f9b00-336">The <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called with a `DataRowState.Unchanged` `rowState` argument, so only the two unchanged rows are bulk copied to the destination.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9b00-337">Этот образец не запустится, пока вы не создадите рабочие таблицы, как описано в [пример настройки массового копирования](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-337">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="f9b00-338">Данный код предназначен для демонстрации синтаксиса использования **SqlBulkCopy** только.</span><span class="sxs-lookup"><span data-stu-id="f9b00-338">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="f9b00-339">Если исходная и целевая таблицы находятся в одном экземпляре SQL Server, это проще и быстрее использовать Transact-SQL `INSERT … SELECT` инструкции для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="f9b00-339">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9b00-340">Асинхронная версия метода <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, который копирует все строки из источника данных в таблицу назначения, заданную в свойстве <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-340">An asynchronous version of <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, which copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-341">Если несколько активных результирующих наборов (MARS) отключено, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> устанавливает подключение занято.</span><span class="sxs-lookup"><span data-stu-id="f9b00-341">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="f9b00-342">Если включен режим MARS, можно чередовать вызовы <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> с другими командами, в то же соединение.</span><span class="sxs-lookup"><span data-stu-id="f9b00-342">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 <span data-ttu-id="f9b00-343">Число строк, которые являются откат при сбое одного зависит следующее:</span><span class="sxs-lookup"><span data-stu-id="f9b00-343">The number of rows that are rolled back when one fails depends on several things:</span></span>  
  
-   <span data-ttu-id="f9b00-344">Если <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> указано.</span><span class="sxs-lookup"><span data-stu-id="f9b00-344">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is specified.</span></span>  
  
-   <span data-ttu-id="f9b00-345">Если у вас есть собственные транзакции.</span><span class="sxs-lookup"><span data-stu-id="f9b00-345">If you have your own transaction.</span></span>  
  
-   <span data-ttu-id="f9b00-346">Значение <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9b00-346">The value of <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
 <span data-ttu-id="f9b00-347">Если возникает ошибка при отправке данных на сервер, текущий пакет (как указано в <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) будет выполнен откат.</span><span class="sxs-lookup"><span data-stu-id="f9b00-347">When there is an error while sending data to the server, the current batch (as specified by <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) will be rolled back.</span></span> <span data-ttu-id="f9b00-348">Если <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> не указан и иметь собственную транзакцию, вся транзакция будет произведен откат (которая включает всех предыдущих пакетов).</span><span class="sxs-lookup"><span data-stu-id="f9b00-348">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</span></span>  
  
 <span data-ttu-id="f9b00-349">Используйте <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> знать, сколько строк было скопировано на сервер.</span><span class="sxs-lookup"><span data-stu-id="f9b00-349">Use <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> to know how many rows were copied to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-350">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-350">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-351">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-351">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-352">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-352">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="f9b00-353">Массив объектов<see cref="T:System.Data.DataRow" />, подлежащих копированию в целевую таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-353">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-354">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-354">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-355">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-355">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-356">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-356">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-357">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-357">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-358">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-358">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-359">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-359">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-360">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-360">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-361">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-361">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-362">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-362">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-363">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-363">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-364">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-364">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-365">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-365">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-366">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, который копирует все строки из предоставленного <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-366">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-367">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-367">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-368">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-368">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-369">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-369">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-370">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-370">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-371">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-371">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-372">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-372">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-373">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-373">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-374">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-374">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-375">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-375">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-376">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-376">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-377">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-377">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-378">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, который копирует все строки из предоставленного <see cref="T:System.Data.IDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-378">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-379">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-379">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-380">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-380">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-381">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-381">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-382">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-382">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-383">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-383">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-384">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-384">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-385">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-385">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-386">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-386">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-387">Объект <see cref="T:System.Data.IDataReader" /> был закрыт до возврата завершенного объекта <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-387">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="f9b00-388">Связанное соединение объекта <see cref="T:System.Data.IDataReader" /> было закрыто до возврата завершенного объекта <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-388">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="f9b00-389">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-389">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-390">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-390">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-391">Объект <see cref="T:System.Data.Common.DbDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-391">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f9b00-392">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-392">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="f9b00-393">Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-393">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-394">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.Common.DbDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-394">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-395">Возвращает <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-395">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (rows, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rows">
          <span data-ttu-id="f9b00-396">Массив объектов<see cref="T:System.Data.DataRow" />, подлежащих копированию в целевую таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-396">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f9b00-397">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-397">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="f9b00-398">Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-398">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-399">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, который копирует все строки из предоставленного массива <see cref="T:System.Data.DataRow" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-399">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="f9b00-400">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-400">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="f9b00-401">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-401">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-402">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-402">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-403">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-403">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-404">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-404">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-405">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-405">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-406">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-406">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-407">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-407">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-408">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-408">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-409">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-409">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-410">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-410">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-411">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-411">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-412">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-412">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="f9b00-413">Значение из перечисления <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-413">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="f9b00-414">В целевую таблицу копируются только строки, соответствующие состоянию строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-414">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-415">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, который копирует только строки, соответствующие заданному состоянию строки в предоставленном <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-415">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-416">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-416">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-417">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-417">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-418">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-418">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-419">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-419">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-420">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-420">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-421">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-421">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-422">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-422">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-423">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-423">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-424">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-424">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-425">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-425">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-426">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-426">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f9b00-427">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-427">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="f9b00-428">Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-428">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-429">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, который копирует все строки из предоставленного <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-429">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="f9b00-430">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-430">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="f9b00-431">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-431">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-432">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-432">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-433">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-433">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-434">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-434">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-435">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-435">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-436">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-436">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-437">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-437">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-438">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-438">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-439">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-439">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-440">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-440">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-441">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-441">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f9b00-442">Объект <see cref="T:System.Data.IDataReader" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-442">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f9b00-443">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-443">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="f9b00-444">Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-444">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-445">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, который копирует все строки из предоставленного <see cref="T:System.Data.IDataReader" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-445">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="f9b00-446">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-446">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="f9b00-447">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-447">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-448">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-448">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-449">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-449">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-450">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-450">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-451">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-451">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-452">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-452">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-453">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-453">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-454">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-454">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-455">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-455">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-456">Объект <see cref="T:System.Data.IDataReader" /> был закрыт до возврата завершенного объекта <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-456">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="f9b00-457">Связанное соединение объекта <see cref="T:System.Data.IDataReader" /> было закрыто до возврата завершенного объекта <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-457">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span>
          </span>
          <span data-ttu-id="f9b00-458">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-458">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-459">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-459">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="f9b00-460">Объект <see cref="T:System.Data.DataTable" />, строки которого будут скопированы в таблицу назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-460">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="f9b00-461">Значение из перечисления <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-461">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span>
          </span>
          <span data-ttu-id="f9b00-462">В целевую таблицу копируются только строки, соответствующие состоянию строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-462">Only rows matching the row state are copied to the destination.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="f9b00-463">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-463">The cancellation instruction.</span>
          </span>
          <span data-ttu-id="f9b00-464">Если значение этого параметра равно <see cref="P:System.Threading.CancellationToken.None" />, то этот метод эквивалентен методу <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-464">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9b00-465">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, который копирует только строки, соответствующие заданному состоянию строки в предоставленном <see cref="T:System.Data.DataTable" /> в целевую таблицу, заданную свойством <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> объекта <see cref="T:System.Data.SqlClient.SqlBulkCopy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-465">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span>
          </span>
          <span data-ttu-id="f9b00-466">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-466">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="f9b00-467">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-467">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9b00-468">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-468">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9b00-469">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="f9b00-469">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9b00-470">Вызов метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-470">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-471">Вызов методов <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> и <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-471">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="f9b00-472">Соединение разъединяется или закрывается во время выполнения метода <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-472">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span>
          </span>
          <span data-ttu-id="f9b00-473">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> был закрыт во время выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-473">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span>
          </span>
          <span data-ttu-id="f9b00-474">Возвращается в объекте задачи, истекло время ожидания пула подключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-474">Returned in the task object, there was a connection pool timeout.</span>
          </span>
          <span data-ttu-id="f9b00-475">Возвращается в объекте задачи, объект <see cref="T:System.Data.SqlClient.SqlConnection" /> закрыт до выполнения метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-475">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span>
          </span>
          <span data-ttu-id="f9b00-476">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-476">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="f9b00-477">Возвращается в объекте задачи, любая ошибка, возвращенная SQL Server, которая произошла при открытии соединения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9b00-477">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>