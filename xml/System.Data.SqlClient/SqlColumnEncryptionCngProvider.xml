<Type Name="SqlColumnEncryptionCngProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionCngProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97b2dc2d634fa42d4595b5812c4b9518f9521cd9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36679948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlColumnEncryptionCngProvider : System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlColumnEncryptionCngProvider extends System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlColumnEncryptionCngProvider&#xA;Inherits SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionCngProvider : System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionCngProvider = class&#xA;    inherit SqlColumnEncryptionKeyStoreProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="19a0e-101">Реализация поставщика хранилища CMK для использования Microsoft Cryptography API: Next Generation (CNG) с режимом [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      <span class="sxs-lookup">
        <span data-stu-id="19a0e-101">The CMK Store provider implementation for using the Microsoft Cryptography API: Next Generation (CNG) with [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19a0e-102">Позволяет хранить ключи постоянного шифрования для главного ключа столбца в хранилище, например, аппаратный модуль безопасности (HSM), который поддерживает Microsoft Cryptography API: Next Generation (CNG).</span><span class="sxs-lookup"><span data-stu-id="19a0e-102">Enables storing Always Encrypted column master key keys in a store, such as a hardware security module (HSM), that supports the Microsoft Cryptography API: Next Generation (CNG).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlColumnEncryptionCngProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlColumnEncryptionCngProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19a0e-103">Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-103">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlColumnEncryptionCngProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="19a0e-104">Путь к главному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-104">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="19a0e-105">Алгоритм шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-105">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="19a0e-106">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-106">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19a0e-107">Расшифровывает данное зашифрованное значение, используя асимметричный ключ, заданный путем к ключу, и указанный алгоритм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-107">Decrypts the given encrypted value using an asymmetric key specified by the key path and the specified algorithm.</span>
          </span>
          <span data-ttu-id="19a0e-108">Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике хранилища ключей CNG.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-108">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span>
          </span>
          <span data-ttu-id="19a0e-109">Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-109">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19a0e-110">Расшифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-110">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="override this.EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="19a0e-111">Путь к главному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-111">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="19a0e-112">Алгоритм шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-112">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="19a0e-113">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-113">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19a0e-114">Шифрует конкретный ключ шифрования столбца в обычном тексте с помощью указанного алгоритма и асимметричного ключа, указанного в пути к ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-114">Encrypts the given plain text column encryption key using an asymmetric key specified by the key path and the specified algorithm.</span>
          </span>
          <span data-ttu-id="19a0e-115">Ключ должен иметь путь в формате [имя_поставщика]/KeyIdentifier и быть асимметричным, хранящимся в указанном поставщике хранилища ключей CNG.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-115">The key path will be in the format of [ProviderName]/KeyIdentifier and should be an asymmetric key stored in the specified CNG key store provider.</span>
          </span>
          <span data-ttu-id="19a0e-116">Допустимым алгоритмом, используемым для шифрования и расшифровки CEK, является "RSA_OAEP".</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-116">The valid algorithm used to encrypt/decrypt the CEK is 'RSA_OAEP'.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19a0e-117">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-117">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public const string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Const ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Data.SqlClient.SqlColumnEncryptionCngProvider.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19a0e-118">Постоянная строка для имени поставщика MSSQL_CNG_STORE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-118">A constant string for the provider name 'MSSQL_CNG_STORE'.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="19a0e-119">Путь к главному ключу столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-119">The column master key path.</span>
          </span>
          <span data-ttu-id="19a0e-120">Формат пути зависит от поставщика хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-120">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="19a0e-121">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-121">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19a0e-122">Вызывает исключение <see cref="T:System.NotSupportedException" /> во всех случаях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-122">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19a0e-123">Подпись метаданных главного ключа столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-123">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19a0e-124"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> Метод должен быть реализован соответствующий поставщиков хранилища ключей.</span><span class="sxs-lookup"><span data-stu-id="19a0e-124">The <xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> method must be implemented by the corresponding key store providers.</span></span> <span data-ttu-id="19a0e-125"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> следует использовать асимметричный ключ, заданный с помощью ключа пути и подписи метаданных masterkey, состоящий из `masterKeyPath`, `allowEnclaveComputations`и providerName.</span><span class="sxs-lookup"><span data-stu-id="19a0e-125"><xref:System.Data.SqlClient.SqlColumnEncryptionCngProvider.SignColumnMasterKeyMetadata%2A> should use an asymmetric key identified by a key path and sign the masterkey metadata consisting of `masterKeyPath`, `allowEnclaveComputations`, and providerName.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="19a0e-126">Во всех случаях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public override bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionCngProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="19a0e-127">Полный путь к асимметричному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-127">The complete path of an asymmetric key.</span>
          </span>
          <span data-ttu-id="19a0e-128">Формат пути зависит от поставщика хранилища ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-128">The path format is specific to a key store provider.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="19a0e-129">Логическое значение, указывающее, может ли этот ключ передаваться в безопасный анклав.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-129">A Boolean that indicates if this key can be sent to the trusted enclave.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="19a0e-130">Подпись метаданных главного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-130">The master key metadata signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19a0e-131">Эта функция должна реализовываться соответствующими поставщиками хранилищ ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-131">This function must be implemented by the corresponding Key Store providers.</span>
          </span>
          <span data-ttu-id="19a0e-132">Эта функция должна использовать асимметричный ключ, который задается по пути к ключу, и подтверждать метаданные главного ключа (masterKeyPath, allowEnclaveComputations, providerName).</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-132">This function should use an asymmetric key identified by a key path and verify the masterkey metadata consisting of (masterKeyPath, allowEnclaveComputations, providerName).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19a0e-133">Логическое значение, указывающее, могут ли быть подтверждены метаданные ключа на основе предоставленной подписи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19a0e-133">A Boolean that indicates if the master key metadata can be verified based on the provided signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>