<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e975c25375894e64d491184bb4cdee074f48895b" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="06aed-101">Базовый класс для всех поставщиков хранилища ключей.</span>
      <span class="sxs-lookup">
        <span data-stu-id="06aed-101">Base class for all key store providers.</span>
      </span>
      <span data-ttu-id="06aed-102">Настраиваемый поставщик должен наследовать от этого класса и переопределить свои функции-члены, а затем зарегистрируйте его с помощью SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      <span class="sxs-lookup">
        <span data-stu-id="06aed-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span>
      </span>
      <span data-ttu-id="06aed-103">Дополнительные сведения см. в разделе [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      <span class="sxs-lookup">
        <span data-stu-id="06aed-103">For details see, [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06aed-104">Инициализирует новый экземпляр класса SqlColumnEncryptionKeyStoreProviderClass.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-104">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="06aed-105">Путь к главному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-105">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="06aed-106">Алгоритм шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-106">The encryption algorithm.</span>
          </span>
        </param>
        <param name="encryptedColumnEncryptionKey">
          <span data-ttu-id="06aed-107">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-107">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06aed-108">Расшифровывает указанное зашифрованное значение ключа шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-108">Decrypts the specified encrypted value of a column encryption key.</span>
          </span>
          <span data-ttu-id="06aed-109">Зашифрованное значение должно быть зашифровано с помощью главного ключа столбца с указанным путем к ключу и с помощью указанного алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-109">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06aed-110">Возвращает <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-110">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="06aed-111">Расшифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-111">The decrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="06aed-112">Путь к главному ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-112">The master key path.</span>
          </span>
        </param>
        <param name="encryptionAlgorithm">
          <span data-ttu-id="06aed-113">Алгоритм шифрования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-113">The encryption algorithm.</span>
          </span>
        </param>
        <param name="columnEncryptionKey">
          <span data-ttu-id="06aed-114">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-114">The encrypted column encryption key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06aed-115">Шифрует ключ шифрования столбца с помощью главного ключа столбца по указанному пути ключа и с помощью указанного алгоритма.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-115">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06aed-116">Возвращает <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-116">Returns <see cref="T:System.Byte" />.</span>
          </span>
          <span data-ttu-id="06aed-117">Зашифрованный ключ шифрования столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-117">The encrypted column encryption key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="06aed-118">Путь к главному ключу столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-118">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="06aed-119">Значение <see langword="true" />, если главный ключ столбца поддерживает анклавные вычисления, иначе значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-119">
              <see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06aed-120">При реализации в производном классе выполняет цифровую подпись метаданных главного ключа столбца, используя главный ключ столбца, на который ссылается параметр <paramref name="masterKeyPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-120">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span>
          </span>
          <span data-ttu-id="06aed-121">Входные значения, используемые для создания подписи должны задаваться значениями параметров <paramref name="masterKeyPath" /> и <paramref name="allowEnclaveComputations" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-121">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06aed-122">Подпись метаданных главного ключа столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-122">The signature of the column master key metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06aed-123">Чтобы убедиться, что <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> метода не будет прерывать выполнение приложения, зависящие от старого интерфейса API, создает <xref:System.NotImplementedException> исключения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="06aed-123">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="06aed-124"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> Метод будет использоваться клиентскими средствами, которые генерируют главных ключей столбцов (CMK) для клиентов.</span><span class="sxs-lookup"><span data-stu-id="06aed-124">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="06aed-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> должен быть реализован соответствующий поставщиков хранилища ключей, которые хотите использовать enclaves с [постоянного шифрования](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span><span class="sxs-lookup"><span data-stu-id="06aed-125"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="06aed-126">Во всех случаях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath">
          <span data-ttu-id="06aed-127">Путь к главному ключу столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-127">The column master key path.</span>
          </span>
        </param>
        <param name="allowEnclaveComputations">
          <span data-ttu-id="06aed-128">Указывает, поддерживает ли главный ключ столбца анклавные вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-128">Indicates whether the column master key supports enclave computations.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="06aed-129">Подпись метаданных главного ключа столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-129">The signature of the column master key metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="06aed-130">При реализации в производном классе этот метод должен проверять действительность указанной подписи для главного ключа столбца с указанным путем к ключу и заданным поведением анклава.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-130">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span>
          </span>
          <span data-ttu-id="06aed-131">Реализация по умолчанию вызывает исключение NotImplementedException.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-131">The default implementation throws NotImplementedException.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="06aed-132">При реализации в производном классе этот метод должен возвращать значение true, если указанная подпись является действительной, или false в противном случае.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-132">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span>
          </span>
          <span data-ttu-id="06aed-133">Реализация по умолчанию вызывает исключение NotImplementedException.</span>
          <span class="sxs-lookup">
            <span data-stu-id="06aed-133">The default implementation throws NotImplementedException.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>