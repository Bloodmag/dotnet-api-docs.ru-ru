<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommand.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15bcd8d714b76bdd9eadda8ef4611395116df7bc44.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcd8d714b76bdd9eadda8ef4611395116df7bc44</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</source>
          <target state="translated">Представляет инструкцию Transact-SQL или хранимую процедуру, выполняемую над базой данных SQL Server.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the read/write properties are set to their initial values.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> создается для чтения записи свойствам присваиваются их начальные значения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor.</source>
          <target state="translated">Список этих значений см. в разделе <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> features the following methods for executing commands at a SQL Server database:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> содержит следующие методы для выполнения команд в базе данных SQL Server:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Item</source>
          <target state="translated">Элемент</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, описанной в данном <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, обычно выполнение команды, такие как INSERT, DELETE, UPDATE и инструкции SET.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">Каждый вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> должны составлять пару с помощью вызова <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> завершающееся операции, обычно в отдельном потоке.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and retrieves one or more results sets from the server.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, описанной в данном <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и извлекает один или несколько результирующих наборов с сервера.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">Каждый вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> должны составлять пару с помощью вызова <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> завершающееся операции, обычно в отдельном потоке.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">`BeginExecuteXmlReader`</ph> must be paired with a call to <ph id="ph2">`EndExecuteXmlReader`</ph>, which finishes the operation, typically on a separate thread, and returns an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">Каждый вызов <ph id="ph1">`BeginExecuteXmlReader`</ph> должны составлять пару с помощью вызова <ph id="ph2">`EndExecuteXmlReader`</ph>, которая завершает операцию, обычно в отдельном потоке и возвращает <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands that return rows.</source>
          <target state="translated">Выполняет команды, которые возвращают строки.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For increased performance, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> invokes commands using the Transact-SQL <ph id="ph2">`sp_executesql`</ph> system stored procedure.</source>
          <target state="translated">Для повышения производительности <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> команд с помощью Transact-SQL вызывает <ph id="ph2">`sp_executesql`</ph> системной хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> может не оказать ожидаемого воздействия, если используется для выполнения команд, таких как инструкции SET языка Transact-SQL.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">Выполняет команды, таких как инструкции Transact-SQL INSERT, DELETE, UPDATE и SET.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Retrieves a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">Извлекает из базы данных одно значение (например, статистическое значение).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> and builds an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">Отправляет <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> в <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> и строит объект <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated">Вы можете сбросить <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> свойство и повторное использование <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, you must close the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> before you can execute a new or previous command.</source>
          <target state="translated">Тем не менее, необходимо закрыть <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> перед выполнением новой или предыдущей команды.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> создается методом, выполняющим <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> остается открытым, если уровень важности не превышает 19.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">Когда уровень важности превышает 20, сервер обычно закрывает <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">Тем не менее, пользователь может опять открыть подключение и продолжить работу.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">Безымянные, также называемый порядковый номер, параметры не поддерживаются поставщиком данных .NET Framework для SQL Server.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The example reads through the data, writing it to the console.</source>
          <target state="translated">В примере считываются по данным, выводятся в консоль.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Finally, the example closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and then the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as it exits the <ph id="ph3">`Using`</ph> code blocks.</source>
          <target state="translated">Наконец, в примере выполняется закрытие <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> и затем <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> при выходе <ph id="ph3">`Using`</ph> блоки кода.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following sample shows how to create and execute different types of SqlCommand objects.</source>
          <target state="translated">Следующий пример демонстрирует создания и выполнения различных типов объектов SqlCommand.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>First you must create the sample database, by executing the following script:</source>
          <target state="translated">Сначала необходимо создать образец базы данных, выполнив следующий сценарий:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Next, compile and execute the following:</source>
          <target state="translated">Затем скомпилируйте и выполните следующее:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">Базовый конструктор инициализирует все поля значениями по умолчанию.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">Следующей таблице представлены исходные значения свойств для экземпляра класса <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Properties</source>
          <target state="translated">Свойства</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initial value</source>
          <target state="translated">Исходное значение</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>empty string ("")</source>
          <target state="translated">Пустая строка (»»)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Null</source>
          <target state="translated">Null</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">Можно изменить значение любого из этих свойств, вызвав его отдельно.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets the <ph id="ph2">`CommandTimeout`</ph> property.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и задает <ph id="ph2">`CommandTimeout`</ph> свойства.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The text of the query.</source>
          <target state="translated">Текст запроса.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> текстом запроса.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> создается следующие начальные значения задаются свойства чтения и записи.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Properties</source>
          <target state="translated">Свойства</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">Исходное значение</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">Можно изменить значение любого из этих свойств, вызвав его отдельно.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, passing in the connection string and command text.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, передав текст строку и команду подключения.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The text of the query.</source>
          <target state="translated">Текст запроса.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, представляющий подключение к экземпляру SQL Server.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query and a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> текстом запроса и подключением <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">Следующей таблице представлены исходные значения свойств для экземпляра класса <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Properties</source>
          <target state="translated">Свойства</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initial value</source>
          <target state="translated">Исходное значение</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> , представляющий значение <ph id="ph2">`connection`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">Значение для любого из этих параметров можно изменить, задав соответствующее свойство.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и задает некоторые его свойства.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The text of the query.</source>
          <target state="translated">Текст запроса.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, представляющий подключение к экземпляру SQL Server.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>, в которой выполняется <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query, a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, and the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> текстом запроса, подключением <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> и транзакцией <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">Следующей таблице представлены исходные значения свойств для экземпляра класса <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Properties</source>
          <target state="translated">Свойства</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initial value</source>
          <target state="translated">Исходное значение</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> , представляющий значение <ph id="ph2">`connection`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">Значение для любого из этих параметров можно изменить, задав соответствующее свойство.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The text of the query.</source>
          <target state="translated">Текст запроса.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, представляющий подключение к экземпляру SQL Server.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>, в которой выполняется <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The encryption setting.</source>
          <target state="translated">Настройка шифрования.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>For more information, see <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Всегда зашифровано<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with specified command text, connection, transaction, and encryption setting.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> с заданными текстом команды, подключением, транзакцией и параметром шифрования.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, возвращающего количество задействованных строк.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> Метод начинает процесс асинхронного выполнения <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> инструкции или хранимой процедуры, которая не возвращает строк, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">При завершении инструкции, разработчики должны вызывать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> метод для завершения операции.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> Метод возвращается немедленно (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> не оказывает влияния на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), но пока не выполняется соответствующий код <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">Так как эта перегрузка не поддерживает процедуру обратного вызова, разработчики должны либо опроса, чтобы определить, завершена ли команда с помощью <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> метода; или дождитесь завершения один или несколько команд с помощью <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> свойство возвращаемого <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The following console application creates updates data within the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database, doing its work asynchronously.</source>
          <target state="translated">Следующее консольное приложение создает обновление данных в <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> образца базы данных, выполняет асинхронное.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</source>
          <target state="translated">Для моделирования длительного процесса в данном примере в текст команды вставлена инструкция WAITFOR.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</source>
          <target state="translated">Как правило не предпринимаются попытки сделать замедление выполнения команд, но делать это в этом случае упрощает демонстрацию асинхронного поведения.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, вызываемый по завершении выполнения команды.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">Передайте значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, given a callback procedure and state information.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, получая процедуру обратного вызова и данные о состоянии.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, возвращающего количество задействованных строк.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая не возвращает строк, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">При завершении инструкции, разработчики должны вызывать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> метод для завершения операции.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> Метод возвращается немедленно (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> не оказывает влияния на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), но пока не выполняется соответствующий код <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> Позволяет указать <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> делегат, вызываемый при завершении инструкции.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> метод из этой процедуры делегата или из любого места в приложении.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`asyncStateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">Кроме того, можно передать любой объект в <ph id="ph1">`asyncStateObject`</ph> параметр и в процедуре обратного вызова можно получить эти сведения с помощью <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">Поскольку процедура обратного вызова выполняется из фонового потока, предоставленного средой CLR Microsoft .NET, очень важно применять строгий подход к обработке взаимодействия между потоками в приложениях.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">Например вы не должны взаимодействовать с содержимым формы из процедуры обратного вызова; требуется обновить форму, переключитесь обратно в поток формы для работы.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">В примере в этом разделе показано такое поведение.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">Все ошибки, происходящие во время выполнения операции, вызываются как исключения в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">Необходимо обрабатывать исключение в процедуре обратного вызова, а не в основное приложение.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">См. пример в этом разделе для получения дополнительных сведений об обработке исключений в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</source>
          <target state="translated">В следующем Windows-приложении демонстрируется использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> метода, выполняющего инструкцию Transact-SQL, которая содержит задержку в несколько секунд (имитируя длительную команду).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">Этот пример демонстрирует много важных технологий.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">Это включает вызов метода, который взаимодействует с формой из отдельного потока.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">Кроме того в этом примере показано, как блокировать попытки пользователей одновременно выполнять команду несколько раз, и как убедитесь, что форма не закроется до вызова процедуры ответного вызова.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">Чтобы настроить этот пример, создайте новое Windows-приложение.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Поместите <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> управления и <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> элемента управления в форме (принимает имя по умолчанию для каждого элемента управления).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">Добавьте следующий код в класс формы, изменив строку соединения при необходимости для вашей среды.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции или хранимой процедуры Transact-SQL, описанной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и получает от сервера один или несколько результирующих наборов.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции или хранимой процедуры Transact-SQL, описанной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и получает от сервера один или несколько результирующих наборов.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, возвращающего экземпляр <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>, который может использоваться для извлечения возвращенных строк.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая возвращает строки, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">После завершения инструкции разработчик должен вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод для завершения операции и получения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> команда вернула.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">Несмотря на то, что команда выполняется асинхронно, получение значения осуществляется синхронно.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">Это означает, что вызовы <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> может блокироваться, если требуется больше данных и базовой сети блоков операции чтения.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">Так как эта перегрузка не поддерживает процедуру обратного вызова, разработчики должны либо опроса, чтобы определить, завершена ли команда с помощью <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> метода; или дождитесь завершения один или несколько команд с помощью <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> свойство возвращаемого <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">Следующее консольное приложение запускает процесс асинхронного извлечения модуля чтения данных.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">Во время ожидания результатов, это простое приложение находится в цикле, исследование <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> значение свойства.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>As soon as the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">После завершения процесса код извлекает <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> и отображает его содержимое.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>, задающее параметры выполнения инструкции и извлечения данных.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> using one of the <ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, с использованием одного из значений <ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, возвращающего экземпляр <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>, который может использоваться для извлечения возвращенных строк.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая возвращает строки, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">После завершения инструкции разработчик должен вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод для завершения операции и получения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> команда вернула.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph> Позволяет указать параметры, управляющие поведением команды и ее подключения.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`OR`</ph> operator); generally, developers use the <ph id="ph2">`CommandBehavior.CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">Эти значения могут объединяться друг с другом (с помощью языка программирования <ph id="ph1">`OR`</ph> оператор); как правило, разработчики используют <ph id="ph2">`CommandBehavior.CloseConnection`</ph> значение, чтобы убедиться в том, что соединение закрывается средой выполнения при <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">Несмотря на то, что команда выполняется асинхронно, получение значения осуществляется синхронно.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">Это означает, что вызовы <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> может блокироваться, если требуется больше данных и базовой сети блоков операции чтения.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">Так как эта перегрузка не поддерживает процедуру обратного вызова, разработчики должны либо опроса, чтобы определить, завершена ли команда с помощью <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> метода; или дождитесь завершения один или несколько команд с помощью <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> свойство возвращаемого <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server возвращает никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">Следующее консольное приложение запускает процесс асинхронного извлечения модуля чтения данных.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">Во время ожидания результатов, это простое приложение находится в цикле, исследование <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> значение свойства.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Once the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">После завершения процесса, этот код извлекает <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> и отображает его содержимое.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This example also passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> and <ph id="ph2">`CommandBehavior.SingleRow`</ph> values in the behavior parameter, causing the connection to be closed with the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed, and to optimize for a single row result.</source>
          <target state="translated">В этом примере также передается <ph id="ph1">`CommandBehavior.CloseConnection`</ph> и <ph id="ph2">`CommandBehavior.SingleRow`</ph> значений в параметре поведение, вызывая подключение закрывается с помощью возвращенного <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> закрывается и оптимизировать для одной строки результата.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, вызываемый по завершении выполнения команды.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">Передайте значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and retrieves one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и получает от сервера один или более результирующих наборов; принимает процедуру обратного вызова и информацию о состоянии.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, возвращающего экземпляр <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>, который может использоваться для извлечения возвращенных строк.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая возвращает строки, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">После завершения инструкции разработчик должен вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод для завершения операции и получения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> команда вернула.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed cause the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> до завершения выполнения команды Причина <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> Позволяет указать <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> делегат, вызываемый при завершении инструкции.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод из этой процедуры делегата или из любого места в приложении.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">Кроме того, можно передать любой объект в <ph id="ph1">`stateObject`</ph> параметр и в процедуре обратного вызова можно получить эти сведения с помощью <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">Несмотря на то, что команда выполняется асинхронно, получение значения осуществляется синхронно.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">Это означает, что вызовы <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> может блокироваться, если требуется больше данных и базовой сети блоков операции чтения.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">Поскольку процедура обратного вызова выполняется из фонового потока, предоставленного средой Microsoft .NET, очень важно применять строгий подход к обработке взаимодействия между потоками в приложениях.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">Например вы не должны взаимодействовать с содержимым формы из процедуры обратного вызова; требуется обновить форму, переключитесь обратно в поток формы для работы.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">В примере в этом разделе показано такое поведение.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">Все ошибки, происходящие во время выполнения операции, вызываются как исключения в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">Необходимо обрабатывать исключение в процедуре обратного вызова, а не в основное приложение.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">См. пример в этом разделе для получения дополнительных сведений об обработке исключений в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server возвращает никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">В следующем Windows-приложении демонстрируется использование метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, выполняющего инструкцию Transact-SQL, которая содержит задержку в несколько секунд (имитируя длительную команду).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">Поскольку образец команда выполняется асинхронно, форма реагирует на время, пока ожидаются результаты.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">В этом примере передается выполнение <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта в виде <ph id="ph2">`stateObject`</ph> параметр; это позволяет легко получить <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта из в процедуре обратного вызова, чтобы код можно вызывать <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> соответствующий метод Начальный вызов <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">Этот пример демонстрирует много важных технологий.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">Это включает вызов метода, который взаимодействует с формой из отдельного потока.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">Кроме того в этом примере показано, как блокировать попытки пользователей одновременно выполнять команду несколько раз, и как убедитесь, что форма не закроется до вызова процедуры ответного вызова.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">Чтобы настроить этот пример, создайте новое Windows-приложение.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Поместите <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> управления <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> элемента управления и <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> элемента управления в форме (принимает имя по умолчанию для каждого элемента управления).</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">Добавьте следующий код в класс формы, изменив строку соединения при необходимости для вашей среды.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, вызываемый по завершении выполнения команды.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">Передайте значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>, задающее параметры выполнения инструкции и извлечения данных.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, using one of the <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, используя одно из значений <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph>, и получает от сервера один или более результирующих наборов; принимает процедуру обратного вызова и информацию о состоянии.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, возвращающего экземпляр <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>, который может использоваться для извлечения возвращенных строк.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая возвращает строки, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">После завершения инструкции разработчик должен вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод для завершения операции и получения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> команда вернула.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> Позволяет указать <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> делегат, вызываемый при завершении инструкции.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метод из этой процедуры делегата или из любого места в приложении.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">Кроме того, можно передать любой объект в <ph id="ph1">`stateObject`</ph> параметр и в процедуре обратного вызова можно получить эти сведения с помощью <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph> Позволяет указать параметры, управляющие поведением команды и ее подключения.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`Or`</ph> operator); generally, developers use the <ph id="ph2">`CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">Эти значения могут объединяться друг с другом (с помощью языка программирования <ph id="ph1">`Or`</ph> оператор); как правило, разработчики используют <ph id="ph2">`CloseConnection`</ph> значение, чтобы убедиться в том, что соединение закрывается средой выполнения при <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Developers can also optimize the behavior of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> by specifying the <ph id="ph2">`SingleRow`</ph> value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</source>
          <target state="translated">Разработчики также могут оптимизировать поведение <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> , указав <ph id="ph2">`SingleRow`</ph> значение, если оно известно, что инструкции Transact-SQL или хранимая процедура возвращает только одну строку.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">Несмотря на то, что команда выполняется асинхронно, получение значения осуществляется синхронно.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">Это означает, что вызовы <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> может блокироваться, если требуется больше данных и базовой сети блоков операции чтения.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">Поскольку процедура обратного вызова выполняется из фонового потока, предоставленного средой CLR Microsoft .NET, очень важно применять строгий подход к обработке взаимодействия между потоками в приложениях.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">Например, не должны взаимодействовать с содержимым формы из процедуры обратного вызова — требуется обновить форму, переключитесь обратно в поток формы для работы.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">В примере в этом разделе показано такое поведение.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">Все ошибки, происходящие во время выполнения операции, вызываются как исключения в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">Необходимо обрабатывать исключение в процедуре обратного вызова, а не в основное приложение.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">См. пример в этом разделе для получения дополнительных сведений об обработке исключений в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">В следующем Windows-приложении демонстрируется использование метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, выполняющего инструкцию Transact-SQL, которая содержит задержку в несколько секунд (имитируя длительную команду).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">Поскольку образец команда выполняется асинхронно, форма реагирует на время, пока ожидаются результаты.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">В этом примере передается выполнение <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта в виде <ph id="ph2">`stateObject`</ph> параметр; это позволяет легко получить <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта из в процедуре обратного вызова, чтобы код можно вызывать <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> соответствующий метод Начальный вызов <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">Этот пример демонстрирует много важных технологий.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">Это включает вызов метода, который взаимодействует с формой из отдельного потока.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">Кроме того в этом примере показано, как блокировать попытки пользователей одновременно выполнять команду несколько раз, и как убедитесь, что форма не закроется до вызова процедуры ответного вызова.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">Чтобы настроить этот пример, создайте новое Windows-приложение.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Поместите <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> управления <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> элемента управления и <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> элемента управления в форме (принимает имя по умолчанию для каждого элемента управления).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">Добавьте следующий код в класс формы, изменив строку соединения при необходимости для вашей среды.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> value in the <ph id="ph2">`behavior`</ph> parameter, causing the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> to automatically close its connection when it is closed.</source>
          <target state="translated">В этом примере передается <ph id="ph1">`CommandBehavior.CloseConnection`</ph> значение в <ph id="ph2">`behavior`</ph> вызывает возвращаемый параметр <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> автоматически закрывать соединение после его закрытия.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и возвращает результаты в виде объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и возвращает результаты в виде объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph>, which returns a single XML value.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph>, возвращающего одно XML-значение.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL, возвращающей строки в формате XML, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">`EndExecuteXmlReader`</ph> method to finish the operation and retrieve the XML returned by the command.</source>
          <target state="translated">При завершении инструкции, разработчики должны вызывать <ph id="ph1">`EndExecuteXmlReader`</ph> метод для завершения операции и извлечения XML-код, возвращенный командой.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">`EndExecuteXmlReader`</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">`EndExecuteXmlReader`</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Calling the <ph id="ph1">`EndExecuteXmlReader`</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">`EndExecuteXmlReader`</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> Обычно определяет инструкцию Transact-SQL с допустимым предложение FOR XML.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> data that contains valid XML.</source>
          <target state="translated">Тем не менее <ph id="ph1">`CommandText`</ph> можно также указать инструкцию, возвращающую <ph id="ph2">`ntext`</ph> данных, который содержит допустимый XML-код.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">Типичный <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> запрос может быть отформатирован как в следующем примере на C#:</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">Этот метод может также использоваться для извлечения результирующего набора с одной строкой и одним столбцом.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">`EndExecuteXmlReader`</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">В этом случае, если несколько возвращается одна строка, <ph id="ph1">`EndExecuteXmlReader`</ph> метод присоединяет <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> значение на пересечении первой строки и удаляет набор rest результата.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">Компонент несколько активных результирующих набора (режим MARS) позволяет использовать то же подключение нескольких действий.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">Несмотря на то, что команда выполняется асинхронно, получение значения осуществляется синхронно.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">Так как эта перегрузка не поддерживает процедуру обратного вызова, разработчики должны либо опроса чтобы определить, завершена ли команда с помощью <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> возвращенных <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> метода; или дождитесь завершения один или несколько команд с помощью <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> свойство возвращаемого <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server возвращает никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The following console application starts the process of retrieving XML data asynchronously.</source>
          <target state="translated">Следующее консольное приложение запускает процесс асинхронного извлечения XML-данных.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">Во время ожидания результатов, это простое приложение находится в цикле, исследование <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> значение свойства.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Once the process has completed, the code retrieves the XML and displays its contents.</source>
          <target state="translated">После завершения процесса код извлекает XML и отображает его содержимое.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, вызываемый по завершении выполнения команды.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">Передайте значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic), чтобы указать, что обратный вызов не требуется.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">Определяемый пользователем объект состояния, передаваемый процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated">Извлечение этого объекта в процедуре обратного вызова осуществляется посредством свойства <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object, using a callback procedure.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и возвращает результаты в виде объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, используя процедуру обратного вызова.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when the <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> is called, which returns the results of the command as XML.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, который может использоваться для запроса или ожидания результатов или для того и другого; это значение требуется также при вызове метода <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph>, возвращающего результаты выполнения команды в виде XML.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> Метод начинает процесс асинхронного выполнения инструкции Transact-SQL или хранимую процедуру, которая возвращает строки в формате XML, позволяющие выполнять другие задачи, параллельно с выполнением инструкции.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method to finish the operation and retrieve the requested XML data.</source>
          <target state="translated">При завершении инструкции, разработчики должны вызывать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> метод для завершения операции и получения запрошенных данных XML.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> Метод возвращается немедленно, но пока не выполняется соответствующий код <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> вызова метода, он не может выполняться все вызовы, которые запустить синхронное или асинхронное выполнение к тому же контексту <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> до завершения выполнения команды <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта для блокирования до завершения выполнения.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> Обычно определяет инструкцию Transact-SQL с допустимым предложение FOR XML.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns data that contains valid XML.</source>
          <target state="translated">Тем не менее <ph id="ph1">`CommandText`</ph> можно также указать инструкцию, которая возвращает данные, которые содержат допустимый XML.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">Этот метод может также использоваться для извлечения результирующего набора с одной строкой и одним столбцом.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">В этом случае, если несколько возвращается одна строка, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> метод присоединяет <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> значение на пересечении первой строки и удаляет набор rest результата.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">Типичный <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> запрос может быть отформатирован как в следующем примере на C#:</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">Этот метод может также использоваться для извлечения результирующего набора с одной строкой и одним столбцом.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">В этом случае, если несколько возвращается одна строка, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> метод присоединяет <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> значение на пересечении первой строки и удаляет набор rest результата.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">Компонент несколько активных результирующих набора (режим MARS) позволяет использовать то же подключение нескольких действий.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> Позволяет указать <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> делегат, вызываемый при завершении инструкции.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> метод из этой процедуры делегата или из любого места в приложении.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">Кроме того, можно передать любой объект в <ph id="ph1">`stateObject`</ph> параметр и в процедуре обратного вызова можно получить эти сведения с помощью <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">Обратите внимание, что текст команды и параметры отправляются на сервер синхронно.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters is sent, this method may block during writes.</source>
          <target state="translated">При отправке большой команды или множества параметров этот метод может блокироваться на время записи.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">После отправки команды метод немедленно возвращается, не дожидаясь ответа от сервера — то есть, чтение выполняется асинхронно.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">Все ошибки, происходящие во время выполнения операции, вызываются как исключения в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">Необходимо обрабатывать исключение в процедуре обратного вызова, а не в основное приложение.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">См. пример в этом разделе для получения дополнительных сведений об обработке исключений в процедуре обратного вызова.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">В следующем Windows-приложении демонстрируется использование метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, выполняющего инструкцию Transact-SQL, которая содержит задержку в несколько секунд (имитируя длительную команду).</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter--doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">В этом примере передается выполнение <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта в виде <ph id="ph2">`stateObject`</ph> параметр — это позволяет легко получить <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объекта из в процедуре обратного вызова, чтобы код можно вызывать <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> соответствующий метод Начальный вызов <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">Этот пример демонстрирует много важных технологий.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">Это включает вызов метода, который взаимодействует с формой из отдельного потока.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">Кроме того в этом примере показано, как блокировать попытки пользователей одновременно выполнять команду несколько раз, и как убедитесь, что форма не закроется до вызова процедуры ответного вызова.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">Чтобы настроить этот пример, создайте новое Windows-приложение.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">Поместите <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> управления <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> элемента управления и <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> элемента управления в форме (принимает имя по умолчанию для каждого элемента управления).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">Добавьте следующий код в класс формы, изменив строку соединения при необходимости для вашей среды.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">Любая ошибка, произошедшая во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пара имя — значение (Asynchronous Processing=true) не была указана в строке подключения, определяющей подключение для этого <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>Tries to cancel the execution of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Пытается отменить выполнение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>If there is nothing to cancel, nothing occurs.</source>
          <target state="translated">Если команда, выполнение которой нужно отменить, отсутствует, ничего не происходит.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">Если выполняемая команда имеется и попытка ее отмены оканчивается неудачей, исключение не формируется.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>In some, rare, cases, if you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> then call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily or explicitly) before calling <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, and then call <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
          <target state="translated">Редко, иногда, если вы вызываете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> затем вызвать <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily или явно) перед вызовом <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>и затем вызвать метод <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, команда "Отмена", не будут отправляться на SQL Server и результирующий набор можно продолжать потока после вы вызов <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>To avoid this, make sure that you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> before closing the reader or connection.</source>
          <target state="translated">Чтобы избежать этого, убедитесь, что вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> перед закрытием чтения или соединения.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере иллюстрируется использование метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">Создает новый объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, являющийся копией текущего экземпляра.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">Новый объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, являющийся копией этого экземпляра.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>Gets or sets the column encryption setting for this command.</source>
          <target state="translated">Возвращает или задает параметр шифрования столбца для этой команды.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>The column encryption setting for this command.</source>
          <target state="translated">Параметр шифрования столбца для этой команды.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</source>
          <target state="translated">Возвращает или задает инструкцию Transact-SQL, имя таблицы или хранимую процедуру, выполняемую для источника данных.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Transact-SQL statement or stored procedure to execute.</source>
          <target state="translated">Выполняемые инструкция Transact-SQL или хранимая процедура.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The default is an empty string.</source>
          <target state="translated">Значение по умолчанию - пустая строка.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> свойству <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> свойство должно быть присвоено имя хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">Пользователь может потребоваться использовать синтаксис escape-символов, если имя хранимой процедуры содержит специальные символы.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The command executes this stored procedure when you call one of the <ph id="ph1">`Execute`</ph> methods.</source>
          <target state="translated">Команда выполняет эту хранимую процедуру при вызове одного из <ph id="ph1">`Execute`</ph> методы.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Поставщик данных Microsoft .NET Framework для SQL Server не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкции Transact-SQL или хранимая процедура вызывается с помощью команды <ph id="ph1">`CommandType.Text`</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">В этом случае необходимо использовать именованные параметры.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Настройка параметров и типов данных параметров<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и задает некоторые его свойства.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The time in seconds to wait for the command to execute.</source>
          <target state="translated">Время в секундах, в течение которого должно происходить ожидание выполнения команды.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">По умолчанию используется значение 30 секунд.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</source>
          <target state="translated">Значение 0 означает отсутствие ограничений, (попытка выполнить команду будет ждать бесконечно долго).</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> property will be ignored during asynchronous method calls such as <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> Свойство будет пропущено во время асинхронных вызовах методов например <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect when the command is executed against a context connection (a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> opened with "context connection=true" in the connection string).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> не имеет значения при контекстном соединении выполняется команда ( <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> с «контекстное соединение = true» в строке подключения).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</source>
          <target state="translated">Это свойство является совокупное время ожидания (для всех сетевых пакетов, доступные для чтения во время вызова метода) для всех сетевых операций чтения во время выполнения команды или обработки результатов.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</source>
          <target state="translated">Тайм-аут может произойти после первой строки возвращается и не включает время обработки пользователем, время чтения только в сети.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>For example, with a 30 second time out, if <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> requires two network packets, then it has 30 seconds to read both network packets.</source>
          <target state="translated">Например, с 30-секундная временем ожидания, если <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> требует два сетевых пакетов, то он имеет 30 секунд для чтения и сетевые пакеты.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> again, it will have another 30 seconds to read any data that it requires.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> еще раз, он будет иметь другой 30 секунд для чтения, любые данные, которые требуются.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> property is to be interpreted.</source>
          <target state="translated">Возвращает или задает значение, определяющее, как будет интерпретироваться свойство <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The default is <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>When you set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
          <target state="translated">При задании <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> свойства <ph id="ph2">`StoredProcedure`</ph>, следует задать <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> на имя хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Команда выполняет эту хранимую процедуру при вызове одного из методов Execute.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>.</source>
          <target state="translated">Поставщик данных Microsoft .NET Framework для SQL Server не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкции SQL или хранимая процедура вызывается с <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> из <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">В этом случае необходимо использовать именованные параметры.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">ВЫБЕРИТЕ * от клиентов, ГДЕ CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Настройка параметров и типов данных параметров<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и задает некоторые его свойства.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The value was not a valid <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</source>
          <target state="translated">Значение не является допустимым объектом <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, используемый этим экземпляром класса <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">Подключение к источнику данных.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Если подключение изменяется прикрепления команды в существующей транзакции, вызывает исключение при попытке выполнить команду <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property is not null and the transaction has already been committed or rolled back, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> is set to null.</source>
          <target state="translated">Если свойство <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> имеет значение, отличное от NULL, и транзакция уже зафиксирована или выполнен ее откат, то свойство <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> устанавливается в значение NULL.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и задает некоторые его свойства.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> property was changed while the command was enlisted in a transaction..</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> было изменено во время прикрепления команды в транзакции.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>Creates a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated">Создает новый экземпляр объекта <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> Метод является строго типизированной версией <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</source>
          <target state="translated">Возвращает или задает значение, указывающее, будет ли объект команды видимым в элементе управления Windows Forms Designer.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>A value indicating whether the command object should be visible in a control.</source>
          <target state="translated">Значение, указывающее, будет ли объект команды видимым в элементе управления.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный из вызова <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement.</source>
          <target state="translated">Завершает асинхронное выполнение инструкции Transact-SQL.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The number of rows affected (the same behavior as <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>).</source>
          <target state="translated">Количество задействованных строк (аналогично <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> to execute a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement, you must call <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">При вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> для выполнения <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> инструкции, необходимо вызвать метод <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> для завершения операции.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">Если процесс выполнения команды не завершено, этот метод блокируется до завершения операции.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method.</source>
          <target state="translated">Пользователи могут проверить, что команда завершения операции с помощью <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> экземпляр, возвращаемый <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">Если процедура обратного вызова был указан при вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, этот метод должен вызываться.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">Для примеров, демонстрирующих использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> имеет значение NULL (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic).</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> для завершения выполнения вызова в <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The amount of time specified in <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated">Время, указанное в <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph>, истекло, а асинхронная операция, указанная с <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>, не завершена.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>In some situations, <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> can be set to <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph> incorrectly.</source>
          <target state="translated">В некоторых ситуациях для <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> может быть ошибочно задано значение <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If this occurs and <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated">Если это произошло и вызывается <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, метод EndExecuteNonQuery может вызвать ошибку SqlException, если время, указанное в <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph>, истекло, а асинхронная операция, указанная с <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>, не завершена.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</source>
          <target state="translated">Чтобы исправить эту ситуацию, следует увеличить значение CommandTimeout или уменьшить объем обработки, выполняемой асинхронной операцией.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный из вызова <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Завершает асинхронное выполнение инструкции Transact-SQL, возвращающей запрошенный <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object that can be used to retrieve the requested rows.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>, который может использоваться для извлечения запрошенных строк.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">При вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для выполнения инструкции Transact-SQL, необходимо вызвать метод <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> для завершения операции.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">Если процесс выполнения команды не завершено, этот метод блокируется до завершения операции.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method.</source>
          <target state="translated">Пользователи могут проверить, что команда завершения операции с помощью <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> экземпляр, возвращаемый <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">Если процедура обратного вызова был указан при вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, этот метод должен вызываться.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">Для примеров, демонстрирующих использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> имеет значение NULL (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic).</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> для завершения выполнения вызова в <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, возвращенный из вызова <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</source>
          <target state="translated">Завершает асинхронное выполнение инструкции Transact-SQL, возвращающей запрошенные данные в виде XML.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object that can be used to fetch the resulting XML data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, который может использоваться для получения получившихся XML-данных.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">При вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для выполнения инструкции Transact-SQL, необходимо вызвать метод <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> для завершения операции.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">Если процесс выполнения команды не завершено, этот метод блокируется до завершения операции.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method.</source>
          <target state="translated">Пользователи могут проверить, что команда завершения операции с помощью <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> экземпляр, возвращаемый <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">Если процедура обратного вызова был указан при вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, этот метод должен вызываться.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">Для примеров, демонстрирующих использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> имеет значение NULL (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Microsoft Visual Basic).</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> вызывался более одного раза для одиночного выполнения команды, или неправильно подобран метод для его метода выполнения (например, код вызвал <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> для завершения выполнения вызова в <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</source>
          <target state="translated">Выполняет для подключения инструкцию Transact-SQL и возвращает количество задействованных в инструкции строк.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The number of rows affected.</source>
          <target state="translated">Число обработанных строк.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> для выполнения операций с каталогом (например, запрос структуры базы данных или создание объектов базы данных, таких как таблицы) или для изменения данных в базе данных без использования <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> , выполнив UPDATE, INSERT или DELETE инструкции.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Although the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">Несмотря на то что <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> возвращает ни одной строки, любые выходные параметры или возвращаемые значения, которые сопоставлены с параметрами, заполняются данными.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">Операторы UPDATE, INSERT и DELETE возвращают количество строк, которые были обработаны с их помощью.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
          <target state="translated">Если триггер расположена в таблице, вставленных или обновленных, возвращаемое значение включает количество строк, затронутых при операции вставки или обновления и количество строк, затронутых триггерами.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">Для всех прочих типов операторов возвращаемым значением является -1.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">В случае отката возвращаемое значение также равно -1.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и затем выполняется с помощью <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</source>
          <target state="translated">В примере передается строка, являющаяся инструкцией Transact-SQL (например, UPDATE, INSERT или DELETE) и строка, используемая для подключения к источнику данных.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">Возникло исключение при выполнении команды в заблокированной строке.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Инструкция отмены.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>, which executes a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement against the connection and returns the number of rows affected.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>, которая выполняет инструкцию <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> для подключения и возвращает количество затронутых строк.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Отправляет <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и строит <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Отправляет <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и строит <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> свойству <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> свойство должно быть присвоено имя хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">Команда выполняет эту хранимую процедуру при вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If a transaction is deadlocked, an exception may not be thrown until <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> is called.</source>
          <target state="translated">Если происходит взаимоблокировка транзакции, может не быть исключение до <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">Несколько активных результирующих набора (режим MARS) позволяет несколько действий, в том же соединении.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, а затем выполняет его путем передачи строка, являющаяся инструкцией Transact-SQL SELECT и строка, используемая для подключения к источнику данных.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">Возникло исключение при выполнении команды в заблокированной строке.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The current state of the connection is closed.</source>
          <target state="translated">Подключение закрыто.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> requires an open <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">Для <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> требуется открытое подключение <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> using one of the <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Отправляет <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и формирует <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> с помощью одного из значений <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> свойству <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> свойство должно быть присвоено имя хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">Команда выполняет эту хранимую процедуру при вызове <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> для получения больших значений и двоичные данные.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> может возникнуть, и соединение будет закрыто.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">Несколько активных результирующих набора (режим MARS) позволяет несколько действий, в том же соединении.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, а затем выполняет его путем передачи строка, являющаяся инструкцией Transact-SQL SELECT и строка, используемая для подключения к источнику данных.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>.</source>
          <target state="translated">Параметру <ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> задается значение <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that is described by this <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> или хранимой процедуры, описанной данным объектом <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">Недопустимое значение <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">Параметры для завершения инструкции и извлечения данных.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated">Если задано значение <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, метод <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> считывает всю строку перед возвращением объекта Task.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">Недопустимое значение <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Инструкция отмены.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">Недопустимое значение <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">Параметры для завершения инструкции и извлечения данных.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated">Если задано значение <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, метод <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> считывает всю строку перед возвращением выполненной задачи.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Инструкция отмены.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph></source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated">Недопустимое значение <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">Дополнительные столбцы или строки не обрабатываются.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The first column of the first row in the result set, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the result set is empty.</source>
          <target state="translated">Первый столбец первой строки набора результатов или пустая ссылка (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic), если набор результатов пуст.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Returns a maximum of 2033 characters.</source>
          <target state="translated">Возвращает не более 2033 символов.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> метод для извлечения из базы данных одно значение (например, статистическое значение).</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations that you need to generate the single value using the data returned by a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">Это требует меньшего объема кода, чем при использовании <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> метод и затем выполняет операции, которые необходимо создать одно значение, используя данные, возвращенные <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">Типичный <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> запрос может быть отформатирован как в следующем примере на C#:</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и затем выполняется с помощью <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</source>
          <target state="translated">В примере передается строка, представляющая новое значение для вставки в таблицу и строка, используемая для подключения к источнику данных.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The function returns the new <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column value if a new row was inserted, 0 on failure.</source>
          <target state="translated">Функция возвращает новый <bpt id="p1">**</bpt>удостоверение<ept id="p1">**</ept> значение столбца, если была вставлена новая строка, 0 в случае неудачи.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">Возникло исключение при выполнении команды в заблокированной строке.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Инструкция отмены.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">Асинхронная версия метода <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph>, которая выполняет запрос асинхронно и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">Дополнительные столбцы или строки не обрабатываются.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Отправляет <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и строит объект <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> Свойство обычно указывает <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> инструкции с предложение FOR XML.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>However, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> or <ph id="ph3">`nvarchar`</ph> data that contains valid XML, or the contents of a column defined with the <ph id="ph4">`xml`</ph> data type.</source>
          <target state="translated">Тем не менее <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> можно также указать инструкцию, возвращающую <ph id="ph2">`ntext`</ph> или <ph id="ph3">`nvarchar`</ph> данных, которая содержит допустимый XML-код или содержимое столбца, определенного с <ph id="ph4">`xml`</ph> тип данных.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following Microsoft Visual C# example:</source>
          <target state="translated">Типичный <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> запрос может быть отформатирован как в следующем примере Microsoft Visual C#:</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set that contains XML data.</source>
          <target state="translated">Этот метод может также использоваться для получения одной строки и одного столбца результирующего набора, содержащего данные XML.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">В этом случае, если несколько возвращается одна строка, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> метод присоединяет <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> значение на пересечении первой строки и удаляет набор rest результата.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">Несколько активных результирующих набора (режим MARS) позволяет несколько действий, в том же соединении.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> для доступа к данным XML, SQL Server вернет никаких результатов XML больше 2,033 символов в длину в нескольких строках 2,033 символов.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">Чтобы избежать этого, используйте <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> для чтения запросы FOR XML.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">Дополнительные сведения см. в статье Q310378, «PRB: XML данных является усеченное при вы используйте SqlDataReader,» в базе знаний Майкрософт на <ph id="ph1">http://support.microsoft.com</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и затем выполняется с помощью <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">В примере передается строка, являющаяся инструкцией SELECT языка Transact-SQL для XML и строка, используемая для подключения к источнику данных.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">Возникло исключение при выполнении команды в заблокированной строке.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Это исключение не создается при использовании платформы Microsoft .NET Framework версии 1.0.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Инициирует асинхронное выполнение инструкции Transact-SQL или хранимой процедуры, определенной в данном объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и возвращает результаты в виде объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает объект <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">Инструкция отмены.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Асинхронная версия <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, которая отправляет <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> в <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> и создает объект <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">Сведения об исключениях передаются в возвращенном объекте Task.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе <bpt id="p1">[</bpt>асинхронное программирование<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> или <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> или <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">При присвоении <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> значения <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> использовался тип <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>, отличный от <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> более одного раза для того же экземпляра до завершения задачи.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">Подключение <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, закрытое или удаленное во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> задается в строке подключения.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server вернул ошибку во время выполнения текста команды.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи истекло время ожидания.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">Во время операции потоковой передачи возникла ошибка в объекте <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> был закрыт во время операции потоковой передачи.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о потоковой передаче см. в разделе <bpt id="p1">[</bpt>Поддержка потоковой передачи SqlClient<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>Gets or sets a value that specifies the <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph> object bound to this command.</source>
          <target state="translated">Возвращает или задает значение, определяющее объект <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph>, связанный с данной командой.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>When set to null (default), no notification should be requested.</source>
          <target state="translated">При задании значения null (по умолчанию) уведомления запрашивать не следует.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>You must set the value for this property before the command is executed for it to take effect.</source>
          <target state="translated">Перед выполнением команды для него вступили в силу, необходимо задать значение для этого свойства.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Gets or sets a value indicating whether the application should automatically receive query notifications from a common <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph> object.</source>
          <target state="translated">Возвращает или задает значение, указывающее, должно ли приложение автоматически получать уведомления о запросах от общего объекта <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the application should automatically receive query notifications; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>значение true,<ept id="p1">**</ept> Если приложение должно автоматически получать уведомления о запросах; в противном случае <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>The default value is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">Значение по умолчанию — <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</source>
          <target state="translated">Эта функция используется в приложениях ASP.NET для получения уведомления для всех команд, выполняющихся на ASP-странице в SQL Server.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</source>
          <target state="translated">Это позволяет ASP.NET кэшировать страницы, пока запросы, используемые для визуализации страницы приведет к получению разный результат.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Automatic enlistment.</source>
          <target state="translated">Автоматическое прикрепление.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This property applies only to versions of SQL Server that support query notifications.</source>
          <target state="translated">Это свойство применяется только к версиям SQL Server, поддерживают уведомления о запросах.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>For earlier versions, setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> has no effect on the application.</source>
          <target state="translated">Для более ранних версий, присвоив этому свойству значение <bpt id="p1">**</bpt>true<ept id="p1">**</ept> не влияет на приложения.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>.</source>
          <target state="translated">Возвращает набор <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The parameters of the Transact-SQL statement or stored procedure.</source>
          <target state="translated">Параметры инструкции Transact-SQL или хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The default is an empty collection.</source>
          <target state="translated">По умолчанию является пустой коллекцией.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Поставщик данных Microsoft .NET Framework для SQL Server не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкцию SQL или хранимая процедура вызывается с помощью команды <ph id="ph1">`CommandType.Text`</ph>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">В этом случае необходимо использовать именованные параметры.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For example:</source>
          <target state="translated">Пример:</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">ВЫБЕРИТЕ * от клиентов, ГДЕ CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
          <target state="translated">Если параметры в коллекции не соответствуют требованиям для выполнения запроса, то может возникнуть ошибка.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Настройка параметров и типов данных параметров<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and add parameters to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>.</source>
          <target state="translated">Следующий пример демонстрирует создание <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> и добавить параметры, чтобы <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Creates a prepared version of the command on an instance of SQL Server.</source>
          <target state="translated">Создает подготовленную версию команды на экземпляре SQL Server.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`StoredProcedure`</ph>, the call to <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> should succeed, although it may cause a no-op.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> равно <ph id="ph2">`StoredProcedure`</ph>, вызов <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> должны выполняться успешно, несмотря на то, что может привести к холостой.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Before you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.</source>
          <target state="translated">Перед вызовом метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, укажите тип данных каждого параметра в подготавливаемой инструкции.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>For each parameter that has a variable length data type, you must set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property to the maximum size needed.</source>
          <target state="translated">Для каждого параметра, имеющего тип данных переменной длины, необходимо задать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> значение максимального размера, чем требуется.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> returns an error if these conditions are not met.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> Возвращает ошибку, если эти условия не выполняются.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If the database context is changed by executing the Transact-SQL <ph id="ph1">`USE &lt;database&gt;`</ph> statement, or by calling the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> must be called a second time.</source>
          <target state="translated">Если контекст базы данных изменяется с помощью Transact-SQL <ph id="ph1">`USE &lt;database&gt;`</ph> инструкции, или путем вызова <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> метод, затем <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> должен вызываться во второй раз.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you call an <ph id="ph1">`Execute`</ph> method after calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
          <target state="translated">При вызове метода <ph id="ph1">`Execute`</ph> метод после вызова <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, все значения параметров, больше, чем значение, указанное в <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> свойство автоматически усекается до исходного размера указанного параметра, и ошибки усечения не возвращается.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
          <target state="translated">Выходные параметры (как подготовленные или нет) должен иметь тип данных, определяемый пользователем.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you specify a variable length data type, you must also specify the maximum <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.</source>
          <target state="translated">Если указать тип данных переменной длины, необходимо также указать максимальное <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Prior to Visual Studio 2010, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> threw an exception.</source>
          <target state="translated">До Visual Studio 2010 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> вызвал исключение.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Beginning in Visual Studio 2010, this method does not throw an exception.</source>
          <target state="translated">Начиная с Visual Studio 2010, этот метод не вызывает исключение.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере иллюстрируется использование метода <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> property to its default value.</source>
          <target state="translated">Восстанавливает значение по умолчанию свойства <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
          <target state="translated">Значение по умолчанию <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> составляет 30 секунд.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
          <source>Occurs when the execution of a Transact-SQL statement completes.</source>
          <target state="translated">Генерируется по завершении выполнения инструкции Transact-SQL.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">Создает новый объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, являющийся копией текущего экземпляра.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">Новый объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, являющийся копией этого экземпляра.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> within which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated">Возвращает или задает транзакцию <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>, в которой выполняется команда <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">Не удается задать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> свойства, если оно уже задано конкретное значение и команда находится в процессе выполнения.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>If you set the transaction property to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, an exception is thrown the next time that you attempt to execute a statement.</source>
          <target state="translated">Если значение свойства transaction <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> объект, который не подключен к тому же <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> как <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> исключение вызывается в следующий раз, при попытке выполнить инструкцию.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>Gets or sets how command results are applied to the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> when used by the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает способ применения результатов команды к объекту <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> при использовании метода <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> объекта <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated (as in the case of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
          <target state="translated">Значение по умолчанию <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> значение <bpt id="p1">**</bpt>оба<ept id="p1">**</ept> Если команда не создается автоматически (как в случае <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), в этом случае значение по умолчанию — <bpt id="p2">**</bpt>нет<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>For more information about using the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property, see <bpt id="p2">[</bpt>DataAdapter Parameters<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об использовании <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> свойство, в разделе <bpt id="p2">[</bpt>параметры DataAdapter<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>