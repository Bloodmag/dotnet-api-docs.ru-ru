<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommandBuilder.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51d6c2a42dc06d05c2f30996ed8802e30cd2597f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d6c2a42dc06d05c2f30996ed8802e30cd2597f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated SQL Server database.</source>
          <target state="translated">Автоматически генерирует однотабличные команды, которые позволяют согласовать изменения, вносимые в объект <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, со связанной базой данных SQL Server.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> does not automatically generate the Transact-SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated instance of SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> Не создает автоматически инструкции Transact-SQL, необходимые для согласования изменений, внесенных в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> с связанного экземпляра служб SQL Server.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object to automatically generate Transact-SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Однако можно создать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> для автоматического создания инструкции Transact-SQL для отдельных обновлений, если задать <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> свойство <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">Затем, все дополнительные инструкции Transact-SQL, не устанавливайте генерируются <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> Регистрирует себя в качестве прослушивателя для <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> событий всякий раз при установке <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">Можно связать только одну <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> объектов друг с другом за один раз.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Для создания инструкций INSERT, UPDATE или DELETE, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> использует <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> свойство для получения требуемого набора метаданных автоматически.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved, such as after the first update, you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">При изменении <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> после метаданные получения, такие как после первого обновления, необходимо вызвать <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> метод для обновления метаданных.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated">Свойство <ph id="ph1">`SelectCommand`</ph> должно также возвратить по крайней мере один столбец первичного ключа или столбец с атрибутом UNIQUE.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">Если таковые отсутствуют, <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> сгенерировано исключение, и команды не создаются.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> Также использует <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph>, и <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> ссылается <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if one or more of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">Следует вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> Если одна или несколько из этих свойств будут изменены или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> выполнена замена.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> свойства сохраняют свои предыдущие значения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">При вызове метода <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> отсоединяется от <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, и созданные команды больше не используются.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, along <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, to select rows from a data source.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, а <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>для выборки строк из источника данных.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">В примере выполняется передача строки подключения, строки запроса, которая является инструкцией Transact-SQL SELECT и строка, представляющая имя таблицы базы данных.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The example then creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">Затем пример создает <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Имя <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> вместе со связанным объектом <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> Регистрирует себя в качестве прослушивателя для <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> событий, создаваемых <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> указанный в этом свойстве.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">При создании нового экземпляра <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, все существующие <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> связанный с этим <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> освобождается.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Возвращает или задает <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> для экземпляра класса <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Возвращает или задает строку, которую можно использовать в качестве разделителя каталогов, для экземпляра класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
          <source>A string that indicates the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Строка, указывающая разделитель каталогов, который используется в экземпляре класса <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Возвращает или задает объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>, для которого автоматически создаются инструкции Transact-SQL.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> Регистрирует себя в качестве прослушивателя для <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> событий, создаваемых <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> указанный в этом свойстве.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is released.</source>
          <target state="translated">При создании нового экземпляра <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>, все существующие <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> связанный с этим <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> освобождается.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> ссылается на хранимую процедуру, из которой необходимо извлечь сведения о параметрах.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">Извлеченные параметры добавляются в коллекцию параметров <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> объекта <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          <target state="translated">Извлекает сведения о параметрах из хранимой процедуры, указанной в объекте <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, и включает их в коллекцию параметров <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /&gt;</ph> указанного объекта <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> перезаписывает любые существующие данные параметров для <ph id="ph2">`SqlDbCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph> требуется дополнительное обращение к базе данных для получения сведений.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">Если сведения о параметрах известна заранее, более эффективно будет заполнить коллекцию параметров путем задания сведений явным образом.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">Можно использовать только <ph id="ph1">`DeriveParameters`</ph> с хранимыми процедурами.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">Нельзя использовать <ph id="ph1">`DeriveParameters`</ph> с расширенными хранимыми процедурами.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">Нельзя использовать <ph id="ph1">`DeriveParameters`</ph> для заполнения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph> произвольными инструкциями Transact-SQL, таких как инструкции SELECT с параметрами.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Настройка параметров и типов данных параметров<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">Текст команды не является допустимым именем хранимой процедуры.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций удаления в базе данных.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции SQL приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций удаления в базе данных.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, необходимый для выполнения операций удаления.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции SQL приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">Если значением является <ph id="ph1">&lt;see langword="true" /&gt;</ph>, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph>, создаются <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> и т. д.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций удаления в базе данных.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform deletions.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> позволяет выполнять операции удаления.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции SQL приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Поведение по умолчанию, при создании имен параметра является использование <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, и так далее для различных параметров.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Передача <ph id="ph1">`true`</ph> для <ph id="ph2">`useColumnsForParameterNames`</ph> параметра позволяет принудительно выполнять <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> для создания параметров на основании вместо имен столбцов.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Он завершается успешно только в том случае, если выполняются следующие условия.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> , Возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> коллекции указан, и его длина меньше, чем имя создаваемого параметра.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Имя создаваемого параметра соответствует критериям, указанным в <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> регулярного выражения коллекции.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> задана коллекция.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций вставки в базе данных.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций вставки в базу данных.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, необходимый для выполнения операций вставки.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">Если значением является <ph id="ph1">&lt;see langword="true" /&gt;</ph>, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph>, создаются <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> и т. д.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения операций вставки в базе данных.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform insertions.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, необходимый для выполнения операции вставки.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Поведение по умолчанию, при создании имен параметра является использование <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, и так далее для различных параметров.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Передача <ph id="ph1">`true`</ph> для <ph id="ph2">`useColumnsForParameterNames`</ph> параметра позволяет принудительно выполнять <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> для создания параметров на основании вместо имен столбцов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Он завершается успешно только в том случае, если выполняются следующие условия.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> , Возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> коллекции указан, и его длина меньше, чем имя создаваемого параметра.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Имя создаваемого параметра соответствует критериям, указанным в <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> регулярного выражения коллекции.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> задана коллекция.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения обновлений базы данных.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения обновлений базы данных.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is required to perform updates.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, необходимый для выполнения операции обновления.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names if possible.</source>
          <target state="translated">Если значением является <ph id="ph1">&lt;see langword="true" /&gt;</ph>, создаются имена параметров, совпадающие с именами столбцов, если это возможно.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph>, создаются <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> и т. д.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">Получает автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, который требуется для выполнения обновлений базы данных.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Автоматически созданный объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, необходимый для выполнения операций обновления.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Приложение может использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> метод для получения сведений и устранения неполадок, поскольку он возвращает <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> объект для выполнения.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> в качестве основы для измененной команды.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</source>
          <target state="translated">Например, можно вызвать <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> и изменения <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> и явно задать, на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">После первоначального создания инструкции Transact-SQL, приложение должно явно вызвать <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> если она изменяет инструкцию каким-либо образом.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">В противном случае <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph> по-прежнему работать с данными из предыдущей инструкции, которые могут быть неправильными.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The Transact-SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Инструкции Transact-SQL впервые создаются, когда приложение вызывает метод <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">Поведение по умолчанию, при создании имен параметра является использование <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, и так далее для различных параметров.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Передача <ph id="ph1">`true`</ph> для <ph id="ph2">`useColumnsForParameterNames`</ph> параметра позволяет принудительно выполнять <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> для создания параметров на основании вместо имен столбцов.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Он завершается успешно только в том случае, если выполняются следующие условия.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> , Возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> коллекции указан, и его длина меньше, чем имя создаваемого параметра.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection regular expression.</source>
          <target state="translated">Имя создаваемого параметра соответствует критериям, указанным в <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> регулярного выражения коллекции.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> collection is specified.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> , возвращенные <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> метод вызова и найти в <ph id="ph2">&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;</ph> задана коллекция.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>создание команд с помощью построителей команд<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">Исходный идентификатор без кавычек.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">При этом корректно исключаются встроенные в идентификатор кавычки.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Версия идентификатора, заключенного кавычки.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">Кавычки, внедренные в идентификатор, корректно исключаются.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Получает или задает начальный символ или символы, используемые для указания объектов базы данных SQL Server (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The starting character or characters to use.</source>
          <target state="translated">Используемый начальный символ или символы.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">Значение по умолчанию - пустая строка.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">Несмотря на то, что нельзя изменить <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> свойства после вставки, обновления или удаления создана команда, их параметры можно изменить после вызова <ph id="ph3">`Update`</ph> метод объекта DataAdapter.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Получает или задает конечный символ или символы, используемые для указания объектов базы данных SQL Server (например, таблиц или столбцов), имена которых содержат такие символы, как пробелы или зарезервированные токены.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">Используемый конечный символ или символы.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">Значение по умолчанию - пустая строка.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete operation has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a DataAdapter.</source>
          <target state="translated">Несмотря на то, что нельзя изменить <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A&gt;</ph> свойства после вставки, обновления или удаления создания операции, их параметры можно изменить после вызова <ph id="ph3">`Update`</ph> метод объекта DataAdapter.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">Это свойство не может быть изменено после создания команды INSERT, UPDATE или DELETE.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">Возвращает или задает символ, который используется в качестве разделителя между идентификатором схемы и остальными идентификаторами.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">Символ, который необходимо использовать в схеме в качестве разделителя.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">Как правило серверы баз данных указать схему для идентификатора, имя схемы отделяют от идентификатора определенным символом.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Например SQL Server используется период, создание качестве, где «Person» — это имя схемы, а «CustomerName» — идентификатор.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">Задание этого свойства позволяет разработчикам изменять это поведение.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Идентификатор, из которого будут удалены внедренные кавычки.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">При заданном идентификаторе без кавычек в каталоге, набранном в правильном регистре, возвращает заключенный в кавычки идентификатор в корректной форме.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">При этом все кавычки, внедренные в идентификатор, корректно сохраняются.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">Идентификатор без кавычек, в котором встроенные кавычки корректно сохранены.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>