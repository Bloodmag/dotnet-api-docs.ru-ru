<Type Name="SqlDataAdapter" FullName="System.Data.SqlClient.SqlDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c262d135008abdf05b28c5f242ad91f6f215ac7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор выполняемых над данными команд и подключения базы данных, которые используется для заполнения <see cref="T:System.Data.DataSet" /> и обновления базы данных SQL Server. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataAdapter>, Выступает в качестве моста между <xref:System.Data.DataSet> и SQL Server для получения и сохранения данных. <xref:System.Data.SqlClient.SqlDataAdapter> Предоставляет этот мост, сопоставление <xref:System.Data.Common.DbDataAdapter.Fill%2A>, который изменяет данные в <xref:System.Data.DataSet> в соответствии с данными в источнике данных и <xref:System.Data.Common.DbDataAdapter.Update%2A>, какие изменения данных в источнике данных в соответствии с данными в <xref:System.Data.DataSet>, с использованием соответствующие инструкции Transact-SQL для источника данных. Обновление выполняется по принципу по строкам. Для каждой вставленной, измененные и удаленные строки <xref:System.Data.Common.DbDataAdapter.Update%2A> метод определяет тип изменения, которое было выполнено на нем (`Insert`, `Update`, или `Delete`). В зависимости от типа изменений `Insert`, `Update`, или `Delete` шаблон команды выполняется для распространения измененной строки в источнике данных. Когда <xref:System.Data.SqlClient.SqlDataAdapter> заполняет <xref:System.Data.DataSet>, он создает необходимые таблицы и столбцы для возвращаемых данных, если они еще не существует. Однако сведения о первичном ключе отсутствует в схеме неявно созданных <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> свойству <xref:System.Data.MissingSchemaAction.AddWithKey>. Возможно также <xref:System.Data.SqlClient.SqlDataAdapter> создать схему <xref:System.Data.DataSet>, включая сведения о первичном ключе, перед заполнением ее данными с помощью `FillSchema`. Дополнительные сведения см. в разделе [Добавление существующих ограничений к набору данных](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).  
  
 <xref:System.Data.SqlClient.SqlDataAdapter> используется в сочетании с <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlCommand> для увеличения производительности при подключении к базе данных SQL Server.  
  
> [!NOTE]
>  При использовании хранимых процедур SQL Server для изменения или удаления данных с помощью `DataAdapter` убедитесь, что в определении хранимой процедуры не указана инструкция SET NOCOUNT ON. В таком случае возвращается число затронутых строк, равное нулю, что `DataAdapter` интерпретирует как конфликт параллелизма. Это событие вызовет исключение <xref:System.Data.DBConcurrencyException>.  
  
 <xref:System.Data.SqlClient.SqlDataAdapter> Также включает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, и <xref:System.Data.Common.DataAdapter.TableMappings%2A> для облегчения загрузки и обновления данных.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter> создается для чтения записи свойствам присваиваются начальные значения. Список этих значений см. в разделе <xref:System.Data.SqlClient.SqlDataAdapter> конструктор.  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, И <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> являются универсальные шаблоны, которые автоматически заполняются отдельных значений из каждой измененной строки через механизм параметров.  
  
 Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`. <xref:System.Data.Common.DbParameter.SourceColumn%2A> Свойство <xref:System.Data.Common.DbParameter> объекта должно быть присвоено имя столбца. Этот параметр указывает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке.  
  
> [!NOTE]
>  <xref:System.InvalidOperationException> Будет возникать, если <xref:System.Data.Common.DbDataAdapter.Fill%2A> будет вызван, а таблица содержит определяемый пользователем тип, который доступен не на клиентском компьютере. Дополнительные сведения см. в разделе [Создание и типы Using User-Defined](http://go.microsoft.com/fwlink/?LinkId=139492) в электронной документации по SQL Server.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, и <xref:System.Data.SqlClient.SqlConnection> для выбора записей из базы данных и заполнения <xref:System.Data.DataSet> с выбранных строк. Заполненный <xref:System.Data.DataSet> затем возвращается. Чтобы выполнить это, методу передается инициализированный <xref:System.Data.DataSet>, строку соединения и строку запроса, являющаяся инструкцией Transact-SQL SELECT.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter> создается следующее чтения и записи свойствам присваиваются следующие начальные значения.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Можно изменить значение любого из этих свойств, вызвав его отдельно.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::Data::SqlClient::SqlCommand ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">Объект <see cref="T:System.Data.SqlClient.SqlCommand" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру, задаваемый в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью указанной команды <see cref="T:System.Data.SqlClient.SqlCommand" /> в качестве свойства <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация <xref:System.Data.SqlClient.SqlDataAdapter> конструктора задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> равным значению, указанному в `selectCommand` параметра.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter> создается следующее чтения и записи свойствам присваиваются следующие начальные значения.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Можно изменить значение любого из этих свойств, вызвав его отдельно.  
  
 При <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> (или любые другие свойства команды) назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand> не копируется. <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.SqlClient.SqlConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::Data::SqlClient::SqlConnection ^ selectConnection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Объект <see cref="T:System.String" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру для использования в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnection">
          <see cref="T:System.Data.SqlClient.SqlConnection" />, предоставляющее подключение. Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> и объекта <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация <xref:System.Data.SqlClient.SqlDataAdapter> открывает и закрывает <xref:System.Data.SqlClient.SqlConnection> , если он еще не открыт. Это может быть полезно в приложении, необходимо вызвать <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод для двух или более <xref:System.Data.SqlClient.SqlDataAdapter> объектов. Если <xref:System.Data.SqlClient.SqlConnection> — уже открыт, необходимо явно вызвать **закрыть** или **Dispose** закрыть его.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter> создается следующее чтения и записи свойствам присваиваются следующие начальные значения.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Можно изменить значение любого из этих свойств, вызвав его отдельно.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText">Объект <see cref="T:System.String" />, содержащий инструкцию Transact-SQL SELECT или хранимую процедуру для использования в свойстве <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> объекта <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
        <param name="selectConnectionString">Строка подключения. Если в строке подключения не используется <see langword="Integrated Security = true" />, можно использовать <see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /> и <see cref="T:System.Data.SqlClient.SqlCredential" /> для передачи идентификатора пользователя и пароля с большей безопасностью, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> с помощью <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> и строки подключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.Data.SqlClient.SqlDataAdapter> конструктор использует `selectCommandText` параметр, чтобы задать <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> свойства. <xref:System.Data.SqlClient.SqlDataAdapter> Будет создавать и поддерживать соединение, созданное с помощью `selectConnectionString` параметра.  
  
 При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter> создается следующее чтения и записи свойствам присваиваются следующие начальные значения.  
  
|Свойства|Исходное значение|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 Можно изменить значение любого из этих свойств, вызвав его отдельно.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.SqlDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ DeleteCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для удаления записей из набора данных.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlCommand" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей, соответствующих удаленным строкам в <see cref="T:System.Data.DataSet" />, из базы данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> может быть создана автоматически, если задать <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>. После этого любые дополнительные команды, не устанавливайте формируются <xref:System.Data.SqlClient.SqlCommandBuilder>. Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>. Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Когда <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand> не копируется. <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`. `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, и <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> свойства. Предполагается, что вы уже создали <xref:System.Data.SqlClient.SqlConnection> объекта.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ InsertCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для вставки новых записей в источник данных.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlCommand" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей, соответствующих новым строкам в <see cref="T:System.Data.DataSet" />, в базу данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> может быть создана автоматически, если задать <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>. После этого любые дополнительные команды, не устанавливайте формируются <xref:System.Data.SqlClient.SqlCommandBuilder>. Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>. Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Когда <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand> не копируется. <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 При выполнении этой команды возвращаются строки, эти строки добавляются в <xref:System.Data.DataSet> в зависимости от того, как задать **UpdatedRowSource** свойство <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`. `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, и <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> свойства. Предполагается, что вы уже создали <xref:System.Data.SqlClient.SqlConnection> объекта.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As SqlRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> после выполнения команды для источника данных. Сделана попытка обновления, поэтому создается событие.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, два события, возникающие в каждой обновленной строки данных. Порядок выполнения выглядит следующим образом:  
  
1.  Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.  
  
2.  Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Выполняется команда.  
  
4.  Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.  
  
5.  Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.  
  
6.  Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;  
  
   
  
## Examples  
 В следующем примере показано, как использовать оба <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> и <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> события.  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> Событие возвращает следующие выходные данные:  
  
 аргументы события: (command=System.Data.SqlClient.SqlCommand commandType = 2 состояние = 0)  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> Событие возвращает следующие выходные данные:  
  
 аргументы события: (command=System.Data.SqlClient.SqlCommand commandType = 2 recordsAffected = 1 row=System.Data.DataRow[37] состояние = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As SqlRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит во время <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> перед выполнением команды в отношении источника данных. Сделана попытка обновления, поэтому создается событие.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, два события, возникающие в каждой обновленной строки данных. Порядок выполнения выглядит следующим образом:  
  
1.  Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.  
  
2.  Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Выполняется команда.  
  
4.  Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.  
  
5.  Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.  
  
6.  Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;  
  
   
  
## Examples  
 В следующем примере показано, как использовать оба <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> и <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> события.  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> Событие возвращает следующие выходные данные:  
  
 аргументы события: (command=System.Data.SqlClient.SqlCommand commandType = 2 состояние = 0)  
  
 <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> Событие возвращает следующие выходные данные:  
  
 аргументы события: (command=System.Data.SqlClient.SqlCommand commandType = 2 recordsAffected = 1 row=System.Data.DataRow[37] состояние = 0)  
  
 [!code-csharp[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ SelectCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для выбора записей из источника данных.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlCommand" />, используемый во время выполнения <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> для выбора записей из базы данных для помещения в <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand> не копируется. <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 Если <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> не возвращает ни одной строки не добавляются таблицы для <xref:System.Data.DataSet>, и исключение не вызывается.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, и <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> свойства. Предполагается, что вы уже создали <xref:System.Data.SqlClient.SqlConnection> объекта.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> — используется при <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных для удаленных строк в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</summary>
        <value>Интерфейс <see cref="T:System.Data.IdbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataAdapter> приведен к типу интерфейса <xref:System.Data.IDbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Новый объект, который является копией текущего экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataAdapter> приведен к типу интерфейса <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число строк, обработанных при каждом обращении к серверу.</summary>
        <value>Количество строк, которые необходимо обработать с помощью одного пакета.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Effect  
  
 </description></listheader><item><term> 0  
  
 </term><description> Нет ограничений на размер пакета...  
  
 </description></item><item><term> 1  
  
 </term><description> Обновление пакета отключено.  
  
 </description></item><item><term> &gt;1  
  
 </term><description> Изменения отправляются с помощью пакетов <see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /> операций одновременно.  
  
 </description></item></list>  
  
 Этому параметру присвоено значение, отличное от 1, все команды, связанное с <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> должны иметь их **UpdatedRowSource** свойство <see langword="None" /> или <see langword="OutputParameters" />. В противном случае возникает исключение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут выполняться в рамках одного пакета.  
  
 Используйте <xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A> свойства для обновления источника данных изменениями, сделанными <xref:System.Data.DataSet>. Это может повысить производительность приложения путем сокращения числа циклов приема-передачи на сервер.  
  
 Выполнение очень больших пакетов может снизить производительность. Поэтому необходимо экспериментальным путем найти параметр оптимального размера пакета перед реализацией приложения.  
  
 <xref:System.ArgumentOutOfRangeException> Возникает исключение, если число имеет значение меньше нуля.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommand ^ UpdateCommand { System::Data::SqlClient::SqlCommand ^ get(); void set(System::Data::SqlClient::SqlCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для обновления записей в источнике данных.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlCommand" /> используется в процессе <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в базе данных, соответствующих измененным строкам в <see cref="T:System.Data.DataSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> может быть создана автоматически, если задать <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>. После этого любые дополнительные команды, не устанавливайте формируются <xref:System.Data.SqlClient.SqlCommandBuilder>. Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>. Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Когда <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand> не копируется. <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
> [!NOTE]
>  При выполнении этой команды возвращаются строки, обновленные строки могут быть объединены с <xref:System.Data.DataSet> в зависимости от того, как задать **UpdatedRowSource** свойство <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`.  
  
 `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра не вручную, а берется из конкретного столбца в настоящее время в обрабатываемой в строке.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlDataAdapter> и задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> и <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> свойства. Предполагается, что вы уже создали <xref:System.Data.SqlClient.SqlConnection> объекта.  
  
 [!code-csharp[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/CS/source.cs#1)]
 [!code-vb[DataWorks SqlDataAdapter.Command#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlDataAdapter.Command/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>