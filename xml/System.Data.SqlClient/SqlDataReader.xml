<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d73c01c8b2b9a1947ad9f3391514cebd51f2a36f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40212265" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlDataReader = class&#xA;    inherit DbDataReader&#xA;    interface IDataReader&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="186d3-101">Предоставляет способ чтения потока строк последовательного доступа из базы данных SQL Server.</span>
      <span class="sxs-lookup">
        <span data-stu-id="186d3-101">Provides a way of reading a forward-only stream of rows from a SQL Server database.</span>
      </span>
      <span data-ttu-id="186d3-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="186d3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-103">Чтобы создать <xref:System.Data.SqlClient.SqlDataReader>, необходимо вызвать <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> метод <xref:System.Data.SqlClient.SqlCommand> объекта вместо непосредственного использования конструктора.</span><span class="sxs-lookup"><span data-stu-id="186d3-103">To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="186d3-104">Хотя <xref:System.Data.SqlClient.SqlDataReader> используется, сопоставленного <xref:System.Data.SqlClient.SqlConnection> обслуживает <xref:System.Data.SqlClient.SqlDataReader>, и никакие другие операции могут выполняться на <xref:System.Data.SqlClient.SqlConnection> кроме закрытия.</span><span class="sxs-lookup"><span data-stu-id="186d3-104">While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it.</span></span> <span data-ttu-id="186d3-105">Это происходит до <xref:System.Data.SqlClient.SqlDataReader.Close%2A> метод <xref:System.Data.SqlClient.SqlDataReader> вызывается.</span><span class="sxs-lookup"><span data-stu-id="186d3-105">This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called.</span></span> <span data-ttu-id="186d3-106">Например, не удается получить выходные параметры можно только после вызова метода <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="186d3-107">Изменения, внесенные в результирующий набор другим процессом или потоком во время чтения данных могут быть видны пользователю `SqlDataReader`.</span><span class="sxs-lookup"><span data-stu-id="186d3-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`.</span></span> <span data-ttu-id="186d3-108">Однако точное поведение зависит от времени.</span><span class="sxs-lookup"><span data-stu-id="186d3-108">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="186d3-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> и <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> являются единственными свойствами, которые могут быть вызваны после <xref:System.Data.SqlClient.SqlDataReader> закрыт.</span><span class="sxs-lookup"><span data-stu-id="186d3-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="186d3-110">Несмотря на то что <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> свойству может осуществляться во время <xref:System.Data.SqlClient.SqlDataReader> существует, всегда вызывать <xref:System.Data.SqlClient.SqlDataReader.Close%2A> перед возвратом значения <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> гарантировать точность возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="186d3-110">Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
 <span data-ttu-id="186d3-111">При использовании последовательного доступа (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), <xref:System.InvalidOperationException> будет вызываться, если <xref:System.Data.SqlClient.SqlDataReader> положение увеличивается, и другой чтения, попытка выполнить операцию на предыдущий столбец.</span><span class="sxs-lookup"><span data-stu-id="186d3-111">When using sequential access (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="186d3-112">Для обеспечения оптимальной производительности <xref:System.Data.SqlClient.SqlDataReader> позволяет избежать создания ненужных объектов и копий данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-112">For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data.</span></span> <span data-ttu-id="186d3-113">Таким образом, несколько вызовов методов, таких как <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> возвращают ссылку на тот же объект.</span><span class="sxs-lookup"><span data-stu-id="186d3-113">Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object.</span></span> <span data-ttu-id="186d3-114">Соблюдайте осторожность при изменении базового значения объекты, возвращаемые методами, такими как <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-114">Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="186d3-115">В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>и <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-115">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-116">В примере считываются по данным, записывая их в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="186d3-116">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="186d3-117">Код затем закрывает <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-117">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-118"><xref:System.Data.SqlClient.SqlConnection> Закрывается автоматически в конце `using` блок кода.</span><span class="sxs-lookup"><span data-stu-id="186d3-118">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="186d3-119">Закрывает объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-119">Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-120">Необходимо явно вызывать <xref:System.Data.SqlClient.SqlDataReader.Close%2A> метод после завершения работы с помощью <xref:System.Data.SqlClient.SqlDataReader> использовать связанное <xref:System.Data.SqlClient.SqlConnection> в любых других целях.</span><span class="sxs-lookup"><span data-stu-id="186d3-120">You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.</span></span>  
  
 <span data-ttu-id="186d3-121">`Close` Метод заполняет значения для выходных параметров, возвращаемых значений и `RecordsAffected`, увеличивает время, необходимое для закрытия `SqlDataReader` , используемый для обработки больших или сложных запросов.</span><span class="sxs-lookup"><span data-stu-id="186d3-121">The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query.</span></span> <span data-ttu-id="186d3-122">Когда возвращаемые значения и число записей, затронутых запросом не учитываются, время, необходимое для закрытия `SqlDataReader` можно сократить путем вызова <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> метод связанного <xref:System.Data.SqlClient.SqlCommand> объект перед вызовом `Close` метод.</span><span class="sxs-lookup"><span data-stu-id="186d3-122">When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="186d3-123">Не вызывайте `Close` или `Dispose` на подключение, DataReader или любого другого управляемого объекта в `Finalize` метод класса.</span><span class="sxs-lookup"><span data-stu-id="186d3-123">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="186d3-124">Метод завершения освобождать только неуправляемые ресурсы, которые ваш класс непосредственно владеет.</span><span class="sxs-lookup"><span data-stu-id="186d3-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="186d3-125">Если класс не владеет какими-либо неуправляемыми ресурсами, не включайте в его определение метод `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="186d3-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="186d3-126">Дополнительные сведения см. в разделе [мусора](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-126">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="186d3-127">В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, `SqlCommand`и <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-127">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-128">В примере считываются по данным, записывая их в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="186d3-128">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="186d3-129">Код затем закрывает <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-129">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-130"><xref:System.Data.SqlClient.SqlConnection> Закрывается автоматически в конце `using` блок кода.</span><span class="sxs-lookup"><span data-stu-id="186d3-130">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-131">Возвращает объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с объектом <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-132">Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-133">Возвращает значение, указывающее глубину вложенности для текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-133">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-134">Глубина вложенности для текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-134">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-135">Внешняя таблица имеет нулевую глубину вложенности.</span><span class="sxs-lookup"><span data-stu-id="186d3-135">The outermost table has a depth of zero.</span></span> <span data-ttu-id="186d3-136">Поставщик данных .NET Framework для SQL Server не поддерживает вложение и всегда возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="186d3-136">The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-137">Возвращает количество столбцов в текущей строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-137">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-138">0, если не находится внутри допустимого набора записей; в противном случае — число столбцов в текущей строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-138">When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</span>
          </span>
          <span data-ttu-id="186d3-139">Значение по умолчанию — -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-139">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-140">Выполнение запроса, который, по своей природе не возвращает строки (например, запрос на удаление), задает <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> 0.</span><span class="sxs-lookup"><span data-stu-id="186d3-140">Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0.</span></span> <span data-ttu-id="186d3-141">Тем не менее.</span><span class="sxs-lookup"><span data-stu-id="186d3-141">However.</span></span> <span data-ttu-id="186d3-142">Это не следует путать с запросом, который возвращает 0 строк (например, SELECT \* FROM *таблицы* WHERE 1 = 2) в этом случае <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> возвращает количество столбцов в таблице, включая скрытые поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-142">this should not be confused with a query that returns 0 rows (such as SELECT \* FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields.</span></span> <span data-ttu-id="186d3-143">Для исключения скрытых полей используется <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-143">Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="186d3-144">Текущее подключение к экземпляру SQL Server отсутствует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-144">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="sqlDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-145">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-145">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-146">Получает значение указанного столбца в виде логического значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-146">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-147">Значение столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-147">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-148">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-148">No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="186d3-149">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-149">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-150">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-150">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="sqlDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-151">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-151">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-152">Получает значение заданного столбца в виде байта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-152">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-153">Значение заданного столбца в виде байта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-153">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-154">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть байт.</span><span class="sxs-lookup"><span data-stu-id="186d3-154">No conversions are performed; therefore, the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="186d3-155">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-155">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-156">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="sqlDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-157">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="186d3-158">Индекс в поле, с которого начинается операция считывания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-158">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="186d3-159">Буфер, в который необходимо считать поток байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-159">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="186d3-160">Индекс в <c>buffer</c>, с которого должна начинаться операция записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-160">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="186d3-161">Максимальная длина для копирования в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-161">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-162">Считывает поток байтов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-162">Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-163">Фактическое количество считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-163">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> Возвращает число доступных байтов в поле.</span><span class="sxs-lookup"><span data-stu-id="186d3-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="186d3-165">В большинстве случаев это точная длина поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-165">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="186d3-166">Однако возвращенное число может быть меньше фактической длины поля, если `GetBytes` уже использовался для получения байтов из поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-166">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="186d3-167">Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader> считывает большой структуры данных в буфер.</span><span class="sxs-lookup"><span data-stu-id="186d3-167">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="186d3-168">Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="186d3-168">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="186d3-169">Если передать буфер, который является `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> возвращает длину всего поля в байтах, а не оставшийся размер в зависимости от параметра смещения буфера.</span><span class="sxs-lookup"><span data-stu-id="186d3-169">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="186d3-170">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть массив байтов.</span><span class="sxs-lookup"><span data-stu-id="186d3-170">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="sqlDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-171">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-172">Получает значение заданного столбца в виде одного символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-172">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-173">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-173">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-174">Не поддерживается для <xref:System.Data.SqlClient>.</span><span class="sxs-lookup"><span data-stu-id="186d3-174">Not supported for <xref:System.Data.SqlClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-175">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-175">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="sqlDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-176">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="186d3-177">Индекс в поле, с которого начинается операция считывания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-177">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="186d3-178">Буфер, в который необходимо считать поток байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-178">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="186d3-179">Индекс в <c>buffer</c>, с которого должна начинаться операция записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-179">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="186d3-180">Максимальная длина для копирования в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-180">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-181">Считывает поток символов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-181">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-182">Фактическое количество считанных символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-182">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> Возвращает количество доступных символов в поле.</span><span class="sxs-lookup"><span data-stu-id="186d3-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="186d3-184">Часто это точная длина поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-184">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="186d3-185">Однако возвращенное число может быть меньше фактической длины поля, если `GetChars` уже использовался для получения символов из поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-185">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="186d3-186">Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader> считывает большой структуры данных в буфер.</span><span class="sxs-lookup"><span data-stu-id="186d3-186">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="186d3-187">Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="186d3-187">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="186d3-188">Фактическое число считанных символов может быть меньше запрошенного длины, если достигнут конец поля.</span><span class="sxs-lookup"><span data-stu-id="186d3-188">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="186d3-189">Если передать буфер, который является `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> возвращает длину всего поля в символах, а не оставшийся размер в зависимости от параметра смещения буфера.</span><span class="sxs-lookup"><span data-stu-id="186d3-189">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="186d3-190">Преобразования не выполняются; Таким образом.</span><span class="sxs-lookup"><span data-stu-id="186d3-190">No conversions are performed; therefore.</span></span> <span data-ttu-id="186d3-191">извлеченные данные уже должны быть массив символов.</span><span class="sxs-lookup"><span data-stu-id="186d3-191">the data retrieved must already be a character array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="186d3-192"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> Метод возвращает 0, если `dataIndex` является отрицательным.</span><span class="sxs-lookup"><span data-stu-id="186d3-192">The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="sqlDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="sqlDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-193">Порядковый номер (с нуля) искомого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-193">The zero-based ordinal position of the column to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-194">Получает строку, представляющую тип данных в указанном столбце.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-194">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-195">Строка, представляющая тип данных указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-195">The string representing the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-196">Возвращает имя типа данных сервера.</span><span class="sxs-lookup"><span data-stu-id="186d3-196">Returns the name of the back-end data type.</span></span>  
  
 <span data-ttu-id="186d3-197">`numeric` является синонимом в SQL Server для `decimal` тип данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-197">`numeric` is a synonym in SQL Server for the `decimal` data type.</span></span> <span data-ttu-id="186d3-198">`GetDataTypeName` Возвращает «decimal» для столбца, определенных как десятичных или числовых.</span><span class="sxs-lookup"><span data-stu-id="186d3-198">`GetDataTypeName` will return "decimal" for a column defined as either decimal or numeric.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="sqlDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-199">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-199">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-200">Получает значение заданного столбца в виде объекта <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-200">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-201">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-201">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-202">Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTime> объекта.</span><span class="sxs-lookup"><span data-stu-id="186d3-202">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="186d3-203">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-203">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-204">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-204">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTimeOffset : int -&gt; DateTimeOffset&#xA;override this.GetDateTimeOffset : int -&gt; DateTimeOffset" Usage="sqlDataReader.GetDateTimeOffset i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-205">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-205">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-206">Возвращает значение указанного столбца как объект <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-206">Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-207">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-207">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-208">Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTimeOffset> объекта.</span><span class="sxs-lookup"><span data-stu-id="186d3-208">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.</span></span>  
  
 <span data-ttu-id="186d3-209">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-209">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-210">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="sqlDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-211">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-212">Получает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-212">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-213">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-213">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-214">Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.Decimal> объекта.</span><span class="sxs-lookup"><span data-stu-id="186d3-214">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="186d3-215">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-215">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-216">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-216">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="sqlDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-217">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-217">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-218">Получает значение заданного столбца в виде числа двойной точности с плавающей запятой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-218">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-219">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-219">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-220">Преобразование не выполняется.</span><span class="sxs-lookup"><span data-stu-id="186d3-220">No conversions are performed.</span></span> <span data-ttu-id="186d3-221">Таким образом извлеченные данные уже должны быть двойной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="186d3-221">Therefore, the data retrieved must already be a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="186d3-222">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-222">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-223">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-223">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="sqlDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="186d3-224">Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-224">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-225">
            <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-225">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-226">Несмотря на то, что этот метод можно использовать для получения явный перечислитель, в языках, которые поддерживают `foreach` конструкция, проще использовать циклы для перебора строк в модуле чтения данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-226">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="sqlDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-227">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-227">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-228">Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-228">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-229">
            <see cref="T:System.Type" />, который является типом данных объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-229">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
          <span data-ttu-id="186d3-230">Если тип отсутствует в клиенте, в случае, когда из базы данных возвращен пользовательский тип, **GetFieldType** возвращает NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-230">If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValue : int -&gt; 'T" Usage="sqlDataReader.GetFieldValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="186d3-231">Тип возвращаемого значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-231">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="186d3-232">Получаемый столбец.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-232">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-233">Синхронно получает значение заданного столбца в виде типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-233">Synchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="186d3-234">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> — асинхронная версия этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-234">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-235">Объект возвращаемого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-235">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-236">`T` может принимать одно из следующих типов:</span><span class="sxs-lookup"><span data-stu-id="186d3-236">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="186d3-237">Boolean</span><span class="sxs-lookup"><span data-stu-id="186d3-237">Boolean</span></span>|<span data-ttu-id="186d3-238">Byte</span><span class="sxs-lookup"><span data-stu-id="186d3-238">Byte</span></span>|<span data-ttu-id="186d3-239">Char</span><span class="sxs-lookup"><span data-stu-id="186d3-239">Char</span></span>|<span data-ttu-id="186d3-240">DateTime</span><span class="sxs-lookup"><span data-stu-id="186d3-240">DateTime</span></span>|  
|<span data-ttu-id="186d3-241">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="186d3-241">DateTimeOffset</span></span>|<span data-ttu-id="186d3-242">Decimal</span><span class="sxs-lookup"><span data-stu-id="186d3-242">Decimal</span></span>|<span data-ttu-id="186d3-243">Double</span><span class="sxs-lookup"><span data-stu-id="186d3-243">Double</span></span>|<span data-ttu-id="186d3-244">Float</span><span class="sxs-lookup"><span data-stu-id="186d3-244">Float</span></span>|  
|<span data-ttu-id="186d3-245">Guid</span><span class="sxs-lookup"><span data-stu-id="186d3-245">Guid</span></span>|<span data-ttu-id="186d3-246">Int16</span><span class="sxs-lookup"><span data-stu-id="186d3-246">Int16</span></span>|<span data-ttu-id="186d3-247">Int32</span><span class="sxs-lookup"><span data-stu-id="186d3-247">Int32</span></span>|<span data-ttu-id="186d3-248">Int64</span><span class="sxs-lookup"><span data-stu-id="186d3-248">Int64</span></span>|  
|<span data-ttu-id="186d3-249">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="186d3-249">SqlBoolean</span></span>|<span data-ttu-id="186d3-250">SqlByte</span><span class="sxs-lookup"><span data-stu-id="186d3-250">SqlByte</span></span>|<span data-ttu-id="186d3-251">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="186d3-251">SqlDateTime</span></span>|<span data-ttu-id="186d3-252">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="186d3-252">SqlDecimal</span></span>|  
|<span data-ttu-id="186d3-253">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="186d3-253">SqlDouble</span></span>|<span data-ttu-id="186d3-254">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="186d3-254">SqlGuid</span></span>|<span data-ttu-id="186d3-255">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="186d3-255">SqlInt16</span></span>|<span data-ttu-id="186d3-256">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="186d3-256">SqlInt32</span></span>|  
|<span data-ttu-id="186d3-257">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="186d3-257">SqlInt64</span></span>|<span data-ttu-id="186d3-258">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="186d3-258">SqlMoney</span></span>|<span data-ttu-id="186d3-259">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="186d3-259">SqlSingle</span></span>|<span data-ttu-id="186d3-260">SqlString</span><span class="sxs-lookup"><span data-stu-id="186d3-260">SqlString</span></span>|  
|<span data-ttu-id="186d3-261">Строка.</span><span class="sxs-lookup"><span data-stu-id="186d3-261">String</span></span>|<span data-ttu-id="186d3-262">Определяемый пользователем тип, который может быть любого типа CLR, отмеченные <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="186d3-262">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="186d3-263">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-263">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-264">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-264">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-265">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-265">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-266">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-267">Сделана попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-267">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-268">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-268">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-269">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-269">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-270">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-270">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="186d3-271">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-271">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-272">
            <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-272">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="sqlDataReader.GetFieldValueAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="186d3-273">Тип возвращаемого значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-273">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="186d3-274">Получаемый столбец.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-274">The column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="186d3-275">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-275">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="186d3-276">Не гарантирует отмену.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-276">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="186d3-277">Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-277">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="186d3-278">Возвращаемая задача должна быть помечена как отмененная.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-278">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-279">Асинхронно получает значение заданного столбца в виде типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-279">Asynchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="186d3-280">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> — синхронная версия этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-280">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-281">Объект возвращаемого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-281">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-282">`T` может принимать одно из следующих типов:</span><span class="sxs-lookup"><span data-stu-id="186d3-282">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="186d3-283">Boolean</span><span class="sxs-lookup"><span data-stu-id="186d3-283">Boolean</span></span>|<span data-ttu-id="186d3-284">Byte</span><span class="sxs-lookup"><span data-stu-id="186d3-284">Byte</span></span>|<span data-ttu-id="186d3-285">Char</span><span class="sxs-lookup"><span data-stu-id="186d3-285">Char</span></span>|<span data-ttu-id="186d3-286">DateTime</span><span class="sxs-lookup"><span data-stu-id="186d3-286">DateTime</span></span>|  
|<span data-ttu-id="186d3-287">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="186d3-287">DateTimeOffset</span></span>|<span data-ttu-id="186d3-288">Decimal</span><span class="sxs-lookup"><span data-stu-id="186d3-288">Decimal</span></span>|<span data-ttu-id="186d3-289">Double</span><span class="sxs-lookup"><span data-stu-id="186d3-289">Double</span></span>|<span data-ttu-id="186d3-290">Float</span><span class="sxs-lookup"><span data-stu-id="186d3-290">Float</span></span>|  
|<span data-ttu-id="186d3-291">Guid</span><span class="sxs-lookup"><span data-stu-id="186d3-291">Guid</span></span>|<span data-ttu-id="186d3-292">Int16</span><span class="sxs-lookup"><span data-stu-id="186d3-292">Int16</span></span>|<span data-ttu-id="186d3-293">Int32</span><span class="sxs-lookup"><span data-stu-id="186d3-293">Int32</span></span>|<span data-ttu-id="186d3-294">Int64</span><span class="sxs-lookup"><span data-stu-id="186d3-294">Int64</span></span>|  
|<span data-ttu-id="186d3-295">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="186d3-295">SqlBoolean</span></span>|<span data-ttu-id="186d3-296">SqlByte</span><span class="sxs-lookup"><span data-stu-id="186d3-296">SqlByte</span></span>|<span data-ttu-id="186d3-297">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="186d3-297">SqlDateTime</span></span>|<span data-ttu-id="186d3-298">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="186d3-298">SqlDecimal</span></span>|  
|<span data-ttu-id="186d3-299">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="186d3-299">SqlDouble</span></span>|<span data-ttu-id="186d3-300">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="186d3-300">SqlGuid</span></span>|<span data-ttu-id="186d3-301">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="186d3-301">SqlInt16</span></span>|<span data-ttu-id="186d3-302">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="186d3-302">SqlInt32</span></span>|  
|<span data-ttu-id="186d3-303">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="186d3-303">SqlInt64</span></span>|<span data-ttu-id="186d3-304">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="186d3-304">SqlMoney</span></span>|<span data-ttu-id="186d3-305">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="186d3-305">SqlSingle</span></span>|<span data-ttu-id="186d3-306">SqlString</span><span class="sxs-lookup"><span data-stu-id="186d3-306">SqlString</span></span>|  
|<span data-ttu-id="186d3-307">Строка.</span><span class="sxs-lookup"><span data-stu-id="186d3-307">String</span></span>|<span data-ttu-id="186d3-308">Определяемый пользователем тип, который может быть любого типа CLR, отмеченные <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="186d3-308">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="186d3-309">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-309">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-310">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-310">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-311">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-311">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-312">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-312">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-313">Сделана попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-313">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-314">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-314">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-315">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-315">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="186d3-316">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-316">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-317">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-317">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="186d3-318">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-318">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-319">
            <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-319">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="sqlDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-320">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-320">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-321">Получает значение указанного столбца в виде числа одиночной точности с плавающей запятой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-321">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-322">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-322">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-323">Преобразование не выполняется.</span><span class="sxs-lookup"><span data-stu-id="186d3-323">No conversions are performed.</span></span> <span data-ttu-id="186d3-324">Таким образом извлеченные данные уже должны быть одиночной точности с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="186d3-324">Therefore, the data retrieved must already be a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="186d3-325">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-325">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-326">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-326">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="sqlDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-327">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-327">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-328">Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-328">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-329">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-329">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-330">Преобразования не выполняются; Таким образом данные, полученные уже должен быть GUID.</span><span class="sxs-lookup"><span data-stu-id="186d3-330">No conversions are performed; therefore, the data retrieved must already be a GUID.</span></span>  
  
 <span data-ttu-id="186d3-331">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-331">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-332">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-332">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="sqlDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-333">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-334">Получает значение заданного столбца в виде 16-битового целого числа со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-334">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-335">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-336">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 16-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="186d3-336">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="186d3-337">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-337">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-338">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-338">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="sqlDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-339">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-339">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-340">Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-340">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-341">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-341">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-342">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="186d3-342">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="186d3-343">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-343">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-344">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-344">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="sqlDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-345">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-346">Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-346">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-347">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-347">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-348">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="186d3-348">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="186d3-349">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-349">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-350">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-350">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="sqlDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-351">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-351">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-352">Возвращает имя заданного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-352">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-353">Имя указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-353">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="sqlDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="186d3-354">Имя столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-354">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-355">Возвращает порядковый номер столбца при наличии заданного имени столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-355">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-356">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-356">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-357">`GetOrdinal` сначала выполняет поиск с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="186d3-357">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="186d3-358">Происходит при неудаче секунды, поиск без учета регистра (выполняется сравнение без учета регистра с использованием параметров сортировки базы данных).</span><span class="sxs-lookup"><span data-stu-id="186d3-358">If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="186d3-359">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="186d3-359">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="186d3-360">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="186d3-360">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span> <span data-ttu-id="186d3-361">Метод вызывает `IndexOutOfRange` исключение, если не найден отсчитываемый от нуля порядковый номер столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-361">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="186d3-362">`GetOrdinal` не учитывает ширину японской азбуки, без учета.</span><span class="sxs-lookup"><span data-stu-id="186d3-362">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="186d3-363">Поскольку порядковых более эффективны, чем поиск по имени, его не рекомендуется использовать метод `GetOrdinal` в цикле.</span><span class="sxs-lookup"><span data-stu-id="186d3-363">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="186d3-364">Сэкономить время, вызвав `GetOrdinal` один раз и назначьте полученные результаты целочисленной переменной для использования в цикле.</span><span class="sxs-lookup"><span data-stu-id="186d3-364">Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="186d3-365">В следующем примере показано использование метода <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-365">The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-366">Указанное имя не является допустимым именем столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-366">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="sqlDataReader.GetProviderSpecificFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-367">
            <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-367">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-368">Возвращает <see langword="Object" />, который представляет собой конкретный тип поля базового поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-368">Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-369">Возвращает <see cref="T:System.Object" />, который представляет собой конкретный тип поля базового поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-369">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="sqlDataReader.GetProviderSpecificValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-370">
            <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-370">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-371">Возвращает <see langword="Object" />, который представляет собой значение типа, специфического для поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-371">Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-372">
            <see cref="T:System.Object" />, который представляет собой значение типа, специфического для поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-372">An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="sqlDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="186d3-373">Массив объектов <see cref="T:System.Object" />, в который копируются значения столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-373">An array of <see cref="T:System.Object" /> into which to copy the column values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-374">Возвращает массив объектов, которые представляют собой значения типа, специфического для базового поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-374">Gets an array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-375">Массив объектов, которые представляют собой значения типа, специфического для поставщика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-375">The array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="sqlDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="186d3-376">Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбца объекта <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-376">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-377">Объект <see cref="T:System.Data.DataTable" /> описывает метаданные столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-377">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-378">Для <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> метод возвращает метаданные о каждом столбце в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="186d3-378">For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="186d3-379">Столбец DataReader</span><span class="sxs-lookup"><span data-stu-id="186d3-379">DataReader column</span></span>|<span data-ttu-id="186d3-380">Описание</span><span class="sxs-lookup"><span data-stu-id="186d3-380">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="186d3-381">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="186d3-381">AllowDBNull</span></span>|<span data-ttu-id="186d3-382">Задайте, если потребитель может установить для столбца значение null или если поставщик не может определить, может ли потребитель задать столбец со значением null.</span><span class="sxs-lookup"><span data-stu-id="186d3-382">Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="186d3-383">В противном случае не задано.</span><span class="sxs-lookup"><span data-stu-id="186d3-383">Otherwise, not set.</span></span> <span data-ttu-id="186d3-384">Столбец может содержать значения null, даже если он не может быть присвоено значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-384">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="186d3-385">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="186d3-385">BaseCatalogName</span></span>|<span data-ttu-id="186d3-386">Имя каталога в хранилище данных, содержащей столбец.</span><span class="sxs-lookup"><span data-stu-id="186d3-386">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="186d3-387">Значение NULL, если невозможно определить имя базового каталога.</span><span class="sxs-lookup"><span data-stu-id="186d3-387">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="186d3-388">По умолчанию этот столбец имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-388">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="186d3-389">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="186d3-389">BaseColumnName</span></span>|<span data-ttu-id="186d3-390">Имя столбца в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-390">The name of the column in the data store.</span></span> <span data-ttu-id="186d3-391">Это может быть отличается от имени столбца, возвращаемого в столбце ColumnName, если используется псевдоним.</span><span class="sxs-lookup"><span data-stu-id="186d3-391">This might be different than the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="186d3-392">Значение null, если невозможно определить имя базового столбца или если столбец набора строк является производным, но не идентичен, сохранения столбца данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-392">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="186d3-393">По умолчанию этот столбец имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-393">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="186d3-394">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="186d3-394">BaseSchemaName</span></span>|<span data-ttu-id="186d3-395">Имя схемы в хранилище данных, содержащей столбец.</span><span class="sxs-lookup"><span data-stu-id="186d3-395">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="186d3-396">Значение null, если невозможно определить имя базовой схемы.</span><span class="sxs-lookup"><span data-stu-id="186d3-396">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="186d3-397">По умолчанию этот столбец имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-397">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="186d3-398">BaseServerName</span><span class="sxs-lookup"><span data-stu-id="186d3-398">BaseServerName</span></span>|<span data-ttu-id="186d3-399">Имя экземпляра Microsoft SQL Server, используемому <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-399">The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>|  
|<span data-ttu-id="186d3-400">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="186d3-400">BaseTableName</span></span>|<span data-ttu-id="186d3-401">Имя таблицы или представления в хранилище данных, содержащей столбец.</span><span class="sxs-lookup"><span data-stu-id="186d3-401">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="186d3-402">Значение null, если невозможно определить имя базовой таблицы.</span><span class="sxs-lookup"><span data-stu-id="186d3-402">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="186d3-403">По умолчанию этот столбец имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-403">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="186d3-404">ColumnName</span><span class="sxs-lookup"><span data-stu-id="186d3-404">ColumnName</span></span>|<span data-ttu-id="186d3-405">Имя столбца; оно не может быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="186d3-405">The name of the column; this might not be unique.</span></span> <span data-ttu-id="186d3-406">Если это не может быть определено, возвращается значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-406">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="186d3-407">Это имя всегда отражает последнее переименование столбца в текущий текст представления или команды.</span><span class="sxs-lookup"><span data-stu-id="186d3-407">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="186d3-408">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="186d3-408">ColumnOrdinal</span></span>|<span data-ttu-id="186d3-409">Отсчитываемый от нуля порядковый номер столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-409">The zero-based ordinal of the column.</span></span> <span data-ttu-id="186d3-410">Этот столбец не может содержать значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-410">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="186d3-411">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="186d3-411">ColumnSize</span></span>|<span data-ttu-id="186d3-412">Максимально возможная длина значения в столбце.</span><span class="sxs-lookup"><span data-stu-id="186d3-412">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="186d3-413">Для столбцов с типом данных фиксированной длины это размер типа данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-413">For columns that use a fixed-length data type, this is the size of the data type.</span></span> <span data-ttu-id="186d3-414">Для `nvarchar(MAX)`, `varchar(MAX)`, и `varbinary(MAX)` столбцы, которые хранятся в базе данных SQL Server, максимальный размер составляет 2 ГБ.</span><span class="sxs-lookup"><span data-stu-id="186d3-414">For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB.</span></span> <span data-ttu-id="186d3-415">Если эти столбцы хранятся и доступны в виде файлов, ограничение на максимальный размер определяется в файловой системе.</span><span class="sxs-lookup"><span data-stu-id="186d3-415">If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</span></span> <span data-ttu-id="186d3-416">Это значение изменяется при использовании `Type System Version` ключевое слово в строке подключения.</span><span class="sxs-lookup"><span data-stu-id="186d3-416">This value changes when using the `Type System Version` keyword in the connection string.</span></span>  <span data-ttu-id="186d3-417">Для новых типов они представляются как типы нижнего уровня.</span><span class="sxs-lookup"><span data-stu-id="186d3-417">For new types they are represented as downlevel types.</span></span> <span data-ttu-id="186d3-418">Типы данных MAX возвращает обычный 4k для `nvarchar` и 8000 для `varchar`.</span><span class="sxs-lookup"><span data-stu-id="186d3-418">The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`.</span></span> <span data-ttu-id="186d3-419">Дополнительные сведения см. в разделе [Справочник по Transact-SQL](/sql/t-sql/language-reference).</span><span class="sxs-lookup"><span data-stu-id="186d3-419">For more information, see the [Transact-SQL reference](/sql/t-sql/language-reference).</span></span>|
|<span data-ttu-id="186d3-420">Имя_типа_данных</span><span class="sxs-lookup"><span data-stu-id="186d3-420">DataTypeName</span></span>|<span data-ttu-id="186d3-421">Возвращает строку, представляющую тип данных указанного столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-421">Returns a string representing the data type of the specified column.</span></span>|  
|<span data-ttu-id="186d3-422">IsAliased</span><span class="sxs-lookup"><span data-stu-id="186d3-422">IsAliased</span></span>|<span data-ttu-id="186d3-423">`true`: Имя столбца является псевдонимом.</span><span class="sxs-lookup"><span data-stu-id="186d3-423">`true`: The column name is an alias.</span></span><br /><br /> <span data-ttu-id="186d3-424">`false`: Имя столбца не является псевдонимом.</span><span class="sxs-lookup"><span data-stu-id="186d3-424">`false`: The column name is not an alias.</span></span>|  
|<span data-ttu-id="186d3-425">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="186d3-425">IsAutoIncrement</span></span>|<span data-ttu-id="186d3-426">`true`: Столбец присваивает значения новым строкам с фиксированным приращением.</span><span class="sxs-lookup"><span data-stu-id="186d3-426">`true`: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="186d3-427">`false`: Столбец не присваивает значения новым строкам с фиксированным приращением.</span><span class="sxs-lookup"><span data-stu-id="186d3-427">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="186d3-428">По умолчанию этот столбец имеет `false`.</span><span class="sxs-lookup"><span data-stu-id="186d3-428">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="186d3-429">IsColumnSet</span><span class="sxs-lookup"><span data-stu-id="186d3-429">IsColumnSet</span></span>|<span data-ttu-id="186d3-430">`true`: Столбец является разреженным столбцом, который входит в набор столбцов.</span><span class="sxs-lookup"><span data-stu-id="186d3-430">`true`: The column is a sparse column that is a member of a column set.</span></span>|  
|<span data-ttu-id="186d3-431">IsExpression</span><span class="sxs-lookup"><span data-stu-id="186d3-431">IsExpression</span></span>|<span data-ttu-id="186d3-432">`true`: Столбец представляет собой выражение.</span><span class="sxs-lookup"><span data-stu-id="186d3-432">`true`: The column is an expression.</span></span><br /><br /> <span data-ttu-id="186d3-433">`false`: Столбец не является выражением.</span><span class="sxs-lookup"><span data-stu-id="186d3-433">`false`: The column is not an expression.</span></span>|  
|<span data-ttu-id="186d3-434">IsHidden</span><span class="sxs-lookup"><span data-stu-id="186d3-434">IsHidden</span></span>|<span data-ttu-id="186d3-435">`true`: Столбец будет скрыт.</span><span class="sxs-lookup"><span data-stu-id="186d3-435">`true`: The column is hidden.</span></span><br /><br /> <span data-ttu-id="186d3-436">`false`: Столбец не является скрытым.</span><span class="sxs-lookup"><span data-stu-id="186d3-436">`false`: The column is not hidden.</span></span>|  
|<span data-ttu-id="186d3-437">IsIdentity</span><span class="sxs-lookup"><span data-stu-id="186d3-437">IsIdentity</span></span>|<span data-ttu-id="186d3-438">`true`: Столбец является столбцом идентификаторов.</span><span class="sxs-lookup"><span data-stu-id="186d3-438">`true`: The column is an identity column.</span></span><br /><br /> <span data-ttu-id="186d3-439">`false`: Столбец не является столбцом идентификаторов.</span><span class="sxs-lookup"><span data-stu-id="186d3-439">`false`: The column is not an identity column.</span></span>|  
|<span data-ttu-id="186d3-440">IsKey</span><span class="sxs-lookup"><span data-stu-id="186d3-440">IsKey</span></span>|<span data-ttu-id="186d3-441">`true`: Столбец является одним из набора столбцов в наборе строк, взятые вместе, однозначно идентифицировать строку.</span><span class="sxs-lookup"><span data-stu-id="186d3-441">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="186d3-442">Набор столбцов с `IsKey` присвоено `true` должен однозначно определять строку в наборе строк.</span><span class="sxs-lookup"><span data-stu-id="186d3-442">The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="186d3-443">Нет необходимости что этот набор столбцов являлся минимальным столбцов.</span><span class="sxs-lookup"><span data-stu-id="186d3-443">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="186d3-444">Этот набор столбцов может быть создан из первичного ключа базовой таблицы, уникального ограничения или уникального индекса.</span><span class="sxs-lookup"><span data-stu-id="186d3-444">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="186d3-445">`false`: Столбец не требуется для уникальной идентификации строки.</span><span class="sxs-lookup"><span data-stu-id="186d3-445">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="186d3-446">IsLong</span><span class="sxs-lookup"><span data-stu-id="186d3-446">IsLong</span></span>|<span data-ttu-id="186d3-447">`true`: Столбец содержит большой двоичный объект (BLOB), содержащий данные очень большой длины.</span><span class="sxs-lookup"><span data-stu-id="186d3-447">`true`: The column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="186d3-448">Определение очень большого объема данных зависит от поставщика.</span><span class="sxs-lookup"><span data-stu-id="186d3-448">The definition of very long data is provider-specific.</span></span><br /><br /> <span data-ttu-id="186d3-449">`false`: Столбец не содержит большой двоичный объект (BLOB), содержащий данные очень большой длины.</span><span class="sxs-lookup"><span data-stu-id="186d3-449">`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="186d3-450">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="186d3-450">IsReadOnly</span></span>|<span data-ttu-id="186d3-451">`true`: Столбец не может быть изменен.</span><span class="sxs-lookup"><span data-stu-id="186d3-451">`true`: The column cannot be modified.</span></span><br /><br /> <span data-ttu-id="186d3-452">`false`: Столбец можно изменить.</span><span class="sxs-lookup"><span data-stu-id="186d3-452">`false`: The column can be modified.</span></span>|  
|<span data-ttu-id="186d3-453">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="186d3-453">IsRowVersion</span></span>|<span data-ttu-id="186d3-454">`true`: Столбец содержит постоянный идентификатор строк, не может быть записан и не имеет смысл значения за исключением идентификации строки.</span><span class="sxs-lookup"><span data-stu-id="186d3-454">`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span><br /><br /> <span data-ttu-id="186d3-455">`false`: Столбец не содержит постоянный идентификатор строк, не может быть записан и не имеет смысл значения за исключением идентификатора столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-455">`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="186d3-456">IsUnique</span><span class="sxs-lookup"><span data-stu-id="186d3-456">IsUnique</span></span>|<span data-ttu-id="186d3-457">`true`: Столбец имеет тип `timestamp`.</span><span class="sxs-lookup"><span data-stu-id="186d3-457">`true`: Column is of type `timestamp`.</span></span><br /><br /> <span data-ttu-id="186d3-458">`false`: Столбец не относится к типу `timestamp`.</span><span class="sxs-lookup"><span data-stu-id="186d3-458">`false`: Column is not of type `timestamp`.</span></span>|  
|<span data-ttu-id="186d3-459">NonVersionedProviderType</span><span class="sxs-lookup"><span data-stu-id="186d3-459">NonVersionedProviderType</span></span>|<span data-ttu-id="186d3-460">Тип столбца независимо от текущего `Type System Version` указан в строке подключения.</span><span class="sxs-lookup"><span data-stu-id="186d3-460">The type of the column irrespective of the current `Type System Version` specified in the connection string.</span></span> <span data-ttu-id="186d3-461">Возвращаемое значение — от <xref:System.Data.SqlDbType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="186d3-461">The returned value is from the <xref:System.Data.SqlDbType> enumeration.</span></span>|  
|<span data-ttu-id="186d3-462">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="186d3-462">NumericPrecision</span></span>|<span data-ttu-id="186d3-463">Если `ProviderType` имеет числовой тип данных, это максимальная точность столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-463">If `ProviderType` is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="186d3-464">Точность зависит от определения столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-464">The precision depends on the definition of the column.</span></span> <span data-ttu-id="186d3-465">Если `ProviderType` не числовой тип данных, это составляет 255.</span><span class="sxs-lookup"><span data-stu-id="186d3-465">If `ProviderType` is not a numeric data type, this is 255.</span></span>|  
|<span data-ttu-id="186d3-466">NumericScale</span><span class="sxs-lookup"><span data-stu-id="186d3-466">NumericScale</span></span>|<span data-ttu-id="186d3-467">Если `ProviderType` DBTYPE_DECIMAL или DBTYPE_NUMERIC, количество цифр справа от десятичной запятой.</span><span class="sxs-lookup"><span data-stu-id="186d3-467">If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="186d3-468">В противном случае это 255.</span><span class="sxs-lookup"><span data-stu-id="186d3-468">Otherwise, this is 255.</span></span>|  
|<span data-ttu-id="186d3-469">ProviderSpecificDataType</span><span class="sxs-lookup"><span data-stu-id="186d3-469">ProviderSpecificDataType</span></span>|<span data-ttu-id="186d3-470">Возвращает тип поставщика данных на основе столбца `Type System Version` ключевое слово в строке подключения.</span><span class="sxs-lookup"><span data-stu-id="186d3-470">Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.</span></span>|  
|<span data-ttu-id="186d3-471">ProviderType</span><span class="sxs-lookup"><span data-stu-id="186d3-471">ProviderType</span></span>|<span data-ttu-id="186d3-472">Указывает, какой тип данных столбца.</span><span class="sxs-lookup"><span data-stu-id="186d3-472">The indicator of the column's data type.</span></span> <span data-ttu-id="186d3-473">Если тип данных столбца меняется от строки к строке, это должен быть объектом.</span><span class="sxs-lookup"><span data-stu-id="186d3-473">If the data type of the column varies from row to row, this must be Object.</span></span> <span data-ttu-id="186d3-474">Этот столбец не может содержать значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-474">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="186d3-475">UdtAssemblyQualifiedName</span><span class="sxs-lookup"><span data-stu-id="186d3-475">UdtAssemblyQualifiedName</span></span>|<span data-ttu-id="186d3-476">Если столбец определяемого пользователем типа (UDT), это полное имя сборки определяемого пользователем ТИПА, как указано в <xref:System.Type.AssemblyQualifiedName%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-476">If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>.</span></span> <span data-ttu-id="186d3-477">Если столбец не является определяемый пользователем тип, это имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-477">If the column is not a UDT, this is null.</span></span>|  
|<span data-ttu-id="186d3-478">XmlSchemaCollectionDatabase</span><span class="sxs-lookup"><span data-stu-id="186d3-478">XmlSchemaCollectionDatabase</span></span>|<span data-ttu-id="186d3-479">Имя базы данных, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML.</span><span class="sxs-lookup"><span data-stu-id="186d3-479">The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="186d3-480">Это значение равно `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-480">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="186d3-481">Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionName` и `XmlSchemaCollectionOwningSchema` столбцов также имеют значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-481">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="186d3-482">XmlSchemaCollectionName</span><span class="sxs-lookup"><span data-stu-id="186d3-482">XmlSchemaCollectionName</span></span>|<span data-ttu-id="186d3-483">Имя коллекции схем для данного экземпляра XML, если строка содержит сведения о столбце XML.</span><span class="sxs-lookup"><span data-stu-id="186d3-483">The name of the schema collection for this XML instance, if the row contains information about an XML column.</span></span> <span data-ttu-id="186d3-484">Это значение равно `null` (`Nothing` в Visual Basic), если нет связанной схемы коллекции.</span><span class="sxs-lookup"><span data-stu-id="186d3-484">This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="186d3-485">Если значение равно null, `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionOwningSchema` столбцов также имеют значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-485">If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="186d3-486">Xmlschemacollectionowningschema не</span><span class="sxs-lookup"><span data-stu-id="186d3-486">XmlSchemaCollectionOwningSchema</span></span>|<span data-ttu-id="186d3-487">Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML.</span><span class="sxs-lookup"><span data-stu-id="186d3-487">The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="186d3-488">Это значение равно `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных.</span><span class="sxs-lookup"><span data-stu-id="186d3-488">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="186d3-489">Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionName` столбцов также имеют значение null.</span><span class="sxs-lookup"><span data-stu-id="186d3-489">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="186d3-490">Чтобы убедиться в том, что столбцы метаданных возвращают правильные данные, необходимо вызвать <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> с `behavior` параметру присвоить `KeyInfo`.</span><span class="sxs-lookup"><span data-stu-id="186d3-490">To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="186d3-491">В противном случае некоторые столбцы в таблице схемы могут возвращать значение по умолчанию, null или неправильные данные.</span><span class="sxs-lookup"><span data-stu-id="186d3-491">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-492">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-492">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary&#xA;override this.GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary" Usage="sqlDataReader.GetSqlBinary i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-493">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-493">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-494">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-494">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-495">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-495">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-496">Преобразования не выполняются; поэтому извлеченные данные уже должны быть двоичная структура или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-496">No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean&#xA;override this.GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean" Usage="sqlDataReader.GetSqlBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-497">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-497">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-498">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-498">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-499">Значение столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-499">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-500">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-500">No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte&#xA;override this.GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte" Usage="sqlDataReader.GetSqlByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-501">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-501">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-502">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-502">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-503">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-503">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-504">Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой байт или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-504">No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes&#xA;override this.GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes" Usage="sqlDataReader.GetSqlBytes i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-505">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-505">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-506">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-506">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-507">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-507">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars&#xA;override this.GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars" Usage="sqlDataReader.GetSqlChars i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-508">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-508">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-509">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-509">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-510">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-510">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime&#xA;override this.GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime" Usage="sqlDataReader.GetSqlDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-511">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-511">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-512">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-512">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-513">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-513">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-514">Преобразования не выполняются; Таким образом данные, полученные уже должен иметь значение даты и времени, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-514">No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal&#xA;override this.GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal" Usage="sqlDataReader.GetSqlDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-515">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-515">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-516">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-516">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-517">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-517">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-518">Преобразования не выполняются; Таким образом данные, полученные уже должен быть десятичным значением, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-518">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble&#xA;override this.GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble" Usage="sqlDataReader.GetSqlDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-519">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-519">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-520">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-520">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-521">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-521">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-522">Преобразования не выполняются; Таким образом данные, полученные уже должен быть числом с плавающей запятой двойной точности, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-522">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid&#xA;override this.GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid" Usage="sqlDataReader.GetSqlGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-523">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-523">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-524">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-524">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-525">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-525">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-526">Преобразования не выполняются; Таким образом данные, полученные уже должен быть GUID, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-526">No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16&#xA;override this.GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16" Usage="sqlDataReader.GetSqlInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-527">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-527">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-528">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-528">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-529">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-529">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-530">Преобразования не выполняются; Таким образом данные, полученные уже должен быть 16-разрядное целое число со знаком, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-530">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32&#xA;override this.GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32" Usage="sqlDataReader.GetSqlInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-531">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-531">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-532">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-532">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-533">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-533">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-534">Преобразования не выполняются; Таким образом, данные, полученные уже должен быть 32-разрядное целое число со знаком, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-534">No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64&#xA;override this.GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64" Usage="sqlDataReader.GetSqlInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-535">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-535">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-536">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-536">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-537">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-537">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-538">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное целое число со знаком, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-538">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney&#xA;override this.GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney" Usage="sqlDataReader.GetSqlMoney i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-539">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-539">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-540">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-540">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-541">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-541">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-542">Преобразования не выполняются; Таким образом данные, полученные уже должен быть десятичным значением, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-542">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle&#xA;override this.GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle" Usage="sqlDataReader.GetSqlSingle i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-543">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-543">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-544">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-544">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-545">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-545">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-546">Преобразования не выполняются; Таким образом данные, полученные уже должен быть одиночной точности с плавающей запятой, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-546">No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlString : int -&gt; System.Data.SqlTypes.SqlString&#xA;override this.GetSqlString : int -&gt; System.Data.SqlTypes.SqlString" Usage="sqlDataReader.GetSqlString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-547">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-547">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-548">Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-548">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-549">Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-549">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-550">Преобразования не выполняются; Таким образом данные, полученные уже должен быть строкой, или создается исключение.</span><span class="sxs-lookup"><span data-stu-id="186d3-550">No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValue : int -&gt; obj&#xA;override this.GetSqlValue : int -&gt; obj" Usage="sqlDataReader.GetSqlValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-551">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-551">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-552">Возвращает значение данных в заданном столбце как тип SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-552">Returns the data value in the specified column as a SQL Server type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-553">Значение столбца, выраженное как <see cref="T:System.Data.SqlDbType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-553">The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> Возвращает данные, с помощью собственного типа SQL Server.</span><span class="sxs-lookup"><span data-stu-id="186d3-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types.</span></span> <span data-ttu-id="186d3-555">Для получения данных с помощью типов .NET Framework, см. в разделе <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-555">To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValues : obj[] -&gt; int&#xA;override this.GetSqlValues : obj[] -&gt; int" Usage="sqlDataReader.GetSqlValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="186d3-556">Массив объектов <see cref="T:System.Object" />, в который копируются значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-556">An array of <see cref="T:System.Object" /> into which to copy the values.</span>
          </span>
          <span data-ttu-id="186d3-557">Значения столбцов выражаются как типы SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-557">The column values are expressed as SQL Server types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-558">Заполняет массив значений типа <see cref="T:System.Object" />, содержащий значения для всех столбцов в записи, выраженные как типы SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-558">Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-559">Целое число, указывающее количество скопированных столбцов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-559">An integer indicating the number of columns copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-560">Возвращает значения для всех столбцов в записи за один вызов, используя систему типов SQL вместо системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="186d3-560">Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</span></span> <span data-ttu-id="186d3-561">Длина <xref:System.Object> массива не соответствует количеству столбцов в записи.</span><span class="sxs-lookup"><span data-stu-id="186d3-561">The length of the <xref:System.Object> array does not need to match the number of columns in the record.</span></span> <span data-ttu-id="186d3-562">Вы можете передать <xref:System.Object> массив, содержащий меньше, чем количество столбцов, содержащихся в записи.</span><span class="sxs-lookup"><span data-stu-id="186d3-562">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record.</span></span> <span data-ttu-id="186d3-563">Объем данных <xref:System.Object> массив копируется в массив, начиная со столбца с порядковым номером 0.</span><span class="sxs-lookup"><span data-stu-id="186d3-563">Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0.</span></span> <span data-ttu-id="186d3-564">Вы также можете передать <xref:System.Object> массива, длина которого превышает число столбцов, содержащихся в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="186d3-564">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="186d3-565">Все оставшиеся столбцы не обрабатываются.</span><span class="sxs-lookup"><span data-stu-id="186d3-565">Any remaining columns are untouched.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="186d3-566">Значение параметра <paramref name="values" /> равно null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-566">
              <paramref name="values" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml&#xA;override this.GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml" Usage="sqlDataReader.GetSqlXml i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-567">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-567">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-568">Возвращает значение заданного столбца в виде XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-568">Gets the value of the specified column as an XML value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-569">Значение <see cref="T:System.Data.SqlTypes.SqlXml" />, содержащее XML из соответствующего поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-569">A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-570">Преобразования не выполняются; Таким образом извлеченные данные уже должны быть значение XML.</span><span class="sxs-lookup"><span data-stu-id="186d3-570">No conversions are performed; therefore, the data retrieved must already be an XML value.</span></span>  
  
 <span data-ttu-id="186d3-571">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-571">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="186d3-572">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-572">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-573">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.SqlClient.SqlDataReader" /> или получения доступа к ним.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-573">An attempt was made to read or access columns in a closed <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-574">Извлеченные данные несовместимы с типом<see cref="T:System.Data.SqlTypes.SqlXml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-574">The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberSignature Language="F#" Value="override this.GetStream : int -&gt; System.IO.Stream" Usage="sqlDataReader.GetStream i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-575">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-575">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-576">Извлекает типы данных binary, image, varbinary, UDT и variant как <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-576">Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-577">Объект Потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-577">A stream object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-578"><xref:System.IO.Stream.ReadTimeout%2A> по умолчанию используется значение <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; но вы можете изменить <xref:System.IO.Stream.ReadTimeout%2A> через <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-578"><xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span></span>  
  
 <span data-ttu-id="186d3-579">Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="186d3-579">Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.</span></span>  
  
 <span data-ttu-id="186d3-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> будет выдано <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> в силу.</span><span class="sxs-lookup"><span data-stu-id="186d3-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="186d3-581"><xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.IO.Stream> возникают как <xref:System.IO.IOException> исключений; Проверьте внутреннее исключение для <xref:System.Data.SqlClient.SqlException>.</span><span class="sxs-lookup"><span data-stu-id="186d3-581"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="186d3-582">Следующие <xref:System.IO.Stream> члены не доступны для объектов, возвращенных <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span><span class="sxs-lookup"><span data-stu-id="186d3-582">The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span></span>  
  
-   <span data-ttu-id="186d3-583">BeginWrite</span><span class="sxs-lookup"><span data-stu-id="186d3-583">BeginWrite</span></span>  
  
-   <span data-ttu-id="186d3-584">Метод EndWrite</span><span class="sxs-lookup"><span data-stu-id="186d3-584">EndWrite</span></span>  
  
-   <span data-ttu-id="186d3-585">Длина</span><span class="sxs-lookup"><span data-stu-id="186d3-585">Length</span></span>  
  
-   <span data-ttu-id="186d3-586">Положение</span><span class="sxs-lookup"><span data-stu-id="186d3-586">Position</span></span>  
  
-   <span data-ttu-id="186d3-587">Поиск</span><span class="sxs-lookup"><span data-stu-id="186d3-587">Seek</span></span>  
  
-   <span data-ttu-id="186d3-588">SetLength</span><span class="sxs-lookup"><span data-stu-id="186d3-588">SetLength</span></span>  
  
-   <span data-ttu-id="186d3-589">Write</span><span class="sxs-lookup"><span data-stu-id="186d3-589">Write</span></span>  
  
-   <span data-ttu-id="186d3-590">WriteByte</span><span class="sxs-lookup"><span data-stu-id="186d3-590">WriteByte</span></span>  
  
-   <span data-ttu-id="186d3-591">WriteTimeout</span><span class="sxs-lookup"><span data-stu-id="186d3-591">WriteTimeout</span></span>  
  
 <span data-ttu-id="186d3-592">При свойстве соединения `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> поддерживает получение синхронной данных только для обоих последовательных (<xref:System.Data.CommandBehavior.SequentialAccess>) и непоследовательно (<xref:System.Data.CommandBehavior.Default>) доступ.</span><span class="sxs-lookup"><span data-stu-id="186d3-592">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="186d3-593">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-593">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-594">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-594">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-595">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-595">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-596">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-596">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-597">Сделана попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-597">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-598">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-598">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-599">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-599">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-600">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-600">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-601">Возвращаемый тип не был одним из указанных ниже типов:</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-601">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="186d3-602">– binary</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-602">-   binary</span>
          </span>
          <span data-ttu-id="186d3-603">– image</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-603">-   image</span>
          </span>
          <span data-ttu-id="186d3-604">– varbinary</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-604">-   varbinary</span>
          </span>
          <span data-ttu-id="186d3-605">– udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-605">-   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="sqlDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-606">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-606">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-607">Возвращает значение заданного столбца в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-607">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-608">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-608">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-609">Преобразования не выполняются; Таким образом данные, полученные уже должен быть строкой.</span><span class="sxs-lookup"><span data-stu-id="186d3-609">No conversions are performed; therefore, the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="186d3-610">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-610">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-611">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-611">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberSignature Language="F#" Value="override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="sqlDataReader.GetTextReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-612">Получаемый столбец.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-612">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-613">Извлекает типы данных Char, NChar, NText, NVarChar, text, varChar и Variant как <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-613">Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-614">Возвращаемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-614">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-615"><xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.IO.TextReader> возникают как <xref:System.IO.IOException> исключений; Проверьте внутреннее исключение для <xref:System.Data.SqlClient.SqlException>.</span><span class="sxs-lookup"><span data-stu-id="186d3-615"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="186d3-616">Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-616">Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.</span></span>  
  
 <span data-ttu-id="186d3-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> будет выдано <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> в силу.</span><span class="sxs-lookup"><span data-stu-id="186d3-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="186d3-618">При свойстве соединения `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> поддерживает получение синхронной данных только для обоих последовательных (<xref:System.Data.CommandBehavior.SequentialAccess>) и непоследовательно (<xref:System.Data.CommandBehavior.Default>) доступ.</span><span class="sxs-lookup"><span data-stu-id="186d3-618">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="186d3-619">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-619">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-620">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-620">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-621">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-621">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-622">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-622">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-623">Сделана попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-623">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-624">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-624">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-625">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-625">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-626">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-626">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-627">Возвращаемый тип не был одним из указанных ниже типов:</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-627">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="186d3-628">– char</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-628">-   char</span>
          </span>
          <span data-ttu-id="186d3-629">– nchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-629">-   nchar</span>
          </span>
          <span data-ttu-id="186d3-630">– ntext</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-630">-   ntext</span>
          </span>
          <span data-ttu-id="186d3-631">– nvarchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-631">-   nvarchar</span>
          </span>
          <span data-ttu-id="186d3-632">– text</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-632">-   text</span>
          </span>
          <span data-ttu-id="186d3-633">– varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-633">-   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeSpan : int -&gt; TimeSpan&#xA;override this.GetTimeSpan : int -&gt; TimeSpan" Usage="sqlDataReader.GetTimeSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-634">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-634">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-635">Возвращает значение указанного столбца как объект <see cref="T:System.TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-635">Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-636">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-636">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-637">Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.TimeSpan> объекта.</span><span class="sxs-lookup"><span data-stu-id="186d3-637">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="186d3-638">Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> на наличие значения null перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="186d3-638">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-639">Указанное приведение недопустимо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-639">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="sqlDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-640">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-640">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-641">Возвращает значение заданного столбца в его исходном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-641">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-642">Этот метод возвращает объекты <see cref="T:System.DBNull" /> для столбцов базы данных со значениями NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-642">This method returns <see cref="T:System.DBNull" /> for null database columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> Возвращает данные, с помощью типов .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="186d3-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="sqlDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="186d3-644">Массив объектов <see cref="T:System.Object" />, в который копируются столбцы атрибутов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-644">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-645">Заполняет массив объектов значениями столбцов текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-645">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-646">Количество экземпляров объекта <see cref="T:System.Object" /> в массиве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-646">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-647">Для большинства приложений этот метод предоставляет эффективные средства для извлечения всех столбцов, вместо извлечения каждого столбца отдельно.</span><span class="sxs-lookup"><span data-stu-id="186d3-647">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="186d3-648">Вы можете передать <xref:System.Object> массив, содержащий меньше, чем количество столбцов в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="186d3-648">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="186d3-649">Объем данных <xref:System.Object> массив копируется в массив.</span><span class="sxs-lookup"><span data-stu-id="186d3-649">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="186d3-650">Вы также можете передать <xref:System.Object> массива, длина которого превышает число столбцов, содержащихся в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="186d3-650">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="186d3-651">Этот метод возвращает объекты <xref:System.DBNull> для столбцов базы данных со значениями NULL.</span><span class="sxs-lookup"><span data-stu-id="186d3-651">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="186d3-652">В следующем примере показано использование соответствующего размера массива для чтения всех значений из текущей строки в предоставленном <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-652">The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-653">Кроме того в образце показано использование массива фиксированного размера, который может быть меньше или больше количества доступных столбцов.</span><span class="sxs-lookup"><span data-stu-id="186d3-653">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlReader : int -&gt; System.Xml.XmlReader&#xA;override this.GetXmlReader : int -&gt; System.Xml.XmlReader" Usage="sqlDataReader.GetXmlReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-654">Значение указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-654">The value of the specified column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-655">Извлекает данные типа XML как <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-655">Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-656">Возвращаемый объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-656">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-657"><xref:System.Xml.XmlReader> Объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> не поддерживает асинхронные операции.</span><span class="sxs-lookup"><span data-stu-id="186d3-657">The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations.</span></span> <span data-ttu-id="186d3-658">Если требуется асинхронных операций на <xref:System.Xml.XmlReader>, приведен XML-столбца NVARCHAR(MAX) на сервере и использовать <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> с <xref:System.Xml.XmlReader.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-658">If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.</span></span>  
  
 <span data-ttu-id="186d3-659"><xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.Xml.XmlReader> возникают как <xref:System.Xml.XmlException> исключений; Проверьте внутреннее исключение для <xref:System.Data.SqlClient.SqlException>.</span><span class="sxs-lookup"><span data-stu-id="186d3-659"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="186d3-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> будет выдано <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> в силу.</span><span class="sxs-lookup"><span data-stu-id="186d3-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="186d3-661">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-661">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-662">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-662">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-663">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-663">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-664">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-664">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-665">Попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-665">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-666">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-666">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-667">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-667">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-668">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-668">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="186d3-669">Возвращенный тип не был типом XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-669">The returned type was not xml.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-670">Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> одну или несколько строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-670">Gets a value that indicates whether the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-671">Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-671">
              <see langword="true" /> if the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-672">Извлекает логическое значение, указывающее, закрыт ли заданный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-672">Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance has been closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-673">
            <see langword="true" />, если указанный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-673">
              <see langword="true" /> if the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-674">Невозможно считать из <xref:System.Data.SqlClient.SqlDataReader> экземпляр, который закрывается.</span><span class="sxs-lookup"><span data-stu-id="186d3-674">It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberSignature Language="F#" Value="member this.IsCommandBehavior : System.Data.CommandBehavior -&gt; bool" Usage="sqlDataReader.IsCommandBehavior condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="186d3-675">Перечисление <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-675">A <see cref="T:System.Data.CommandBehavior" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-676">Определяет, соответствует ли заданный <see cref="T:System.Data.CommandBehavior" /> аналогичному объекту для <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-676">Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-677">
            <see langword="true" />, если для <see cref="T:System.Data.CommandBehavior" /> задано значение true; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-677">
              <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-678">Этот элемент поддерживает инфраструктуру .NET Framework и не предназначен для непосредственного использования из кода.</span><span class="sxs-lookup"><span data-stu-id="186d3-678">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="sqlDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-679">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-679">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-680">Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-680">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-681">Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-681">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-682">Вызовите этот метод для проверки наличия значений null столбцов перед вызовом типизированных методов get (например, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, и т. д) чтобы избежать возникновения ошибки.</span><span class="sxs-lookup"><span data-stu-id="186d3-682">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.IsDBNullAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-683">Извлекаемый столбец (отсчитываемый с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-683">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="186d3-684">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-684">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="186d3-685">Не гарантирует отмену.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-685">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="186d3-686">Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-686">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="186d3-687">Возвращаемая задача должна быть помечена как отмененная.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-687">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-688">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, который получает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-688">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="186d3-689">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-689">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="186d3-690">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-690">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-691">Значение <see langword="true" />, если значение указанного столбца эквивалентно <see langword="DBNull" />; в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-691">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-692">Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-692">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-693">Соединение разъединяется или закрывается во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-693">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-694">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-694">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="186d3-695">Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-695">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="186d3-696">Попытка чтения ранее считанного столбца в последовательном режиме.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-696">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="186d3-697">Выполнялась асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-697">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="186d3-698">Относится ко всем методам Get\* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-698">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="186d3-699">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-699">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-700">Попытка чтения столбца, который не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-700">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-701">Возвращает значение столбца в собственном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-701">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-702">Порядковый номер столбца (начиная с нуля).</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-702">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-703">Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-703">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-704">Значение заданного столбца в собственном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-704">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-705">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-705">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="186d3-706">Имя столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-706">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-707">Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-707">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-708">Значение заданного столбца в собственном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-708">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-709">Сначала выполняется поиск с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="186d3-709">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="186d3-710">Если происходит сбой, выполняется второй поиск без учета регистра (выполняется сравнение без учета регистра с использованием параметров сортировки базы данных).</span><span class="sxs-lookup"><span data-stu-id="186d3-710">If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="186d3-711">Когда влияют на результаты сравнений правила определения регистра для конкретного языка и региональных параметров, это может привести к непредвиденным результатам.</span><span class="sxs-lookup"><span data-stu-id="186d3-711">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="186d3-712">Например, в турецком языке, следующий пример вызывает неверных результатов, так как файловой системы в турецком языке не использует регистр по правилам языка правил для буквы «i» в «файл».</span><span class="sxs-lookup"><span data-stu-id="186d3-712">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span>  
  
 <span data-ttu-id="186d3-713">Этот метод не учитывает ширину японской азбуки.</span><span class="sxs-lookup"><span data-stu-id="186d3-713">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="186d3-714">Столбцы с указанным именем не найдены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-714">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="sqlDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="186d3-715">При чтении результатов пакетных SQL-транзакций перемещает средство чтения данных на следующий результат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-715">Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-716">Значение <see langword="true" />, если имеются и другие наборы результатов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-716">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-717">Используется для обработки нескольких результатов, которые могут быть созданы с помощью пакетных инструкций Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="186d3-717">Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</span></span>  
  
 <span data-ttu-id="186d3-718">По умолчанию модуль чтения данных располагается на первый результат.</span><span class="sxs-lookup"><span data-stu-id="186d3-718">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="186d3-719">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-719">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-720">Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, который перемещает средство чтения данных к следующему результату при чтении результатов из пакета инструкций [!INCLUDE[tsql](~/includes/tsql-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-720">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.</span>
          </span>
          <span data-ttu-id="186d3-721">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-721">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="186d3-722">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-722">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-723">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-723">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-724">Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-724">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-725">Вызов метода <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-725">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="186d3-726">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-726">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="186d3-727">SQL Server вернул ошибку во время выполнения текста команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-727">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="sqlDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="186d3-728">Перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-728">Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-729">Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-729">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-730">По умолчанию <xref:System.Data.SqlClient.SqlDataReader> находится перед первой записи.</span><span class="sxs-lookup"><span data-stu-id="186d3-730">The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record.</span></span> <span data-ttu-id="186d3-731">Таким образом, необходимо вызвать <xref:System.Data.SqlClient.SqlDataReader.Read%2A> чтобы начать доступ к данным.</span><span class="sxs-lookup"><span data-stu-id="186d3-731">Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="186d3-732">Только один `SqlDataReader` на связанный <xref:System.Data.SqlClient.SqlConnection> может быть открыт одновременно, и любая попытка открыть другой завершится ошибкой, пока не будет закрыт в первый из них.</span><span class="sxs-lookup"><span data-stu-id="186d3-732">Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed.</span></span> <span data-ttu-id="186d3-733">Аналогичным образом, хотя `SqlDataReader` используется, сопоставленного `SqlConnection` обслуживает его только после вызова <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="186d3-733">Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="186d3-734">В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>и <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-734">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-735">В примере считываются по данным, записывая их в окне консоли.</span><span class="sxs-lookup"><span data-stu-id="186d3-735">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="186d3-736">Код затем закрывает <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="186d3-736">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="186d3-737"><xref:System.Data.SqlClient.SqlConnection> Закрывается автоматически в конце `using` блок кода.</span><span class="sxs-lookup"><span data-stu-id="186d3-737">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="186d3-738">SQL Server вернул ошибку во время выполнения текста команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-738">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="186d3-739">Инструкция отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-739">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-740">Асинхронная версия <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, которая перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-740">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
          <span data-ttu-id="186d3-741">Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-741">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="186d3-742">Сведения об исключениях передаются в возвращенном объекте Task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-742">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-743">Задача, представляющая асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-743">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-744">Если `behavior` параметр <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> присваивается `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> считывает всю строку перед возвращением задачи.</span><span class="sxs-lookup"><span data-stu-id="186d3-744">If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.</span></span>  
  
 <span data-ttu-id="186d3-745">Дополнительные сведения, включая примеры кода, об асинхронном программировании в поставщике данных .NET Framework для SQL Server, см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="186d3-745">For more information, including code samples, about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="186d3-746">Вызов метода <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> несколько раз для одного экземпляра до завершения задачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-746">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="186d3-747">
            <see langword="Context Connection=true" /> задается в строке подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-747">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="186d3-748">SQL Server вернул ошибку во время выполнения текста команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-748">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-749">Возвращает число измененных, вставленных или удаленных строк при выполнении SQL-транзакций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-749">Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-750">Число измененных, вставленных или удаленных строк; 0, если строки не изменены или произошел сбой инструкции; -1 для оператора SELECT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-750">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-751">Значение этого свойства является накопительным.</span><span class="sxs-lookup"><span data-stu-id="186d3-751">The value of this property is cumulative.</span></span> <span data-ttu-id="186d3-752">Например, если две записи вставляются в пакетном режиме, значение `RecordsAffected` будет два.</span><span class="sxs-lookup"><span data-stu-id="186d3-752">For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.</span></span>  
  
 <span data-ttu-id="186d3-753"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> и <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> являются единственными свойствами, которые могут быть вызваны после <xref:System.Data.SqlClient.SqlDataReader> закрыт.</span><span class="sxs-lookup"><span data-stu-id="186d3-753"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="186d3-754">Порядковый номер столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-754">A column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="186d3-755">Возвращает <see cref="T:System.Data.IDataReader" /> для заданного порядкового номера столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-755">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="186d3-756">Экземпляр <see cref="T:System.Data.IDataReader" /> для заданного порядкового номера столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-756">The <see cref="T:System.Data.IDataReader" /> instance for the specified column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-757">Данный элемент является явной реализацией элемента интерфейса.</span><span class="sxs-lookup"><span data-stu-id="186d3-757">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="186d3-758">Он может использоваться только при условии, что экземпляр класса <xref:System.Data.SqlClient.SqlDataReader> приведен к типу интерфейса <xref:System.Data.IDataRecord>.</span><span class="sxs-lookup"><span data-stu-id="186d3-758">It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="186d3-759">Получает количество нескрытых полей в <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-759">Gets the number of fields in the <see cref="T:System.Data.SqlClient.SqlDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="186d3-760">Число не скрытых полей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="186d3-760">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186d3-761">Это значение используется для определения числа полей в <xref:System.Data.SqlClient.SqlDataReader> являются видимыми.</span><span class="sxs-lookup"><span data-stu-id="186d3-761">This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible.</span></span> <span data-ttu-id="186d3-762">Например, инструкция SELECT в частичном первичном ключе возвращает оставшиеся части ключа в виде скрытых полей.</span><span class="sxs-lookup"><span data-stu-id="186d3-762">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="186d3-763">Скрытые поля всегда добавляются после видимых полей.</span><span class="sxs-lookup"><span data-stu-id="186d3-763">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>