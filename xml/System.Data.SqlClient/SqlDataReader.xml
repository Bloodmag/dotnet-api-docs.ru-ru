<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eee6ef36ceb81ac6ec30548493633ed5ac9c8b07" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452415" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет способ чтения потока строк последовательного доступа из базы данных SQL Server. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для создания <xref:System.Data.SqlClient.SqlDataReader>, необходимо вызвать <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> метод <xref:System.Data.SqlClient.SqlCommand> объекта, вместо непосредственного использования конструктора.  
  
 Хотя <xref:System.Data.SqlClient.SqlDataReader> используется, связанный с ним <xref:System.Data.SqlClient.SqlConnection> обслуживает <xref:System.Data.SqlClient.SqlDataReader>, и никакие другие операции можно выполнить на <xref:System.Data.SqlClient.SqlConnection> кроме закрытия. Это состояние сохраняется до <xref:System.Data.SqlClient.SqlDataReader.Close%2A> метод <xref:System.Data.SqlClient.SqlDataReader> вызывается. Например, не удается получить выходные параметры можно только после вызова метода <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.  
  
 Изменения, внесенные в результирующий набор другим процессом или потоком во время чтения данных, могут быть видны пользователю `SqlDataReader`. Однако точное поведение зависит от времени.  
  
 <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> и <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> только свойства, которые можно вызывать после <xref:System.Data.SqlClient.SqlDataReader> закрыт. Несмотря на то что <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> свойству может осуществляться во время <xref:System.Data.SqlClient.SqlDataReader> существует, следует всегда вызывать <xref:System.Data.SqlClient.SqlDataReader.Close%2A> перед возвратом значения <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> гарантировать точность возвращаемого значения.  
  
 При использовании последовательного доступа (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), <xref:System.InvalidOperationException> будет вызываться, если <xref:System.Data.SqlClient.SqlDataReader> положение увеличивается и другой чтения, попытка выполнить операцию на предыдущий столбец.  
  
> [!NOTE]
>  Для достижения оптимальной производительности <xref:System.Data.SqlClient.SqlDataReader> позволяет избежать создания ненужных объектов и копий данных. Таким образом, несколько вызовов методов, таких как <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> возвращают ссылку на тот же объект. Соблюдайте осторожность при изменении базового значения объектов, возвращаемые методами, такими как <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>и <xref:System.Data.SqlClient.SqlDataReader>. В примере считываются по данным, записываются в окно консоли. Затем код закрывает <xref:System.Data.SqlClient.SqlDataReader>. <xref:System.Data.SqlClient.SqlConnection> Закрыт автоматически в конце `using` блок кода.  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает объект <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо явным образом вызвать <xref:System.Data.SqlClient.SqlDataReader.Close%2A> метода при работе с помощью <xref:System.Data.SqlClient.SqlDataReader> использовать связанный <xref:System.Data.SqlClient.SqlConnection> для других целей.  
  
 `Close` Метод заполняет значения для выходных параметров, возвращаемых значений и `RecordsAffected`, увеличивает время, необходимое для закрытия `SqlDataReader` , использованный для обработки больших или сложных запросов. Когда возвращаемые значения и число записей, затронутых запросом не являются значимыми, время, необходимое для закрытия `SqlDataReader` может быть уменьшена путем вызова <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> метод связанного <xref:System.Data.SqlClient.SqlCommand> объект перед вызовом метода `Close` метод.  
  
> [!CAUTION]
>  Не вызывайте `Close` или `Dispose` на соединение, DataReader или любого другого управляемого объекта в `Finalize` метод класса. Метод завершения следует только освобождать неуправляемые ресурсы, которыми ваш класс непосредственно владеет. Если класс не владеет какими-либо неуправляемыми ресурсами, не включайте в его определение метод `Finalize`. Дополнительные сведения см. в разделе [мусора](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, `SqlCommand`и <xref:System.Data.SqlClient.SqlDataReader>. В примере считываются по данным, записываются в окно консоли. Затем код закрывает <xref:System.Data.SqlClient.SqlDataReader>. <xref:System.Data.SqlClient.SqlConnection> Закрыт автоматически в конце `using` блок кода.  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ключ <see cref="T:System.Data.SqlClient.SqlConnection" />, ассоциированный с экземпляром <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <value>Объект <see cref="T:System.Data.SqlClient.SqlConnection" />, связанный с объектом <see cref="T:System.Data.SqlClient.SqlDataReader" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее глубину вложенности для текущей строки.</summary>
        <value>Глубина вложенности для текущей строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешняя таблица имеет нулевую глубину вложенности. Поставщик данных .NET Framework для SQL Server не поддерживает вложение и всегда возвращает ноль.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число столбцов в текущей строке.</summary>
        <value>0, если не находится внутри допустимого набора записей; в противном случае — число столбцов в текущей строке. Значение по умолчанию — -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для выполнения запроса, который по своей природе не возвращает строки (например, запрос на удаление), задает <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> значение 0. Тем не менее. Это не следует путать с запросом, который возвращает 0 строк (таких как SELECT * FROM *таблицы* WHERE 1 = 2) в этом случае <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> возвращает число столбцов в таблице, включая скрытые поля. Для исключения скрытых полей используется <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Текущее подключение к экземпляру SQL Server отсутствует.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде логического значения.</summary>
        <returns>Значение столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде байта.</summary>
        <returns>Значение заданного столбца в виде байта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой байт.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <param name="dataIndex">Индекс в поле, с которого начинается операция считывания.</param>
        <param name="buffer">Буфер, в который считывается поток байтов.</param>
        <param name="bufferIndex">Индекс в <c>buffer</c>, с которого должна начинаться операция записи.</param>
        <param name="length">Максимальная длина для копирования в буфер.</param>
        <summary>Считывает поток байтов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
        <returns>Число фактически считанных байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> Возвращает число доступных байтов в поле. В большинстве случаев это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если `GetBytes` уже используется для получения байтов из поля. Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader> читает большую структуру данных в буфер. Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.  
  
 Если передается значение буфера `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> возвращает длину всего поля в байтах, не оставшийся размер, в зависимости от параметра смещения буфера.  
  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть массив байтов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде одного символа.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не поддерживается для <xref:System.Data.SqlClient>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <param name="dataIndex">Индекс в поле, с которого начинается операция считывания.</param>
        <param name="buffer">Буфер, в который считывается поток байтов.</param>
        <param name="bufferIndex">Индекс в <c>buffer</c>, с которого должна начинаться операция записи.</param>
        <param name="length">Максимальная длина для копирования в буфер.</param>
        <summary>Считывает поток символов из заданного смещения столбца в буфер в виде массива, начиная с заданного смещения буфера.</summary>
        <returns>Число фактически считанных символов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> Возвращает количество доступных символов в поле. Часто это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если `GetChars` уже используется для получения символов из поля. Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader> читает большую структуру данных в буфер. Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.  
  
 Фактическое число считанных символов может быть меньше запрошенного длины, если достигнут конец поля. Если передается значение буфера `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> возвращает длину всего поля в символах не оставшийся размер, в зависимости от параметра смещения буфера.  
  
 Преобразования не выполняются; Таким образом. извлеченные данные уже должны быть массив символов.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> Метод возвращает 0, если `dataIndex` является отрицательным значением.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер (с нуля) искомого столбца.</param>
        <summary>Получает строку, представляющую тип данных в указанном столбце.</summary>
        <returns>Строка, представляющая тип данных указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает имя типа внутренних данных.  
  
 `numeric` — синоним в SQL Server для `decimal` тип данных. `GetDataTypeName` Возвращает «десятичное число» для столбца, определенных как десятичных или числовых.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTime> объекта.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца как объект <see cref="T:System.DateTimeOffset" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTimeOffset> объекта.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.Decimal> объекта.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразование не выполняется. Таким образом извлеченные данные уже должен быть двойной точности с плавающей запятой.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.SqlClient.SqlDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то, что этот метод можно использовать для получения явный перечислитель, в языках, которые поддерживают `foreach` конструкции, проще использовать циклы для перебора строк в модуле чтения данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
        <returns>Тип данных объекта (<see cref="T:System.Type" />). Если тип отсутствует в клиенте, в случае, когда из базы данных возвращен пользовательский тип, **GetFieldType** возвращает NULL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип возвращаемого значения.</typeparam>
        <param name="i">Получаемый столбец.</param>
        <summary>Синхронно получает значение заданного столбца в виде типа. <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> — асинхронная версия этого метода.</summary>
        <returns>Объект возвращаемого типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `T` Может принимать одно из следующих типов:  
  
|||||  
|-|-|-|-|  
|Boolean|Byte|Char|DateTime|  
|DateTimeOffset|Десятичное число|Double|Float|  
|Guid|Int16|Int32|Int64|  
|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  
|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  
|SqlInt64|SqlMoney|SqlSingle|SqlString|  
|String|Определяемый пользователем тип, который может быть любого типа CLR, отмеченные <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  
  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Сделана попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</exception>
        <exception cref="T:System.InvalidCastException">
          <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип возвращаемого значения.</typeparam>
        <param name="i">Получаемый столбец.</param>
        <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
        <summary>Асинхронно получает значение заданного столбца в виде типа. <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> — синхронная версия этого метода.</summary>
        <returns>Объект возвращаемого типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `T` Может принимать одно из следующих типов:  
  
|||||  
|-|-|-|-|  
|Boolean|Byte|Char|DateTime|  
|DateTimeOffset|Десятичное число|Double|Float|  
|Guid|Int16|Int32|Int64|  
|SqlBoolean|SqlByte|SqlDateTime|SqlDecimal|  
|SqlDouble|SqlGuid|SqlInt16|SqlInt32|  
|SqlInt64|SqlMoney|SqlSingle|SqlString|  
|String|Определяемый пользователем тип, который может быть любого типа CLR, отмеченные <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.|||  
  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Сделана попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Значение столбца было NULL (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />) при извлечении типа, не являющегося типом SQL.</exception>
        <exception cref="T:System.InvalidCastException">
          <paramref name="T" /> не соответствует типу, возвращаемому SQL Server, или не может быть приведено.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразование не выполняется. Таким образом извлеченные данные уже должен числа с плавающей запятой одиночной точности.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде глобального уникального идентификатора (GUID).</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть GUID.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 16-разрядное целое число со знаком.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 32-разрядное целое число со знаком.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное целое число со знаком.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает имя заданного столбца.</summary>
        <returns>Имя заданного столбца.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя столбца.</param>
        <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
        <returns>Порядковый номер столбца (от нуля).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetOrdinal` сначала выполняет поиск с учетом регистра. Возникает при сбое одной секунды, поиск без учета регистра (без учета регистра сравнение выполняется с помощью параметров сортировки базы данных). Если правила определения регистра для конкретного языка и региональных параметров влияют на результаты сравнений, возможны непредвиденные результаты. Например, в турецком алфавите следующий пример вызывает неверных результатов, так как файловая система в турецком использует регистр по правилам языка правил для буквы «i» в «файл». Метод создает `IndexOutOfRange` исключение, если не найден отсчитываемый от нуля порядковый номер столбца.  
  
 `GetOrdinal` не учитывает ширину японской азбуки.  
  
 Поскольку порядковым числительным более эффективны, чем поиск по имени, неэффективно вызывать `GetOrdinal` в цикле. Экономия времени при вызове `GetOrdinal` один раз и назначьте полученные результаты целочисленной переменной для использования в цикле.  
  
   
  
## Examples  
 В следующем примере показано использование метода <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A>.  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Заданное имя недопустимо для имени столбца.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</param>
        <summary>Возвращает <see langword="Object" />, который представляет собой конкретный тип поля базового поставщика.</summary>
        <returns>Возвращает <see cref="T:System.Object" />, который представляет собой конкретный тип поля базового поставщика.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <see cref="T:System.Int32" />, представляющий порядковый номер столбца.</param>
        <summary>Возвращает <see langword="Object" />, который представляет собой значение типа, специфического для поставщика.</summary>
        <returns>
          <see cref="T:System.Object" />, который представляет собой значение типа, специфического для поставщика.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Массив объектов <see cref="T:System.Object" />, в который копируются значения столбца.</param>
        <summary>Возвращает массив объектов, которые представляют собой значения типа, специфического для базового поставщика.</summary>
        <returns>Массив объектов, которые представляют собой значения типа, специфического для поставщика.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> метод возвращает метаданные о каждом столбце в следующем порядке:  
  
|Модуль чтения данных столбца|Описание:|  
|-----------------------|-----------------|  
|AllowDBNull|Значение, если потребитель может установить для столбца значение null или если поставщик не может определить, может ли потребитель задать столбец значение null. В противном случае — не задано. Столбец может содержать значения null, даже если он не может быть присвоено значение null.|  
|BaseCatalogName|Имя каталога в хранилище данных, содержащем столбец. Имеет значение NULL, если не удается определить имя базового каталога. По умолчанию этот столбец имеет значение null.|  
|BaseColumnName|Имя столбца в хранилище данных. Это может отличаться от имени столбца, возвращаемого в столбце ColumnName, если используется псевдоним. Значение null, если невозможно определить имя базового столбца или если столбец набора строк является производным, но не идентично, хранилище столбцов в данных. По умолчанию этот столбец имеет значение null.|  
|BaseSchemaName|Имя схемы в хранилище данных, содержащем столбец. Значение null, если невозможно определить имя базовой схемы. По умолчанию этот столбец имеет значение null.|  
|BaseServerName|Имя экземпляра Microsoft SQL Server, используемые <xref:System.Data.SqlClient.SqlDataReader>.|  
|BaseTableName|Имя таблицы или представления в хранилище данных, содержащем столбец. Значение null, если не удается определить имя базовой таблицы. По умолчанию этот столбец имеет значение null.|  
|ColumnName|Имя столбца; оно не может быть уникальным. Если не удается определить, возвращается значение null. Это имя всегда отражает последнее переименование столбца в текущем представлении или команды в тексте.|  
|ColumnOrdinal|Отсчитываемый от нуля порядковый номер столбца. Этот столбец не может содержать значение null.|  
|ColumnSize|Максимально возможная длина значения в столбце. Для столбцов, использующих тип данных фиксированной длины это размер типа данных. Для `nvarchar(MAX)`, `varchar(MAX)`, и `varbinary(MAX)` столбцы, которые хранятся в базе данных SQL Server, максимальный размер составляет 2 ГБ. Если эти столбцы хранятся и доступны в виде файлов, ограничения на максимальный размер определяется файловой системы. Это значение изменяется при использовании `Type System Version` ключевое слово в строке подключения.  Для новых типов они представлены в виде типов нижнего уровня. Типы данных MAX вернуть обычный 4 КБ для `nvarchar` и 8000 для `varchar`. Дополнительные сведения см. в справочнике по Transact-SQL в электронной документации по SQL Server.|  
|Имя_типа_данных|Возвращает строку, представляющую тип данных указанного столбца.|  
|IsAliased|`true`: Имя столбца является псевдонимом.<br /><br /> `false`: Имя столбца не является псевдонимом.|  
|IsAutoIncrement|`true`: Столбец присваивает значения новым строкам с фиксированным приращением.<br /><br /> `false`: Столбец не присваивает значения новым строкам с фиксированным приращением. По умолчанию этот столбец имеет `false`.|  
|IsColumnSet|`true`: Столбец является разреженным столбцом, который входит в набор столбцов.|  
|IsExpression|`true`: Столбец является выражением.<br /><br /> `false`: Столбец не является выражением.|  
|isHidden|`true`: Столбец будет скрыт.<br /><br /> `false`: Столбец не является скрытым.|  
|IsIdentity|`true`: Столбец является столбцом идентификаторов.<br /><br /> `false`: Столбец не является столбцом идентификаторов.|  
|IsKey|`true`: Столбец является элементом набора столбцов в наборе строк, в совокупности уникально идентифицировать строку. Набор столбцов с `IsKey` значение `true` должен однозначно идентифицировать строку в наборе строк. Нет необходимости, этот набор столбцов является минимальным набором столбцов. Этот набор столбцов может быть создан из первичного ключа базовой таблицы, уникального ограничения или уникального индекса.<br /><br /> `false`: Столбец не требуется для уникальной идентификации строки.|  
|IsLong|`true`: Этот столбец содержит большой двоичный объект (BLOB), содержащий данные очень большой длины. Определение очень большого объема данных зависит от поставщика.<br /><br /> `false`: Столбец не содержит большой двоичный объект (BLOB), содержащий данные очень большой длины.|  
|IsReadOnly|`true`: Столбец не может изменяться.<br /><br /> `false`: Можно изменить столбец.|  
|IsRowVersion|`true`: Столбец содержит постоянный идентификатор строки, не может быть записан и не имеет смысла значения за исключением идентификации строки.<br /><br /> `false`: Столбец не содержит постоянный идентификатор строки, не может быть записан и не имеет смысла значения за исключением идентификатора столбца.|  
|IsUnique|`true`: Столбец имеет тип `timestamp`.<br /><br /> `false`: Столбец не относится к типу `timestamp`.|  
|NonVersionedProviderType|Тип столбца независимо от текущего `Type System Version` указано в строке подключения. Возвращаемое значение — из <xref:System.Data.SqlDbType> перечисления.|  
|NumericPrecision|Если `ProviderType` является числовым типом данных, это максимальная точность столбца. Точность зависит от определения столбца. Если `ProviderType` не является числовым типом данных, это — 255.|  
|NumericScale|Если `ProviderType` DBTYPE_DECIMAL или DBTYPE_NUMERIC, количество цифр справа от десятичной запятой. В противном случае это 255.|  
|ProviderSpecificDataType|Возвращает тип поставщика данных столбца на основании `Type System Version` ключевое слово в строке подключения.|  
|ProviderType|Индикатор типа данных столбца. Если тип данных столбца меняется от строки к строке, это должен быть объектом. Этот столбец не может содержать значение null.|  
|UdtAssemblyQualifiedName|Если столбец определяемого пользователем типа (UDT), это полное имя сборки определяемого пользователем ТИПА согласно <xref:System.Type.AssemblyQualifiedName%2A>. Если столбец не является определяемым пользователем ТИПОМ, имеет значение null.|  
|XmlSchemaCollectionDatabase|Имя базы данных, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionName` и `XmlSchemaCollectionOwningSchema` столбцы также имеют значение null.|  
|XmlSchemaCollectionName|Имя коллекции схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic) при наличии связанной коллекции схем. Если значение равно null, `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionOwningSchema` столбцы также имеют значение null.|  
|XmlSchemaCollectionOwningSchema|Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionName` столбцы также имеют значение null.|  
  
> [!NOTE]
>  Чтобы убедиться в том, что столбцы метаданных возвращают правильные данные, необходимо вызвать <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> с `behavior` равным `KeyInfo`. В противном случае некоторые из столбцов в таблице схемы могут возвращать по умолчанию, значение null или неправильные данные.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должен быть двоичной структуры или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
        <returns>Значение столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должны представлять байт или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять значение даты и времени, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть десятичным значением, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть числом с плавающей запятой двойной точности, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой GUID, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть 16-разрядное целое число со знаком, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 32-разрядное целое число со знаком, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное знаковое целое число, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть десятичным значением, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть одинарной точности с плавающей запятой, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой строку, или создается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение данных в заданном столбце как тип SQL Server.</summary>
        <returns>Значение столбца, выраженное как <see cref="T:System.Data.SqlDbType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> Возвращает данные, используя собственные типы SQL Server. Для получения данных с применением типов .NET Framework, в разделе <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Массив объектов <see cref="T:System.Object" />, в который копируются значения. Значения столбцов выражаются как типы SQL Server.</param>
        <summary>Заполняет массив значений типа <see cref="T:System.Object" />, содержащий значения для всех столбцов в записи, выраженные как типы SQL Server.</summary>
        <returns>Целое число, указывающее количество скопированных столбцов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает значения для всех столбцов в записи за один вызов, используя систему типов SQL вместо системе типов среды CLR. Длина <xref:System.Object> массива не соответствует количеству столбцов в записи. Можно передать <xref:System.Object> массив, который содержит меньшее число столбцов, содержащихся в записи. Объем данных <xref:System.Object> содержит массив копируется в массив, начиная со столбца с порядковым номером 0. Можно также передать <xref:System.Object> массив, длина которого превышает количество столбцов в результирующей строке. Все оставшиеся столбцы не обрабатываются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде XML.</summary>
        <returns>Значение <see cref="T:System.Data.SqlTypes.SqlXml" />, содержащее XML из соответствующего поля.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должны быть значения XML.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.SqlClient.SqlDataReader" /> или получения доступа к ним.</exception>
        <exception cref="T:System.InvalidCastException">Извлеченные данные несовместимы с типом<see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Извлекает типы данных binary, image, varbinary, UDT и variant как <see cref="T:System.IO.Stream" />.</summary>
        <returns>Объект потока.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream.ReadTimeout%2A> по умолчанию используется значение <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; но вы можете изменить <xref:System.IO.Stream.ReadTimeout%2A> через <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.  
  
 Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.Stream>.  
  
 <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> вызывает <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> действует.  
  
 <xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.IO.Stream> исключение как <xref:System.IO.IOException> исключения; внутреннее исключение для проверки <xref:System.Data.SqlClient.SqlException>.  
  
 Следующие <xref:System.IO.Stream> члены недоступны для объектов, возвращенных <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:  
  
-   BeginWrite  
  
-   Метод EndWrite  
  
-   Длина  
  
-   Положение  
  
-   Поиск  
  
-   Функция SetLength  
  
-   Write  
  
-   WriteByte  
  
-   WriteTimeout  
  
 При свойстве соединения `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> поддерживает только извлечение синхронной данных для обоих последовательных (<xref:System.Data.CommandBehavior.SequentialAccess>) и непоследовательных (<xref:System.Data.CommandBehavior.Default>) доступ.  
  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Сделана попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
        <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных ниже типов:  -   binary  -   image  -   varbinary  -   udt</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде строки.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом извлеченные данные уже должен быть строкой.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Получаемый столбец.</param>
        <summary>Извлекает типы данных Char, NChar, NText, NVarChar, text, varChar и Variant как <see cref="T:System.IO.TextReader" />.</summary>
        <returns>Возвращаемый объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.IO.TextReader> исключение как <xref:System.IO.IOException> исключения; внутреннее исключение для проверки <xref:System.Data.SqlClient.SqlException>.  
  
 Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.TextReader>.  
  
 <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> вызывает <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> действует.  
  
 При свойстве соединения `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> поддерживает только извлечение синхронной данных для обоих последовательных (<xref:System.Data.CommandBehavior.SequentialAccess>) и непоследовательных (<xref:System.Data.CommandBehavior.Default>) доступ.  
  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Сделана попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
        <exception cref="T:System.InvalidCastException">Возвращаемый тип не был одним из указанных ниже типов:  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца как объект <see cref="T:System.TimeSpan" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.TimeSpan> объекта.  
  
 Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> для проверки значений null перед вызовом этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Указанное приведение недопустимо.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
        <returns>Этот метод возвращает объекты <see cref="T:System.DBNull" /> для столбцов базы данных со значениями NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> Возвращает данные, с применением типов .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.</param>
        <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
        <returns>Число экземпляров <see cref="T:System.Object" /> в массиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для большинства приложений этот метод предоставляет эффективные средства для извлечения всех столбцов вместо извлечения каждого столбца отдельно.  
  
 Можно передать <xref:System.Object> массив, который содержит меньшее число столбцов, содержащихся в результирующей строке. Объем данных <xref:System.Object> содержит массив копируется в массив. Можно также передать <xref:System.Object> массив, длина которого превышает количество столбцов в результирующей строке.  
  
 Этот метод возвращает объекты <xref:System.DBNull> для столбцов базы данных со значениями NULL.  
  
   
  
## Examples  
 В следующем примере показано использование массива соответствующего размера для чтения всех значений из текущей строки в предоставленном <xref:System.Data.SqlClient.SqlDataReader>. Кроме того в образце показано использование массива фиксированного размера, который может быть меньше или больше, чем число доступных столбцов.  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Значение указанного столбца.</param>
        <summary>Извлекает данные типа XML как <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Возвращаемый объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlReader> Объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> не поддерживает асинхронные операции. Если требуется асинхронных операций на <xref:System.Xml.XmlReader>, приведения XML-столбец для NVARCHAR(MAX) на сервере и использовать <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> с <xref:System.Xml.XmlReader.Create%2A>.  
  
 <xref:System.Data.SqlClient.SqlException> исключения, вызванные из <xref:System.Xml.XmlReader> исключение как <xref:System.Xml.XmlException> исключения; внутреннее исключение для проверки <xref:System.Data.SqlClient.SqlException>.  
  
 <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> вызывает <xref:System.InvalidOperationException> исключение при использовании на объект, возвращаемый <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> при <xref:System.Data.CommandBehavior.SequentialAccess> действует.  
  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
        <exception cref="T:System.InvalidCastException">Возвращенный тип не был типом XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> одну или несколько строк.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Извлекает логическое значение, указывающее, закрыт ли заданный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <value>
          <see langword="true" />, если указанный экземпляр <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не удается прочитать из <xref:System.Data.SqlClient.SqlDataReader> экземпляр, который закрывается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">Перечисление <see cref="T:System.Data.CommandBehavior" />.</param>
        <summary>Определяет, соответствует ли заданный <see cref="T:System.Data.CommandBehavior" /> аналогичному объекту для <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</summary>
        <returns>
          <see langword="true" />, если для <see cref="T:System.Data.CommandBehavior" /> задано значение true; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
        <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод для проверки наличия значений null столбцов перед вызовом типизированных методов get (например, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>и так далее), чтобы избежать возникновения ошибки.  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">Извлекаемый столбец (отсчитываемый с нуля).</param>
        <param name="cancellationToken">Инструкция отмены, распространяющая уведомление о том, что операции должны быть отменены. Не гарантирует отмену. Параметр <see langword="CancellationToken.None" /> делает этот метод равным методу <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />. Возвращаемая задача должна быть помечена как отмененная.</param>
        <summary>Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, который получает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения.  Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
        <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see langword="DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Соединение разъединяется или закрывается во время извлечения данных.  Объект <see cref="T:System.Data.SqlClient.SqlDataReader" /> закрыт во время извлечения данных.  Не существует данных, готовых для чтения (например, первый объект <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> не был вызван или вернул значение false).  Попытка чтения ранее считанного столбца в последовательном режиме.  Выполнялась асинхронная операция. Относится ко всем методам Get* при работе в последовательном режиме, так как они могут вызываться при чтении потока.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Попытка чтения столбца, который не существует.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение столбца в собственном формате.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
        <value>Значение заданного столбца в собственном формате.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до значения <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя столбца.</param>
        <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
        <value>Значение заданного столбца в собственном формате.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сначала выполняется поиск с учетом регистра. Выполняется в случае неудачи второй поиска без учета регистра (без учета регистра сравнение выполняется с помощью параметров сортировки базы данных). Если правила определения регистра для конкретного языка и региональных параметров влияют на результаты сравнений, возможны непредвиденные результаты. Например, в турецком алфавите следующий пример вызывает неверных результатов, так как файловая система в турецком использует регистр по правилам языка правил для буквы «i» в «файл».  
  
 Этот метод не учитывает ширину японской азбуки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Столбец с указанным именем не найден.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При чтении результатов пакетных SQL-транзакций перемещает средство чтения данных на следующий результат.</summary>
        <returns>Значение <see langword="true" />, если имеются и другие наборы результатов; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется для обработки нескольких результатов, которые могут быть созданы при выполнении пакетных инструкций Transact-SQL.  
  
 По умолчанию модуль чтения данных располагается на первый результат.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Инструкция отмены.</param>
        <summary>Асинхронная версия метода <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, который перемещает средство чтения данных к следующему результату при чтении результатов из пакета инструкций [!INCLUDE[tsql](~/includes/tsql-md.md)].  Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды.  Сведения об исключениях передаются в возвращенном объекте Task.</summary>
        <returns>Задача, представляющая асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об асинхронном программировании в поставщике данных .NET Framework для SQL Server см. в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.</summary>
        <returns>Значение <see langword="true" />, если имеются другие строки; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Data.SqlClient.SqlDataReader> — перед первой записью. Поэтому необходимо вызвать метод <xref:System.Data.SqlClient.SqlDataReader.Read%2A> , чтобы начать доступ к данным.  
  
 Только один `SqlDataReader` на связанные <xref:System.Data.SqlClient.SqlConnection> может быть открыт одновременно, и любые попытки открыть другой завершится ошибкой, пока первый закрыт. Аналогично, хотя `SqlDataReader` используется, связанный с ним `SqlConnection` обслуживает его только после вызова <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>и <xref:System.Data.SqlClient.SqlDataReader>. В примере считываются по данным, записываются в окно консоли. Затем код закрывает <xref:System.Data.SqlClient.SqlDataReader>. <xref:System.Data.SqlClient.SqlConnection> Закрыт автоматически в конце `using` блок кода.  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Инструкция отмены.</param>
        <summary>Асинхронная версия <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, которая перемещает <see cref="T:System.Data.SqlClient.SqlDataReader" /> к следующей записи.  Токен отмены можно использовать для запроса отказа от операции до истечения времени ожидания команды. Сведения об исключениях передаются в возвращенном объекте Task.</summary>
        <returns>Задача, представляющая асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `behavior` параметр <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> равно `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> считывает всю строку перед возвращением задачи.  
  
 Дополнительные сведения, включая примеры кода, об асинхронном программировании в поставщике данных .NET Framework для SQL Server, в разделе [асинхронное программирование](~/docs/framework/data/adonet/asynchronous-programming.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызов <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> более одного раза для того же экземпляра до завершения задачи.  
  
 <see langword="Context Connection=true" /> задается в строке подключения.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server вернул ошибку во время выполнения текста команды.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число измененных, вставленных или удаленных строк при выполнении SQL-транзакций.</summary>
        <value>Число измененных, вставленных или удаленных строк. Значение 0, если строки не были затронуты или инструкция завершилась ошибкой. Значение -1 для инструкций SELECT.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> Свойство не задано, пока не будут считаны все строки и закрытии <xref:System.Data.SqlClient.SqlDataReader>.  
  
 Значение этого свойства является накапливаемым. Например, если выполняется вставка двух записей в пакетном режиме, значение `RecordsAffected` будет равно двум.  
  
 <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> и <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> только свойства, которые можно вызывать после <xref:System.Data.SqlClient.SqlDataReader> закрыт.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Порядковый номер столбца.</param>
        <summary>Возвращает <see cref="T:System.Data.IDataReader" /> для указанного порядкового номера столбца.</summary>
        <returns>Экземпляр <see cref="T:System.Data.IDataReader" /> для заданного порядкового номера столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Data.SqlClient.SqlDataReader> приведен к типу интерфейса <xref:System.Data.IDataRecord>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число не скрытых полей в <see cref="T:System.Data.SqlClient.SqlDataReader" />.</summary>
        <value>Число не скрытых полей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение используется для определения количества полей в <xref:System.Data.SqlClient.SqlDataReader> являются видимыми. Например, инструкция SELECT в частичном первичном ключе возвращает оставшиеся части ключа в виде скрытых полей. Скрытые поля всегда добавляются после видимых полей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>