<Type Name="SqlDependency" FullName="System.Data.SqlClient.SqlDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5d605853d60b72cc579a044b61b343ee64f40f4" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037606" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDependency" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDependency extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDependency" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDependency" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDependency sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Объект <see cref="T:System.Data.SqlClient.SqlDependency" /> представляет зависимость уведомления о запросе между приложением и экземпляром SQL Server. Приложение может создавать объект <see cref="T:System.Data.SqlClient.SqlDependency" /> и регистрироваться для получения уведомлений через обработчик событий <see cref="T:System.Data.SqlClient.OnChangeEventHandler" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> идеально подходит для кэширования сценариев, где приложениям ASP.NET или службы среднего уровня необходимо хранить определенные данные, кэшированные в памяти. <xref:System.Data.SqlClient.SqlDependency> позволяет получать уведомления при изменении данных в базе данных, таким образом, можно обновить кэш.  
  
 Чтобы задать зависимость, его необходимо связать <xref:System.Data.SqlClient.SqlDependency> объектов для одного или нескольких <xref:System.Data.SqlClient.SqlCommand> объектов. Чтобы получать уведомления, необходимо подписаться на <xref:System.Data.SqlClient.SqlDependency.OnChange> событий. Дополнительные сведения о требованиях к созданию запросов на уведомления см. в разделе «Создание для уведомления о запросе» в электронной документации по SQL Server.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency> была разработана для использования в приложениях ASP.NET или службы среднего уровня при наличии небольшого числа серверов, которые имеют активные зависимости от базы данных. Он не предназначен для использования в клиентских приложениях, где бы сотен или тысяч клиентских компьютеров <xref:System.Data.SqlClient.SqlDependency> объекты для одной базы данных сервера. Если вы разрабатываете приложение которых требуется надежный доли секунды уведомления об изменении данных, просмотрите разделы **планирование эффективной стратегии уведомлений о запросах** и **альтернативы для запросов Уведомления о** в [планирование уведомлений](http://go.microsoft.com/fwlink/?LinkId=211984) раздел электронной документации по SQL Server.  
  
 Дополнительные сведения см. в разделе [уведомления о запросах в SQL Server](~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md) и «Создание решений уведомления» в электронной документации по SQL Server.  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlDependency.OnChange> События могут быть созданы в другом потоке, из потока, который инициировал выполнение команды.  
  
 Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. В приведенной ниже таблице указаны ссылки на разделы электронной документации по SQL Server, посвященные компоненту Service Broker и уведомлениям о запросах.  
  
 **Электронная документация по SQL Server**  
  
-   [Создание запроса для уведомлений](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Вопросы безопасности для служб уведомления](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Справочный центр разработчика Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" />, используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор инициализирует <xref:System.Data.SqlClient.SqlDependency> с использованием имени службы компонента Service Broker по умолчанию и тайм-аута. На некотором этапе после построения необходимо использовать <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A> метод, чтобы сопоставить одну или несколько команд к этому <xref:System.Data.SqlClient.SqlDependency> объекта.  
  
 Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. В приведенной ниже таблице указаны ссылки на разделы электронной документации по SQL Server, посвященные компоненту Service Broker и уведомлениям о запросах.  
  
 **Электронная документация по SQL Server**  
  
-   [Создание запроса для уведомлений](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Вопросы безопасности для служб уведомления](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Справочный центр разработчика Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.Data.SqlClient.SqlCommand" />, который необходимо связать с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />. Конструктор создаст объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> и свяжет его с этой командой.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" /> и связывает его с параметром <see cref="T:System.Data.SqlClient.SqlCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На внутреннем уровне этот конструктор создает экземпляр <xref:System.Data.Sql.SqlNotificationRequest> класса и привязывает его к <xref:System.Data.SqlClient.SqlCommand> объекта.  
  
 Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. В приведенной ниже таблице указаны ссылки на разделы электронной документации по SQL Server, посвященные компоненту Service Broker и уведомлениям о запросах.  
  
 **Электронная документация по SQL Server**  
  
-   [Создание запроса для уведомлений](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Вопросы безопасности для служб уведомления](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Справочный центр разработчика Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="command" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlCommand" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlCommand command, string options, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As SqlCommand, options As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDependency(System::Data::SqlClient::SqlCommand ^ command, System::String ^ options, int timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
        <Parameter Name="options" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.Data.SqlClient.SqlCommand" />, который необходимо связать с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />. Конструктор создает объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> и связывает его с этой командой.</param>
        <param name="options">Параметры запроса уведомления, которые должны использоваться данной зависимостью.  Значение <c>NULL</c>, чтобы использовать службу по умолчанию.</param>
        <param name="timeout">Время ожидания уведомляющего сообщения в секундах. Значением по умолчанию является 0, указывающее, что следует использовать время ожидания, установленное на сервере.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.SqlClient.SqlDependency" /> и связывает его с параметром <see cref="T:System.Data.SqlClient.SqlCommand" />, а также задает параметры уведомления и таймаут.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. В приведенной ниже таблице указаны ссылки на разделы электронной документации по SQL Server, посвященные компоненту Service Broker и уведомлениям о запросах.  
  
 **Электронная документация по SQL Server**  
  
-   [Создание запроса для уведомлений](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Вопросы безопасности для служб уведомления](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Справочный центр разработчика Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="command" /> имеет значение NULL.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение таймаута меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlCommand" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.  
  
 Предпринята попытка создать экземпляр **SqlDependency** в SQLCLR.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCommandDependency">
      <MemberSignature Language="C#" Value="public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCommandDependency(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCommandDependency (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCommandDependency(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.Data.SqlClient.SqlCommand" />, содержащий инструкцию, для которой возможно уведомление.</param>
        <summary>Связывает объект <see cref="T:System.Data.SqlClient.SqlCommand" /> с этим экземпляром <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. В приведенной ниже таблице указаны ссылки на разделы электронной документации по SQL Server, посвященные компоненту Service Broker и уведомлениям о запросах.  
  
 **Электронная документация по SQL Server**  
  
-   [Создание запроса для уведомлений](http://msdn.microsoft.com/library/ms181122.aspx)  
  
-   [Рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)  
  
-   [Безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)  
  
-   [Вопросы безопасности для служб уведомления](http://msdn.microsoft.com/library/ms172604.aspx)  
  
-   [Разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)  
  
-   [Вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)  
  
-   [Вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)  
  
-   [Справочный центр разработчика Service Broker](http://msdn.microsoft.com/library/ms166100.aspx)  
  
-   [Руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="command" /> имеет значение null.</exception>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.SqlClient.SqlCommand" /> уже имеет объект <see cref="T:System.Data.Sql.SqlNotificationRequest" />, связанный с его свойством <see cref="P:System.Data.SqlClient.SqlCommand.Notification" />, и этот объект <see cref="T:System.Data.Sql.SqlNotificationRequest" /> не связан с данной зависимостью.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChanges">
      <MemberSignature Language="C#" Value="public bool HasChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.HasChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanges { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, изменился ли какой-либо из результирующих наборов, связанных с данной зависимостью.</summary>
        <value>Логическое значение, указывающее, изменился ли какой-либо из результирующих наборов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы не используете <xref:System.Data.SqlClient.SqlDependency.OnChange> событий, вы можете проверить <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> свойства, чтобы определить, изменялась ли результаты запроса.  
  
 <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> Свойства не подразумевает изменений в данных. Другие обстоятельства, например времени ожидания истек, и не удалось задать запрос уведомления, также формироваться событие изменения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDependency.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, являющееся уникальным идентификатором данного экземпляра класса <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <value>Строковое представление GUID, генерируемого для каждого экземпляра класса <see cref="T:System.Data.SqlClient.SqlDependency" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Id%2A> Свойство используется для идентификации данного <xref:System.Data.SqlClient.SqlDependency> экземпляра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChange">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.OnChangeEventHandler OnChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.OnChangeEventHandler OnChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlDependency.OnChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OnChange As OnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::OnChangeEventHandler ^ OnChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.OnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется при получении уведомления для любой команды, связанной с данным объектом <see cref="T:System.Data.SqlClient.SqlDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> Происходит при изменении результатов для данной команды. Если вы не используете <xref:System.Data.SqlClient.SqlDependency.OnChange>, вы можете проверить <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A> свойства, чтобы определить, изменились ли результаты запроса.  
  
 <xref:System.Data.SqlClient.SqlDependency.OnChange> Событий не подразумевает изменений в данных. Других обстоятельствах, таких как тайм-аута, а также сформировать не удалось задать запрос уведомления, <xref:System.Data.SqlClient.SqlDependency.OnChange>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Запускает прослушиватель для получения уведомлений об изменении зависимости.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Прослушиватель будет перезапущена при возникновении ошибки в соединении с SQL Server.  
  
 Несколько вызовов <xref:System.Data.SqlClient.SqlDependency.Start%2A> можно сделать метод распространяются следующие ограничения:  
  
-   Множественные вызовы с идентичными параметрами (одинаковой строки соединения и учетные данные Windows в вызывающем потоке) допустимы.  
  
-   Несколько вызовов с разными строками подключения допустимы при условии, что:  
  
    -   Каждая строка подключения указывает другой базы данных, или  
  
    -   Каждая строка подключения указывает другого пользователя, или  
  
    -   Эти вызовы поступают из разных доменов приложений.  
  
 Чтобы <xref:System.Data.SqlClient.SqlDependency> работают правильно для приложений, использующих несколько потоков для представления учетных данных другого пользователя без предоставления роли dbo в группу, так как разные пользователи могут подписаться и прослушивания (с помощью <xref:System.Web.Caching.SqlCacheDependency> или <xref:System.Data.SqlClient.SqlCommand>) очередь уведомлений, созданные администратором. При запуске домена нужного приложения, необходимо Вызовите Start с учетными данными пользователя, имеющего разрешение для инициализации службы и очереди (CREATE QUEUE и создание службы разрешения для базы данных) (Windows). Убедитесь, что начала вызывается только один раз в AppDomain, в противном случае неоднозначность возникает исключение.  Поток пользователя, должен иметь разрешения для подписки на уведомления (разрешение SUBSCRIBE QUERY NOTIFICATIONS в базе данных). <xref:System.Data.SqlClient.SqlDependency> будет связывать запрос подписки пользователя без прав администратора, чтобы службы и очереди, созданной администратором.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения для экземпляра SQL Server, от которого необходимо получать уведомления об изменении зависимости.</param>
        <summary>Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, заданного в строке подключения.</summary>
        <returns>Значение **true**, если прослушиватель инициализирован успешно; значение **false**, если совместимый прослушиватель уже существует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод запускает прослушиватель для <xref:System.AppDomain> для получения уведомлений об зависимости от экземпляра SQL Server, заданные `connectionString` параметра. Этот метод может вызываться несколько раз с разными строками подключения для нескольких серверов.  
  
 Дополнительные замечания см <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="connectionString" /> такой же, как в предыдущем вызове этого метода, но параметры различны.  
  
 Этот метод вызывается из CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Следующий вызов этого метода выполнен с эквивалентным параметром <paramref name="connectionString" />, содержащим другое имя пользователя, или пользователь не является используемым по умолчанию в той же схеме.  
  
 Кроме того, любые базовые исключения **SqlClient**.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static bool Start (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Start(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Start (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Start(System::String ^ connectionString, System::String ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения для экземпляра SQL Server, от которого необходимо получать уведомления об изменении зависимости.</param>
        <param name="queue">Будет использоваться существующая очередь сервис-брокера SQL Server. Если значение <see langword="null" />, используется очередь по умолчанию.</param>
        <summary>Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, заданного в строке подключения, с использованием заданной очереди сервис-брокера SQL Server.</summary>
        <returns>Значение **true**, если прослушиватель инициализирован успешно; значение **false**, если совместимый прослушиватель уже существует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод запускает прослушиватель для <xref:System.AppDomain> для получения уведомлений об зависимости от экземпляра SQL Server, заданные `connectionString` параметра. Этот метод может вызываться несколько раз с разными строками подключения для нескольких серверов.  
  
 Если указано имя очереди не <xref:System.Data.SqlClient.SqlDependency> создает временный очереди и службы на сервере, который используется для всего процесса, даже если процесс включает в себя несколько <xref:System.AppDomain>. Очередь и служба автоматически удаляются при завершении работы приложения.  
  
 Дополнительные замечания см <xref:System.Data.SqlClient.SqlDependency.Start%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Параметр <paramref name="connectionString" /> такой же, как в предыдущем вызове этого метода, но параметры различны.  
  
 Этот метод вызывается из CLR.</exception>
        <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Следующий вызов этого метода выполнен с эквивалентным параметром <paramref name="connectionString" />, содержащим другое имя пользователя, или пользователь не является используемым по умолчанию в той же схеме.  
  
 Кроме того, любые базовые исключения **SqlClient**.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Останавливает прослушиватель для подключения, заданного в предыдущем вызове <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency> Прослушиватель будет перезапущена при возникновении ошибки в соединении с SQL Server.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения для экземпляра SQL Server, использовавшегося в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String)" />.</param>
        <summary>Останавливает прослушиватель для подключения, заданного в предыдущем вызове <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />.</summary>
        <returns>Значение **true**, если прослушиватель был полностью остановлен; значение **false**, если домен <see cref="T:System.AppDomain" /> был отсоединен от прослушивателя, но имеется еще хотя бы один домен <see cref="T:System.AppDomain" />, использующий этот же прослушиватель.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Метод должен вызываться для каждого <xref:System.Data.SqlClient.SqlDependency.Start%2A> вызова. Данный прослушиватель только завершает работу полностью при получении одинаковое число <xref:System.Data.SqlClient.SqlDependency.Stop%2A> запросов в качестве <xref:System.Data.SqlClient.SqlDependency.Start%2A> запросов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Этот метод вызывается из SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Произошло базовое исключение **SqlClient**.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static bool Stop (string connectionString, string queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Stop(string connectionString, string queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Stop (connectionString As String, queue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Stop(System::String ^ connectionString, System::String ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="queue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка подключения для экземпляра SQL Server, использовавшегося в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />.</param>
        <param name="queue">Очередь сервис-брокера SQL Server, использовавшаяся в предыдущем вызове <see cref="M:System.Data.SqlClient.SqlDependency.Start(System.String,System.String)" />.</param>
        <summary>Останавливает прослушиватель для подключения, заданного в предыдущем вызове <see cref="Overload:System.Data.SqlClient.SqlDependency.Start" />.</summary>
        <returns>Значение **true**, если прослушиватель был полностью остановлен; значение **false**, если домен <see cref="T:System.AppDomain" /> был отсоединен от прослушивателя, но имеется еще хотя бы один домен <see cref="T:System.AppDomain" />, использующий этот же прослушиватель.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlDependency.Stop%2A> Метод должен вызываться для каждого <xref:System.Data.SqlClient.SqlDependency.Start%2A> вызова. Данный прослушиватель только завершает работу полностью при получении одинаковое число <xref:System.Data.SqlClient.SqlDependency.Stop%2A> запросов в качестве <xref:System.Data.SqlClient.SqlDependency.Start%2A> запросов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="connectionString" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Этот метод вызывается из SQLCLR.</exception>
        <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешения на управление доступом для кода (CAS), возвращенного <see cref="T:System.Data.SqlClient.SqlClientPermission" />.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">Кроме того, произошло базовое исключение **SqlClient**.</exception>
      </Docs>
    </Member>
  </Members>
</Type>