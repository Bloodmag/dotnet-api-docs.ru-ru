<Type Name="SqlException" FullName="System.Data.SqlClient.SqlException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="982763b78dfe67e06f4b1f8f79fe8a34bb68d3a4" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlException extends System.Data.Common.DbException" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlException&#xA;Inherits DbException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlException sealed : System::Data::Common::DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Исключение, которое возникает, когда SQL Server возвращает предупреждение или ошибку. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс создается каждый раз, когда поставщик данных .NET Framework для SQL Server обнаруживает ошибку, полученной от сервера. (Ошибки на стороне клиента возникают как стандартные исключения среды CLR). <xref:System.Data.SqlClient.SqlException> всегда содержит по крайней мере один экземпляр объекта <xref:System.Data.SqlClient.SqlError>.  
  
 Сообщения с уровнем серьезности уровня 10 или менее являются информационными и обозначают неполадки, вызванные ошибками во введенных пользователем данных. Уровни важности с 11 по 16 создаются пользователем и могут исправляться пользователем. Уровни важности с 17 по 25 указывают на ошибки программного обеспечения или оборудования. При уровне 17, 18 и 19 ошибка, можно продолжать работу, хотя выполнение отдельных инструкций может невозможно.  
  
 <xref:System.Data.SqlClient.SqlConnection> остается открытым, если уровень важности не превышает 19. Когда уровень важности превышает 20, сервер обычно закрывает <xref:System.Data.SqlClient.SqlConnection>. Тем не менее, пользователь может опять открыть подключение и продолжить работу. В обоих случаях выполняющим команду методом создается <xref:System.Data.SqlClient.SqlException>.  
  
 Дополнительные сведения о посылаемых SQL Server предупреждениях и информационных сообщениях см. раздел "Устранение неполадок" электронной документации по SQL Server. <xref:System.Data.SqlClient.SqlException> Класса сопоставляется серьезность SQL Server.  
  
 Ниже приведен Общие сведения об обработке исключений. Код должен перехватывать исключения, чтобы запретить аварийное завершение работы приложения и для отображения сообщения об ошибках для пользователя.  Транзакции базы данных можно использовать для обеспечения согласованности независимо от того, что происходит в клиентском приложении (включая выход из строя) данных. Функции, например System.Transaction.TransactionScope или метод BeginTransaction (в System.Data.OleDb.OleDbConnection System.Data.ODBC.ODBCConnection и System.Data.SqlClient.SqlConnection) убедитесь, целостность данных, независимо от того, исключения вызываемых поставщиком. Транзакции может завершиться ошибкой, так перехватывать ошибки и повторите транзакцию.  
  
 Обратите внимание, что, начиная с .NET Framework 4.5 <xref:System.Data.SqlClient.SqlException> может возвращать внутреннее <xref:System.ComponentModel.Win32Exception>.  
  
 Класс исключений платформы .net Framework поставщик данных сообщает об ошибках поставщика. Например System.Data.Odbc имеет OdbcException и System.Data.OleDb имеет OleDbException System.Data.SqlClient имеет SqlException. Уровень наиболее подробные сведения об ошибках перехватывать эти исключения и использовать члены эти классы исключений для получения сведений об ошибке.  
  
 Помимо ошибок поставщика типы поставщика данных .NET Framework может вызывать исключения .NET Framework, например System.OutOfMemoryException и System.Threading.ThreadAbortException. Восстановление из этих исключений может быть невозможным.  
  
 Неверный ввод может привести к тип поставщика данных .NET Framework для вызова исключения, например System.ArgumentException или System.IndexOutOfRangeException.  Вызов метода в неверное время может вызвать System.InvalidOperationException.  
  
 Таким образом, как правило, создавать обработчик исключений, который перехватывает любые поставщика определенных исключений, а также исключения из общеязыковая среда выполнения.  Они могут многослойное следующим образом:  
  
```csharp  
try {  
   // code here  
}  
catch (SqlException odbcEx) {  
   // Handle more specific SqlException exception here.  
}  
catch (Exception ex) {  
   // Handle generic ones here.  
}  
  
```  
  
 Или:  
  
```csharp  
try {  
   // code here  
}  
catch (Exception ex) {  
   if (ex is SqlException) {  
      // Handle more specific SqlException exception here.  
   }  
   else {  
      // Handle generic ones here.  
   }  
}  
  
```  
  
 Также возможно, что сбой в потоке пула потоков без пользовательского кода в стеке вызова метода поставщика данных .NET Framework. В этом случае и при использовании асинхронных вызовах методов, необходимо зарегистрировать <xref:System.AppDomain.UnhandledException> событий для обработки этих исключений и избежать сбоя приложения.  
  
   
  
## Examples  
 Следующий пример приводит к возникновению ошибки <xref:System.Data.SqlClient.SqlException> , а затем отображает исключение.  
  
 [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlError" />
    <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public byte Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Class" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Class { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уровень важности ошибки от поставщика данных платформы .NET Framework для SQL Server.</summary>
        <value>Значение от 1 до 25, указывающее степень серьезности ошибки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщения с уровнем серьезности уровня 10 или менее являются информационными и обозначают неполадки, вызванные ошибками во введенных пользователем данных. Уровни важности с 11 по 16 создаются пользователем и могут исправляться пользователем. Уровни важности с 17 по 25 указывают на ошибки программного обеспечения или оборудования. При уровне 17, 18 и 19 ошибка, можно продолжать работу, хотя выполнение отдельных инструкций может невозможно.  
  
 <xref:System.Data.SqlClient.SqlConnection> остается открытым, если уровень важности не превышает 19. Когда уровень важности превышает 20, сервер обычно закрывает <xref:System.Data.SqlClient.SqlConnection>. Тем не менее, пользователь может опять открыть подключение и продолжить работу. В обоих случаях выполняющим команду методом создается <xref:System.Data.SqlClient.SqlException>.  
  
 Дополнительные сведения о посылаемых SQL Server предупреждениях и информационных сообщениях см. раздел "Устранение неполадок" в документации по SQL Server.  
  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.Class%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет идентификатор клиентского соединения. Дополнительные сведения см. в разделе [Трассировка данных в ADO.NET](~/docs/framework/data/adonet/data-tracing.md).</summary>
        <value>Возвращает идентификатор клиентского соединения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Образец с исходным кодом см. в разделе <xref:System.Data.SqlClient.SqlException.ToString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As SqlErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlErrorCollection ^ Errors { System::Data::SqlClient::SqlErrorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию из одного или нескольких объектов <see cref="T:System.Data.SqlClient.SqlError" />, которые предоставляют детальные сведения об исключениях, создаваемых поставщиком данных платформой .NET Framework для SQL Server.</summary>
        <value>Накопленные экземпляры класса <see cref="T:System.Data.SqlClient.SqlError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlErrorCollection> Класс всегда содержит по крайней мере один экземпляр <xref:System.Data.SqlClient.SqlError> класса.  
  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlErrorCollection>. Дополнительные сведения об ошибках ядра SQL Server см. в разделе электронной документации по SQL Server.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
        <altmember cref="T:System.Data.SqlClient.SqlError" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
        <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
        <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведениями об исключении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод `GetObjectData` загружает в объект `SerializationInfo` все данные объекта исключения, предназначенные для сериализации. В процессе десериализации исключение воссоздается из объекта `SerializationInfo`, переданного в потоке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="si" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает номер вызвавшей ошибку строки пакета команд Transact-SQL или хранимой процедуры.</summary>
        <value>Номер вызвавшей ошибку строки пакета команд Transact-SQL или хранимой процедуры.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нумерация строк начинается с 1; Если возвращается значение 0, номер строки не применим.  
  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.LineNumber%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Number" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число, определяющее тип ошибки.</summary>
        <value>Число, определяющее тип ошибки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.Number%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство. Дополнительные сведения об ошибках ядра SQL Server см. в разделе электронной документации по SQL Server.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Procedure">
      <MemberSignature Language="C#" Value="public string Procedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Procedure" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Procedure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Procedure As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Procedure { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя вызвавшей ошибку хранимой процедуры или удаленного вызова процедур (RPC).</summary>
        <value>Имя хранимой процедуры или RPC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.Procedure%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Server { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя компьютера, на котором выполняется вызвавший ошибку экземпляр SQL Server.</summary>
        <value>Имя компьютера, на котором выполняется экземпляр SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.Server%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя вызвавшего ошибку поставщика.</summary>
        <value>Имя вызвавшего ошибку поставщика.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.Source%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public byte State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte State { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает от SQL Server числовой код ошибки, предоставляющий ошибку, предупреждение или сообщение о том, что данные не обнаружены. Дополнительные сведения о расшифровке этих значений см. в электронной документации SQL Server.</summary>
        <value>Число, представляющее код ошибки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это является оболочкой для <xref:System.Data.SqlClient.SqlError.State%2A> свойства первого <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlException.Errors%2A> свойство.  
  
   
  
## Examples  
 В следующем примере отображается каждая <xref:System.Data.SqlClient.SqlError> в <xref:System.Data.SqlClient.SqlErrorCollection> коллекции.  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Data.SqlClient.SqlException" /> и содержащую идентификатор клиентского соединения (дополнительные сведения см. в разделе <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />).</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Data.SqlClient.SqlException" />.<see cref="T:System.String" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере C# показано, как попытка подключения к правильному серверу, но в результате несуществующие базы данных <xref:System.Data.SqlClient.SqlException>, которая содержит идентификатор соединения клиента:  
  
```  
using System.Data.SqlClient;  
using System;  
  
public class A {  
   public static void Main() {  
      SqlConnection connection = new SqlConnection();  
      connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true";  
      try {  
         connection.Open();  
      }  
      catch (SqlException p) {  
         Console.WriteLine("{0}", p.ClientConnectionId);  
         Console.WriteLine("{0}", p.ToString());  
      }  
      connection.Close();  
   }  
}  
```  
  
 В следующем примере Visual Basic является функциональным эквивалентом в предыдущем примере (C#):  
  
```  
Imports System.Data.SqlClient  
Imports System  
  
Module Module1  
  
    Sub Main()  
        Dim connection As New SqlConnection()  
        connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true"  
        Try  
            connection.Open()  
        Catch p As SqlException  
            Console.WriteLine("{0}", p.ClientConnectionId)  
            Console.WriteLine("{0}", p.ToString())  
        End Try  
        connection.Close()  
    End Sub  
  
End Module  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>