<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlTransaction.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac556fb9fe0560c7b212afa8b8463de0e2a74933d52.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56fb9fe0560c7b212afa8b8463de0e2a74933d52</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Represents a Transact-SQL transaction to be made in a SQL Server database.</source>
          <target state="translated">Предоставляет транзакцию Transact-SQL, которая должна быть выполнена над базой данных SQL Server.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The application creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object by calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">Приложение создает <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> путем вызова метода <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> на <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>All subsequent operations associated with the transaction (for example, committing or aborting the transaction), are performed on the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object.</source>
          <target state="translated">Все последующие операции, связанные с транзакцией (например, фиксация или прерывание транзакции), выполняются на <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> всегда следует использовать обработку исключений, при фиксации или отката <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Both <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generate an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Оба <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> создания <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> Если соединение закрывается или уже были откат транзакции на сервере.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>For more information on <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> transactions, see <bpt id="p1">[</bpt>Explicit Transactions<ept id="p1">](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)</ept> and <bpt id="p2">[</bpt>Coding Efficient Transactions<ept id="p2">](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> транзакции, в разделе <bpt id="p1">[</bpt>явные транзакции<ept id="p1">](http://msdn.microsoft.com/library/ms175127\(SQL.105\).aspx)</ept> и <bpt id="p2">[</bpt>кодированию эффективных транзакций<ept id="p2">](http://msdn.microsoft.com/library/ms187484\(SQL.105\).aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Также демонстрируется использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>The transaction is rolled back on any error, or if it is disposed without first being committed.</source>
          <target state="translated">Откат транзакции в случае любой ошибки или если она удаляется без оформления первой зафиксирована.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlTransaction">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> Обработка ошибок используется для обработки любых ошибок при попытке зафиксировать или откатить транзакцию.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>Commits the database transaction.</source>
          <target state="translated">Фиксирует транзакцию базы данных.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> method is equivalent to the Transact-SQL COMMIT TRANSACTION statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> Метод эквивалентен инструкции Transact-SQL COMMIT TRANSACTION.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>You cannot roll back a transaction once it has been committed, because all modifications have become a permanent part of the database.</source>
          <target state="translated">Невозможно восстановить прежний транзакцию после фиксации, так как все изменения уже стали постоянной частью базы данных.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>For more information, see SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения см. в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when committing or rolling back a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> всегда следует использовать обработку исключений, при фиксации или отката <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>Both <ph id="ph1">`Commit`</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Оба <ph id="ph1">`Commit`</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> приводит к возникновению ошибки <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> Если соединение закрывается или уже были откат транзакции на сервере.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения о транзакциях SQL Server см. в разделах, посвященных явным транзакциям и кодированию эффективных транзакций, в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Также демонстрируется использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Транзакция откатывается при любых ошибках.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> Обработка ошибок используется для обработки любых ошибок при попытке зафиксировать или откатить транзакцию.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Ошибка при попытке фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">Транзакция уже зафиксирована, или выполнен откат.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Commit">
          <source>The connection is broken.</source>
          <target state="translated">Соединение закрыто.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object associated with the transaction, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the transaction is no longer valid.</source>
          <target state="translated">Получает объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, связанный с транзакцией, или <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если транзакция уже недействительна.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object associated with the transaction.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, связанный с транзакцией.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>A single application may have multiple database connections, each with zero or more transactions.</source>
          <target state="translated">Одно приложение может иметь несколько подключений к базе данных, каждый из которых нуль или более транзакций.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.Connection">
          <source>This property lets you determine the connection object associated with a particular transaction created by <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">Это свойство позволяет определить объект подключения, связанный с конкретной транзакцией, созданной <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated">Указывает <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> для этой транзакции.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> for this transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IsolationLevel" /&gt;</ph> для этой транзакции.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>The default is <ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="ReadCommitted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">Параллельные транзакции не поддерживаются.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> applies to the whole transaction.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Data.IsolationLevel&gt;</ph> применяется ко всей транзакции.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения об уровнях изоляции SQL Server см. в разделе «Изоляции уровни в Database Engine» в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlTransaction">
          <source>Rolls back a transaction from a pending state.</source>
          <target state="translated">Откатывает транзакцию из состояния ожидания.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>Rolls back a transaction from a pending state.</source>
          <target state="translated">Откатывает транзакцию из состояния ожидания.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> Метод эквивалентен инструкции Transact-SQL ROLLBACK TRANSACTION.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>For more information, see SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения см. в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
          <target state="translated">Можно только быть откат транзакции из состояния ожидания (после <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> был вызван, но перед <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> вызывается).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction is rolled back in the event it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
          <target state="translated">Транзакция откатывается назад в случае его удаления перед <ph id="ph1">`Commit`</ph> или <ph id="ph2">`Rollback`</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> всегда следует использовать обработку исключений, при откате транзакции.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Объект <ph id="ph1">`Rollback`</ph> приводит к возникновению ошибки <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> Если соединение закрывается или уже были откат транзакции на сервере.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения о транзакциях SQL Server см. в разделах, посвященных явным транзакциям и кодированию эффективных транзакций, в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Также демонстрируется использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Транзакция откатывается при любых ошибках.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> Обработка ошибок используется для обработки любых ошибок при попытке зафиксировать или откатить транзакцию.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Ошибка при попытке фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">Транзакция уже зафиксирована, или выполнен откат.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback">
          <source>The connection is broken.</source>
          <target state="translated">Соединение закрыто.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The name of the transaction to roll back, or the savepoint to which to roll back.</source>
          <target state="translated">Имя транзакции, которую требуется откатить, или пиксель сохранения, до которой должен быть выполнен откат.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</source>
          <target state="translated">Откатывает транзакцию из состояния ожидания и задает транзакцию или имя пиксели сохранения.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method is equivalent to the Transact-SQL ROLLBACK TRANSACTION statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> Метод эквивалентен инструкции Transact-SQL ROLLBACK TRANSACTION.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>For more information, see "Explicit Transactions" and "Transaction Savepoints" in SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения см. в разделе «Явных транзакций» и «Точки сохранения транзакции» в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction can only be rolled back from a pending state (after <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> is called).</source>
          <target state="translated">Можно только быть откат транзакции из состояния ожидания (после <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> был вызван, но перед <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> вызывается).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction is rolled back if it is disposed before <ph id="ph1">`Commit`</ph> or <ph id="ph2">`Rollback`</ph> is called.</source>
          <target state="translated">Транзакция откатывается назад в том случае, если он удален перед <ph id="ph1">`Commit`</ph> или <ph id="ph2">`Rollback`</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> exception handling should always be used when rolling back a transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> всегда следует использовать обработку исключений, при откате транзакции.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>A <ph id="ph1">`Rollback`</ph> generates an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the connection is terminated or if the transaction has already been rolled back on the server.</source>
          <target state="translated">Объект <ph id="ph1">`Rollback`</ph> приводит к возникновению ошибки <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> Если соединение закрывается или уже были откат транзакции на сервере.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">Дополнительные сведения о транзакциях SQL Server см. в разделах, посвященных явным транзакциям и кодированию эффективных транзакций, в электронной документации по SQL Server.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">Также демонстрируется использование <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> методы.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction is rolled back on any error.</source>
          <target state="translated">Транзакция откатывается при любых ошибках.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> error handling is used to handle any errors when attempting to commit or roll back the transaction.</source>
          <target state="translated"><ph id="ph1">`Try`</ph><ph id="ph2">/</ph><ph id="ph3">`Catch`</ph> Обработка ошибок используется для обработки любых ошибок при попытке зафиксировать или откатить транзакцию.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>No transaction name was specified.</source>
          <target state="translated">Имя транзакции не задано.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">Транзакция уже зафиксирована, или выполнен откат.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
          <source>The connection is broken.</source>
          <target state="translated">Соединение закрыто.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The name of the savepoint.</source>
          <target state="translated">Имя пиксели сохранения.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</source>
          <target state="translated">Создает в транзакции пиксель сохранения, которая может быть использована для отката части транзакции, и задает имя пиксели сохранения.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method is equivalent to the Transact-SQL SAVE TRANSACTION statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> метод эквивалентен инструкции SAVE TRANSACTION Transact-SQL.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The value used in the <ph id="ph1">`savePoint`</ph> parameter can be the same value used in the <ph id="ph2">`transactionName`</ph> parameter of some implementations of the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method.</source>
          <target state="translated">Значение, используемое в <ph id="ph1">`savePoint`</ph> параметр может иметь то же значение используется в <ph id="ph2">`transactionName`</ph> параметр некоторые реализации <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>Savepoints offer a mechanism to roll back parts of transactions.</source>
          <target state="translated">Точки сохранения предоставляют механизм отката частей транзакций.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>You create a savepoint using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method, and then later call the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method to roll back to the savepoint instead of rolling back to the start of the transaction.</source>
          <target state="translated">Создание точки сохранения с помощью <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> метод и последующем вызове <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> метода для отката до точки сохранения вместо отката до начала транзакции.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>An error occurred while trying to commit the transaction.</source>
          <target state="translated">Ошибка при попытке фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The transaction has already been committed or rolled back.</source>
          <target state="translated">Транзакция уже зафиксирована, или выполнен откат.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
          <source>The connection is broken.</source>
          <target state="translated">Соединение закрыто.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>