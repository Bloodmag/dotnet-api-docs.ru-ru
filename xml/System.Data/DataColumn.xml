<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c319d3c600dc2e2da64f51a76ba9219295794b79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fc3d0-101">Представляет схему столбца в <see cref="T:System.Data.DataTable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc3d0-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-102"><xref:System.Data.DataColumn> Является основной строительный блок для создания схемы <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="fc3d0-103">Построение схемы путем добавления одного или нескольких <xref:System.Data.DataColumn> объектов <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="fc3d0-104">Дополнительные сведения см. в разделе [Добавление столбцов в таблицу данных](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="fc3d0-105">Каждый <xref:System.Data.DataColumn> имеет <xref:System.Data.DataColumn.DataType%2A> свойство, которое определяет, какие данные <xref:System.Data.DataColumn> содержит.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="fc3d0-106">Например тип данных можно ограничить целые числа, строки или десятичных знаков.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="fc3d0-107">Так как данные, содержащиеся в <xref:System.Data.DataTable> обычно объединяются в исходного источника данных, необходимо сопоставить типы данных, используемых в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="fc3d0-108">Дополнительные сведения см. в разделе [сопоставления типов данных в ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="fc3d0-109">Такие свойства, как <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, и <xref:System.Data.DataColumn.ReadOnly%2A> устанавливать ограничения на ввод и обновление данных, тем самым помогая обеспечить целостность данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="fc3d0-110">Можно также использовать <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, и <xref:System.Data.DataColumn.AutoIncrementStep%2A> свойства для управления автоматическим созданием данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="fc3d0-111">Дополнительные сведения о <xref:System.Data.DataColumn.AutoIncrement%2A> столбцы, в разделе [Создание столбцов AutoIncrement](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="fc3d0-112">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="fc3d0-113">Также можно убедиться в том, что значения в <xref:System.Data.DataColumn> уникальны, создав <xref:System.Data.UniqueConstraint> и его добавления в <xref:System.Data.ConstraintCollection> из <xref:System.Data.DataTable> к которому <xref:System.Data.DataColumn> принадлежит.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="fc3d0-114">Дополнительные сведения см. в разделе [ограничения таблиц данных](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="fc3d0-115">Для создания отношения между <xref:System.Data.DataColumn> объекты, создают <xref:System.Data.DataRelation> и добавьте его к <xref:System.Data.DataRelationCollection> из <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="fc3d0-116">Можно использовать <xref:System.Data.DataColumn.Expression%2A> свойство <xref:System.Data.DataColumn> объекта для вычисления значений в столбце или создания столбца со статистическим выражением.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="fc3d0-117">Дополнительные сведения см. в разделе [Создание столбцов выражений](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-118">В следующем примере создается <xref:System.Data.DataTable> с несколькими <xref:System.Data.DataColumn> объектов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="fc3d0-119">Этот тип является безопасным для многопоточных операций чтения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc3d0-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="fc3d0-120">Необходимо синхронизировать все операции записи.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc3d0-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-121">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-122">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> в качестве строкового типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-123">При создании <xref:System.Data.DataColumn> объект не имеет стандартного <xref:System.Data.DataColumn.ColumnName%2A> или <xref:System.Data.DataColumn.Caption%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="fc3d0-124">При добавлении его в <xref:System.Data.DataColumnCollection>, создается имя по умолчанию («Column1», «Column2» и т. д.), если имя не был назначен <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-125">В следующем примере создается новый <xref:System.Data.DataColumn>, задаются различные свойства и добавляет его в <xref:System.Data.DataColumnCollection> для <xref:System.Data.DataTable> объекта.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="fc3d0-126">Строка, представляющая имя создаваемого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="fc3d0-127">Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-128">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> как строку типа с использованием указанного имени столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-129">По умолчанию имя для столбца становится <xref:System.Data.DataColumn.Caption%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-130">В следующем примере создается новый <xref:System.Data.DataColumn> с указанным <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="fc3d0-131">Строка, представляющая имя создаваемого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="fc3d0-132">Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="fc3d0-133">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-134">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени столбца и типа данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-135">В следующем примере создается новый <xref:System.Data.DataColumn> с указанным <xref:System.Data.DataColumn.ColumnName%2A> и <xref:System.Data.DataColumn.DataType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc3d0-136">
            <paramref name="dataType" /> не был указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="fc3d0-137">Строка, представляющая имя создаваемого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="fc3d0-138">Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="fc3d0-139">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="fc3d0-140">Выражение, используемое для создания этого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="fc3d0-141">Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-142">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных и выражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-143">В следующем примере создается вычисляемый столбец.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc3d0-144">
            <paramref name="dataType" /> не был указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="fc3d0-145">Строка, представляющая имя создаваемого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="fc3d0-146">Если установлено значение <see langword="null" /> или пустая строка (""), то при добавлении объекта в коллекцию столбцов будет задано имя по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="fc3d0-147">Поддерживаемый <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="fc3d0-148">Выражение, используемое для создания этого столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="fc3d0-149">Дополнительные сведения см. в описании свойства <see cref="P:System.Data.DataColumn.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="fc3d0-150">Одно из значений перечисления <see cref="T:System.Data.MappingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-151">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataColumn" /> с использованием указанного имени, типа данных, выражения и значения, определяющего, является ли столбец атрибутом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-152">`type` Аргумент задает <xref:System.Data.DataColumn.ColumnMapping%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="fc3d0-153">Это свойство указывает, каким образом <xref:System.Data.DataColumn> сопоставлен при <xref:System.Data.DataSet> преобразуется в XML-документа.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="fc3d0-154">Например, если столбец имеет имя «fName» и содержит значение «Bob» и `type` равно `MappingType.Attribute`, XML-элемента будет выглядеть следующим образом:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="fc3d0-155">\<Name fName = «Bob» / ></span><span class="sxs-lookup"><span data-stu-id="fc3d0-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="fc3d0-156">Дополнительные сведения о сопоставлении столбцов с элементов или атрибутов см. в разделе <xref:System.Data.DataColumn.ColumnMapping%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-157">В следующем примере создается вычисляемый столбец.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fc3d0-158">
            <paramref name="dataType" /> не был указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-159">Возвращает или задает значение, указывающее на допустимость нулевых значений в этом столбце для строк, принадлежащих таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-160">
            <see langword="true" />, если нулевые значения допускаются, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fc3d0-161">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-162">В следующем примере создается новый <xref:System.Data.DataColumn> и задает его <xref:System.Data.DataColumn.AllowDBNull%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-163">Возвращает или задает значение, показывающее, увеличивать ли автоматически значение столбца для новых строк, добавляемых в таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-164">
            <see langword="true" />, если значение столбца увеличивается автоматически; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fc3d0-165">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-166">Если тип этого столбца не Int16, Int32 или Int64 когда это свойство задано, <xref:System.Data.DataColumn.DataType%2A> приводится к типу Int32.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="fc3d0-167">Исключение создается в том случае, если это вычисляемый столбец.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="fc3d0-168"><xref:System.Data.DataColumn.Expression%2A> Свойству.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="fc3d0-169">Увеличиваемое значение используется только в том случае, если значение строки для этого столбца при добавлении в коллекцию столбцов равно значению по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="fc3d0-170">Можно создать новую строку, используя <xref:System.Data.DataRow.ItemArray%2A> свойство <xref:System.Data.DataRow> класса и передавая массив значений.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="fc3d0-171">Это может стать проблемой для столбца с его <xref:System.Data.DataColumn.AutoIncrement%2A> значение `true`, так как его значение формируется автоматически.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="fc3d0-172">Для использования <xref:System.Data.DataRow.ItemArray%2A> свойство, в месте `null` в положение столбца в массиве.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="fc3d0-173">Дополнительные сведения см. в разделе <xref:System.Data.DataRow.ItemArray%2A> свойство <xref:System.Data.DataRow> класса.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="fc3d0-174">Если типом столбца является <xref:System.Data.SqlTypes.SqlInt16> или <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> не будет работать.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="fc3d0-175">Вместо этого используйте Int16 или Int32.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="fc3d0-176">Если типом столбца является <xref:System.Data.SqlTypes.SqlInt64> или <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> будет работать только частично.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="fc3d0-177">Вместо этого используйте Int64 или десятичный разделитель.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="fc3d0-178">Когда <xref:System.Data.DataColumn.AutoIncrementStep%2A> значение добавляется в текущее значение подавить проверку переполнения.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-179">В следующем примере задается <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, и <xref:System.Data.DataColumn.AutoIncrementStep%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-180">Столбец является вычисляемым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-181">Возвращает или задает начальное значение для столбца, свойству которого <see cref="P:System.Data.DataColumn.AutoIncrement" /> задано значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="fc3d0-182">Значение по умолчанию — 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-183">Начальное значение для функции <see cref="P:System.Data.DataColumn.AutoIncrement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-184">В следующем примере задается <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, и <xref:System.Data.DataColumn.AutoIncrementStep%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-185">Возвращает или задает шаг приращения для столбца, свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> которого задано значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-186">Число, на которое автоматически увеличивается значение столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="fc3d0-187">Значение по умолчанию — 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-188">В следующем примере задается <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, и <xref:System.Data.DataColumn.AutoIncrementStep%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-189">Заданное значение равно нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-190">Возвращает или задает заголовок для столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-191">Заголовок столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="fc3d0-192">Если не установлено, возвращает значение <see cref="P:System.Data.DataColumn.ColumnName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-193">Можно использовать <xref:System.Data.DataColumn.Caption%2A> свойство для отображения описательный или понятное имя <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-194">В следующем примере создается новый <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="fc3d0-195">Затем добавляется три <xref:System.Data.DataColumn> объектов <xref:System.Data.DataColumnCollection> и задает <xref:System.Data.DataColumn.Caption%2A> свойства каждого <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-196">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-197">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-198">Возвращает или задает <see cref="T:System.Data.MappingType" /> столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-199">Одно из значений перечисления <see cref="T:System.Data.MappingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-200"><xref:System.Data.DataColumn.ColumnMapping%2A> Свойство определяет, каким образом <xref:System.Data.DataColumn> сопоставлен при <xref:System.Data.DataSet> сохраняется в виде XML-документа с помощью <xref:System.Data.DataSet.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="fc3d0-201">Например если <xref:System.Data.DataColumn> называется «customerID» и его <xref:System.Data.DataColumn.ColumnMapping%2A> свойству `MappingType.Element`, значение столбца производит следующий XML-код:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="fc3d0-202">Тем не менее если тот же столбец сопоставляется `MappingType.Attribute`, создается следующий XML-код:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="fc3d0-203">Используйте <xref:System.Data.DataColumn.%23ctor%2A> конструктор, который содержит `type` аргумент для указания того, как <xref:System.Data.DataColumn> сопоставлен при его <xref:System.Data.DataSet> преобразуется в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="fc3d0-204"><xref:System.Data.DataColumn.ColumnMapping%2A> Свойство соответствует свойству аргумента конструктора `type`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-205">В следующем примере задается <xref:System.Data.DataColumn.ColumnMapping%2A> новое свойство типа <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-206">Возвращает или задает имя столбца в <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-207">Имя столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-208">Когда <xref:System.Data.DataColumn> будет создан, он не имеет <xref:System.Data.DataColumn.ColumnName%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="fc3d0-209">Тем не менее, когда <xref:System.Data.DataColumn> добавляется <xref:System.Data.DataColumnCollection> для <xref:System.Data.DataTable> объекта, ему присваивается имя по умолчанию («Column1», «Column2» и т. д.).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="fc3d0-210">По умолчанию <xref:System.Data.DataColumn.Caption%2A> имеет значение <xref:System.Data.DataColumn.ColumnName%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-211">Возвращает следующие примеры <xref:System.Data.DataColumn.ColumnName%2A> для каждого столбца в каждой таблице в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="fc3d0-212">В примере также показано создание <xref:System.Data.DataColumn> с новым <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-213">Значение свойства равно <see langword="null" /> или пустой строке, и столбец принадлежит коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="fc3d0-214">Столбец с таким именем уже существует в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="fc3d0-215">Сравнение имени выполняется без учета регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-216">Возвращает или задает тип данных, хранимых в столбце.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-217">Объект <see cref="T:System.Type" />, представляющий тип данных столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-218">Параметр <xref:System.Data.DataColumn.DataType%2A> значение очень важно для обеспечения правильного создания и обновления данных в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="fc3d0-219"><xref:System.Data.DataColumn.DataType%2A> Свойство поддерживает следующие базовые типы данных .NET Framework:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="fc3d0-220">а также следующий тип массива:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="fc3d0-221">При изменении этого свойства после столбца начал хранение данных, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="fc3d0-222">Если <xref:System.Data.DataColumn.AutoIncrement%2A> равно `true` перед установкой <xref:System.Data.DataColumn.DataType%2A> свойство и попробуйте установить тип, к чему-либо, кроме целого числа, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc3d0-223">Столбец типа данных `Byte[]` требует специальной обработки в определенных случаях, так как в отличие от базовых типов данных .NET Framework, она является ссылочным типом данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="fc3d0-224">Если столбец типа данных `Byte[]` используется в качестве <xref:System.Data.DataTable.PrimaryKey%2A>, или как <xref:System.Data.DataView.Sort%2A> или <xref:System.Data.DataView.RowFilter%2A> ключа для <xref:System.Data.DataView>, любое изменение значения столбца должен включать назначение `Byte[]` значение столбца в отдельности экземпляры `Byte[]` объекта.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="fc3d0-225">Это назначение необходимо для вызова обновления внутренних индексов, используемых при сортировке, фильтрации и операциях с первичным ключом.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="fc3d0-226">Это продемонстрировано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="fc3d0-227">Несмотря на то, что можно определить столбец как тип данных, отличный от базовых типов данных .NET Framework и `Byte[]`, такой столбец будет рассматриваться как определяемый пользователем тип, накладываются следующие ограничения использования.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="fc3d0-228">(Дополнительные сведения об определяемых пользователем типов см. в разделе [Создание и типы Using User-Defined](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="fc3d0-229">Столбец не может быть частью <xref:System.Data.DataView.RowFilter%2A> или <xref:System.Data.DataTable.Select%2A> выражение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="fc3d0-230">Если столбец используется в качестве <xref:System.Data.DataTable.PrimaryKey%2A>, или как <xref:System.Data.DataView.Sort%2A> или <xref:System.Data.DataView>, он должен рассматриваться как неизменяемое поле; данные столбца не должно меняться после его добавления в таблицу.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="fc3d0-231">Его <xref:System.Data.DataColumn.ColumnMapping%2A> могут быть заданы только `MappingType.Element`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="fc3d0-232">Класса, который реализует тип данных столбца должен быть должен быть помечен атрибутом <xref:System.SerializableAttribute>, и при необходимости реализовать <xref:System.Runtime.Serialization.ISerializable> или <xref:System.Xml.Serialization.IXmlSerializable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="fc3d0-233">Поддержка отслеживания изменений ограничена.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-233">Support for change tracking is limited.</span></span> <span data-ttu-id="fc3d0-234">Использовать <xref:System.Data.DataTable> механизм отслеживания изменений для класса, класс, реализующий тип данных столбца должен или реализовывать <xref:System.ComponentModel.IChangeTracking> интерфейс или перенос ответственности за информацией о том, <xref:System.Data.DataRow> при значение столбца было изменения, либо посредством вызова <xref:System.Data.DataRow.SetModified%2A> в строке или назначив объект значение столбца объект отдельно экземпляры столбца значение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-235">В следующем примере добавляется несколько типов данных для столбцов <xref:System.Data.DataTable>, а затем добавляет одну строку в таблицу.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-236">В столбце уже содержатся данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-237">Возвращает или задает <see langword="DateTimeMode" /> для столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-238">
            <see cref="T:System.Data.DataSetDateTime" /> для указанного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-239"><xref:System.Data.DataColumn.DateTimeMode%2A> Не может быть изменено после строки добавляются <xref:System.Data.DataColumn>, за исключением изменения из <xref:System.Data.DataSetDateTime.Unspecified> и <xref:System.Data.DataSetDateTime.UnspecifiedLocal> или наоборот.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="fc3d0-240">Изменения из `UnspecifiedLocal` для `Unspecified` и наоборот допустимы, так как разница между этими вариантами только во время сериализации и не влияет на хранилище.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-241">Возвращает или задает значение по умолчанию для столбца при создании новых строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-242">Значение, соответствующее <see cref="P:System.Data.DataColumn.DataType" /> столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-243">Значение по умолчанию является значение, которое автоматически назначается для столбца при <xref:System.Data.DataRow> создается (например, Дата и время, когда <xref:System.Data.DataRow> был создан.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="fc3d0-244">Когда <xref:System.Data.DataColumn.AutoIncrement%2A> имеет значение true, может существовать без значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="fc3d0-245">Можно создать новую строку, используя <xref:System.Data.DataRow.ItemArray%2A> свойство <xref:System.Data.DataRow> класса и передачей методу массив значений.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="fc3d0-246">Это может стать проблемой для столбца со значением по умолчанию, так как его значение формируется автоматически.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="fc3d0-247">Для использования <xref:System.Data.DataRow.ItemArray%2A> свойства такого столбца поместить `null` в положение столбца в массиве.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="fc3d0-248">Дополнительные сведения см. в описании свойства <xref:System.Data.DataRow.ItemArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-249">В следующем примере создается несколько <xref:System.Data.DataColumn> объекты, которые имеют разные типы данных и устанавливает соответствующие стандартные значения для каждого столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fc3d0-250">При добавлении строки значение по умолчанию не является экземпляром типа данных столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-251">Возвращает или задает выражение, используемое для фильтрации строк, расчета значений в столбце либо для создания составного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-252">Выражение, используемое для расчета значений столбца либо создания составного столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="fc3d0-253">Возвращаемый тип выражения определяется с помощью <see cref="P:System.Data.DataColumn.DataType" /> столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-254">Один из способов использования <xref:System.Data.DataColumn.Expression%2A> свойство заключается в создании вычисляемых столбцов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="fc3d0-255">Например чтобы вычислить значения суммы налогов, цену за единицу умножается налога определенного региона.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="fc3d0-256">Поскольку налоговые ставки различаться для разных регионов, невозможно поместить одну ставку налога в столбец; Вместо этого значение вычисляется с помощью <xref:System.Data.DataColumn.Expression%2A> свойства, как показано в коде Visual Basic в следующем разделе:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="fc3d0-257">DataSet1.Tables("Products"). Columns("Tax"). Выражение = «UnitPrice \* 0.086»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="fc3d0-258">Второй способ использования — для создания столбца со статистическим выражением.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="fc3d0-259">Подобно расчетному значению, составное выполняет операцию на основании полный набор строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="fc3d0-260">Простым примером является для подсчета числа строк, возвращаемых в наборе.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="fc3d0-261">Это метод, который используется для подсчета количества транзакций, завершенных конкретного менеджера по продажам, как показано в этом коде Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="fc3d0-262">Синтаксис выражений</span><span class="sxs-lookup"><span data-stu-id="fc3d0-262">Expression Syntax</span></span>  
 <span data-ttu-id="fc3d0-263">При создании выражения используйте <xref:System.Data.DataColumn.ColumnName%2A> свойство для ссылки на столбцы.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="fc3d0-264">Например если <xref:System.Data.DataColumn.ColumnName%2A> за один столбец «Цена» и другой «Quantity», выражение будет следующим:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="fc3d0-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="fc3d0-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc3d0-266">Если столбец используется в выражении, выражение считается с зависимостями от этого столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="fc3d0-267">Если зависимый столбец переименован или удален, исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="fc3d0-268">При обращении к столбец неработающие теперь выражение будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="fc3d0-269">При создании выражения для фильтра необходимо заключите строки в одинарные кавычки:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="fc3d0-270">«LastName = «Jones»»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="fc3d0-271">Если имя столбца содержит символы, отличные от буквенно-цифровых или начинается с цифры или (регистр не учитывается) соответствует любому из следующих зарезервированных слов, необходима специальная обработка, как описано в следующих абзацах.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="fc3d0-272">И</span><span class="sxs-lookup"><span data-stu-id="fc3d0-272">And</span></span>  
  
 <span data-ttu-id="fc3d0-273">Между</span><span class="sxs-lookup"><span data-stu-id="fc3d0-273">Between</span></span>  
  
 <span data-ttu-id="fc3d0-274">Дочерний</span><span class="sxs-lookup"><span data-stu-id="fc3d0-274">Child</span></span>  
  
 <span data-ttu-id="fc3d0-275">False</span><span class="sxs-lookup"><span data-stu-id="fc3d0-275">False</span></span>  
  
 <span data-ttu-id="fc3d0-276">Увеличение</span><span class="sxs-lookup"><span data-stu-id="fc3d0-276">In</span></span>  
  
 <span data-ttu-id="fc3d0-277">Является</span><span class="sxs-lookup"><span data-stu-id="fc3d0-277">Is</span></span>  
  
 <span data-ttu-id="fc3d0-278">Like</span><span class="sxs-lookup"><span data-stu-id="fc3d0-278">Like</span></span>  
  
 <span data-ttu-id="fc3d0-279">Not</span><span class="sxs-lookup"><span data-stu-id="fc3d0-279">Not</span></span>  
  
 <span data-ttu-id="fc3d0-280">Null</span><span class="sxs-lookup"><span data-stu-id="fc3d0-280">Null</span></span>  
  
 <span data-ttu-id="fc3d0-281">Или</span><span class="sxs-lookup"><span data-stu-id="fc3d0-281">Or</span></span>  
  
 <span data-ttu-id="fc3d0-282">Родительский</span><span class="sxs-lookup"><span data-stu-id="fc3d0-282">Parent</span></span>  
  
 <span data-ttu-id="fc3d0-283">Да</span><span class="sxs-lookup"><span data-stu-id="fc3d0-283">True</span></span>  
  
 <span data-ttu-id="fc3d0-284">Если имя столбца не соответствует одной из указанных выше условий, оно должно быть заключено в либо в квадратные скобки или «'» кавычки (апостроф).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="fc3d0-285">Например чтобы использовать столбец с именем «Column #» в выражении, можно написать либо» [столбца #]»:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="fc3d0-286">Общее \* [Column #]</span><span class="sxs-lookup"><span data-stu-id="fc3d0-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="fc3d0-287">или "\`столбец #'»:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="fc3d0-288">Общее \* \`столбца # "</span><span class="sxs-lookup"><span data-stu-id="fc3d0-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="fc3d0-289">Если имя столбца заключено в квадратные скобки, то любое "]" и "\\" символов (но не другие символы), в нем необходимо экранировать путем добавления перед обратной косой черты («\\») символов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="fc3d0-290">При имя столбца заключено в символы грависом затем он не должны содержать символы апостроф в нем.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="fc3d0-291">Например, столбец с именем «[столбец]\\» будет записан:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="fc3d0-292">Общее \* [столбца [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="fc3d0-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="fc3d0-293">или</span><span class="sxs-lookup"><span data-stu-id="fc3d0-293">or</span></span>  
  
 <span data-ttu-id="fc3d0-294">Общее \* \`[столбец]\\`</span><span class="sxs-lookup"><span data-stu-id="fc3d0-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="fc3d0-295">Пользовательские значения</span><span class="sxs-lookup"><span data-stu-id="fc3d0-295">User-Defined Values</span></span>  
 <span data-ttu-id="fc3d0-296">Определяемые пользователем значения могут использоваться в выражениях для сравнения со значениями столбцов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="fc3d0-297">Строковые значения должны быть заключены в одинарные кавычки (и каждая одинарная кавычка в значении строки должны экранироваться путем ее добавления с другой одинарной кавычкой).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="fc3d0-298">Значения даты должны быть заключены в знаки фунта (#) или одинарные кавычки (') в зависимости от поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="fc3d0-299">Десятичные знаки и экспоненциальное представление чисел, допустимых для числовых значений.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="fc3d0-300">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-300">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-301">«FirstName = «John»»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="fc3d0-302">«Цена < = 50,00»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="fc3d0-303">«Дата рождения < # #1/31/82»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="fc3d0-304">Для столбцов, содержащих значения перечисления привести значение типа integer.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="fc3d0-305">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-305">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-306">«EnumColumn = 5»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="fc3d0-307">Синтаксический анализ выражения литералов</span><span class="sxs-lookup"><span data-stu-id="fc3d0-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="fc3d0-308">Все литеральные выражения должны быть выражены в языковом стандарте инвариантного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="fc3d0-309">Когда `DataSet` выполняет синтаксический анализ и преобразует литеральные выражения, она всегда использует инвариантные, а не текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="fc3d0-310">Строковые литералы идентифицируются при наличии в одинарные кавычки значение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="fc3d0-311">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-311">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-312">«John»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-312">'John'</span></span>  
  
 <span data-ttu-id="fc3d0-313">`Boolean` литералы являются true и false; они не заключены в кавычки в выражениях.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="fc3d0-314">`Integer` литералы [+-]? [0-9] + рассматриваются как `System.Int32`, `System.Int64` или `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="fc3d0-315">`System.Double` может привести к потере точности в зависимости от того как большое число.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="fc3d0-316">Например, если число в литерале 2147483650 `DataSet` сначала попытается выполнить синтаксический анализ числа в виде `Int32`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="fc3d0-317">Это не будет выполнено, так как число слишком велик.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="fc3d0-318">В этом случае `DataSet` выполняет синтаксический анализ числа в виде `Int64`, которая будет выполнена успешно.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="fc3d0-319">Если литерал был ряд больше, чем максимальное значение Int64, `DataSet` выполняет синтаксический анализ литерала с помощью `Double`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="fc3d0-320">Реальные литералы в экспоненциальном представлении, например 4.42372E-30, анализируются с помощью `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="fc3d0-321">Реальные литералы без экспоненциальное представление чисел, но с десятичной запятой, рассматриваются как `System.Decimal`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="fc3d0-322">Если это число превышает максимальное и минимальное значения, поддерживаемые `System.Decimal`, а затем анализируется как `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="fc3d0-323">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-323">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-324">142526.144524 будут преобразованы в `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="fc3d0-325">345262.78036719560925667 будет рассматриваться `Double`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="fc3d0-326">Операторы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-326">Operators</span></span>  
 <span data-ttu-id="fc3d0-327">Объединение доступна с использованием логического AND, OR, операторы и NOT.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="fc3d0-328">Можно использовать круглые скобки для группировки предложений и задания приоритета.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="fc3d0-329">Оператор AND имеет приоритет над другими операторами.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="fc3d0-330">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-330">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-331">(LastName = 'Smith' "или" LastName = «Jones») И «имя» = «John»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="fc3d0-332">При создании выражений сравнения можно использовать следующие операторы:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="fc3d0-333">IN</span><span class="sxs-lookup"><span data-stu-id="fc3d0-333">IN</span></span>  
  
 <span data-ttu-id="fc3d0-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="fc3d0-334">LIKE</span></span>  
  
 <span data-ttu-id="fc3d0-335">В выражениях также поддерживаются следующие арифметические операторы:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="fc3d0-336">\+ (сложение)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="fc3d0-337">\- (вычитание)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="fc3d0-338">\* (умножение)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="fc3d0-339">/ (деление)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-339">/ (division)</span></span>  
  
 <span data-ttu-id="fc3d0-340">% (модуль)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="fc3d0-341">Операторы строки</span><span class="sxs-lookup"><span data-stu-id="fc3d0-341">String Operators</span></span>  
 <span data-ttu-id="fc3d0-342">Для объединения строк, используйте + символ.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="fc3d0-343">Значение <xref:System.Data.DataSet.CaseSensitive%2A> свойство <xref:System.Data.DataSet> класса определяет, являются ли сравнение строк с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="fc3d0-344">Однако можно переопределить это значение с <xref:System.Data.DataTable.CaseSensitive%2A> свойство <xref:System.Data.DataTable> класса.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="fc3d0-345">Подстановочные знаки</span><span class="sxs-lookup"><span data-stu-id="fc3d0-345">Wildcard Characters</span></span>  
 <span data-ttu-id="fc3d0-346">Как \* и % может быть использованы в качестве подстановочных знаков в сравнении LIKE.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="fc3d0-347">Если строка в предложении LIKE содержит \* или %, эти символы должны быть заключены в квадратные скобки ([]).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="fc3d0-348">Если в предложении содержится квадратная скобка, каждый символ квадратной скобки следует заключать в квадратные скобки (например, [[] или []]).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="fc3d0-349">Подстановочный знак может быть в начале и в конце шаблона, или в конце шаблона или в начале шаблона.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="fc3d0-350">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-350">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-351">«ItemName как "* продукта\*"»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="fc3d0-352">«ItemName как "\* продукта"»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="fc3d0-353">«ItemName мне НРАВИТСЯ «продукта \*»»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="fc3d0-354">Подстановочные знаки не допускаются в середине строки.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="fc3d0-355">Например "te \* xt" не допускается.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="fc3d0-356">Ссылки на отношения родители потомки</span><span class="sxs-lookup"><span data-stu-id="fc3d0-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="fc3d0-357">Родительская таблица может ссылаться в выражении, добавляя в начало имени столбца с `Parent`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="fc3d0-358">Например `Parent.Price` ссылается на столбец в родительской таблице с именем `Price`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="fc3d0-359">Если дочерний элемент имеет более одной родительской строки, используйте Parent(RelationName). ColumnName.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="fc3d0-360">Например Parent(RelationName). Цена ссылается на столбец в родительской таблице с именем Price через отношение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="fc3d0-361">Столбец в дочерней таблице может быть на которые ссылается выражение, добавляя в начало имени столбца с `Child`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="fc3d0-362">Тем не менее так как дочернее отношение может вернуть несколько строк, необходимо включить ссылку на дочерний столбец в агрегатную функцию.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="fc3d0-363">Например `Sum(Child.Price)` вернет сумму столбца с именем `Price` в дочерней таблице.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="fc3d0-364">Если таблица имеет более одного дочернего, используется синтаксис: `Child(RelationName)`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="fc3d0-365">Например, если таблица имеет два дочерних таблицы с именами `Customers` и `Orders`и <xref:System.Data.DataRelation> объект называется `Customers2Orders`, ссылка будет выглядеть следующим образом:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="fc3d0-366">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="fc3d0-367">Агрегатные выражения</span><span class="sxs-lookup"><span data-stu-id="fc3d0-367">Aggregates</span></span>  
 <span data-ttu-id="fc3d0-368">Поддерживаются следующие составные типы:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="fc3d0-369">SUM (Sum)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="fc3d0-370">Среднее (среднее)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="fc3d0-371">Min (минимум)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="fc3d0-372">Max (максимум)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="fc3d0-373">Count (число)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-373">Count (Count)</span></span>  
  
 <span data-ttu-id="fc3d0-374">StDev (статистическое стандартное отклонение)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="fc3d0-375">Var (статистическая дисперсия).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="fc3d0-376">Статистические выражения обычно используются отношений.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="fc3d0-377">Создайте статистические выражения на основе одной из функций, перечисленных выше и столбца дочерней таблицы подробно родители-потомки ссылки на отношения в описанном выше.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="fc3d0-378">Пример:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-378">For example:</span></span>  
  
 <span data-ttu-id="fc3d0-379">AVG(child.Price)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="fc3d0-380">AVG(child(Orders2Details). Цена)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="fc3d0-381">Статистическое выражение также может выполняться на одной таблице.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="fc3d0-382">Например для суммирования значений в столбце с именем «Price»:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="fc3d0-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc3d0-384">При использовании одной таблицы для создания составного будет группировать по ее функциональность отсутствует.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="fc3d0-385">Вместо этого все строки будут отображать одинаковое значение в столбце.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="fc3d0-386">Если таблица не имеет строк, агрегатные функции возвращают `null`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="fc3d0-387">Типы данных всегда можно определить, проверив <xref:System.Data.DataColumn.DataType%2A> свойство столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="fc3d0-388">Можно также преобразовать типы данных с помощью функции Convert, приведенной в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="fc3d0-389">Статистическое выражение может применяться только к одному столбцу и другие выражения не может использоваться внутри агрегатной функции.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="fc3d0-390">Функции</span><span class="sxs-lookup"><span data-stu-id="fc3d0-390">Functions</span></span>  
 <span data-ttu-id="fc3d0-391">Также поддерживаются следующие функции:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-392">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-392">Description</span></span>|<span data-ttu-id="fc3d0-393">Преобразует определенное выражение для указанного типа .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="fc3d0-394">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-394">Syntax</span></span>|<span data-ttu-id="fc3d0-395">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="fc3d0-396">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-396">Arguments</span></span>|<span data-ttu-id="fc3d0-397">`expression` — Выражение для преобразования.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="fc3d0-398">`type` Тип .NET Framework, в который преобразуется значение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="fc3d0-399">Пример: myDataColumn.Expression="Convert (всего"System.Int32")»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="fc3d0-400">Все преобразования допустимы со следующими исключениями: `Boolean` может быть преобразован в / из `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` и самого себя только.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="fc3d0-401">`Char` может быть преобразован в / из `Int32`, `UInt32`, `String`, а только сам.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="fc3d0-402">`DateTime` может быть преобразован в / из `String` и самого себя только.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="fc3d0-403">`TimeSpan` может быть преобразован в / из `String` и самого себя только.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-404">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-404">Description</span></span>|<span data-ttu-id="fc3d0-405">Получает длину строки</span><span class="sxs-lookup"><span data-stu-id="fc3d0-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="fc3d0-406">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-406">Syntax</span></span>|<span data-ttu-id="fc3d0-407">ФУНКЦИЯ LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="fc3d0-408">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-408">Arguments</span></span>|<span data-ttu-id="fc3d0-409">`expression` -Строка для оценки.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="fc3d0-410">Пример: myDataColumn.Expression="Len(ItemName)»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-411">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-411">Description</span></span>|<span data-ttu-id="fc3d0-412">Проверяет выражение и возвращает либо проверенное выражение, либо значение замены.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="fc3d0-413">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-413">Syntax</span></span>|<span data-ttu-id="fc3d0-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="fc3d0-415">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-415">Arguments</span></span>|<span data-ttu-id="fc3d0-416">`expression` — Выражение для проверки.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="fc3d0-417">`replacementvalue` — Если выражение равно `null`, `replacementvalue` возвращается.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="fc3d0-418">Пример: myDataColumn.Expression="IsNull (цена, -1)»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-419">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-419">Description</span></span>|<span data-ttu-id="fc3d0-420">Возвращает одно из двух значений в зависимости от результата логического выражения.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="fc3d0-421">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-421">Syntax</span></span>|<span data-ttu-id="fc3d0-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="fc3d0-423">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-423">Arguments</span></span>|<span data-ttu-id="fc3d0-424">`expr` — Выражение для вычисления.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="fc3d0-425">`truepart` Значение, возвращаемое, если выражение имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="fc3d0-426">`falsepart` Значение, возвращаемое, если выражение имеет значение false.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="fc3d0-427">Пример: myDataColumn.Expression = «IIF (всего > 1000 "затраты" и "Здравствуйте")</span><span class="sxs-lookup"><span data-stu-id="fc3d0-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-428">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-428">Description</span></span>|<span data-ttu-id="fc3d0-429">Удаляет все начальные и конечные пустые символы, например \r "," \n "," \t "," "</span><span class="sxs-lookup"><span data-stu-id="fc3d0-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="fc3d0-430">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-430">Syntax</span></span>|<span data-ttu-id="fc3d0-431">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="fc3d0-432">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-432">Arguments</span></span>|<span data-ttu-id="fc3d0-433">`expression` — Выражение для усечения.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="fc3d0-434">Описание:</span><span class="sxs-lookup"><span data-stu-id="fc3d0-434">Description</span></span>|<span data-ttu-id="fc3d0-435">Возвращает подстроку указанной длины, начиная с заданной точки в строке.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="fc3d0-436">Синтаксис</span><span class="sxs-lookup"><span data-stu-id="fc3d0-436">Syntax</span></span>|<span data-ttu-id="fc3d0-437">SUBSTRING (`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="fc3d0-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="fc3d0-438">Аргументы</span><span class="sxs-lookup"><span data-stu-id="fc3d0-438">Arguments</span></span>|<span data-ttu-id="fc3d0-439">`expression` — Исходная строка для подстроки.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="fc3d0-440">`start` — Целое число, которое указывает, где начинается подстрока.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="fc3d0-441">`length` — Целое число, указывающее длину подстроки.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="fc3d0-442">Пример: myDataColumn.Expression = «SUBSTRING (телефон, 7, 8)»</span><span class="sxs-lookup"><span data-stu-id="fc3d0-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc3d0-443">Вы можете сбросить <xref:System.Data.DataColumn.Expression%2A> свойства, присвойте ему значение null или пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="fc3d0-444">Если значение по умолчанию установлено на столбец выражения, всем предварительно заполненным строкам назначается значение по умолчанию после <xref:System.Data.DataColumn.Expression%2A> сброса свойства.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-445">В следующем примере создаются три столбца в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="fc3d0-446">Второй и третий столбцы содержат выражения. второй рассчитывает налог с использованием переменной ставки налога и третий добавляет результат вычисления к значению первого столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="fc3d0-447">Результирующая таблица отображается в <xref:System.Windows.Forms.DataGrid> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-448">Свойству <see cref="P:System.Data.DataColumn.AutoIncrement" /> или <see cref="P:System.Data.DataColumn.Unique" /> задано значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="fc3d0-449">При использовании функции CONVERT выражение оценивает строку, но строка не содержит представление, которое может быть преобразовано в параметр типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fc3d0-450">При использовании функции CONVERT запрошенное приведение типов невозможно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="fc3d0-451">Подробные сведения о возможном приведении см. в описании функции преобразования, приведенном в следующем разделе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc3d0-452">При использовании функции SUBSTRING аргумент начала находится вне диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="fc3d0-453">-или-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-453">-Or-</span>
          </span>
          <span data-ttu-id="fc3d0-454">При использовании функции SUBSTRING аргумент длины находится вне диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-454">When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="fc3d0-455">При использовании функции LEN или TRIM выражение не выполняет вычисление строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="fc3d0-456">Это включает выражения, которое выполняет вычисление <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-457">Возвращает коллекцию пользовательских сведений, связанных с <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-458">Коллекция <see cref="T:System.Data.PropertyCollection" /> пользовательских сведений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-459"><xref:System.Data.DataColumn.ExtendedProperties%2A> Свойство позволяет сохранять пользовательские сведения с объектом.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="fc3d0-460">Например можно сохранять время, когда данные должны обновляться.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="fc3d0-461">Расширенные свойства должны иметь тип <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="fc3d0-462">Свойства, которые не относятся к типу <xref:System.String> не сохраняются, когда <xref:System.Data.DataColumn> записывается как XML.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-463">В следующем примере добавляется настраиваемого свойства <xref:System.Data.PropertyCollection> возвращенных <xref:System.Data.DataColumn.ExtendedProperties%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="fc3d0-464">Второй пример возвращает пользовательское свойство.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-465">Возвращает или задает максимальную длину текстового столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-465">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-466">Максимальная длина столбца в символах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-466">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="fc3d0-467">Если столбец не имеет максимальной длины, значение равно –1 (по умолчанию).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-467">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-468"><xref:System.Data.DataColumn.MaxLength%2A> Свойство игнорируется для нетекстовых столбцов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="fc3d0-469">Объект <xref:System.ArgumentException> исключение возникает в том случае, если назначить <xref:System.Data.DataColumn.MaxLength%2A> столбцу не являющегося строкой.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-470">Возвращает или задает пространство имен <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-471">Пространство имен <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-472"><xref:System.Data.DataColumn.Namespace%2A> Свойство используется при чтении и записи XML-документа в <xref:System.Data.DataTable> в <xref:System.Data.DataSet> с помощью <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, или <xref:System.Data.DataSet.WriteXmlSchema%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="fc3d0-473">Пространство имен XML-документа используется для определения области атрибутов и элементов, при чтении в XML <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="fc3d0-474">Например <xref:System.Data.DataSet> со схемой чтение из документа с пространством имен «myCompany», и попытка считать данные (с <xref:System.Data.DataSet.ReadXml%2A> метод) из документа с пространством имен «theirCompany».</span><span class="sxs-lookup"><span data-stu-id="fc3d0-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="fc3d0-475">Любые данные, не относящиеся к существующей схеме будет игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-476">Пространство имен уже содержит данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-476">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="fc3d0-477">Ссылка на параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-477">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-478">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-479">Возвращает отсчитываемую от нуля позицию столбца в коллекции <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-480">Положение столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-480">The position of the column.</span>
          </span>
          <span data-ttu-id="fc3d0-481">Получает значение -1, если столбец не является членом коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-481">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-482">Следующий пример возвращает столбец имени, порядковый номер и тип данных столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-483">Возвращает или задает префикс XML, который является псевдонимом пространства имен класса <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-484">Префикс XML для пространства имен <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-485"><xref:System.Data.DataTable.Prefix%2A> Используется во всех XML-документе для определения элементов, которые принадлежат к пространству имен для <xref:System.Data.DataSet> объекта (как задано в <xref:System.Data.DataSet.Namespace%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="fc3d0-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fc3d0-486">Ссылка на параметр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-486">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-487">Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-488">Возвращает или задает значение, указывающее на допустимость изменения столбца после добавления строки в таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-489">
            <see langword="true" />, если столбец предназначен только для чтения; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-489">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fc3d0-490">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-490">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-491">В следующем примере создается <xref:System.Data.DataColumn> и задает его <xref:System.Data.DataColumn.ReadOnly%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-492">Свойству задано значение <see langword="false" /> в вычисляемом столбце.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-492">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="fc3d0-493">Заданный порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-493">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc3d0-494">Изменяет порядковый номер или положение <see cref="T:System.Data.DataColumn" /> на указанный порядковый номер или положение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-495">Изменяет порядковый номер или положение <xref:System.Data.DataColumn> на указанный порядковый номер или положение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="fc3d0-496">Если порядковый номер меньше 0 или больше существующего количества столбцов – 1 (больше, чем порядковый номер последнего столбца) затем недопустимое <xref:System.ArgumentException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="fc3d0-497">При изменении порядковый номер столбца, столбец перемещается в новое положение в коллекции столбцов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="fc3d0-498">Какие-либо столбцы между предыдущей и новый порядковый номер будет изменится, чтобы компенсировать новый порядковый номер столбца.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-499">Возвращает <see cref="T:System.Data.DataTable" />, которому принадлежит столбец.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-500">
            <see cref="T:System.Data.DataTable" />, к которой принадлежит <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-501">В следующем примере возвращается родительской таблицы <xref:System.Data.DataColumn> через его <xref:System.Data.DataColumn.Table%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-502">Возвращает свойство <see cref="P:System.Data.DataColumn.Expression" /> столбца, если оно существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc3d0-503">Значение <see cref="P:System.Data.DataColumn.Expression" />, если свойство задано; в противном случае — свойство <see cref="P:System.Data.DataColumn.ColumnName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc3d0-504">В следующем примере используется <xref:System.Data.DataColumn.ToString%2A> свойство для возврата строки по умолчанию для каждого члена коллекции <xref:System.Data.DataColumn> объектов.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc3d0-505">Возвращает или задает значение, указывающее, должны ли значения в каждой строке столбца быть уникальными.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc3d0-506">
            <see langword="true" />, если значение должно быть уникальным; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-506">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fc3d0-507">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-507">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc3d0-508">Как только это свойство меняется с false на true, ограничения unique создается на этот столбец, чтобы убедиться в том, что значения уникальны.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc3d0-509">В следующем примере создается новый <xref:System.Data.DataColumn>, задает его свойства и добавляет его в коллекцию столбцов таблицы.</span><span class="sxs-lookup"><span data-stu-id="fc3d0-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc3d0-510">Столбец является вычисляемым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc3d0-510">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>