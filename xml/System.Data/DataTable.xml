<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTable.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07ae2d2ca49781b6fbea2101bb4f63426c09bee1b1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae2d2ca49781b6fbea2101bb4f63426c09bee1b1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Represents one table of in-memory data.</source>
          <target state="translated">Представляет одну таблицу данных в памяти.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is a central object in the ADO.NET library.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Является центральным объектом библиотеки ADO.NET.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Other objects that use the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> include the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>.</source>
          <target state="translated">Другие объекты, использующие <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> включают <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When accessing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, note that they are conditionally case sensitive.</source>
          <target state="translated">При доступе к <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объектов, обратите внимание, что они условию с учетом регистра.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For example, if one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">Например, если один <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> называется «mydatatable» и другой называется «Mydatatable», строка, используемая для поиска одной из таблиц рассматривается с учетом регистра.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">Тем не менее если существует «mydatatable» и «Mydatatable» нет, строка поиска считается без учета регистра.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can contain two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have the same <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property value but different <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property values.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> может содержать два <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объектов с одинаковым <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> значение свойства, но разные <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> значений свойств.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about working with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о работе с <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объектов, в разделе <bpt id="p1">[</bpt>создание таблицы данных<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If you are creating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> programmatically, you must first define its schema by adding <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph> (accessed through the <ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property).</source>
          <target state="translated">При создании <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> программно, необходимо сначала определить его схему, добавив <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> объектов <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph> (через <ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> свойство).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about adding <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects, see <bpt id="p1">[</bpt>Adding Columns to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о добавлении <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> объектов, в разделе <bpt id="p1">[</bpt>Добавление столбцов в таблицу данных<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To add rows to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you must first use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object.</source>
          <target state="translated">Для добавления строк к <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, сначала необходимо с помощью <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> метод для возврата нового <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method returns a row with the schema of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, as it is defined by the table's <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> Возвращает строку со схемой <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, как оно определено в таблице <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The maximum number of rows that a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can store is 16,777,216.</source>
          <target state="translated">Максимальное число строк, которые <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> можно хранилища равно 16 777 216.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Data to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Добавление данных в таблицу данных<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> objects that can be used to ensure the integrity of the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Также содержит коллекцию <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> объекты, которые могут использоваться для обеспечения целостности данных.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>ограничения таблиц данных<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>There are many <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> events that can be used to determine when changes are made to a table.</source>
          <target state="translated">Существует много <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> события, которые можно использовать для определения, когда изменения вносятся в таблицу.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These include <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>.</source>
          <target state="translated">К ним относятся <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph> и <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about the events that can be used with a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о событиях, которые можно использовать с <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, some of the read/write properties are set to initial values.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> создается, некоторые из для чтения записи свойствам присваиваются начальные значения.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor topic.</source>
          <target state="translated">Список этих значений см. в разделе <ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph> разделе конструктор.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects inherit from <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, and support the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for .NET Framework remoting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> И <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объекты наследуют от <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>и поддерживают <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> интерфейс для удаленного взаимодействия .NET Framework.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These are the only ADO.NET objects that you can use for .NET Framework remoting.</source>
          <target state="translated">Это единственные объекты ADO.NET, которые можно использовать для удаленного взаимодействия .NET Framework.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects and one <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> object, and adds the new objects to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">В следующем примере создается два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объектов и один <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> и добавляет новые объекты для <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The tables are then displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">Затем эти таблицы отобразятся в <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> элемента управления.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This sample demonstrates how to create a DataTable manually with specific schema definitions:</source>
          <target state="translated">В этом примере показано, как вручную создать объект DataTable с определенной схеме определения:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create multiple DataTables and define the initial columns.</source>
          <target state="translated">Создайте несколько таблиц данных и определите начальные столбцы.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the table constraints.</source>
          <target state="translated">Создание ограничения таблицы.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Insert the values and display the tables.</source>
          <target state="translated">Введите значения и отображения таблиц.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the expression columns and display the tables.</source>
          <target state="translated">Создание столбцов выражений и отображения таблиц.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>.</source>
          <target state="translated">Проекты C# и Visual Basic с этим образцом кода можно найти на <bpt id="p1">[</bpt>примеры кода от разработчиков<ept id="p1">](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">Этот тип является безопасным для многопоточных операций чтения.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>You must synchronize any write operations.</source>
          <target state="translated">Необходимо синхронизировать все операции записи.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with no arguments.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, не передавая ему никаких аргументов.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The constructor sets initial values for all properties of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated">Конструктор задает начальные значения для всех свойств <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following table shows the properties and their default values.</source>
          <target state="translated">В следующей таблице показаны свойства и их значения по умолчанию.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> создается следующие начальные значения задаются свойства чтения и записи.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Property</source>
          <target state="translated">Свойство.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Default value</source>
          <target state="translated">Значение по умолчанию</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, if it belongs to one.</source>
          <target state="translated">То же, что родительский <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, если она относится к одному.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
          <target state="translated">В противном случае — значение <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Empty string ("")</source>
          <target state="translated">Пустая строка (»»)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>Locale<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Языковой стандарт<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (returned by the <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> property); if no parent exists, the default is the current system <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
          <target state="translated">То же, что родительский <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> объекта <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (возвращенный <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> свойство); Если отсутствия родительского элемента, значение по умолчанию — текущая система <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>MinimumCapacity<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Значение MinimumCapacity<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>50 rows.</source>
          <target state="translated">50 строк.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">Можно изменить значение любого из этих свойств, вызвав его отдельно.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>, and displays it in a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">В следующем примере создается новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> с <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>и отображает его в <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> элемента управления.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The name to give the table.</source>
          <target state="translated">Имя, задаваемое таблице.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">Если значение параметра <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> — <ph id="ph1">&lt;see langword="null" /&gt;</ph> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the specified table name.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с указанным именем таблицы.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and displays it in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и отображает его в <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> элемента управления.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">Данные, необходимые для сериализации или десериализации объекта.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">Источник и назначение данного сериализованного потока.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> со свойствами <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> constructor is required for <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">Эта реализация <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> конструктор необходим для <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The name to give the table.</source>
          <target state="translated">Имя, задаваемое таблице.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">Если значение параметра <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> — <ph id="ph1">&lt;see langword="null" /&gt;</ph> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Пространство имен для XML-представления данных, хранящихся в <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class using the specified table name and namespace.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с заданными именем таблицы и пространством имен.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.AcceptChanges">
          <source>Commits all the changes made to this table since the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Фиксирует все изменения, внесенные в таблицу после последнего вызова метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object still in edit mode successfully ends its edits.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> вызывается, каждый <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> объект остается в режиме редактирования успешно завершает его изменения.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> also changes: all <ph id="ph2">`Added`</ph> and <ph id="ph3">`Modified`</ph> rows become <ph id="ph4">`Unchanged`</ph>, and <ph id="ph5">`Deleted`</ph> rows are removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> Также изменяется: все <ph id="ph2">`Added`</ph> и <ph id="ph3">`Modified`</ph> строками стать <ph id="ph4">`Unchanged`</ph>, и <ph id="ph5">`Deleted`</ph> удаляются строки.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method is generally called on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> after you attempt to update the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> Метод обычно вызывается при <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> после попытки обновления <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> с помощью <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The following example tests each table for errors.</source>
          <target state="translated">В следующем примере проверка всех таблиц на наличие ошибок.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>If the table's errors can be reconciled (by passing it to an undefined function), <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called; otherwise, <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Если ошибки могут быть согласованы (путем передачи его неопределенной функции), <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> вызван; в противном случае — <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> вызывается.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Начинает инициализацию <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используемого в форме или другим компонентом.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Инициализация происходит во время выполнения.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Этот метод применяется в среде разработки Visual Studio .NET для запуска инициализации компонента, используемого в форме или другим компонентом.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> Метод завершает инициализацию.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">С помощью <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> методы предотвращает использование до полной инициализации элемента управления.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Turns off notifications, index maintenance, and constraints while loading data.</source>
          <target state="translated">Отключает уведомления, ведение индексов и ограничения в процессе загрузки данных.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> в сочетании с <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.CaseSensitive">
          <source>Indicates whether string comparisons within the table are case-sensitive.</source>
          <target state="translated">Показывает, учитывается ли регистр при сравнении строк в таблице.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comparison is case-sensitive; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если при сравнении регистр учитывается; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The default is set to the parent <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph> property, or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> was created independently of a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию устанавливается равным значению свойства <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> родительского объекта <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph>, или значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>, если объект <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> создавался независимо от класса <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property affects string comparisons in sorting, searching, and filtering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> Свойство влиять на сравнения строк в сортировку, поиск и фильтрация.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method twice on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">В следующем примере вызывается <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> вызывается дважды для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The first time, the <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the second, to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">В первый раз <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> свойству <ph id="ph2">`false`</ph>, во-вторых, для <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ChildRelations">
          <source>Gets the collection of child relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Получает коллекцию дочерних отношений для объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the child relations for the table.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>, содержащая дочерние отношения для таблицы.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">Если отсутствуют объекты <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> возвращается пустая коллекция.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> defines the relationship between two tables.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> определяет связь между двумя таблицами.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Typically, two tables are linked through a single field that contains the same data.</source>
          <target state="translated">Как правило две таблицы связаны с помощью одного поля, содержит те же данные.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>For example, a table which contains address data may have a single field containing codes that represent countries/regions.</source>
          <target state="translated">Например таблица с адресными данными может иметь одно поле с кодами, представляющими странах и регионах.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</source>
          <target state="translated">Вторая таблица, содержащая данные страны или региона будет одно поле, содержащий код, который идентифицирует страны или региона, и именно этот код, который вставляется в соответствующее поле в первой таблице.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>, содержит по крайней мере четыре фрагмента данных: (1) имя первой таблицы, (2) имя столбца первой таблицы, (3) имя второй таблицы и (4) имя столбца во второй таблице.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property to return each child <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> свойство для возврата каждого дочернего <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> в <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">Каждое отношение используется в качестве аргумента в <ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> для возвращения массива строк.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">Затем выводит значение каждого столбца в строке.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clear">
          <source>Clears the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> of all data.</source>
          <target state="translated">Очищает <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> от всех данных.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>All rows in all tables are removed.</source>
          <target state="translated">Удаляются все строки во всех таблицах.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</source>
          <target state="translated">Если таблица имеет назначенные дочерние отношения, приводящие дочерние строки будут изолированы, создается исключение.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is bound to an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, calling <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> raises the <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> привязан к <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, вызов <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> или <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> вызывает <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">Чтобы избежать такой ситуации, просмотрите каждую таблицу и удалить каждую строку одновременно.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be processed before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> для создания новых строк, строки должны быть обработаны перед вызовом метода <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>The following example clears the table of all data.</source>
          <target state="translated">В следующем примере удаляются все данные в таблице.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>Clones the structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, including all <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> schemas and constraints.</source>
          <target state="translated">Копирует структуру объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, включая все схемы и ограничения <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same schema as the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Новый класс <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, имеющий ту же схему, что и текущий класс <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>If these classes have been derived, the clone will also be of the same derived classes.</source>
          <target state="translated">Если эти классы являются производными, копия также будет производным классом.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Clone creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the same structure as the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, but does not copy any data (the new <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> will not contain any <ph id="ph4">`DataRows`</ph>).</source>
          <target state="translated">Создает новый клон <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> ту же структуру, что и исходный <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, данные не копируются, но (новый <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> не будет содержать <ph id="ph4">`DataRows`</ph>).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>To copy both the structure and data into a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, use <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>.</source>
          <target state="translated">Чтобы скопировать структуру и данные в новую <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, используйте <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</source>
          <target state="translated">В следующем образце показано, как обновить структуры и ограничений целевой таблицы после выполнения DataTable.Clone.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The ClonedDataTable class will return a destination table and includes all the updating events.</source>
          <target state="translated">Класс ClonedDataTable возвратит целевой таблицы и включает все обновления события.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>After the clone, structure changes in the source table won’t be reflected in the destination table.</source>
          <target state="translated">После клонирования структурных изменений в исходной таблице не будут отражены в целевой таблице.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Specifically, this sample will:</source>
          <target state="translated">В частности в этом примере выполняет следующие действия:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the columns in source table.</source>
          <target state="translated">Обновление изменений для столбцов в исходной таблице.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the UniqueConstraint in source table.</source>
          <target state="translated">Обновление изменений для UniqueConstraint в исходной таблице.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the ForeignKeyConstraint in source table.</source>
          <target state="translated">Обновление изменений для ForeignKeyConstraint в исходной таблице.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>.</source>
          <target state="translated">Проекты C# и Visual Basic с этим образцом кода можно найти на <bpt id="p1">[</bpt>примеры кода от разработчиков<ept id="p1">](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>This sample shows how to modify data in a DataTable and update the data source.</source>
          <target state="translated">В этом примере показано, как изменить данные в таблице данных и обновление источника данных.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>First, create a database:</source>
          <target state="translated">Сначала создайте базу данных.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>You can now compile and run the sample.</source>
          <target state="translated">Теперь можно скомпилировать и запустить образец.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source><bpt id="p1">[</bpt>How to modify data in DataTable and update to the data source<ept id="p1">](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept> has Visual Basic and C# projects of this sample.</source>
          <target state="translated"><bpt id="p1">[</bpt>Как изменить данные в таблицу данных и обновления источника данных<ept id="p1">](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept> проектов Visual Basic и C# образца.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanged">
          <source>Occurs after a value has been changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Происходит после изменения значения указанного объекта <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanging">
          <source>Occurs when a value is being changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Происходит при изменении значения указанного объекта <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Columns">
          <source>Gets the collection of columns that belong to this table.</source>
          <target state="translated">Получает коллекцию столбцов, принадлежащих данной таблице.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects for the table.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph>, содержащая коллекцию объектов <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> для таблицы.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects exist.</source>
          <target state="translated">Если отсутствуют объекты <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> возвращается пустая коллекция.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> determines the schema of a table by defining the data type of each column.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> Определяет схему таблицы с помощью определения типа данных каждого столбца.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The following example prints each value of each row in a table using the <ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере выводится каждого значения каждой строки таблицы с помощью <ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression to compute.</source>
          <target state="translated">Вычисляемое выражение.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The filter to limit the rows that evaluate in the expression.</source>
          <target state="translated">Фильтр, ограничивающий число строк, используемых выражением.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>Computes the given expression on the current rows that pass the filter criteria.</source>
          <target state="translated">Вычисляет заданное выражение для текущих строк, отвечающих условию фильтра.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, set to the result of the computation.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, которому задан результат сравнения.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If the expression evaluates to null, the return value will be <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">Если выражение имеет значение null, возвращаемое значение будет <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The <ph id="ph1">`expression`</ph> parameter requires an aggregate function.</source>
          <target state="translated"><ph id="ph1">`expression`</ph> Параметр требует наличия статистической функции.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, the following is a legal expression:</source>
          <target state="translated">Например следующее выражение является допустимым:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>But this expression is not:</source>
          <target state="translated">Однако это выражение не равно:</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If you must perform an operation on two or more columns, you should create a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, set its <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property to an appropriate expression, and use an aggregate expression on the resulting column.</source>
          <target state="translated">Если необходимо выполнить операцию на несколько столбцов, необходимо создать <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, задайте его <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> свойства соответствующее выражение, а использовать статистическое выражение на результирующего столбца.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>In that case, given a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> with the name "total", and the <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property set to this:</source>
          <target state="translated">В этом случае заданному <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> с именем «итог» и <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> значение этого свойства:</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression argument for the <ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph> method would then be this:</source>
          <target state="translated">Аргумент выражения для <ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph> метод будет иметь это:</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The second parameter, <ph id="ph1">`filter`</ph>, determines which rows are used in the expression.</source>
          <target state="translated">Второй параметр <ph id="ph1">`filter`</ph>, определяет строки, используемые в выражении.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</source>
          <target state="translated">Например если таблица содержит столбец с именем «colDate» даты, можно ограничить строки с помощью следующего выражения:</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For rules on creating expressions for both parameters, see the <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Правила создания выражений для обоих параметров в разделе <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</source>
          <target state="translated">Следующий пример выполняет суммирование значений столбца с именем «Итог» для менеджера по продажам, идентификационный номер которого равен пяти.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Constraints">
          <source>Gets the collection of constraints maintained by this table.</source>
          <target state="translated">Получает коллекцию ограничений, содержащихся в данной таблице.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects for the table.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph>, содержащая коллекцию объектов <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> для таблицы.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects exist.</source>
          <target state="translated">Если отсутствуют объекты <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> возвращается пустая коллекция.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> restricts the action performed when a value in a column (or columns) is either deleted or updated.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> ограничивает действие, выполняемое при удалении или обновлении значения столбца (столбцов).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>Such a constraint is intended to be used with primary key columns.</source>
          <target state="translated">Такое ограничение предназначено для использования с первичными ключевыми столбцами.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</source>
          <target state="translated">В отношении "родители потомки" между двумя таблицами Удаление значения из родительской таблицы может влиять на дочерние строки в один из следующих способов.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The child rows can also be deleted (a cascading action).</source>
          <target state="translated">Дочерние строки могут быть удалены (каскадное действие).</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to null values.</source>
          <target state="translated">Значения null можно присваивать значения в дочерний столбец (или столбцы).</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to default values.</source>
          <target state="translated">Значения в дочерний столбец (или столбцы) можно задать значения по умолчанию.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An exception can be generated.</source>
          <target state="translated">Может быть создано исключение.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> becomes active when attempting to set a value in a primary key to a non-unique value.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> становится активным, при попытке задать значение в первичном ключе, не уникальное значение.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> to the collection of constraints.</source>
          <target state="translated">В следующем примере добавляется <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> к коллекции ограничений.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>Copies both the structure and data for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Копирует структуру и данные для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure (table schemas and constraints) and data as this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Новый класс <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, имеющий ту же структуру (схемы таблиц и ограничения) и данные, что и класс <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>If these classes have been derived, the copy will also be of the same derived classes.</source>
          <target state="translated">Если эти классы являются производными, то и копия также будет таким же производным классом.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> creates a new <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure and data as the original <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> создает новый <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с той же структурой и данными, как и оригинальный <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>To copy the structure to a new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, but not the data, use <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>.</source>
          <target state="translated">Чтобы скопировать структуру в новый <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, но не данные, используйте <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph> method to create a copy of the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph> метод для создания копии исходного <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The namespace name is not retained if it is inherited from a parent <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Имя пространства имен не сохраняются, если оно унаследовано из родительского <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> corresponding to the data within this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>, соответствующий данным в этой таблице <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one result set, corresponding to the source <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instance.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>, содержащий один набор результатов, который соответствует исходному экземпляру <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance.</source>
          <target state="translated">Следующее приложение командной строки создает экземпляр <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example then passes the filled <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to a procedure that calls the <ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph> method, which iterates through the results contained within the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">Затем в примере заполненный <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> процедура, которая вызывает <ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph> метод, который выполняет проход по результатам, содержащихся в <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">В этом примере в окне консоли отображаются следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>Creates a new instance of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>The new expression.</source>
          <target state="translated">Новое выражение.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DataSet">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated">Получает класс <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, к которому принадлежит данная таблица.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated">Набор <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, к которому принадлежит данная таблица.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>If a control is data bound to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and the table belongs to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can get to the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> through this property.</source>
          <target state="translated">Если элемент управления имеет данные, привязанные к <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, и таблица принадлежит к <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, можно получить <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> через это свойство.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The following example returns the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> of a given table through the <ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере возвращается родительский <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> данной таблицы через <ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DefaultView">
          <source>Gets a customized view of the table that may include a filtered view, or a cursor position.</source>
          <target state="translated">Получает настраиваемое представление таблицы, которая может включать в себя представление с фильтром или положение курсора.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph>, связанный с объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> you can use to sort, filter, and search a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> Возвращает <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> можно использовать для сортировки, фильтрации и поиска <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The following example sets a property of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> through the <ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере задается свойство <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объекта <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> через <ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The example also shows the binding of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> named "Suppliers" that includes a column named "CompanyName."</source>
          <target state="translated">Этот пример также демонстрирует привязку <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> управления <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> «поставщики», которая включает столбец с именем «CompanyName».</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>Gets or sets the expression that returns a value used to represent this table in the user interface.</source>
          <target state="translated">Возвращает или задает выражение, возвращающее значение, используемое для представления таблицы в пользовательском интерфейсе.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>The <ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> property lets you display the name of this table in a user interface.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> позволяет отображать имя этой таблицы в пользовательском интерфейсе.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DisplayExpression">
          <source>A display string.</source>
          <target state="translated">Строка отображения данных.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Завершает инициализацию <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используемого в форме или другим компонентом.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Инициализация происходит во время выполнения.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Этот метод применяется в среде разработки Visual Studio .NET для завершения инициализации компонента, используемого в форме или другим компонентом.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> Метод начинает инициализацию.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">С помощью <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> методы предотвращает использование до полной инициализации элемента управления.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndLoadData">
          <source>Turns on notifications, index maintenance, and constraints after loading data.</source>
          <target state="translated">Включает уведомления, ведение индексов и ограничения после загрузки данных.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> в сочетании с <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Gets the collection of customized user information.</source>
          <target state="translated">Получает коллекцию настраиваемых пользовательских сведений.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> that contains custom user information.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph>, содержащий настраиваемые данные пользователя.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> to add custom information to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> для добавления пользовательской информации о <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Add information with the <ph id="ph1">`Add`</ph> method.</source>
          <target state="translated">Добавление данных с <ph id="ph1">`Add`</ph> метод.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Retrieve information with the <ph id="ph1">`Item`</ph> method.</source>
          <target state="translated">Получить сведения с <ph id="ph1">`Item`</ph> метод.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Extended properties must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Расширенные свойства должны иметь тип <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Properties that are not of type String are not persisted when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is written as XML.</source>
          <target state="translated">Свойства не типа String не сохраняются при <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> записывается как XML.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>The following example adds a timestamp value to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере добавляется метка времени <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> через <ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>Checks whether initialization is in progress.</source>
          <target state="translated">Проверяет, выполняется ли инициализация.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Инициализация происходит во время выполнения.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Получает копию таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains all changes made to it since it was loaded or <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was last called.</source>
          <target state="translated">Получает копию таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, содержащую все изменения, внесенные после ее загрузки или после последнего вызова метода <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>A copy of the changes from this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no changes are found.</source>
          <target state="translated">Копия изменений из данного объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если изменения не найдены.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing a copy of all rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">Создает новый <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> содержит копию всех строк в исходной коллекции <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> , ожидающими изменениями.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">Ограничения отношений могут приводить дополнительные строки без изменений для добавления нового <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Если неизмененные строки содержат первичные ключи, соответствующие внешним ключам в измененных строках.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>The method returns <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there are no rows in the original <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> with pending changes.</source>
          <target state="translated">Метод возвращает <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> в Visual Basic), если нет ни одной строки в исходном <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> с ожидающими изменениями.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called, filtered by <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">Получает копию таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> и отфильтрованные по параметру <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>A filtered copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that can have actions performed on it, and later be merged back in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">Отфильтрованная копия таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, с которой можно работать и позднее объединить обратно с <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя метод <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> are found, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если строки с требуемым типом <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> отсутствуют, метод вернет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is used to produce a second <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object that contains only the changes introduced into the original.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> Метод используется для создания второго <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объект, содержащий только изменения, появившиеся в исходный.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">Используйте <ph id="ph1">`rowStates`</ph> аргумент, чтобы указать тип изменений, должен содержать новый объект.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Relationship constraints may cause unchanged parent rows to be included.</source>
          <target state="translated">Ограничения связи могут вызвать без изменений родительских строк для включения.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated">Экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>This method returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance containing the Web Services Description Language (WSDL) that describes the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> for Web Services.</source>
          <target state="translated">Этот метод возвращает экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, содержащий язык описания веб-служб (WSDL), который описывает объект <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> для веб-служб.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated">Экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that contain errors.</source>
          <target state="translated">Получает массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, содержащих ошибки.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that have errors.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> с ошибками.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Returns the list of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects that have <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> set.</source>
          <target state="translated">Возвращает список <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объектов, у которых <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> значение.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>For example, errors can occur when calling <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> set to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">Например, ошибки могут возникать при вызове <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> с <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> значение <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Do not invoke <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> until you resolve all errors and resubmit the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> for updating.</source>
          <target state="translated">Не вызывайте <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> на <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> до устранить все ошибки и повторно отправьте <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> для обновления.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method to return an array of <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that have errors.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> метод, чтобы вернуть массив <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> объекты с ошибками.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, содержащий сериализованные данные, связанные с объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, содержащий исходный объект и объект назначения для сериализованного потока, связанного с объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Заполняет объект сведений о сериализации данными, необходимыми для сериализации <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Значением параметра <ph id="ph1">&lt;paramref name="info" /&gt;</ph> является пустая ссылка (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Gets the row type.</source>
          <target state="translated">Получает тип строки.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Returns the type of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Возвращает тип объекта <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>, описывающая представление XML объекта, полученного из метода <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> и включенного в метод <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.HasErrors">
          <source>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which the table belongs.</source>
          <target state="translated">Получает значение, указывающее наличие ошибок в строках таблиц класса <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, к которому принадлежат таблицы.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if errors exist; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если ошибки есть; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>As users work on a set of data contained in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you can mark each change with an error if the change causes some validation failure.</source>
          <target state="translated">При работе на набор данных, содержащихся в <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, можно пометить каждое изменение с ошибкой, если оно вызывает сбой проверки.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can mark an entire <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> with an error message using the <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
          <target state="translated">Вы можете пометить весь <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> с ошибкой сообщение с помощью <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can also set errors on each column of the row with the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method.</source>
          <target state="translated">Ошибки можно также установить на каждый столбец строки с <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before updating a data source with a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, it's recommended that you first invoke the <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method on the target <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Перед обновлением источника данных с <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, рекомендуется сначала вызвать <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> метод на целевом сервере <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The method results in a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains only the changes made to the original.</source>
          <target state="translated">В результате метод <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> , содержащий только изменения, внесенные в исходный.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before sending the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the data source for updating, check the <ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property of each table to see if any errors have been attached to the rows or columns in the rows.</source>
          <target state="translated">Перед отправкой <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> к источнику данных для обновления проверьте <ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> свойства каждой таблицы, чтобы увидеть, если любой ошибок для строк или столбцов в строках.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>After reconciling each error, clear the errors with the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method of the <ph id="ph2">`DataRow`</ph>.</source>
          <target state="translated">После согласования ошибок, очистить ошибки с <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> метод <ph id="ph2">`DataRow`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property to check if a table contains errors.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> свойство для проверки, если таблица содержит ошибки.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to be imported.</source>
          <target state="translated">Импортируемый объект <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Copies a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, preserving any property settings, as well as original and current values.</source>
          <target state="translated">Копирует объект <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, сохраняя все параметры свойств, а также текущие и исходные значения.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> adds a row to the table using the existing table schema, but with default values for the row, and sets the <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> to <ph id="ph3">`Detached`</ph>.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> добавляет строку в таблицу, используя существующую схему таблицы, но со значениями по умолчанию для строки и задает <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> для <ph id="ph3">`Detached`</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph> preserves the existing <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> along with other values in the row.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph> сохраняется имеющийся <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> и другие значения в строке.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the <ph id="ph1">`DataRow`</ph> that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</source>
          <target state="translated">Если <ph id="ph1">`DataRow`</ph> , передается как параметр находится в отсоединенном состоянии, учитывается, и исключение не возникает.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The new row will be added to the end of the data table.</source>
          <target state="translated">Новая строка добавляется в конец таблицы данных.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the new row violates a Constraint it won’t be added to the data table.</source>
          <target state="translated">Если новая строка нарушает ограничение не будет добавлена в таблицу данных.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</source>
          <target state="translated">Индекс новой строки с DataTable.Rows.Find и DataTable.Rows.IndexOf можно получить.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>See <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> for more information.</source>
          <target state="translated">Дополнительные сведения см. в разделах <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.Initialized">
          <source>Occurs after the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">Происходит после инициализации таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.Initialized">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.IsInitialized">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">Получает значение, указывающее, инициализирована ли таблица <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the component has completed initialization; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что компонент завершил инициализацию; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>Returns the status of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">Возвращает состояние <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> пока она создана, например с помощью Visual Studio.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method sets it to <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method sets it to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> Задает метод для <ph id="ph2">`false`</ph> и <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> задает метод для <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Заполняет таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> значениями из источника данных с помощью предоставляемого объекта <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">Если объект <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a <ph id="ph2">`DataTable`</ph>).</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод может использоваться в нескольких общих сценариях, которые все направлены на получение данных из указанного источника данных и добавление его в текущем контейнере данных (в данном случае <ph id="ph2">`DataTable`</ph>).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These scenarios describe standard usage for a <ph id="ph1">`DataTable`</ph>, describing its update and merge behavior.</source>
          <target state="translated">В следующих сценариях описано стандартный способ <ph id="ph1">`DataTable`</ph>, описывающие его обновления и слияния поведение.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">`DataTable`</ph> synchronizes or updates with a single primary data source.</source>
          <target state="translated">Объект <ph id="ph1">`DataTable`</ph> синхронизирует или обновления с одного основного источника данных.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> tracks changes, allowing synchronization with the primary data source.</source>
          <target state="translated"><ph id="ph1">`DataTable`</ph> Отслеживает изменения, допускающие синхронизацию с основным источником данных.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In addition, a <ph id="ph1">`DataTable`</ph> can accept incremental data from one or more secondary data sources.</source>
          <target state="translated">Кроме того <ph id="ph1">`DataTable`</ph> может принимать добавочные данные из одного или нескольких вторичных источников данных.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</source>
          <target state="translated"><ph id="ph1">`DataTable`</ph> Не отвечает за отслеживание изменений для обеспечения синхронизации со вторичного источника данных.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</source>
          <target state="translated">Если эти два гипотетические источника данных, пользователь скорее всего, потребуется один из следующих ситуаций:</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Initialize <ph id="ph1">`DataTable`</ph> from a primary data source.</source>
          <target state="translated">Инициализация <ph id="ph1">`DataTable`</ph> из основного источника данных.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to initialize an empty <ph id="ph1">`DataTable`</ph> with values from the primary data source.</source>
          <target state="translated">В этом сценарии пользователь хочет инициализировать пустой <ph id="ph1">`DataTable`</ph> значениями из основного источника данных.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Later the user intends to propagate changes back to the primary data source.</source>
          <target state="translated">Позднее пользователь планирует распространить изменения обратно на основной источник данных.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Preserve changes and re-synchronize from the primary data source.</source>
          <target state="translated">Сохранение изменений и повторная синхронизация из первичного источника данных.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to take the <ph id="ph1">`DataTable`</ph> filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">В этом сценарии пользователь хочет воспользоваться <ph id="ph1">`DataTable`</ph> заполнения в предыдущем сценарии и выполнять добавочную синхронизацию с основным источником данных, сохраняя изменения, сделанные в <ph id="ph2">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Incremental data feed from secondary data sources.</source>
          <target state="translated">Веб-канал добавочных данных из дополнительных источников данных.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</source>
          <target state="translated">В этом сценарии пользователь хочет объединить изменения из одного или нескольких вторичных источников данных и распространить эти изменения обратно на основной источник данных.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method makes all these scenarios possible.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод обеспечивает реализацию этих сценариев.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> combine with rows being loaded.</source>
          <target state="translated">Только один из перегрузок этого метода позволяет указать параметр варианта загрузки, что означает, как строки уже <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объединения с загружаемых строк.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">(Перегрузка, которая не позволяет задать поведение используется вариант загрузки по умолчанию). В следующей таблице описаны три варианта загрузки, предоставляемые <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> перечисления.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</source>
          <target state="translated">В каждом случае описание определяет поведение, когда первичный ключ строки во входных данных с первичным ключом существующей строки.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Load Option</source>
          <target state="translated">Параметр загрузки</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Description</source>
          <target state="translated">Описание:</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source><ph id="ph1">`PreserveChanges`</ph> (default)</source>
          <target state="translated"><ph id="ph1">`PreserveChanges`</ph> (по умолчанию)</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the original version of the row with the value of the incoming row.</source>
          <target state="translated">Обновляет исходную версию строки со значением входящей строки.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current and original versions of the row with the value of the incoming row.</source>
          <target state="translated">Обновляет текущую и первоначальную версию строки, используя значение входной строки.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current version of the row with the value of the incoming row.</source>
          <target state="translated">Обновляет текущую версию строки со значением входящей строки.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In general, the <ph id="ph1">`PreserveChanges`</ph> and <ph id="ph2">`OverwriteChanges`</ph> options are intended for scenarios in which the user needs to synchronize the <ph id="ph3">`DataSet`</ph> and its changes with the primary data source.</source>
          <target state="translated">Как правило <ph id="ph1">`PreserveChanges`</ph> и <ph id="ph2">`OverwriteChanges`</ph> параметры предназначены для сценариев, в которых пользователю требуется синхронизировать <ph id="ph3">`DataSet`</ph> и его изменения с основным источником данных.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Upsert`</ph> option facilitates aggregating changes from one or more secondary data sources.</source>
          <target state="translated"><ph id="ph1">`Upsert`</ph> Параметр облегчает сбор изменений из одного или нескольких вторичных источников данных.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере демонстрируется некоторые проблемы, связанные с вызовом <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Во-первых, пример рассматриваются проблемы схемы, включая получение схемы из загруженного <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">Приведенный Далее рассматриваются проблемы данных, включая обработку различных параметров загрузки.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">В этом примере показано, как использовать один из перегруженных версий <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Другие примеры, которые могут быть доступны см. в разделах отдельных перегрузки.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, предоставляющий набор результатов.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Заполняет таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> значениями из источника данных с помощью предоставляемого объекта <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">Если объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Метод использует первый результирующий набор из загруженного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>и после успешного завершения устанавливает средство чтения положение к следующему результирующему набору, если таковые имеются.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">При преобразовании данных, <ph id="ph1">`Load`</ph> метод использует те же самые правила, как <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> экземпляр: операций схемы, данные и события.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When working with the schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">При работе со схемой, <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> метода могут возникнуть условия, как описано в следующей таблице.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Операции со схемой выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Condition</source>
          <target state="translated">Условие</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Behavior</source>
          <target state="translated">Поведение</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Не имеет схемы.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Метод формирует схему на основании результирующий набор из импортированного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Имеет схему, но он не совместим с загрузить схему.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Метод создает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузки данных в схеме несовместимый.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>'s schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Метод добавляет дополнительные столбцы в <ph id="ph2">`DataTable`</ph>элемента схемы.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">Метод вызывает исключение, если соответствующие столбцы в <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и загрузить результирующий набор, не совместимые значения.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">За исключением случая ограничения Primary Key, эти сведения об ограничениях используется только в том случае, если текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> не содержит какие-либо столбцы в начале операции загрузки.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method allows the rows to be added, substituting the default or <ph id="ph2">`null`</ph> value for the missing column.</source>
          <target state="translated">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца допускает значение NULL, <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> метод позволяет строки, которые должны быть добавлены, заменив значение по умолчанию или <ph id="ph2">`null`</ph> значение в столбце отсутствует.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no default value or <ph id="ph1">`null`</ph> can be used, then the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">Если нет значения по умолчанию или <ph id="ph1">`null`</ph> можно использовать, а затем <ph id="ph2">`Load`</ph> метод создает исключение.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the <ph id="ph2">`null`</ph> value as the implied default value.</source>
          <target state="translated">Если нет конкретное значение по умолчанию не указано, <ph id="ph1">`Load`</ph> использует метод <ph id="ph2">`null`</ph> значение в качестве значения по умолчанию подразумеваемых.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Прежде чем анализировать поведение <ph id="ph1">`Load`</ph> метод с точки зрения операций с данными, примите во внимание каждой строки внутри <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> сохраняет текущее значение и исходное значение для каждого столбца.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Эти значения могут совпадать, или может отличаться, если данные в строке были изменены с момента заполнения <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>For more information, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>состояния строк и версии строк<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This version of the <ph id="ph1">`Load`</ph> method attempts to preserve the current values in each row, leaving the original value intact.</source>
          <target state="translated">Эта версия <ph id="ph1">`Load`</ph> метод пытается сохранить текущие значения в каждой строке, а исходное значение останутся без изменений.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(If you want finer control over the behavior of incoming data, see <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">(Если требуется детальный контроль над поведением входящих данных, см. раздел <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>.) Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае он рассматривается как новой строки.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">С точки зрения операций событий <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> событие возникает перед изменением каждой строки и <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> событие возникает после изменения каждой строки.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">В каждом случае <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> экземпляр, переданный в обработчик события содержит сведения о конкретного действия, связанного с событием.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This action value depends on the state of the row before the load operation.</source>
          <target state="translated">Значение этого действия зависит от состояния строки до операции загрузки.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">В каждом случае происходят оба события и действие — то же самое для каждого.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">Действие может применяться к текущей или исходной версии каждой строки (или оба) в зависимости от состояния текущей строки.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following table displays behavior for the <ph id="ph1">`Load`</ph> method.</source>
          <target state="translated">В следующей таблице представлены поведения <ph id="ph1">`Load`</ph> метод.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Каждая ячейка в этой таблице описывает текущее и исходное значение поля в строке, вместе с <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> для значения после <ph id="ph2">`Load`</ph> метод завершения.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In this case, the method doesn't allow you to indicate the load option, and uses the default, <ph id="ph1">`PreserveChanges`</ph>.</source>
          <target state="translated">В этом случае метод не позволяет указать параметр загрузки и использует значение по умолчанию <ph id="ph1">`PreserveChanges`</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Existing DataRowState</source>
          <target state="translated">Существующие DataRowState</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values after <ph id="ph1">`Load`</ph> method, and event action</source>
          <target state="translated">Значения после <ph id="ph1">`Load`</ph> метод и действия события</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Added</source>
          <target state="translated">Добавлено</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Modified</source>
          <target state="translated">Изменено</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Deleted</source>
          <target state="translated">Deleted</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>удален &gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(Not present)</source>
          <target state="translated">(Отсутствует)</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Значения в <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> ограниченного через использование свойств, таких как <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод обрабатывает такие столбцы таким способом, который согласуется с поведением, определяются свойства столбца.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">Чтение Единственное ограничение на <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> применимо только для изменений, произошедших в памяти.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод перезаписывает значения столбца только для чтения, при необходимости.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>To determine which version of the primary key field to use for comparing the current row with an incoming row, the <ph id="ph1">`Load`</ph> method uses the original version of the primary key value within a row, if it exists.</source>
          <target state="translated">Чтобы определить, какую версию следует использовать для сравнения текущей строки с входящей строки, поля первичного ключа <ph id="ph1">`Load`</ph> метод использует исходную версию значения первичного ключа в строке, если он существует.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Otherwise, the <ph id="ph1">`Load`</ph> method uses the current version of the primary key field.</source>
          <target state="translated">В противном случае <ph id="ph1">`Load`</ph> метод использует текущую версию поля первичного ключа.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере демонстрируется некоторые проблемы, связанные с вызовом <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Во-первых, пример рассматриваются проблемы схемы, включая получение схемы из загруженного <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The example then calls the <ph id="ph1">`Load`</ph> method, displaying the data both before and after the load operation.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">`Load`</ph> метод отображения данных до и после операции загрузки.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, предоставляющий один или несколько наборов результатов.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">Значение из перечисления <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>, которое показывает способ комбинирования строк, уже находящихся в таблице <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, с поступающими строками, которые совместно используют один и тот же первичный ключ.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Заполняет таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> значениями из источника данных с помощью предоставляемого объекта <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph> parameter.</source>
          <target state="translated">Если объект <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> уже содержит строки, поступающие данные из источника данных объединяются с существующими строками согласно значению параметра <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод использует первый результирующий набор из загруженного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>и после успешного завершения устанавливает средство чтения положение к следующему результирующему набору, если таковые имеются.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method.</source>
          <target state="translated">При преобразовании данных, <ph id="ph1">`Load`</ph> метод использует те же самые правила, как <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> экземпляр: операций схемы, данные и события.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">При работе со схемой, <ph id="ph1">`Load`</ph> метода могут возникнуть условия, как описано в следующей таблице.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Операции со схемой выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Condition</source>
          <target state="translated">Условие</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Behavior</source>
          <target state="translated">Поведение</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Не имеет схемы.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод формирует схему на основании результирующий набор из импортированного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Имеет схему, но он не совместим с загрузить схему.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод создает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузки данных в схеме несовместимый.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод добавляет дополнительные столбцы в <ph id="ph2">`DataTable`</ph>элемента схемы.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">Метод вызывает исключение, если соответствующие столбцы в <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и загрузить результирующий набор, не совместимые значения.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">За исключением случая ограничения Primary Key, эти сведения об ограничениях используется только в том случае, если текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> не содержит какие-либо столбцы в начале операции загрузки.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца допускает значение NULL, <ph id="ph1">`Load`</ph> метод позволяет добавлять, строки подстановки значения по умолчанию или значение null для отсутствующего столбца.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">Если используется не значение по умолчанию или значение null, то <ph id="ph1">`Load`</ph> метод создает исключение.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">Если нет конкретное значение по умолчанию не указано, <ph id="ph1">`Load`</ph> метод использует значение null в качестве подразумеваемого значения по умолчанию.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Прежде чем анализировать поведение <ph id="ph1">`Load`</ph> метод с точки зрения операций с данными, примите во внимание каждой строки внутри <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> сохраняет текущее значение и исходное значение для каждого столбца.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Эти значения могут совпадать, или может отличаться, если данные в строке были изменены с момента заполнения <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>состояния строк и версии строк<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> для получения дополнительной информации.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">При вызове этого метода, указанного <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> параметр влияет на обработку входящих данных.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Как метод Load должен обрабатывать загрузку строк, имеющих тот же первичный ключ, как и существующие строки?</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">Его следует изменять текущие значения и исходные значения?</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">Эти проблемы и многое другое, управляются <ph id="ph1">`loadOption`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае он рассматривается как новой строки.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">С точки зрения операций событий <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> событие возникает перед изменением каждой строки и <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> событие возникает после изменения каждой строки.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">В каждом случае <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> экземпляр, переданный в обработчик события содержит сведения о конкретного действия, связанного с событием.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">Значение этого действия варьируется в зависимости от состояния строки до операции загрузки.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">В каждом случае происходят оба события и действие — то же самое для каждого.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">Действие может применяться к текущей или исходной версии каждой строки (или оба) в зависимости от состояния текущей строки.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">В следующей таблице показаны поведение метода Load при вызове с каждым из <ph id="ph1">`LoadOption`</ph> значений, а также показано, как значения взаимодействуют с состоянием загружаемой строки.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Каждая ячейка в этой таблице описывает текущее и исходное значение поля в строке, вместе с <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> для значения после <ph id="ph2">`Load`</ph> метод завершения.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Existing DataRowState</source>
          <target state="translated">Существующие DataRowState</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">Флаг PreserveChanges (по умолчанию)</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Added</source>
          <target state="translated">Добавлено</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = -<ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Modified</source>
          <target state="translated">Изменено</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>eleted</source>
          <target state="translated">аленный</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">(Загрузка не влияет на удаленные строки)</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = ---</source>
          <target state="translated">Текущий =---</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>удален &gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">(Со следующими характеристиками добавляется новая строка)</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = добавить</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Undo delete and</source>
          <target state="translated">Отмените удаление и</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>удален &gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">Если новое значение совпадает со значением существующее значение затем</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Nothing</source>
          <target state="translated">RowAction = Nothing</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Else</source>
          <target state="translated">ELSE</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Not present)</source>
          <target state="translated">Отсутствует)</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = добавить</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Значения в <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> ограниченного через использование свойств, таких как <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод обрабатывает такие столбцы таким способом, который согласуется с поведением, определяются свойства столбца.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">Чтение Единственное ограничение на <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> применимо только для изменений, произошедших в памяти.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод перезаписывает значения столбца только для чтения, при необходимости.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">Если указать параметры OverwriteChanges или PreserveChanges при вызове <ph id="ph1">`Load`</ph> становится, входящих данных поступает из метода, то предполагается <ph id="ph2">`DataTable`</ph>в первичный источник данных и объекта DataTable отслеживает изменения и может распространять изменения в источнике данных.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">Если выбран параметр Upsert, предполагается, что поступают данные из одного из вторичного источника данных, например данные, предоставляемые компонентом среднего уровня, может быть изменено пользователем.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">В этом случае предполагается, что цель состоит в сборе данных из одного или нескольких источников данных в <ph id="ph1">`DataTable`</ph>, а затем данные могут распространяться обратно в основной источник данных.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> Параметр используется для определения конкретной версии строки, которая будет использоваться для сравнения первичных ключей.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The table below provides the details.</source>
          <target state="translated">Сведения в следующей таблице.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Load option</source>
          <target state="translated">Параметр загрузки</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">Версия DataRow используется для сравнения первичных ключей</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Исходная версия, если он существует, в противном случае текущая версия</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Исходная версия, если он существует, в противном случае текущая версия</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">Текущая версия, если он существует, в противном случае исходная версия</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере демонстрируется некоторые проблемы, связанные с вызовом <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">Во-первых, пример рассматриваются проблемы схемы, включая получение схемы из загруженного <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">Приведенный Далее рассматриваются проблемы данных, включая обработку различных параметров загрузки.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, предоставляющий набор результатов.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated">Значение из перечисления <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>, которое показывает способ комбинирования строк, уже находящихся в таблице <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, с поступающими строками, которые совместно используют один и тот же первичный ключ.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate to call when an error occurs while loading data.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph>, вызываемый при возникновении ошибки во время загрузки данных.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> using an error-handling delegate.</source>
          <target state="translated">Заполняет таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> значениями из источника данных с помощью предоставляемого объекта <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, использующего делегат для обработки ошибок.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод использует первый результирующий набор из загруженного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>и после успешного завершения устанавливает средство чтения положение к следующему результирующему набору, если таковые имеются.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">При преобразовании данных, <ph id="ph1">`Load`</ph> метод использует те же самые правила, как <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> экземпляр: операций схемы, данные и события.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">При работе со схемой, <ph id="ph1">`Load`</ph> метода могут возникнуть условия, как описано в следующей таблице.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">Операции со схемой выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Condition</source>
          <target state="translated">Условие</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Behavior</source>
          <target state="translated">Поведение</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Не имеет схемы.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод формирует схему на основании результирующий набор из импортированного <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Имеет схему, но он не совместим с загрузить схему.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод создает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузки данных в схеме несовместимый.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra column(s) to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод добавляет дополнительные столбцы для <ph id="ph2">`DataTable`</ph>элемента схемы.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">Метод вызывает исключение, если соответствующие столбцы в <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и загрузить результирующий набор, не совместимые значения.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">За исключением случая ограничения Primary Key, эти сведения об ограничениях используется только в том случае, если текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> не содержит какие-либо столбцы в начале операции загрузки.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца допускает значение NULL, <ph id="ph1">`Load`</ph> метод позволяет добавлять, строки подстановки значения по умолчанию или значение null для отсутствующего столбца.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">Если используется не значение по умолчанию или значение null, то <ph id="ph1">`Load`</ph> метод создает исключение.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">Если нет конкретное значение по умолчанию не указано, <ph id="ph1">`Load`</ph> метод использует значение null в качестве подразумеваемого значения по умолчанию.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">Прежде чем анализировать поведение <ph id="ph1">`Load`</ph> метод с точки зрения операций с данными, примите во внимание каждой строки внутри <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> сохраняет текущее значение и исходное значение для каждого столбца.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Эти значения могут совпадать, или может отличаться, если данные в строке были изменены с момента заполнения <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>состояния строк и версии строк<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> для получения дополнительной информации.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">При вызове этого метода, указанного <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> параметр влияет на обработку входящих данных.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Как метод Load должен обрабатывать загрузку строк, имеющих тот же первичный ключ, как и существующие строки?</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">Его следует изменять текущие значения и исходные значения?</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">Эти проблемы и многое другое, управляются <ph id="ph1">`loadOption`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае он рассматривается как новой строки.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">С точки зрения операций событий <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> событие возникает перед изменением каждой строки и <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> событие возникает после изменения каждой строки.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">В каждом случае <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> экземпляр, переданный в обработчик события содержит сведения о конкретного действия, связанного с событием.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">Значение этого действия варьируется в зависимости от состояния строки до операции загрузки.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">В каждом случае происходят оба события и действие — то же самое для каждого.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">Действие может применяться к текущей или исходной версии каждой строки (или оба) в зависимости от состояния текущей строки.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">В следующей таблице показаны поведение метода Load при вызове с каждым из <ph id="ph1">`LoadOption`</ph> значений, а также показано, как значения взаимодействуют с состоянием загружаемой строки.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">Каждая ячейка в этой таблице описывает текущее и исходное значение поля в строке, вместе с <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> для значения после <ph id="ph2">`Load`</ph> метод завершения.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Existing DataRowState</source>
          <target state="translated">Существующие DataRowState</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">Флаг PreserveChanges (по умолчанию)</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Added</source>
          <target state="translated">Добавлено</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = -<ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Modified</source>
          <target state="translated">Изменено</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>eleted</source>
          <target state="translated">аленный</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">(Загрузка не влияет на удаленные строки)</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = ---</source>
          <target state="translated">Текущий =---</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>удален &gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">(Со следующими характеристиками добавляется новая строка)</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = добавить</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Undo delete and</source>
          <target state="translated">Отмените удаление и</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>удален &gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">RowAction = ChangeOriginal</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>существующие &gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">Если новое значение совпадает со значением существующее значение затем</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Nothing</source>
          <target state="translated">RowAction = Nothing</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Else</source>
          <target state="translated">ELSE</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>изменения &gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">RowAction = изменение</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Not present)</source>
          <target state="translated">Отсутствует)</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>недоступно &gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>добавлены &gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">RowAction = добавить</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Текущий = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">Исходный = <ph id="ph1">\&lt;</ph>входящих &gt;</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">Состояние = <ph id="ph1">\&lt;</ph>без изменений &gt;</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">RowAction = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">Значения в <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> ограниченного через использование свойств, таких как <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод обрабатывает такие столбцы таким способом, который согласуется с поведением, определяются свойства столбца.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">Чтение Единственное ограничение на <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> применимо только для изменений, произошедших в памяти.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Метод перезаписывает значения столбца только для чтения, при необходимости.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">Если указать параметры OverwriteChanges или PreserveChanges при вызове <ph id="ph1">`Load`</ph> становится, входящих данных поступает из метода, то предполагается <ph id="ph2">`DataTable`</ph>в первичный источник данных и объекта DataTable отслеживает изменения и может распространять изменения в источнике данных.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">Если выбран параметр Upsert, предполагается, что поступают данные из одного из вторичного источника данных, например данные, предоставляемые компонентом среднего уровня, может быть изменено пользователем.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">В этом случае предполагается, что цель состоит в сборе данных из одного или нескольких источников данных в <ph id="ph1">`DataTable`</ph>, а затем данные могут распространяться обратно в основной источник данных.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> Параметр используется для определения конкретной версии строки, которая будет использоваться для сравнения первичных ключей.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The table below provides the details.</source>
          <target state="translated">Сведения в следующей таблице.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Load option</source>
          <target state="translated">Параметр загрузки</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">Версия DataRow используется для сравнения первичных ключей</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Исходная версия, если он существует, в противном случае текущая версия</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">Исходная версия, если он существует, в противном случае текущая версия</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">Текущая версия, если он существует, в противном случае исходная версия</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated"><ph id="ph1">`errorHandler`</ph> Параметр <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> делегат, который ссылается на процедуру, которая вызывается при возникновении ошибки во время загрузки данных.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> being filled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> Параметр, передаваемый процедуре предоставляет свойства, которые позволяют получить сведения об ошибке, возникшей, текущей строки данных, и <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> заполнения.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">Использование механизма этого делегата, вместо простой блок try/catch, позволяет определять ошибки, обрабатывать ситуации и продолжить обработку при необходимости.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter supplies a <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property: set this property to <ph id="ph3">`true`</ph> to indicate that you have handled the error and wish to continue processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> Параметр предоставляет <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> свойство: значение этого свойства <ph id="ph3">`true`</ph> чтобы указать, что ошибка была обработана и продолжить обработку.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Set the property to <ph id="ph1">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">Это свойство равно <ph id="ph1">`false`</ph> для указания, что вы хотите остановить процесс.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">Имейте в виду, что для свойства значение <ph id="ph1">`false`</ph> вызывает код, который был источником проблемы для создания исключения.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Находит и обновляет конкретную строку.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">Массив значений, используемых для создания новой строки.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to accept changes; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> — принять изменения; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Находит и обновляет конкретную строку.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Новый объект <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> Метод принимает массив значений и находит соответствующие значения в столбцы первичного ключа.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">Если столбец содержит значение по умолчанию, необходимо передайте значение null в массиве, чтобы задать значение по умолчанию для этого столбца.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">Аналогично Если в столбце его <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> установлено значение true, передать значение null в массив для установки автоматически сформированное значение для строки.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If the <ph id="ph1">`fAcceptChanges`</ph> parameter is <ph id="ph2">`true`</ph> or not specified, the new data is added and then <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called to accept all changes in the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; if the argument is <ph id="ph5">`false`</ph>, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</source>
          <target state="translated">Если <ph id="ph1">`fAcceptChanges`</ph> параметр <ph id="ph2">`true`</ph> или не указан, добавления новых данных и затем <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> вызывается, чтобы применить все изменения в <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; Если аргумент является <ph id="ph5">`false`</ph>, новых добавленных строк, помечаются как операции вставки и изменения существующие строки, помеченные как изменения.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">Исключения могут также возникнуть в <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">При возникновении исключения, строка не добавляется в таблицу.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> в сочетании с <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method to attempt to find a row.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> метод, чтобы попытаться найти строку.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no such row is found, the values are used to create a new row.</source>
          <target state="translated">Если строка найдена, значения используются для создания новой строки.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The array is larger than the number of columns in the table.</source>
          <target state="translated">Размер массива превышает число столбцов в таблице.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>A value doesn't match its respective column type.</source>
          <target state="translated">Значение не отвечает соответствующему типу столбца.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Adding the row invalidates a constraint.</source>
          <target state="translated">Добавление строки нарушает ограничение.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Attempting to put a null in a column where <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> is false.</source>
          <target state="translated">Попытка поместить значение null в столбец, у которого <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> имеет значение "false".</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">Массив значений, используемых для создания новой строки.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Used to determine how the array values are applied to the corresponding values in an existing row.</source>
          <target state="translated">Используется для определения способа применения значений массива к соответствующим значениям в существующей строке.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">Находит и обновляет конкретную строку.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Новый объект <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> Метод принимает массив значений и находит соответствующие значения в столбцы первичного ключа.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">Если столбец содержит значение по умолчанию, необходимо передайте значение null в массиве, чтобы задать значение по умолчанию для этого столбца.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">Аналогично Если в столбце его <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> установлено значение true, передать значение null в массив для установки автоматически сформированное значение для строки.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The value of the <ph id="ph1">`loadOption`</ph> parameter is used to determine how the values in the array are applied to an existing row.</source>
          <target state="translated">Значение <ph id="ph1">`loadOption`</ph> параметр используется для определения способа применения значения в массиве в существующую строку.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>For example, if <ph id="ph1">`loadOption`</ph> is set to <ph id="ph2">`OverwriteChanges`</ph>, the <ph id="ph3">`Original`</ph> and <ph id="ph4">`Current`</ph> values of each column are replaced with the values in the incoming row and the <ph id="ph5">`RowState`</ph> property is set to <ph id="ph6">`Unchanged`</ph>.</source>
          <target state="translated">Например если <ph id="ph1">`loadOption`</ph> равно <ph id="ph2">`OverwriteChanges`</ph>, <ph id="ph3">`Original`</ph> и <ph id="ph4">`Current`</ph> значения каждого столбца заменяются значениями из входящей строки и <ph id="ph5">`RowState`</ph> свойству <ph id="ph6">`Unchanged`</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">Исключения могут также возникнуть в <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">При возникновении исключения, строка не добавляется в таблицу.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> в сочетании с <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Locale">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that contains data about the user's machine locale.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>, содержащий данные о языковом стандарте, используемом пользователем на компьютере.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The default is the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> (returned by the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph> property) to which the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> belongs; if the table doesn't belong to a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, the default is the current system <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">Значением по умолчанию является языковый стандарт <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> объекта <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> (возвращаемый свойством <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph>), к которому принадлежит таблица <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>; если таблица не принадлежит набору <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, значением по умолчанию является языковый стандарт <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> текущей системы.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> represents the software preferences of a particular culture or community.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> представляет программные настройки конкретного языка и сообщества.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>When used for string comparisons, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> affects sorting, comparisons, and filtering.</source>
          <target state="translated">При сравнении строк <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> влияет на сортировки и сравнения и фильтрации.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>In columns that contain expressions, the <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> is used.</source>
          <target state="translated">В столбцах, содержащих выражения <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> используется.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> Учитывается.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph> and prints the ISO language name.</source>
          <target state="translated">В следующем примере задается <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> через <ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph> и выводит имя языка ISO.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объединяет заданный объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с текущим объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> Метод используется для объединения двух <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объекты, которые во многом аналогично схемами.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Слияние с данными обычно используется для клиентских приложений для включения последних изменений из источника данных в существующую коллекцию <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Это позволяет клиентскому приложению обновлять <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> последние данные из источника данных.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">Операция слияния принимает во внимание только исходная таблица и объединяемая таблица.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Дочерние таблицы не влияет и не включены.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Если таблица содержит один или несколько дочерних таблиц, определенных как часть отношения, каждая дочерняя таблица должны быть объединены по отдельности.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">Следующее консольное приложение демонстрирует поведение <ph id="ph1">`missingSchemaAction`</ph> параметр <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">В этом примере создаются две версии одной таблицы, изменения схемы для второй версии.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">Код пытается объединить вторую таблицу с первой.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of Merge.</source>
          <target state="translated">В этом примере показано, как использовать один из перегруженных версий метода Merge.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Другие примеры, которые могут быть доступны см. в разделах отдельных перегрузки.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, объединяемый с текущим объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объединяет заданный объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с текущим объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Метод Merge используется для объединения двух <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объекты, которые во многом аналогично схемами.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Слияние с данными обычно используется для клиентских приложений для включения последних изменений из источника данных в существующую коллекцию <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Это позволяет клиентскому приложению обновлять <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> последние данные из источника данных.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">Операция слияния принимает во внимание только исходная таблица и объединяемая таблица.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Дочерние таблицы не влияет и не включены.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Если таблица содержит один или несколько дочерних таблиц, определенных как часть отношения, каждая дочерняя таблица должны быть объединены по отдельности.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> Метод обычно вызывается в конце серии процедур, включающей проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</source>
          <target state="translated">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются по умолчанию во время операции слияния.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">Разработчики могут изменить это поведение, путем вызова одного из двух других перегрузок данного метода и указав значение false для <ph id="ph1">`preserveChanges`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и проверить их перед отправкой назад в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">В этом сценарии <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> сначала вызывается метод.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Метод возвращает второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> оптимизированный для проверки и слияния.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Второй шаг <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объект содержит только <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> объектов, которые были изменены, приведет к подмножество исходного <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle tier component.</source>
          <target state="translated">Это подмножество обычно меньше и поэтому более эффективно передается обратно в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Затем компонент среднего уровня обновляет исходный источник данных изменениями с помощью хранимых процедур.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Средний уровень может отправить назад либо новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> с исходными данными и последними данными из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> могут быть объединены обратно в исходный клиентское приложение <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> с <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph>, is matched to target rows with the same primary key values.</source>
          <target state="translated">При слиянии нового источника <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и конечного объекта исходные строки со <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, или <ph id="ph5">`Deleted`</ph>, сопоставляется с конечным строкам и имеют те же значения первичного ключа.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Исходные строки со <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph2">`Added`</ph> сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The following console application creates a simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and adds data to the table.</source>
          <target state="translated">Следующее консольное приложение создает простой <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и добавляет данные в таблицу.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The example then creates a copy of the table, adding rows to the copy.</source>
          <target state="translated">Затем в примере создается копия таблицы путем добавления строк в копию.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Finally, the example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method to merge the data in the second table with the data in the first table.</source>
          <target state="translated">Наконец, в примере вызывается <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метод для слияния данных во второй таблице с данными в первой таблице.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>, объединяемый с текущим объектом <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.<ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если необходимо сохранить изменения в текущем объекте <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.<ph id="ph4">&lt;see langword="" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Объедините заданный объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с текущим объектом <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, указав, следует ли сохранить изменения в контейнере данных <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Метод Merge используется для объединения двух <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объекты, которые во многом аналогично схемами.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Слияние с данными обычно используется для клиентских приложений для включения последних изменений из источника данных в существующую коллекцию <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Это позволяет клиентскому приложению обновлять <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> последние данные из источника данных.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">Операция слияния принимает во внимание только исходная таблица и объединяемая таблица.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Дочерние таблицы не влияет и не включены.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Если таблица содержит один или несколько дочерних таблиц, определенных как часть отношения, каждая дочерняя таблица должны быть объединены по отдельности.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> Метод обычно вызывается в конце серии процедур, включающей проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются при слиянии, если только значение "false" для <ph id="ph1">`preserveChanges`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">Если <ph id="ph1">`preserveChanges`</ph> параметр имеет значение <ph id="ph2">`true`</ph>, входные значения не переопределяют существующие значения в версии Current существующей строки.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">Если <ph id="ph1">`preserveChanges`</ph> параметр имеет значение <ph id="ph2">`false`</ph>, входные значения переопределяют существующие значения в версии Current существующей строки.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о версиях строк см. в разделе <bpt id="p1">[</bpt>состояния строк и версии строк<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и проверить их перед отправкой назад в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">В этом сценарии <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> сначала вызывается метод.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Метод возвращает второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> оптимизированный для проверки и слияния.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Второй шаг <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объект содержит только <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> объектов, которые были изменены, приведет к подмножество исходного <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">Это подмножество обычно меньше и поэтому это подмножество более эффективно передается обратно в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Затем компонент среднего уровня обновляет исходный источник данных изменениями с помощью хранимых процедур.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Средний уровень может отправить назад либо новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> с исходными данными и последними данными из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> могут быть объединены обратно в исходный клиентское приложение <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> с <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">При слиянии нового источника <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и конечного объекта исходные строки со <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, или <ph id="ph5">`Deleted`</ph> сопоставляются с конечным строкам и имеют те же значения первичного ключа.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Исходные строки со <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph2">`Added`</ph> сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержит строки, изменяет некоторые данные в этих строках и предпринимается попытка объединить данные из разных <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The example demonstrates the different behaviors for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">В примере показано различное поведение для <ph id="ph1">`preserveChanges`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, объединяемый с текущим объектом <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если необходимо сохранить изменения в текущем объекте <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes and how to handle missing schema in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Объедините заданный объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с текущим объектом <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, указав, следует ли сохранить изменения и способ обработки отсутствующей схемы в текущем контейнере данных <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> Метод используется для объединения двух <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объекты, которые во многом аналогично схемами.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Слияние с данными обычно используется для клиентских приложений для включения последних изменений из источника данных в существующую коллекцию <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Это позволяет клиентскому приложению обновлять <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> последние данные из источника данных.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">Операция слияния принимает во внимание только исходная таблица и объединяемая таблица.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">Дочерние таблицы не влияет и не включены.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">Если таблица содержит один или несколько дочерних таблиц, определенных как часть отношения, каждая дочерняя таблица должны быть объединены по отдельности.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph> Метод обычно вызывается в конце серии процедур, включающей проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются при слиянии, если только значение "false" для <ph id="ph1">`preserveChanges`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">Если <ph id="ph1">`preserveChanges`</ph> параметр имеет значение <ph id="ph2">`true`</ph>, входные значения не переопределяют существующие значения в версии Current существующей строки.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">Если <ph id="ph1">`preserveChanges`</ph> параметр имеет значение <ph id="ph2">`false`</ph>, входные значения переопределяют существующие значения в версии Current существующей строки.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о версиях строк см. в разделе <bpt id="p1">[</bpt>состояния строк и версии строк<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и проверить их перед отправкой назад в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">В этом сценарии <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> сначала вызывается метод.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Метод возвращает второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> оптимизированный для проверки и слияния.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Второй шаг <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объект содержит только <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> и <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> объектов, которые были изменены, приведет к подмножество исходного <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">Это подмножество обычно меньше и поэтому это подмножество более эффективно передается обратно в компонент среднего уровня.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Затем компонент среднего уровня обновляет исходный источник данных изменениями с помощью хранимых процедур.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Средний уровень может отправить назад либо новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> с исходными данными и последними данными из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> могут быть объединены обратно в исходный клиентское приложение <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> с <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects are compared, because it is possible that the schemas may have been changed.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> вызывается метод, схемы двух <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объекты сравнения, так как это схемы могут быть изменены.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Например в бизнес-сценарии, добавлены новые столбцы могут XML-схеме автоматизированным процессом.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Если источник <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержит элементы схемы (добавлены <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> объектов), которые отсутствуют в целевом объекте, могут быть добавлены к целевому элементы схемы, задав <ph id="ph3">`missingSchemaAction`</ph> аргумент <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains the added schema and data.</source>
          <target state="translated">В этом случае объединенный <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержит добавленные схему и данные.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Данные объединяются после слияния схем.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">При слиянии нового источника <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и конечного объекта исходные строки со <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, или <ph id="ph5">`Deleted`</ph> сопоставляются с конечным строкам и имеют те же значения первичного ключа.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Исходные строки со <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph2">`Added`</ph> сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">Следующее консольное приложение демонстрирует поведение <ph id="ph1">`missingSchemaAction`</ph> параметр <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">В этом примере создаются две версии одной таблицы, изменения схемы для второй версии.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">Код пытается объединить вторую таблицу с первой.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>Gets or sets the initial starting size for this table.</source>
          <target state="translated">Возвращает или задает начальный размер таблицы.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The initial starting size in rows of this table.</source>
          <target state="translated">Начальный размер (в строках) этой таблицы.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The default is 50.</source>
          <target state="translated">Значение по умолчанию — 50.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> allows the system to create an appropriate set of resources before fetching data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> Позволяет системе создать соответствующий набор ресурсов перед получением данных.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>In a situation when performance is critical, setting this property can optimize performance.</source>
          <target state="translated">В ситуации, когда важна производительность, задание этого свойства можно оптимизировать производительность.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">В следующем примере задается <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Namespace">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает пространство имен для представления данных объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в формате XML.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Пространство имен <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the table.</source>
          <target state="translated">Создает новый класс <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, имеющий ту же схему, что и таблица.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, имеющий ту же схему, что и класс <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>You must use the <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects with the same schema as the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Необходимо использовать <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> метод для создания новых <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> объектов с той же схеме, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>After creating a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you can add it to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>, through the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property.</source>
          <target state="translated">После создания <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, его можно добавить к <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>, с помощью <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> объекта <ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be added to or deleted from the data table before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> для создания новых строк, строки должен быть добавляется или удаляется из таблицы данных, перед вызовом метода <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, adds two <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects that determine the table's schema, and creates several new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects using the <ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, добавляются два <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> объектов, которые определяют схему таблицы и создаются несколько <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> объектов с помощью <ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>Those <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects are then added to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Те <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объекты затем добавляются в <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> с помощью <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that describes the size of the array.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, описывающее размер массива.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Возвращает массив <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>The new array.</source>
          <target state="translated">Новый массив.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>Creates a new row from an existing row.</source>
          <target state="translated">Создает новую строку из существующей строки.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> derived class.</source>
          <target state="translated">Производный класс <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> being removed.</source>
          <target state="translated">Удаляемый объект <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that a <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> is being removed.</source>
          <target state="translated">Сообщает классу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> об удалении объекта <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> в производном классе нужно убедиться, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event, which is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated">Вызывает <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> событие, которое создается немедленно после все строки успешно удалены перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> метод возвращает управление вызывающему объекту.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event, which is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated">Вызывает <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> событие, которое возникает перед началом обработки <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> начала операции.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph>, содержащий данные события.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph> event.</source>
          <target state="translated">Вызывает событие <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph> event, which fires after a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">Вызывает <ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph> события, который вызывается после создания нового <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> был создан с помощью <ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">При возникновении события через делегат вызывается обработчик события.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Общие сведения см. в разделе <bpt id="p1">[</bpt>обработка и вызов событий<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ParentRelations">
          <source>Gets the collection of parent relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Получает коллекцию родительских отношений для объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the parent relations for the table.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>, содержащая родительские отношения для таблицы.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">Если отсутствуют объекты <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> возвращается пустая коллекция.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property to return each parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> свойство для возврата всех его родительских <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> в <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">Каждое отношение используется в качестве аргумента в <ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> для возвращения массива строк.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">Затем выводит значение каждого столбца в строке.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Prefix">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает пространство имен для представления данных объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в формате XML.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Prefix">
          <source>The prefix of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Префикс объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Gets or sets an array of columns that function as primary keys for the data table.</source>
          <target state="translated">Возвращает или задает массив столбцов, которые являются столбцами первичного ключа для таблицы данных.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The primary key of a table must be unique to identify the record in the table.</source>
          <target state="translated">Первичный ключ таблицы должен быть уникальным для определения записи в таблице.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>It's also possible to have a table with a primary key made up of two or more columns.</source>
          <target state="translated">Можно также создать таблицу с первичным ключом, состоящий из двух или более столбцов.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>This occurs when a single column can't contain enough unique values.</source>
          <target state="translated">Это происходит, когда один столбец не может содержать достаточного количества уникальных значений.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>For example, a two column primary key might consist of a "FirstName" and "LastName" column.</source>
          <target state="translated">Например два столбца первичного ключа может состоять из столбца «Имя» и «Фамилия».</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Because primary keys can be made up of more than one column, the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property consists of an array of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">Поскольку первичные ключи могут состоять из более чем один столбец <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> свойство состоит из массива <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The first example shows how to return the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> displayed in a <ph id="ph2">`DataGrid`</ph>.</source>
          <target state="translated">В первом примере показано, как возвращать столбцы первичного ключа для <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> в <ph id="ph2">`DataGrid`</ph>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The second example demonstrates how to set the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Во втором примере показано, как задать столбцы первичного ключа для <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The key is a foreign key.</source>
          <target state="translated">Ключ является внешним ключом.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Считывает XML-схему и данные в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> Метод предоставляет способ чтения только данных или данных вместе со схемой в <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> из документа XML, тогда как <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод считывает только схему.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that include the <ph id="ph2">`XmlReadMode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Для чтения данных и схемы, используйте один из <ph id="ph1">`ReadXML`</ph> перегрузки, включающие <ph id="ph2">`XmlReadMode`</ph> параметра и присвойте ему значение <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Для записи XML-данных или схемы и данных из <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`WriteXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Для записи только схемы используйте <ph id="ph1">`WriteXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An object that derives from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph></source>
          <target state="translated">Производный объект от класса <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Считывает XML-схему и данные в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный класс <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> служит для чтения данных.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и его потомков, загружаемых с данными из предоставленного <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Поведение данного метода, идентичной <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> метода, за исключением того, в этом случае данные загружаются только для текущей таблицы и всех его потомков.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> Метод предоставляет способ чтения только данных или данных вместе со схемой в <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> из документа XML, тогда как <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод считывает только схему.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Для записи XML-данных или схемы и данных из <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`WriteXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Для записи только схемы используйте <ph id="ph1">`WriteXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Если встроенная схема, встроенная схема используется для расширения существующей реляционной структуры перед загрузкой данных.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">При возникновении любого конфликта (например, же столбец в той же таблице, определенных с различными типами данных) вызывает исключение.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Если схема в строке не указан, реляционную структуру распространяется через определение, при необходимости, структурой XML-документа.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Не связывает XML-элемента с соответствующим <ph id="ph2">`DataColumn`</ph> или <ph id="ph3">`DataTable`</ph> при экранируются допустимых символов XML как («_») в сериализованный XML.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Когда допустимые символы в имени XML-элемента удаляются, элемент игнорируется при обработке.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержащий два столбца и десяти строк.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">В примере выполняется запись <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> схему и данные в потоке памяти путем вызова <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">В примере создается второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и вызывает <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод для заполнения его со схемой и данными.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, используемый для чтения данных.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Считывает XML-схему и данные в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный класс <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> служит для чтения данных.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и его потомков, загружаемых с данными из предоставленного <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Поведение данного метода, идентичной <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> метода, за исключением того, в этом случае данные загружаются только для текущей таблицы и всех его потомков.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> Метод предоставляет способ чтения только данных или данных вместе со схемой в <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> из документа XML, тогда как <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод считывает только схему.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Для записи XML-данных или схемы и данных из <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`WriteXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Для записи только схемы используйте <ph id="ph1">`WriteXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Если встроенная схема, встроенная схема используется для расширения существующей реляционной структуры перед загрузкой данных.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">При возникновении любого конфликта (например, же столбец в той же таблице, определенных с различными типами данных) вызывает исключение.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Если схема в строке не указан, реляционную структуру распространяется через определение, при необходимости, структурой XML-документа.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Не связывает XML-элемента с соответствующим <ph id="ph2">`DataColumn`</ph> или <ph id="ph3">`DataTable`</ph> при экранируются допустимых символов XML как («_») в сериализованный XML.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Когда допустимые символы в имени XML-элемента удаляются, элемент игнорируется при обработке.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержащий два столбца и десяти строк.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">В примере выполняется запись <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> схему и данные в потоке памяти путем вызова <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">В примере создается второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и вызывает <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод для заполнения его со схемой и данными.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The name of the file from which to read the data.</source>
          <target state="translated">Имя файла, из которого читаются данные.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">Читает данные и схему XML в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> из указанного файла.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> служит для чтения данных.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и его потомков, загружаемых с данными в файле с именем в предоставленном <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Поведение данного метода, идентичной <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> метода, за исключением того, в этом случае данные загружаются только для текущей таблицы и всех его потомков.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> Метод предоставляет способ чтения только данных или данных вместе со схемой в <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> из документа XML, тогда как <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод считывает только схему.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Для записи XML-данных или схемы и данных из <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`WriteXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Для записи только схемы используйте <ph id="ph1">`WriteXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Если встроенная схема, встроенная схема используется для расширения существующей реляционной структуры перед загрузкой данных.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">При возникновении любого конфликта (например, же столбец в той же таблице, определенных с различными типами данных) вызывает исключение.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Если схема в строке не указан, реляционную структуру распространяется через определение, при необходимости, структурой XML-документа.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Не связывает XML-элемента с соответствующим <ph id="ph2">`DataColumn`</ph> или <ph id="ph3">`DataTable`</ph> при экранируются допустимых символов XML как («_») в сериализованный XML.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Когда допустимые символы в имени XML-элемента удаляются, элемент игнорируется при обработке.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержащий два столбца и десяти строк.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to disk.</source>
          <target state="translated">В примере выполняется запись <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> схемы и данных на диске.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">В примере создается второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и вызывает <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод для заполнения его со схемой и данными.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, используемый для чтения данных.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Reads XML Schema and Data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Читает данные и схему XML в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанное средство чтения <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> служит для чтения данных.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Текущий <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и его потомков, загружаемых с данными в файле с именем в предоставленном <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">Поведение данного метода, идентичной <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метода, за исключением того, в этом случае данные загружаются только для текущей таблицы и всех его потомков.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> Метод предоставляет способ чтения только данных или данных вместе со схемой в <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> из документа XML, тогда как <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод считывает только схему.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Для записи XML-данных или схемы и данных из <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`WriteXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Для записи только схемы используйте <ph id="ph1">`WriteXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Если встроенная схема, встроенная схема используется для расширения существующей реляционной структуры перед загрузкой данных.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">При возникновении любого конфликта (например, же столбец в той же таблице, определенных с различными типами данных) вызывает исключение.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Если схема в строке не указан, реляционную структуру распространяется через определение, при необходимости, структурой XML-документа.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Не связывает XML-элемента с соответствующим <ph id="ph2">`DataColumn`</ph> или <ph id="ph3">`DataTable`</ph> при экранируются допустимых символов XML как («_») в сериализованный XML.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Когда допустимые символы в имени XML-элемента удаляются, элемент игнорируется при обработке.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> содержащий два столбца и десяти строк.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">В примере выполняется запись <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> схему и данные для <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data from the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">В примере создается второй <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и вызывает <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод для заполнения его схемы и данных из <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Считывает схему XML в таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">`ReadXmlSchema`</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">`ReadXmlSchema`</ph> метод для создания схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Для записи схемы в XML-документа, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML-схема интерпретируется согласно стандарту XSD.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> Метод обычно вызывается перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод, который используется для заполнения <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The stream used to read the schema.</source>
          <target state="translated">Поток, используемый для чтения схемы.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified stream.</source>
          <target state="translated">Считывает XML-схему в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный поток.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод для создания схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Для записи схемы в XML-документа, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML-схема интерпретируется согласно стандарту XSD.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> Метод обычно вызывается перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод, который используется для заполнения <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Для создания вложенного отношения с помощью XML-схемы, используйте неявные вложенные элементы.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>You can also configure the nested relation to use explicit column names.</source>
          <target state="translated">Можно также настроить вложенное отношение для использования явных имен столбцов.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать во вложенном отношении.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>и записывает схему для этой таблицы <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema.</source>
          <target state="translated">Затем в примере создается новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и ее схема читается из сохраненной XML-схемы.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated">Средство чтения <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, используемое для чтения сведений схемы.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Считывает XML-схему в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный объект <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод для создания схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Для записи схемы в XML-документа, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML-схема интерпретируется согласно стандарту XSD.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> Метод обычно вызывается перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод, который используется для заполнения <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Для создания вложенного отношения с помощью XML-схемы, используйте неявные вложенные элементы.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">Также можно перенастроить вложенное отношение для использования явных имен столбцов.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать во вложенном отношении.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>и записывает схему для этой таблицы <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) as its source.</source>
          <target state="translated">Затем в примере создается новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и ее схема читается из сохраненной XML-схемы с помощью <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> (который наследуется от <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) в качестве источника.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The name of the file from which to read the schema information.</source>
          <target state="translated">Имя файла, из которого считываются сведения схемы.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">Считывает XML-схему из указанного файла в таблицу <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод для создания схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Для записи схемы в XML-документа, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML-схема интерпретируется согласно стандарту XSD.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">`DataTable`</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> Метод обычно вызывается перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод, который используется для заполнения <ph id="ph3">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">Для создания вложенного отношения с помощью XML-схемы, используйте неявные вложенные элементы.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">Также можно перенастроить вложенное отношение для использования явных имен столбцов.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать во вложенном отношении.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a file.</source>
          <target state="translated">Следующее консольное приложение создает новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>и записывает схему для этой таблицы в файл.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using the file as its source.</source>
          <target state="translated">Затем в примере создается новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и ее схема читается из сохраненной XML-схемы с помощью файла в качестве источника.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated">Средство чтения <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, используемое для чтения сведений схемы.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Считывает XML-схему в <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный объект <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> метод для создания схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Для записи схемы в XML-документа, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML-схема интерпретируется согласно стандарту XSD.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Будет создано исключение.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph> Метод обычно вызывается перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> метод, который используется для заполнения <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The way to create a nested relation using XML schema is to have implicit nested elements.</source>
          <target state="translated">Способ создания вложенного отношения с помощью XML-схемы будет иметь неявные вложенные элементы.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Additionally, the nested relation could be re-wired, to use explicit column names.</source>
          <target state="translated">Кроме того вложенное отношение может быть переопределено для использования явных имен столбцов.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">Является обязательным для элементов, которые должны быть неявно вложенными для соответствующего DataTables участвовать во вложенном отношении.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>и записывает схему для этой таблицы <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) as its source.</source>
          <target state="translated">Затем в примере создается новый <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> и ее схема читается из сохраненной XML-схемы с помощью <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> (который наследуется от <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) в качестве источника.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>Reads from an XML stream.</source>
          <target state="translated">Считывает из XML-потока.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rolls back all changes that have been made to the table since it was loaded, or the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Выполняется откат всех изменений, внесенных в таблицу с момента ее загрузки или после последнего вызова метода <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that are still in edit-mode cancel their edits.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> вызове любой <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> объекты, которые все еще находятся в режиме редактирования отменить их изменения.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>New rows are removed.</source>
          <target state="translated">Новые строки будут удалены.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rows with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> set to <ph id="ph2">`Modified`</ph> or <ph id="ph3">`Deleted`</ph> return back to their original state.</source>
          <target state="translated">Строки, у которых <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> значение <ph id="ph2">`Modified`</ph> или <ph id="ph3">`Deleted`</ph> возвращаются в исходное состояние.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>The following example makes several changes to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, but rejects the changes by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере происходит несколько изменений <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, но отклоняет изменения, вызвав <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.RemotingFormat">
          <source>Gets or sets the serialization format.</source>
          <target state="translated">Возвращает или задает формат сериализации.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.RemotingFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> enumeration specifying either <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> or <ph id="ph3">&lt;see langword="Xml" /&gt;</ph> serialization.</source>
          <target state="translated">Перечисление <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph>, задающее сериализацию типа <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> или <ph id="ph3">&lt;see langword="Xml" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Resets the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to its original state.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в исходное состояние.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Reset removes all data, indexes, relations, and columns of the table.</source>
          <target state="translated">Сброс удаляет все данные, индексы, связи и столбцы таблицы.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</source>
          <target state="translated">Если набор данных содержит таблицы данных, то таблица по-прежнему будет частью набора данных после того, как таблица будет сброшена.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanged">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> has been changed successfully.</source>
          <target state="translated">Происходит после успешного изменения <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanging">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is changing.</source>
          <target state="translated">Происходит при изменении объекта <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleted">
          <source>Occurs after a row in the table has been deleted.</source>
          <target state="translated">Происходит после удаления строки таблицы.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleted">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleting">
          <source>Occurs before a row in the table is about to be deleted.</source>
          <target state="translated">Происходит перед удалением строки таблицы.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleting">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обработка событий DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Rows">
          <source>Gets the collection of rows that belong to this table.</source>
          <target state="translated">Получает коллекцию строк, принадлежащих данной таблице.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> that contains <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects; otherwise a null value if no <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects exist.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph>, содержащая объекты <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>; в противном случае — значение null, если нет ни одного объекта <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To create a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you must use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new object.</source>
          <target state="translated">Чтобы создать новую <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, необходимо использовать <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> метод для возврата объекта.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Such an object is automatically configured according to the schema defined for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through its collection of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">Такой объект автоматически настраивается в соответствии со схемой, определенной для <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> через его коллекцию <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After creating a new row and setting the values for each column in the row, add the row to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">После создания новой строки и задание значений для каждого столбца в строке, добавьте строку <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> с помощью <ph id="ph2">`Add`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in the collection represents a row of data in the table.</source>
          <target state="translated">Каждый <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> в коллекции представляет строку данных в таблице.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To commit a change to the value of a column in the row, you must invoke the <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы сохранить измененное значение столбца в строке, необходимо вызвать <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The following shows two examples of returning and setting rows.</source>
          <target state="translated">Ниже представлены два примера возврата и задания строк.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The first example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property and prints the value of each column for every row.</source>
          <target state="translated">В первом примере используется <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> свойства и выводится значение каждого столбца для каждой строки.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The second example uses the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object with the schema of the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Во втором примере <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> объекта <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> метод для создания нового <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> объекта со схемой <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After setting the row values, the row is added to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> through the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">После задания значений, то добавляется строка для <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> через <ph id="ph2">`Add`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Получает массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Получает массив всех объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">Чтобы обеспечить правильную сортировку, укажите критерии сортировки с <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>The following example returns an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects through the <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере возвращается массив <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объектов через <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Условия фильтрации строк.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Примеры по фильтрации строк см. в разделе <bpt id="p1">[</bpt>Синтаксис DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria.</source>
          <target state="translated">Получает массив всех объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, отвечающих условиям фильтра.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To create the <ph id="ph1">`filterExpression`</ph> argument, use the same rules that apply to the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value for creating filters.</source>
          <target state="translated">Для создания <ph id="ph1">`filterExpression`</ph> аргумент, использующих те же правила, которые применяются к <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> класса <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> значение свойства для создания фильтров.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">Чтобы обеспечить правильную сортировку, укажите критерии сортировки с <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Если столбец фильтра содержит значение null, он не будет часть результата.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">В следующем примере выражение фильтра для возвращения массива <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Условия фильтрации строк.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Примеры по фильтрации строк см. в разделе <bpt id="p1">[</bpt>Синтаксис DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">Строка, задающая столбец и порядок его сортировки.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria, in the specified sort order.</source>
          <target state="translated">Получает массив всех объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, отвечающих условиям фильтра, согласно указанному порядку сортировки.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects matching the filter expression.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, отвечающих выражению для фильтра.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">Форму <ph id="ph1">`filterExpression`</ph> аргумент, использующих те же правила для создания <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> класса <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> значение свойства.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph> Аргумент также использует те же правила для создания класса <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> строки.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Если столбец фильтра содержит значение null, он не будет часть результата.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">В следующем примере выражение фильтра для возвращения массива <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">Условия фильтрации строк.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">Примеры по фильтрации строк см. в разделе <bpt id="p1">[</bpt>Синтаксис DataView RowFilter [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">Строка, задающая столбец и порядок его сортировки.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter in the order of the sort that match the specified state.</source>
          <target state="translated">Получает массив всех объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, отвечающих условиям фильтра, согласно порядку сортировки, соответствующему указанному состоянию.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Массив объектов <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">Форму <ph id="ph1">`filterExpression`</ph> аргумент, использующих те же правила для создания <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> класса <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> значение свойства.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph> Аргумент также использует те же правила для создания класса <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> строки.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">Если столбец фильтра содержит значение null, он не будет часть результата.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The following example uses a filter expression and record state to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">В следующем примере используется фильтр выражение и запись состояния для возвращения массива <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает тип <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> для объекта <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Интерфейс <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> для <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Узлы связывают <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> для <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> и разрешить связь между ними, а также предоставляют способ для управления компонентами в контейнере.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если коллекция является коллекцией объектов <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from the object.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>, который можно привязать к источнику данных из объекта.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>, описывающая представление XML объекта, полученного из метода <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> и включенного в метод <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>An XmlReader.</source>
          <target state="translated">XmlReader.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>An XmlWriter.</source>
          <target state="translated">XmlWriter.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</source>
          <target state="translated">Описание этого члена см. в разделе <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Этот член представляет собой явную реализацию члена интерфейса.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Он может использоваться, только если экземпляр <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> приведен к типу интерфейса <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableCleared">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">Происходит после очистки <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> События сразу после все строки успешно удалены перед вызовом <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> метод возвращает управление вызывающему объекту.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is not fired if there are any exceptions during the clear operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> Событие не создается, если все исключения во время операции очистки.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableClearing">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">Происходит, когда очищается таблица <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> Событие перед началом обработки <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> начала операции.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>This event is always fired when the <ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method is invoked, even if the table contains zero rows.</source>
          <target state="translated">Это событие всегда возникает, когда <ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> вызывается метод, даже если таблица содержит нулевые строки.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Возвращает или задает имя таблицы для объекта <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Имя <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> is used to return this table from the parent <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph> (returned by the <ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> Используется для возврата в этой таблице от родительского <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> объекта <ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph> (возвращенный <ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> свойство).</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The following example prints the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> for each table in a collection of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">В следующем примере выводится <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> для каждой таблицы в коллекцию <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty string ("") is passed in and this table belongs to a collection.</source>
          <target state="translated">Передается значение <ph id="ph1">&lt;see langword="null" /&gt;</ph> или пустая строка (""), а таблица принадлежит коллекции.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>The table belongs to a collection that already has a table with the same name.</source>
          <target state="translated">Таблица принадлежит коллекции, которая уже содержит таблицу с таким же именем.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>(Comparison is case-sensitive).</source>
          <target state="translated">(При сравнении учитывается регистр).</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableNewRow">
          <source>Occurs when a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is inserted.</source>
          <target state="translated">Происходит, когда вставляется новая строка <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>Fires after a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">Активируется после создания нового <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> был создан с помощью <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>This event is fired before the invoked <ph id="ph1">`NewRow`</ph> method returns.</source>
          <target state="translated">Это событие возникает перед вызываемую <ph id="ph1">`NewRow`</ph> возвращает метод.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>The new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> instance is detached; it has not been added to the collection.</source>
          <target state="translated">Новый <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> экземпляр отключен; он не был добавлен в коллекцию.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>, if there is one as a concatenated string.</source>
          <target state="translated">Получает свойства <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> и <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>, если существует сцепленная строка.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>A string consisting of the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph> values.</source>
          <target state="translated">Строка, состоящая из значений свойств <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> и <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Возвращает <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> для <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph> method.</source>
          <target state="translated">В следующем примере возвращается <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> с помощью <ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML.</source>
          <target state="translated">Записывает текущее содержимое таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в формате XML.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> экземпляров, добавляются в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, создает <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> двух связанных таблиц, а затем использует <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метода для записи данных, содержащихся в родительской таблице для <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">В примере показано поведение при задании <ph id="ph1">`writeHierarchy`</ph> параметр для каждого из его значений.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of WriteXml.</source>
          <target state="translated">В этом примере показано, как использовать один из перегруженных версий метода WriteXml.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Другие примеры, которые могут быть доступны см. в разделах отдельных перегрузки.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">В этом примере в окне консоли отображаются следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Поток, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> — используется для записи содержимого.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">Файл, в который записываются XML-данные.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">Записывает текущее содержимое таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в формате XML, используя указанный файл.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated">Средство записи <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, с помощью которого записывается содержимое.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Поток, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Поток, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в указанный файл с помощью заданного объекта <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> — используется для записи содержимого.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write the data for the current table and all its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех его потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> экземпляров, добавляются в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, создает <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> двух связанных таблиц, а затем использует <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метода для записи данных, содержащихся в родительской таблице для <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">В примере показано поведение при задании <ph id="ph1">`writeHierarchy`</ph> параметр <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, используемый для записи документа.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с помощью указанных <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> и  <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">Файл, в который записываются XML-данные.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">Записывает текущее содержимое таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в формате XML, используя указанный файл.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">Имя файла, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный файл и заданное перечисление <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated">Средство записи <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, с помощью которого записывается содержимое.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущее содержимое <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> как XML с использованием указанного элемента <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, используемый для записи документа.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с помощью указанных <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> и  <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">Поток, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в указанный файл с помощью заданного объекта <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">`DataTable`</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">`XmlWriteMode`</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Как правило <ph id="ph1">`WriteXml`</ph> метод сохраняет данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">`WriteXmlSchema`</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">`DataTable`</ph> в XML-документ, в то время как <ph id="ph3">`WriteXmlSchema`</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">`XmlWriteMode`</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, используемый для записи документа.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с помощью указанных <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> и  <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Как правило <ph id="ph1">`WriteXml`</ph> метод сохраняет данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые содержатся в <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> экземпляров, добавляются в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, создает <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> двух связанных таблиц, а затем использует <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метода для записи данных, содержащихся в родительской таблице для <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">В примере показано поведение при задании <ph id="ph1">`writeHierarchy`</ph> параметр для каждого из его значений.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">В этом примере в окне консоли отображаются следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">Имя файла, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, используя указанный файл и заданное перечисление <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">Как правило <ph id="ph1">`WriteXml`</ph> метод сохраняет данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If you want to save the data for the current table and all of schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Если вы хотите сохранить данные для текущей таблицы и все схемы, <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всех потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, используемый для записи документа.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает содержимое текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Записывает текущие данные и по возможности схему для <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> с помощью указанных <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> и  <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Чтобы записать схему, задайте в параметре <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> значение <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> Метод предоставляет способ записи только данных или данных вместе со схемой из <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ, в то время как <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метод записывает только схему.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Для записи данных и схемы, используйте одну из перегрузок, которые включают <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> параметра и присвойте ему значение <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Обратите внимание, что то же самое справедливо для <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> методов, соответственно.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Для считывания XML-данных или схемы и данных в <ph id="ph1">`DataTable`</ph>, используйте <ph id="ph2">`ReadXml`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Для чтения только схемы, используйте <ph id="ph1">`ReadXmlSchema`</ph> метод.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXml`</ph> метод записывает данные только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать данные для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Будут созданы, если тип столбца в <ph id="ph2">`DataRow`</ph> чтение и запись данных для реализует <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> , но не реализует <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> экземпляров, добавляются в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, создает <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> двух связанных таблиц, а затем использует <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метода для записи данных, содержащихся в родительской таблице для <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">В примере показано поведение при задании <ph id="ph1">`writeHierarchy`</ph> параметр для каждого из его значений.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`WriteXmlSchema`</ph> For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">В этом примере показано, как использовать один из перегруженных версий <ph id="ph1">`WriteXmlSchema`</ph> для других примеров, которые могут быть доступны, см. в разделах отдельных перегрузки.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">В этом примере в окне консоли отображаются следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">Поток, в который записывается XML-схема.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы в указанный поток.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, с помощью которого осуществляется запись.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы, используя указанный класс <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The name of the file to use.</source>
          <target state="translated">Имя используемого файла.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы в указанный файл.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to use.</source>
          <target state="translated">Используемый <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы, используя указанный класс <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">Поток, в который записывается XML-схема.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает схему текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы в указанный поток.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXmlSchema`</ph> метод записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, с помощью которого осуществляется запись.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает схему текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы, используя указанный класс <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXmlSchema`</ph> метод записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">Следующее консольное приложение создает два <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> экземпляров, добавляются в <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, создает <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> двух связанных таблиц, а затем использует <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> метода для записи данных, содержащихся в родительской таблице для <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">В примере показано поведение при задании <ph id="ph1">`writeHierarchy`</ph> параметр для каждого из его значений.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">В этом примере в окне консоли отображаются следующие выходные данные:</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The name of the file to use.</source>
          <target state="translated">Имя используемого файла.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает схему текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы в указанный файл.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXmlSchema`</ph> метод записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, используемый для записи документа.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="true" /&gt;</ph>, записывает схему текущей таблицы и всех ее потомков.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">Если значение равно <ph id="ph1">&lt;see langword="false" /&gt;</ph> (значение по умолчанию), записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает текущую структуру данных таблицы <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> в виде XML-схемы, используя указанный класс <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> способ записи схемы для <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> в XML-документ.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Схема содержит определения таблиц, связей и ограничений.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">XML-схема записывается с использованием стандарта XSD.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы записать данные в XML-документ, используйте <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">Обычно <ph id="ph1">`WriteXmlSchema`</ph> метод записывает схему только для текущей таблицы.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с <ph id="ph1">`writeHierarchy`</ph> равным <ph id="ph2">`true`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>