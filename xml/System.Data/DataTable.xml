<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b4c6d4eea254ee4906c2c3917cdebe98c32d7df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449458" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="05aac-101">Представляет одну таблицу данных в памяти.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05aac-101">Represents one table of in-memory data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-102"><xref:System.Data.DataTable> Является центральным объектом библиотеки ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="05aac-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="05aac-103">Другие объекты, использующие <xref:System.Data.DataTable> включают <xref:System.Data.DataSet> и <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="05aac-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="05aac-104">При доступе к <xref:System.Data.DataTable> объектов, обратите внимание, что они по условию с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="05aac-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="05aac-105">Например, если один <xref:System.Data.DataTable> называется «mydatatable» и другое с именем «Mydatatable», строка, используемая для поиска одной из таблиц считается учитывается регистр.</span><span class="sxs-lookup"><span data-stu-id="05aac-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="05aac-106">Однако если существует «mydatatable» и «Mydatatable» нет, строка поиска, которая считается без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="05aac-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="05aac-107">Объект <xref:System.Data.DataSet> может содержать два <xref:System.Data.DataTable> объектов с одинаковым <xref:System.Data.DataTable.TableName%2A> значение свойства, но разные <xref:System.Data.DataTable.Namespace%2A> значения свойств.</span><span class="sxs-lookup"><span data-stu-id="05aac-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="05aac-108">Дополнительные сведения о работе с <xref:System.Data.DataTable> объектов, см. в разделе [создание объекта DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="05aac-109">Если вы создаете <xref:System.Data.DataTable> программно, необходимо сначала определить его схему путем добавления <xref:System.Data.DataColumn> объектов <xref:System.Data.DataColumnCollection> (через <xref:System.Data.DataTable.Columns%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="05aac-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="05aac-110">Дополнительные сведения о добавлении <xref:System.Data.DataColumn> объектов, см. в разделе [Добавление столбцов к таблице DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="05aac-111">Для добавления строк в <xref:System.Data.DataTable>, необходимо сначала воспользоваться <xref:System.Data.DataTable.NewRow%2A> метод для возврата нового <xref:System.Data.DataRow> объекта.</span><span class="sxs-lookup"><span data-stu-id="05aac-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="05aac-112"><xref:System.Data.DataTable.NewRow%2A> Метод возвращает по одной строке со схемой <xref:System.Data.DataTable>, так как он определен в таблице <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="05aac-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="05aac-113">Максимальное число строк, которые <xref:System.Data.DataTable> можно хранилища равно 16 777 216.</span><span class="sxs-lookup"><span data-stu-id="05aac-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="05aac-114">Дополнительные сведения см. в разделе [Добавление данных в таблицу данных](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="05aac-115"><xref:System.Data.DataTable> Также содержит коллекцию <xref:System.Data.Constraint> объекты, которые могут использоваться для обеспечения целостности данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="05aac-116">Дополнительные сведения см. в разделе [ограничения таблиц данных](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="05aac-117">Существует много <xref:System.Data.DataTable> события, которые могут использоваться для определения того, при внесении изменений в таблицу.</span><span class="sxs-lookup"><span data-stu-id="05aac-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="05aac-118">К ним относятся <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting> и <xref:System.Data.DataTable.RowDeleted>.</span><span class="sxs-lookup"><span data-stu-id="05aac-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="05aac-119">Дополнительные сведения о событиях, которые можно использовать с <xref:System.Data.DataTable>, см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="05aac-120">При создании экземпляра класса <xref:System.Data.DataTable> создается, некоторые записи и чтения свойств начальные значения.</span><span class="sxs-lookup"><span data-stu-id="05aac-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="05aac-121">Список этих значений, см. в разделе <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> разделе конструктор.</span><span class="sxs-lookup"><span data-stu-id="05aac-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-122"><xref:System.Data.DataSet> И <xref:System.Data.DataTable> объекты наследуют от <xref:System.ComponentModel.MarshalByValueComponent>и поддерживают <xref:System.Runtime.Serialization.ISerializable> интерфейс для удаленного взаимодействия .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="05aac-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="05aac-123">Это единственные объекты ADO.NET, которые можно использовать для удаленного взаимодействия .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="05aac-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-124">В следующем примере создается два <xref:System.Data.DataTable> объектов и второй <xref:System.Data.DataRelation> и добавляет новые объекты к <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="05aac-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="05aac-125">Таблицы отображаются в <xref:System.Windows.Forms.DataGridView> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="05aac-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-126">В этом примере показано, как вручную создать объект DataTable с определения конкретной схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="05aac-127">Создайте несколько DataTables и определите начальные столбцы.</span><span class="sxs-lookup"><span data-stu-id="05aac-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="05aac-128">Создание ограничения таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="05aac-129">Введите значения и отображения таблиц.</span><span class="sxs-lookup"><span data-stu-id="05aac-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="05aac-130">Создание столбцов выражений и отображения таблиц.</span><span class="sxs-lookup"><span data-stu-id="05aac-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="05aac-131">Проекты C# и Visual Basic с этим образцом кода можно найти на [примеры кода от разработчиков](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span><span class="sxs-lookup"><span data-stu-id="05aac-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="05aac-132">Этот тип является безопасным для многопоточных операций чтения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05aac-132">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="05aac-133">Необходимо синхронизировать все операции записи.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05aac-133">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-134">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-134">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-135">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" />, не передавая ему никаких аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-136">Конструктор задает начальные значения для всех свойств <xref:System.Data.DataTable> объекта.</span><span class="sxs-lookup"><span data-stu-id="05aac-136">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="05aac-137">Ниже приведены свойства и их значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="05aac-137">The following table shows the properties and their default values.</span></span> <span data-ttu-id="05aac-138">При создании экземпляра класса <xref:System.Data.DataTable> создается следующие начальные значения свойств чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="05aac-138">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="05aac-139">Свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-139">Property</span></span>|<span data-ttu-id="05aac-140">Значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="05aac-140">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="05aac-141">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="05aac-141">**CaseSensitive**</span></span>|<span data-ttu-id="05aac-142">Совпадение с кодом родительского <xref:System.Data.DataSet>, если он относится к одному.</span><span class="sxs-lookup"><span data-stu-id="05aac-142">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="05aac-143">В противном случае — значение `false`.</span><span class="sxs-lookup"><span data-stu-id="05aac-143">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="05aac-144">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="05aac-144">**DisplayExpression**</span></span>|<span data-ttu-id="05aac-145">пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="05aac-145">Empty string ("")</span></span>|  
|<span data-ttu-id="05aac-146">**Языковой стандарт**</span><span class="sxs-lookup"><span data-stu-id="05aac-146">**Locale**</span></span>|<span data-ttu-id="05aac-147">Совпадение с кодом родительского <xref:System.Data.DataSet> объекта <xref:System.Globalization.CultureInfo> (возвращенный <xref:System.Data.DataSet.Locale%2A> свойства); Если не существует родительского, по умолчанию используется текущая система <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="05aac-147">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="05aac-148">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="05aac-148">**MinimumCapacity**</span></span>|<span data-ttu-id="05aac-149">50 строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-149">50 rows.</span></span>|  
  
 <span data-ttu-id="05aac-150">Можно изменить значение любого из этих свойств, вызвав его отдельно.</span><span class="sxs-lookup"><span data-stu-id="05aac-150">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-151">В следующем примере создается новый <xref:System.Data.DataTable> с <xref:System.Data.DataColumn> и <xref:System.Data.DataRow>и отображает его в <xref:System.Windows.Forms.DataGridView> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="05aac-151">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable tableName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="05aac-152">Имя, задаваемое таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-152">The name to give the table.</span>
          </span>
          <span data-ttu-id="05aac-153">Если значение параметра <c>tableName</c> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-153">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-154">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с указанным именем таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-154">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05aac-155">В следующем примере создается <xref:System.Data.DataTable> и отображает его в <xref:System.Windows.Forms.DataGridView> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="05aac-155">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="05aac-156">Данные, необходимые для сериализации или десериализации объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-156">The data needed to serialize or deserialize an object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="05aac-157">Источник и назначение данного сериализованного потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-157">The source and destination of a given serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-158">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> со свойствами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-158">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-159">Эта реализация <xref:System.Data.DataTable> конструктор необходим для <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-159">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string * string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (tableName, tableNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="tableNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="05aac-160">Имя, задаваемое таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-160">The name to give the table.</span>
          </span>
          <span data-ttu-id="05aac-161">Если значение параметра <c>tableName</c> — <see langword="null" /> или пустая строка, имя по умолчанию присваивается при добавлении в коллекцию <see cref="T:System.Data.DataTableCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-161">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <param name="tableNamespace">
          <span data-ttu-id="05aac-162">Пространство имен для XML-представления данных, хранящихся в <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-162">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-163">Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTable" /> с заданными именем таблицы и пространством имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-163">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataTable.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-164">Фиксирует все изменения, внесенные в таблицу после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-164">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-165">Когда <xref:System.Data.DataTable.AcceptChanges%2A> вызывается, каждый <xref:System.Data.DataRow> объект по-прежнему в режиме редактирования успешно завершает свои изменения.</span><span class="sxs-lookup"><span data-stu-id="05aac-165">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="05aac-166"><xref:System.Data.DataRowState> Также изменяется: все `Added` и `Modified` строк становятся `Unchanged`, и `Deleted` строки будут удалены.</span><span class="sxs-lookup"><span data-stu-id="05aac-166">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="05aac-167"><xref:System.Data.DataTable.AcceptChanges%2A> Обычно вызывается метод <xref:System.Data.DataTable> после попытки обновления <xref:System.Data.DataSet> с помощью <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-167">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-168">В следующем примере проверяется каждой таблицы ошибок.</span><span class="sxs-lookup"><span data-stu-id="05aac-168">The following example tests each table for errors.</span></span> <span data-ttu-id="05aac-169">Если ошибки могут быть согласованы (путем передачи его неопределенной функции), <xref:System.Data.DataTable.AcceptChanges%2A> будет вызван; в противном случае — значение <xref:System.Data.DataTable.RejectChanges%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="05aac-169">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataTable.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-170">Начинает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-170">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="05aac-171">Инициализация происходит во время выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-171">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-172">Этот метод применяется в среде разработки Visual Studio .NET для запуска инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="05aac-172">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="05aac-173"><xref:System.Data.DataTable.EndInit%2A> Метод завершает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="05aac-173">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="05aac-174">С помощью <xref:System.Data.DataTable.BeginInit%2A> и <xref:System.Data.DataTable.EndInit%2A> методы предотвращает использование до полной инициализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="05aac-174">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberSignature Language="F#" Value="member this.BeginLoadData : unit -&gt; unit" Usage="dataTable.BeginLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-175">Отключает уведомления, ведение индексов и ограничения в процессе загрузки данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-175">Turns off notifications, index maintenance, and constraints while loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-176">Используйте <xref:System.Data.DataTable.BeginLoadData%2A> в сочетании с <xref:System.Data.DataTable.LoadDataRow%2A> и <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-176">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitive : bool with get, set" Usage="System.Data.DataTable.CaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableCaseSensitiveDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-177">Показывает, учитывается ли регистр при сравнении строк в таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-177">Indicates whether string comparisons within the table are case-sensitive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-178">Значение <see langword="true" />, если при сравнении регистр учитывается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-178">
              <see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="05aac-179">Значение по умолчанию устанавливается равным значению свойства <see cref="T:System.Data.DataSet" /> родительского объекта <see cref="P:System.Data.DataSet.CaseSensitive" />, или значение <see langword="false" />, если объект <see cref="T:System.Data.DataTable" /> создавался независимо от класса <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-179">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-180"><xref:System.Data.DataTable.CaseSensitive%2A> Свойство влияет на сравнение строк в сортировку, поиск и фильтрацию.</span><span class="sxs-lookup"><span data-stu-id="05aac-180">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-181">В следующем примере вызывается <xref:System.Data.DataTable.Select%2A> вызывается дважды для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-181">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-182">В первый раз <xref:System.Data.DataTable.CaseSensitive%2A> свойству `false`, во-вторых, чтобы `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-182">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ChildRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableChildRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-183">Получает коллекцию дочерних отношений для объекта <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-183">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-184">Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая дочерние отношения для таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-184">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span>
          </span>
          <span data-ttu-id="05aac-185">Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-185">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-186">Объект <xref:System.Data.DataRelation> определяет связь между двумя таблицами.</span><span class="sxs-lookup"><span data-stu-id="05aac-186">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="05aac-187">Как правило две таблицы связаны с помощью одного поля, содержит те же данные.</span><span class="sxs-lookup"><span data-stu-id="05aac-187">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="05aac-188">Например таблица, которая содержит данные об адресах может иметь одно поле с кодами, представляющими страны и регионы.</span><span class="sxs-lookup"><span data-stu-id="05aac-188">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="05aac-189">Второй таблицы, содержащий данные для страны или региона будет одно поле, содержащее код, определяющий страны или региона, и именно этот код, который вставляется в соответствующее поле в первой таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-189">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="05aac-190">Объект <xref:System.Data.DataRelation>, то, содержит по крайней мере четыре значения: (1) имя первой таблицы, (2) имя столбца в первой таблице, (3) имя второй таблицы и (4) имя столбца во второй таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-190">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-191">В следующем примере используется <xref:System.Data.DataTable.ChildRelations%2A> возвращаемого каждый дочерний элемент свойства <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-191">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-192">Каждое отношение используется в качестве аргумента в <xref:System.Data.DataRow.GetChildRows%2A> метод <xref:System.Data.DataRow> для возвращения массива строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-192">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="05aac-193">Затем выводит значение каждого столбца в строке.</span><span class="sxs-lookup"><span data-stu-id="05aac-193">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-194">Очищает <see cref="T:System.Data.DataTable" /> от всех данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-194">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-195">Удаляются все строки во всех таблицах.</span><span class="sxs-lookup"><span data-stu-id="05aac-195">All rows in all tables are removed.</span></span> <span data-ttu-id="05aac-196">Если таблица имеет назначенные дочерние отношения, которые могут привести дочерних строк будут изолированы, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-196">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="05aac-197">Если <xref:System.Data.DataSet> привязан к <xref:System.Xml.XmlDataDocument>, вызов <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> или <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> вызывает <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="05aac-197">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="05aac-198">Чтобы избежать такой ситуации, просмотреть каждую таблицу и удалить каждую строку за раз.</span><span class="sxs-lookup"><span data-stu-id="05aac-198">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="05aac-199">При использовании <xref:System.Data.DataTable.NewRow%2A> для создания новых строк, строки должны быть обработаны перед вызовом метода <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-199">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-200">В следующем примере удаляются все данные таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-200">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.DataTable&#xA;override this.Clone : unit -&gt; System.Data.DataTable" Usage="dataTable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-201">Копирует структуру объекта <see cref="T:System.Data.DataTable" />, включая все схемы и ограничения <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-201">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-202">Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же схему, что и текущий класс <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-202">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-203">Если эти классы являются производными, то и копия также будет таким же производным классом.</span><span class="sxs-lookup"><span data-stu-id="05aac-203">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="05aac-204">Создает новый клон <xref:System.Data.DataTable> ту же структуру, что и исходный <xref:System.Data.DataTable>, но данные не копируются (новый <xref:System.Data.DataTable> не будет содержать `DataRows`).</span><span class="sxs-lookup"><span data-stu-id="05aac-204">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="05aac-205">Чтобы скопировать структуру и данные в новую <xref:System.Data.DataTable>, используйте <xref:System.Data.DataTable.Copy%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-205">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-206">В следующем образце показано, как обновить структуру и ограничения для целевой таблицы, после выполнения DataTable.Clone.</span><span class="sxs-lookup"><span data-stu-id="05aac-206">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="05aac-207">Класс ClonedDataTable возвратит в целевую таблицу и включает все обновления события.</span><span class="sxs-lookup"><span data-stu-id="05aac-207">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="05aac-208">После клонирования изменения структуры в исходной таблице не будут отражены в целевой таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-208">After the clone, structure changes in the source table won’t be reflected in the destination table.</span></span> <span data-ttu-id="05aac-209">В частности этот образец выполняет следующие действия:</span><span class="sxs-lookup"><span data-stu-id="05aac-209">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="05aac-210">Обновите изменения столбцов в исходной таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-210">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="05aac-211">Обновите изменения объекта UniqueConstraint в исходной таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-211">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="05aac-212">Обновите изменения объекта ForeignKeyConstraint в исходной таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-212">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="05aac-213">Проекты C# и Visual Basic с этим образцом кода можно найти на [примеры кода от разработчиков](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span><span class="sxs-lookup"><span data-stu-id="05aac-213">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCreidts = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCreidts);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable deparments = NewDeparmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(deparments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(deparments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destiantion table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="05aac-214">В этом примере показано, как изменять данные в таблице данных и обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-214">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="05aac-215">Во-первых создайте базу данных:</span><span class="sxs-lookup"><span data-stu-id="05aac-215">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="05aac-216">Теперь можно скомпилировать и запустить пример.</span><span class="sxs-lookup"><span data-stu-id="05aac-216">You can now compile and run the sample.</span></span> <span data-ttu-id="05aac-217">[Изменение данных в DataTable и обновления источника данных](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) состоит из проектов Visual Basic и C# этого примера.</span><span class="sxs-lookup"><span data-stu-id="05aac-217">[How to modify data in DataTable and update to the data source](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-218">Происходит после изменения значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-218">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-219">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-219">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-220">Происходит при изменении значения указанного объекта <see cref="T:System.Data.DataColumn" /> в <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-220">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-221">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-221">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Data.DataColumnCollection" Usage="System.Data.DataTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-222">Получает коллекцию столбцов, принадлежащих данной таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-222">Gets the collection of columns that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-223">Коллекция <see cref="T:System.Data.DataColumnCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.DataColumn" /> для таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-223">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span>
          </span>
          <span data-ttu-id="05aac-224">Если отсутствуют объекты <see cref="T:System.Data.DataColumn" /> возвращается пустая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-224">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-225"><xref:System.Data.DataColumnCollection> Определяет схему таблицы, определяя тип данных каждого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-225">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-226">В следующем примере выводится каждое значение каждой строки в таблицу с помощью <xref:System.Data.DataTable.Columns%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-226">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Compute : string * string -&gt; obj" Usage="dataTable.Compute (expression, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="05aac-227">Вычисляемое выражение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-227">The expression to compute.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="05aac-228">Фильтр, ограничивающий число строк, используемых выражением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-228">The filter to limit the rows that evaluate in the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-229">Вычисляет заданное выражение для текущих строк, отвечающих условию фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-229">Computes the given expression on the current rows that pass the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-230">Класс <see cref="T:System.Object" />, которому задан результат сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-230">An <see cref="T:System.Object" />, set to the result of the computation.</span>
          </span>
          <span data-ttu-id="05aac-231">Если выражение имеет значение null, возвращаемое значение будет <see cref="F:System.DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-231">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-232">`expression` Параметр требует наличия статистической функции.</span><span class="sxs-lookup"><span data-stu-id="05aac-232">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="05aac-233">Например следующее выражение является допустимым:</span><span class="sxs-lookup"><span data-stu-id="05aac-233">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="05aac-234">Но это выражение не является:</span><span class="sxs-lookup"><span data-stu-id="05aac-234">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="05aac-235">Если необходимо выполнить операцию для двух или нескольких столбцов, следует создать <xref:System.Data.DataColumn>, задайте его <xref:System.Data.DataColumn.Expression%2A> присваивается соответствующее выражение, а использование статистическое выражение на результирующего столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-235">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="05aac-236">В этом случае, учитывая <xref:System.Data.DataColumn> с именем «итог» и <xref:System.Data.DataColumn.Expression%2A> значение этого свойства:</span><span class="sxs-lookup"><span data-stu-id="05aac-236">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="05aac-237">Аргумент-выражение для <xref:System.Data.DataTable.Compute%2A> метод будет иметь это:</span><span class="sxs-lookup"><span data-stu-id="05aac-237">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="05aac-238">Второй параметр, `filter`, определяет, какие строки используются в выражении.</span><span class="sxs-lookup"><span data-stu-id="05aac-238">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="05aac-239">Например если таблица содержит столбец даты с именем «colDate», можно ограничить строки со следующим выражением:</span><span class="sxs-lookup"><span data-stu-id="05aac-239">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="05aac-240">Правила создания выражений для обоих параметров, см. в разделе <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-240">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-241">Следующий пример суммирует значения столбца с именем «Итог», для менеджеров по продажам, которого идентификатор равен пяти.</span><span class="sxs-lookup"><span data-stu-id="05aac-241">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Data.ConstraintCollection" Usage="System.Data.DataTable.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableConstraintsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-242">Получает коллекцию ограничений, содержащихся в данной таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-242">Gets the collection of constraints maintained by this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-243">Коллекция <see cref="T:System.Data.ConstraintCollection" />, содержащая коллекцию объектов <see cref="T:System.Data.Constraint" /> для таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-243">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span>
          </span>
          <span data-ttu-id="05aac-244">Если отсутствуют объекты <see cref="T:System.Data.Constraint" /> возвращается пустая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-244">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-245">Объект <xref:System.Data.ForeignKeyConstraint> ограничивает действие, выполняемое при удалении или обновлении значения в столбец (или столбцы).</span><span class="sxs-lookup"><span data-stu-id="05aac-245">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="05aac-246">Такое ограничение предназначено для использования с первичными ключевыми столбцами.</span><span class="sxs-lookup"><span data-stu-id="05aac-246">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="05aac-247">Отношение "родители потомки" между двумя таблицами Удаление значения из родительской таблицы может повлиять на дочерние строки в одном из следующих способов.</span><span class="sxs-lookup"><span data-stu-id="05aac-247">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="05aac-248">Дочерние строки также могут быть удалены (каскадное действие).</span><span class="sxs-lookup"><span data-stu-id="05aac-248">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="05aac-249">Значения в дочерний столбец (или столбцы) можно присвоить значения null.</span><span class="sxs-lookup"><span data-stu-id="05aac-249">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="05aac-250">Значения в дочерний столбец (или столбцы) можно присвоить значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="05aac-250">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="05aac-251">Можно создать исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-251">An exception can be generated.</span></span>  
  
 <span data-ttu-id="05aac-252">Объект <xref:System.Data.UniqueConstraint> становится активным, при попытке задать значение в первичном ключе неуникального значение.</span><span class="sxs-lookup"><span data-stu-id="05aac-252">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-253">В следующем примере добавляется <xref:System.Data.ForeignKeyConstraint> в коллекцию ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-253">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Data.DataTable" Usage="dataTable.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-254">Копирует структуру и данные для <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-254">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-255">Новый класс <see cref="T:System.Data.DataTable" />, имеющий ту же структуру (схемы таблиц и ограничения) и данные, что и класс <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-255">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="05aac-256">Если эти классы являются производными, то и копия также будет таким же производным классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-256">If these classes have been derived, the copy will also be of the same derived classes.</span>
          </span>
          <span data-ttu-id="05aac-257">
            <see cref="M:System.Data.DataTable.Copy" /> создает новый <see cref="T:System.Data.DataTable" /> с той же структурой и данными, как и оригинальный <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-257">
              <see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="05aac-258">Чтобы скопировать структуру в новый <see cref="T:System.Data.DataTable" />, но не данные, используйте <see cref="M:System.Data.DataTable.Clone" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-258">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05aac-259">В следующем примере используется <xref:System.Data.DataTable.Copy%2A> метод, чтобы создать копию оригинала <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-259">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-260">Имя пространства имен не сохраняются, если наследуется от родительского объекта <xref:System.Data.DataTable> или <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="05aac-260">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberSignature Language="F#" Value="member this.CreateDataReader : unit -&gt; System.Data.DataTableReader" Usage="dataTable.CreateDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-261">Возвращает объект <see cref="T:System.Data.DataTableReader" />, соответствующий данным в этой таблице <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-261">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-262">Объект <see cref="T:System.Data.DataTableReader" />, содержащий один набор результатов, который соответствует исходному экземпляру <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-262">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05aac-263">Следующее приложение командной строки создает экземпляр <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-263">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="05aac-264">В примере затем заполненный <xref:System.Data.DataTable> процедура, которая вызывает <xref:System.Data.DataTable.CreateDataReader%2A> метод, который выполняет проход по результатам, содержащимся в <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-264">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-265">В этом примере в окне консоли отображаются следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="05aac-265">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; System.Data.DataTable&#xA;override this.CreateInstance : unit -&gt; System.Data.DataTable" Usage="dataTable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-266">Создает новый экземпляр <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-266">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-267">Новое выражение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-267">The new expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataTable.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDataSetDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-268">Получает класс <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-268">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-269">Набор <see cref="T:System.Data.DataSet" />, к которому принадлежит данная таблица.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-269">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-270">Если элемент данных привязан к <xref:System.Data.DataTable>, и таблица принадлежит к <xref:System.Data.DataSet>, можно перейти к <xref:System.Data.DataSet> через это свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-270">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-271">В следующем примере возвращается родительский <xref:System.Data.DataSet> данной таблицы через <xref:System.Data.DataTable.DataSet%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-271">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultView : System.Data.DataView" Usage="System.Data.DataTable.DefaultView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDefaultViewDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-272">Получает настраиваемое представление таблицы, которая может включать в себя представление с фильтром или положение курсора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-272">Gets a customized view of the table that may include a filtered view, or a cursor position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-273">Объект <see cref="T:System.Data.DataView" />, связанный с объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-273">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-274"><xref:System.Data.DataTable.DefaultView%2A> Возвращает <xref:System.Data.DataView> можно использовать для сортировки, фильтрации и поиска <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-274">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-275">В следующем примере задается свойство <xref:System.Data.DataTable> объекта <xref:System.Data.DataView> через <xref:System.Data.DataTable.DefaultView%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-275">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="05aac-276">Этот пример также демонстрирует привязку <xref:System.Windows.Forms.DataGridView> управления <xref:System.Data.DataTable> «поставщики», которая включает столбец с именем «CompanyName».</span><span class="sxs-lookup"><span data-stu-id="05aac-276">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayExpression : string with get, set" Usage="System.Data.DataTable.DisplayExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDisplayExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-277">Возвращает или задает выражение, возвращающее значение, используемое для представления таблицы в пользовательском интерфейсе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-277">Gets or sets the expression that returns a value used to represent this table in the user interface.</span>
          </span>
          <span data-ttu-id="05aac-278">Свойство <see langword="DisplayExpression" /> позволяет отображать имя этой таблицы в пользовательском интерфейсе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-278">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-279">Строка отображения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-279">A display string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataTable.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-280">Завершает инициализацию <see cref="T:System.Data.DataTable" />, используемого в форме или другим компонентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-280">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="05aac-281">Инициализация происходит во время выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-281">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-282">Этот метод применяется в среде разработки Visual Studio .NET для завершения инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="05aac-282">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="05aac-283"><xref:System.Data.DataTable.BeginInit%2A> Метод начинает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="05aac-283">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="05aac-284">С помощью <xref:System.Data.DataTable.BeginInit%2A> и <xref:System.Data.DataTable.EndInit%2A> методы предотвращает использование до полной инициализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="05aac-284">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberSignature Language="F#" Value="member this.EndLoadData : unit -&gt; unit" Usage="dataTable.EndLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-285">Включает уведомления, ведение индексов и ограничения после загрузки данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-285">Turns on notifications, index maintenance, and constraints after loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-286">Используйте <xref:System.Data.DataTable.EndLoadData%2A> в сочетании с <xref:System.Data.DataTable.LoadDataRow%2A> и <xref:System.Data.DataTable.BeginLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-286">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataTable.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-287">Получает коллекцию настраиваемых пользовательских сведений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-287">Gets the collection of customized user information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-288">Класс <see cref="T:System.Data.PropertyCollection" />, содержащий настраиваемые данные пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-288">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-289">Используйте <xref:System.Data.DataTable.ExtendedProperties%2A> Добавление пользовательских данных в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-289">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-290">Добавление информации с помощью `Add` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-290">Add information with the `Add` method.</span></span> <span data-ttu-id="05aac-291">Получать данные с помощью `Item` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-291">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="05aac-292">Расширенные свойства должны иметь тип <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="05aac-292">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="05aac-293">Свойства, которые не типа String не сохраняются при <xref:System.Data.DataTable> записывается как XML.</span><span class="sxs-lookup"><span data-stu-id="05aac-293">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-294">В следующем примере добавляется метка времени <xref:System.Data.DataTable> через <xref:System.Data.DataTable.ExtendedProperties%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-294">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberSignature Language="F#" Value="val mutable fInitInProgress : bool" Usage="System.Data.DataTable.fInitInProgress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-295">Проверяет, выполняется ли инициализация.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-295">Checks whether initialization is in progress.</span>
          </span>
          <span data-ttu-id="05aac-296">Инициализация происходит во время выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-296">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-297">Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-297">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberSignature Language="F#" Value="member this.GetChanges : unit -&gt; System.Data.DataTable" Usage="dataTable.GetChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-298">Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-298">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-299">Копия изменений из данного объекта <see cref="T:System.Data.DataTable" /> или значение <see langword="null" />, если изменения не найдены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-299">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-300">Создает новый <xref:System.Data.DataSet> содержит копию всех строк в исходной <xref:System.Data.DataSet> , ожидающими изменениями.</span><span class="sxs-lookup"><span data-stu-id="05aac-300">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="05aac-301">Ограничения связи может вызвать дополнительные без изменений строки для добавления нового <xref:System.Data.DataSet> Если неизмененные строки содержат первичные ключи, соответствующие внешним ключам в измененных строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-301">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="05aac-302">Этот метод возвращает `null` (`Nothing` в Visual Basic), если нет ни одной строки в исходном <xref:System.Data.DataSet> с ожидающими изменениями.</span><span class="sxs-lookup"><span data-stu-id="05aac-302">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberSignature Language="F#" Value="member this.GetChanges : System.Data.DataRowState -&gt; System.Data.DataTable" Usage="dataTable.GetChanges rowStates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="rowStates">
          <span data-ttu-id="05aac-303">Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-303">One of the <see cref="T:System.Data.DataRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-304">Получает копию таблицы <see cref="T:System.Data.DataTable" />, содержащую все изменения, внесенные после ее последней загрузки или после вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" /> и отфильтрованные по параметру <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-304">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-305">Отфильтрованная копия таблицы <see cref="T:System.Data.DataTable" />, с которой можно работать и позднее объединить обратно с <see cref="T:System.Data.DataTable" />, используя метод <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-305">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          </span>
          <span data-ttu-id="05aac-306">Если строки с требуемым типом <see cref="T:System.Data.DataRowState" /> отсутствуют, метод вернет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-306">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-307"><xref:System.Data.DataTable.GetChanges%2A> Метод используется для создания второго <xref:System.Data.DataTable> объект, содержащий только изменения, появившиеся в исходный.</span><span class="sxs-lookup"><span data-stu-id="05aac-307">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="05aac-308">Используйте `rowStates` аргумент, чтобы указать тип изменений, должен содержать новый объект.</span><span class="sxs-lookup"><span data-stu-id="05aac-308">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="05aac-309">Ограничения связи могут вызвать без изменений родительских строк для включения.</span><span class="sxs-lookup"><span data-stu-id="05aac-309">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberSignature Language="F#" Value="static member GetDataTableSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaComplexType" Usage="System.Data.DataTable.GetDataTableSchema schemaSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">
          <span data-ttu-id="05aac-310">Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-310">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-311">Этот метод возвращает экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий язык описания веб-служб (WSDL), который описывает объект <see cref="T:System.Data.DataTable" /> для веб-служб.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-311">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-312">Экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-312">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberSignature Language="F#" Value="member this.GetErrors : unit -&gt; System.Data.DataRow[]" Usage="dataTable.GetErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-313">Получает массив объектов <see cref="T:System.Data.DataRow" />, содержащих ошибки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-313">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-314">Массив объектов <see cref="T:System.Data.DataRow" /> с ошибками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-314">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-315">Возвращает список <xref:System.Data.DataRow> объектов, имеющих <xref:System.Data.DataRow.RowError%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="05aac-315">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="05aac-316">Например, ошибки могут возникать при вызове <xref:System.Data.Common.DataAdapter.Update%2A> с <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> присвоено **true**.</span><span class="sxs-lookup"><span data-stu-id="05aac-316">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to **true**.</span></span> <span data-ttu-id="05aac-317">Они не вызывают <xref:System.Data.DataTable.AcceptChanges%2A> на <xref:System.Data.DataTable> пока не устраните все ошибки и повторно отправьте <xref:System.Data.DataSet> для обновления.</span><span class="sxs-lookup"><span data-stu-id="05aac-317">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-318">В следующем примере используется <xref:System.Data.DataTable.GetErrors%2A> метод, чтобы вернуть массив <xref:System.Data.DataRow> объекты с ошибками.</span><span class="sxs-lookup"><span data-stu-id="05aac-318">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="05aac-319">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные, связанные с объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="05aac-320">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-321">Заполняет объект сведений о сериализации данными, необходимыми для сериализации <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-321">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05aac-322">Значением параметра <paramref name="info" /> является пустая ссылка (<see langword="Nothing" /> в Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-322">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberSignature Language="F#" Value="abstract member GetRowType : unit -&gt; Type&#xA;override this.GetRowType : unit -&gt; Type" Usage="dataTable.GetRowType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-323">Получает тип строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-323">Gets the row type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-324">Возвращает тип объекта <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-324">Returns the type of the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-325">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-325">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-326">
            <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного из метода <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и включенного в метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-326">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataTable.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableHasErrorsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-327">Получает значение, указывающее наличие ошибок в строках таблиц класса <see cref="T:System.Data.DataSet" />, к которому принадлежат таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-327">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-328">Значение <see langword="true" />, если ошибки есть; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-328">
              <see langword="true" /> if errors exist; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-329">При работе с набором данных, содержащихся в <xref:System.Data.DataTable>, можно пометить каждого изменения с ошибкой, если оно вызывает сбой проверки.</span><span class="sxs-lookup"><span data-stu-id="05aac-329">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="05aac-330">Вы можете пометить всего <xref:System.Data.DataRow> с сообщение ошибки с помощью <xref:System.Data.DataRow.RowError%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-330">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="05aac-331">Ошибки также можно задать для каждого столбца, строки с <xref:System.Data.DataRow.SetColumnError%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-331">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-332">Перед обновлением источника данных с помощью <xref:System.Data.DataSet>, рекомендуется сначала вызвать <xref:System.Data.DataSet.GetChanges%2A> метод на целевом объекте <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="05aac-332">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="05aac-333">Результатом метода <xref:System.Data.DataSet> , содержащий только изменения, внесенные в исходный.</span><span class="sxs-lookup"><span data-stu-id="05aac-333">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="05aac-334">Перед отправкой <xref:System.Data.DataSet> к источнику данных для обновления, проверьте <xref:System.Data.DataTable.HasErrors%2A> свойства каждой таблицы, чтобы увидеть, если любой ошибок для строк или столбцов в строках.</span><span class="sxs-lookup"><span data-stu-id="05aac-334">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="05aac-335">После согласования ошибок, очистить ошибки с <xref:System.Data.DataRow.ClearErrors%2A> метод `DataRow`.</span><span class="sxs-lookup"><span data-stu-id="05aac-335">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-336">В следующем примере используется <xref:System.Data.DataTable.HasErrors%2A> свойство для проверки, если таблица содержит ошибки.</span><span class="sxs-lookup"><span data-stu-id="05aac-336">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.ImportRow : System.Data.DataRow -&gt; unit" Usage="dataTable.ImportRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="05aac-337">Импортируемый объект <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-337">The <see cref="T:System.Data.DataRow" /> to be imported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-338">Копирует объект <see cref="T:System.Data.DataRow" /> в <see cref="T:System.Data.DataTable" />, сохраняя все параметры свойств, а также текущие и исходные значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-338">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-339">Вызов <xref:System.Data.DataTable.NewRow%2A> добавляет строку в таблицу, используя существующую схему таблиц, но со значениями по умолчанию для строки и задает <xref:System.Data.DataRowState> для `Detached`.</span><span class="sxs-lookup"><span data-stu-id="05aac-339">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="05aac-340">Вызов <xref:System.Data.DataTable.ImportRow%2A> сохраняет существующий <xref:System.Data.DataRowState> вместе с другими значениями в строке.</span><span class="sxs-lookup"><span data-stu-id="05aac-340">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="05aac-341">Если `DataRow` , передаваемый как параметр находится в отсоединенном состоянии, оно игнорируется и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="05aac-341">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="05aac-342">Новая строка добавляется в конец таблицы данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-342">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="05aac-343">Если новой строки нарушает ограничение, оно не будет добавляться в таблицу данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-343">If the new row violates a Constraint it won’t be added to the data table.</span></span>  
  
 <span data-ttu-id="05aac-344">Вы можете получить индекс новой строки с DataTable.Rows.Find и DataTable.Rows.IndexOf.</span><span class="sxs-lookup"><span data-stu-id="05aac-344">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="05aac-345">Дополнительные сведения см. в разделах <xref:System.Data.DataRowCollection> и <xref:System.Data.DataTable.Rows%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-345">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-346">Происходит после инициализации таблицы <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-346">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-347">Дополнительные сведения см. в разделе <xref:System.Data.DataTable.IsInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-347">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Data.DataTable.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-348">Получает значение, указывающее, инициализирована ли таблица <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-348">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-349">Значение <see langword="true" /> указывает, что компонент завершил инициализацию; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-349">
              <see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-350">Возвращает состояние <xref:System.Data.DataTable> хотя она создана, например в Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="05aac-350">Returns the status of the <xref:System.Data.DataTable> while it’s being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="05aac-351"><xref:System.Data.DataTable.BeginInit%2A> Метод заменяет его на `false` и <xref:System.Data.DataTable.EndInit%2A> метод заменяет его на `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-351">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-352">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-352">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="05aac-353">Если объект <see langword="DataTable" /> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-353">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-354">`Load` Метод может использоваться в ряде распространенных ситуаций, все направлены на получение данных из указанного источника данных и добавив его в текущем контейнере данных (в этом случае `DataTable`).</span><span class="sxs-lookup"><span data-stu-id="05aac-354">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="05aac-355">В следующих сценариях описано стандартное использование для `DataTable`, описывающий его обновления и поведение объединения.</span><span class="sxs-lookup"><span data-stu-id="05aac-355">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="05aac-356">Объект `DataTable` синхронизирует или обновление с одного основного источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-356">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="05aac-357">`DataTable` Отслеживает изменения, позволяя синхронизация с основным источником данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-357">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="05aac-358">Кроме того `DataTable` может принимать добавочные данные из одного или нескольких источников данных-получателя.</span><span class="sxs-lookup"><span data-stu-id="05aac-358">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="05aac-359">`DataTable` Не несет ответственность за отслеживание изменений, чтобы разрешить синхронизацию с помощью дополнительного источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-359">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="05aac-360">Учитывая эти два гипотетические источника данных, пользователь скорее всего, потребуется одна из следующих ситуаций:</span><span class="sxs-lookup"><span data-stu-id="05aac-360">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="05aac-361">Инициализировать `DataTable` из основного источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-361">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="05aac-362">В этом случае пользователю необходимо инициализировать пустой `DataTable` значениями из первичного источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-362">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="05aac-363">Позже пользователь планирует распространить изменения обратно в основной источник данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-363">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="05aac-364">Сохранение изменений и повторная синхронизация из первичного источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-364">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="05aac-365">В этом случае пользователь хочет воспользоваться `DataTable` заполнения в предыдущем сценарии и выполнять добавочную синхронизацию с основным источником данных, сохраняя изменения, сделанные в `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-365">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="05aac-366">Веб-канал добавочные данные из дополнительных источников данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-366">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="05aac-367">В этом сценарии пользователь хочет объединить изменения из одной или нескольких вторичных источников данных и распространить эти изменения обратно в основной источник данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-367">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="05aac-368">`Load` Метод делает возможным всех этих сценариях.</span><span class="sxs-lookup"><span data-stu-id="05aac-368">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="05aac-369">Только один из перегрузок этого метода можно указать параметр варианта загрузки, что означает, как строки, уже находящиеся <xref:System.Data.DataTable> эмоцию загружаемых строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-369">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="05aac-370">(Перегрузка, которая не позволяет указать поведение использует вариант загрузки по умолчанию). В следующей таблице описаны три варианта загрузки, предоставляемые <xref:System.Data.LoadOption> перечисления.</span><span class="sxs-lookup"><span data-stu-id="05aac-370">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="05aac-371">В каждом случае описание указывает поведение, когда первичный ключ строки во входных данных с первичным ключом существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-371">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="05aac-372">Параметр загрузки</span><span class="sxs-lookup"><span data-stu-id="05aac-372">Load Option</span></span>|<span data-ttu-id="05aac-373">Описание:</span><span class="sxs-lookup"><span data-stu-id="05aac-373">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="05aac-374">`PreserveChanges` (по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="05aac-374">`PreserveChanges` (default)</span></span>|<span data-ttu-id="05aac-375">Обновляет исходную версию строки со значением входной строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-375">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="05aac-376">Обновляет текущие и исходные версии строки со значением входной строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-376">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="05aac-377">Обновляет текущую версию строки со значением входной строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-377">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="05aac-378">В общем случае `PreserveChanges` и `OverwriteChanges` параметры предназначены для сценариев, в которых пользователю необходимо синхронизировать `DataSet` и его изменения с основным источником данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-378">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="05aac-379">`Upsert` Параметр облегчает сбор изменений из одного или нескольких источников данных-получателя.</span><span class="sxs-lookup"><span data-stu-id="05aac-379">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-380">В следующем примере показано несколько вопросов, связанных с вызовом <xref:System.Data.DataTable.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-380">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="05aac-381">Во-первых, пример рассматриваются вопросы схемы, включая получение схемы из загруженного <xref:System.Data.IDataReader>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</span><span class="sxs-lookup"><span data-stu-id="05aac-381">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="05aac-382">Пример затем рассматриваются вопросы данных, включая обработку различных параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-382">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-383">В этом примере показано, как использовать один из перегруженных версий `Load`.</span><span class="sxs-lookup"><span data-stu-id="05aac-383">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="05aac-384">Другие примеры, которые могут быть доступны см. в разделах отдельные перегрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-384">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader -&gt; unit" Usage="dataTable.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-385">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-385">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-386">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-386">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="05aac-387">Если объект <see cref="T:System.Data.DataTable" /> уже содержит строки, входящие данные из источника данных объединяются с существующими строками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-387">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-388"><xref:System.Data.DataTable.Load%2A> Метод использует первый результирующий набор из загруженного <xref:System.Data.IDataReader>и после успешного завершения задает положение средства чтения к следующему результирующему набору, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="05aac-388">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="05aac-389">При преобразовании данных, `Load` метод использует те же правила преобразования как <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-389">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="05aac-390"><xref:System.Data.DataTable.Load%2A> Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <xref:System.Data.IDataReader> экземпляр: операции схем, данных и событий.</span><span class="sxs-lookup"><span data-stu-id="05aac-390">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="05aac-391">При работе со схемой, <xref:System.Data.DataTable.Load%2A> метода могут возникнуть условия, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-391">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="05aac-392">Операций схемы выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-392">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="05aac-393">Условие</span><span class="sxs-lookup"><span data-stu-id="05aac-393">Condition</span></span>|<span data-ttu-id="05aac-394">Поведение</span><span class="sxs-lookup"><span data-stu-id="05aac-394">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="05aac-395"><xref:System.Data.DataTable> Не имеет схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-395">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="05aac-396"><xref:System.Data.DataTable.Load%2A> Метод определяет схему, в зависимости от результирующего набора из импортированного <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-396">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="05aac-397"><xref:System.Data.DataTable> Имеет схему, но он не совместим с схема загружена.</span><span class="sxs-lookup"><span data-stu-id="05aac-397">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="05aac-398"><xref:System.Data.DataTable.Load%2A> Метод вызывает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузить данные в несовместимую схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-398">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="05aac-399">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-399">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="05aac-400"><xref:System.Data.DataTable.Load%2A> Метод добавляет дополнительные столбцы в `DataTable`элемента схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-400">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="05aac-401">Метод вызывает исключение, если соответствующие столбцы в <xref:System.Data.DataTable> и загрузить результирующий набор не совместимы.</span><span class="sxs-lookup"><span data-stu-id="05aac-401">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="05aac-402">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-402">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="05aac-403">За исключением в случае ограничения Primary Key, эта информация ограничение используется только в том случае, если текущий <xref:System.Data.DataTable> не содержит все столбцы в начале операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-403">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="05aac-404">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-404">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="05aac-405">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца, допускающего значение NULL, <xref:System.Data.DataTable.Load%2A> метод позволяет строки должен быть добавлен, заменив значение по умолчанию или `null` значение в столбце отсутствует.</span><span class="sxs-lookup"><span data-stu-id="05aac-405">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="05aac-406">Если нет значения по умолчанию или `null` можно использовать, а затем `Load` метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-406">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="05aac-407">Если указано значение определенного по умолчанию отсутствует, `Load` использует метод `null` значение в качестве значения по умолчанию подразумеваемых.</span><span class="sxs-lookup"><span data-stu-id="05aac-407">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="05aac-408">Прежде чем анализировать поведение `Load` метод с точки зрения операций с данными, обратите внимание на каждой строки в пределах <xref:System.Data.DataTable> сохраняет текущее значение и исходное значение для каждого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-408">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="05aac-409">Эти значения могут быть эквивалентны, или может отличаться, если данные в строке были изменены с момента заполнения `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-409">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="05aac-410">Дополнительные сведения см. в разделе [строки состояния и версии строк](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-410">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="05aac-411">Эта версия `Load` метод пытается сохранить текущие значения в каждой строке, в котором не затрагиваются исходное значение.</span><span class="sxs-lookup"><span data-stu-id="05aac-411">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="05aac-412">(Если требуется детальный контроль над поведением входящих данных, см. в разделе <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае она обрабатывается как новой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-412">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="05aac-413">С точки зрения операций событий <xref:System.Data.DataTable.RowChanging> событие происходит перед каждой строки изменяется и <xref:System.Data.DataTable.RowChanged> событие возникает после изменения каждой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-413">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="05aac-414">В каждом случае <xref:System.Data.DataRowChangeEventArgs.Action%2A> свойство <xref:System.Data.DataRowChangeEventArgs> экземпляр, переданный в обработчик событий содержит сведения о конкретного действия, связанного с событием.</span><span class="sxs-lookup"><span data-stu-id="05aac-414">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="05aac-415">Значение этого действия зависит от состояния строки до операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-415">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="05aac-416">В каждом случае оба события возникают и всех действии.</span><span class="sxs-lookup"><span data-stu-id="05aac-416">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="05aac-417">Действие может применяться к текущей или исходной версии каждой строки, или оба из них, в зависимости от состояния текущей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-417">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="05aac-418">В следующей таблице показаны поведение для `Load` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-418">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="05aac-419">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-419">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="05aac-420">Каждая ячейка в этой таблице описывает текущее и исходное значение для поля в строке, вместе с <xref:System.Data.DataRowState> для значения после `Load` завершения метода.</span><span class="sxs-lookup"><span data-stu-id="05aac-420">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="05aac-421">В этом случае метод не позволяет указать параметр загрузки и использует значение по умолчанию `PreserveChanges`.</span><span class="sxs-lookup"><span data-stu-id="05aac-421">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="05aac-422">Существующие DataRowState</span><span class="sxs-lookup"><span data-stu-id="05aac-422">Existing DataRowState</span></span>|<span data-ttu-id="05aac-423">Значения после `Load` метод и действие события</span><span class="sxs-lookup"><span data-stu-id="05aac-423">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="05aac-424">Добавлено</span><span class="sxs-lookup"><span data-stu-id="05aac-424">Added</span></span>|<span data-ttu-id="05aac-425">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-425">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-426">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-426">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-427">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-427">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-428">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-428">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-429">Изменено</span><span class="sxs-lookup"><span data-stu-id="05aac-429">Modified</span></span>|<span data-ttu-id="05aac-430">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-430">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-431">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-431">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-432">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-432">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-433">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-433">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-434">Deleted</span><span class="sxs-lookup"><span data-stu-id="05aac-434">Deleted</span></span>|<span data-ttu-id="05aac-435">Текущий = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-435">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-436">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-436">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-437">Состояние = \<удален ></span><span class="sxs-lookup"><span data-stu-id="05aac-437">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="05aac-438">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-438">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-439">Unchanged</span><span class="sxs-lookup"><span data-stu-id="05aac-439">Unchanged</span></span>|<span data-ttu-id="05aac-440">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-440">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-441">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-441">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-442">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-442">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-443">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-443">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="05aac-444">(Отсутствует)</span><span class="sxs-lookup"><span data-stu-id="05aac-444">(Not present)</span></span>|<span data-ttu-id="05aac-445">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-445">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-446">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-446">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-447">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-447">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-448">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-448">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="05aac-449">Значения в <xref:System.Data.DataColumn> может быть ограничена путем использования свойства таких как <xref:System.Data.DataColumn.ReadOnly%2A> и <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-449">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="05aac-450">`Load` Метод обрабатывает такие столбцы способом, который согласуется с поведением, определяются свойствами столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-450">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="05aac-451">Чтение Единственное ограничение на <xref:System.Data.DataColumn> применимо только для изменений, произошедших в памяти.</span><span class="sxs-lookup"><span data-stu-id="05aac-451">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="05aac-452">`Load` Метода перезаписывает значения столбца только для чтения, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="05aac-452">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="05aac-453">Чтобы определить, какую версию следует использовать для сравнения текущей строки с входящей строки, поле первичного ключа `Load` метод использует исходную версию значения первичного ключа в строке, если он существует.</span><span class="sxs-lookup"><span data-stu-id="05aac-453">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="05aac-454">В противном случае `Load` метод использует текущую версию поле первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-454">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-455">В следующем примере показано несколько вопросов, связанных с вызовом <xref:System.Data.DataTable.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-455">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="05aac-456">Во-первых, пример рассматриваются вопросы схемы, включая получение схемы из загруженного <xref:System.Data.IDataReader>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</span><span class="sxs-lookup"><span data-stu-id="05aac-456">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="05aac-457">Затем в примере вызывается `Load` метод, отображающий данные до и после операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-457">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader * System.Data.LoadOption -&gt; unit" Usage="dataTable.Load (reader, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-458">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий один или несколько наборов результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-458">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="05aac-459">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-459">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-460">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-460">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="05aac-461">Если объект <see langword="DataTable" /> уже содержит строки, поступающие данные из источника данных объединяются с существующими строками согласно значению параметра <paramref name="loadOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-461">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-462">`Load` Метод использует первый результирующий набор из загруженного <xref:System.Data.IDataReader>и после успешного завершения задает положение средства чтения к следующему результирующему набору, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="05aac-462">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="05aac-463">При преобразовании данных, `Load` метод использует те же правила преобразования как <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-463">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-464">`Load` Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <xref:System.Data.IDataReader> экземпляр: операции схем, данных и событий.</span><span class="sxs-lookup"><span data-stu-id="05aac-464">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="05aac-465">При работе со схемой, `Load` метода могут возникнуть условия, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-465">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="05aac-466">Операций схемы выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-466">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="05aac-467">Условие</span><span class="sxs-lookup"><span data-stu-id="05aac-467">Condition</span></span>|<span data-ttu-id="05aac-468">Поведение</span><span class="sxs-lookup"><span data-stu-id="05aac-468">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="05aac-469"><xref:System.Data.DataTable> Не имеет схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-469">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="05aac-470">`Load` Метод определяет схему, в зависимости от результирующего набора из импортированного <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-470">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="05aac-471"><xref:System.Data.DataTable> Имеет схему, но он не совместим с схема загружена.</span><span class="sxs-lookup"><span data-stu-id="05aac-471">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="05aac-472">`Load` Метод вызывает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузить данные в несовместимую схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-472">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="05aac-473">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-473">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="05aac-474">`Load` Метод добавляет дополнительные столбцы в `DataTable`элемента схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-474">The `Load` method adds the extra columns to `DataTable`’s schema.</span></span> <span data-ttu-id="05aac-475">Метод вызывает исключение, если соответствующие столбцы в <xref:System.Data.DataTable> и загрузить результирующий набор не совместимы.</span><span class="sxs-lookup"><span data-stu-id="05aac-475">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="05aac-476">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-476">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="05aac-477">За исключением в случае ограничения Primary Key, эта информация ограничение используется только в том случае, если текущий <xref:System.Data.DataTable> не содержит все столбцы в начале операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-477">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="05aac-478">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-478">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="05aac-479">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца, допускающего значение NULL, `Load` метод позволяет строки должен быть добавлен, замещая значение по умолчанию или значение null для отсутствующего столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-479">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="05aac-480">Если используется не значение по умолчанию или значение null, то `Load` метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-480">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="05aac-481">Если указано значение определенного по умолчанию отсутствует, `Load` метод использует значение null как значение по умолчанию подразумеваемых.</span><span class="sxs-lookup"><span data-stu-id="05aac-481">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="05aac-482">Прежде чем анализировать поведение `Load` метод с точки зрения операций с данными, обратите внимание на каждой строки в пределах <xref:System.Data.DataTable> сохраняет текущее значение и исходное значение для каждого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-482">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="05aac-483">Эти значения могут быть эквивалентны, или может отличаться, если данные в строке были изменены с момента заполнения `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-483">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="05aac-484">См. в разделе [строки состояния и версии строк](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="05aac-484">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="05aac-485">При таком вызове метода, указанного <xref:System.Data.LoadOption> параметр влияет на обработку входящих данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-485">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="05aac-486">Как метод Load должна обрабатывать загрузку строк, имеющих тот же первичный ключ, как и существующие строки?</span><span class="sxs-lookup"><span data-stu-id="05aac-486">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="05aac-487">Должен ли он изменять текущие значения и исходные значения?</span><span class="sxs-lookup"><span data-stu-id="05aac-487">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="05aac-488">Эти проблемы и многое другое, управляются `loadOption` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-488">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="05aac-489">Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае она обрабатывается как новой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-489">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="05aac-490">С точки зрения операций событий <xref:System.Data.DataTable.RowChanging> событие происходит перед каждой строки изменяется и <xref:System.Data.DataTable.RowChanged> событие возникает после изменения каждой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-490">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="05aac-491">В каждом случае <xref:System.Data.DataRowChangeEventArgs.Action%2A> свойство <xref:System.Data.DataRowChangeEventArgs> экземпляр, переданный в обработчик событий содержит сведения о конкретного действия, связанного с событием.</span><span class="sxs-lookup"><span data-stu-id="05aac-491">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="05aac-492">Значение этого действия зависит от состояния строки до операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-492">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="05aac-493">В каждом случае оба события возникают и всех действии.</span><span class="sxs-lookup"><span data-stu-id="05aac-493">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="05aac-494">Действие может применяться к текущей или исходной версии каждой строки, или оба из них, в зависимости от состояния текущей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-494">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="05aac-495">В следующей таблице показаны поведение метода Load при вызове с каждым из `LoadOption` значений, а также показано, как значения взаимодействуют с состоянием загружаемой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-495">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="05aac-496">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-496">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="05aac-497">Каждая ячейка в этой таблице описывает текущее и исходное значение для поля в строке, вместе с <xref:System.Data.DataRowState> для значения после `Load` завершения метода.</span><span class="sxs-lookup"><span data-stu-id="05aac-497">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="05aac-498">Существующие DataRowState</span><span class="sxs-lookup"><span data-stu-id="05aac-498">Existing DataRowState</span></span>|<span data-ttu-id="05aac-499">Upsert</span><span class="sxs-lookup"><span data-stu-id="05aac-499">Upsert</span></span>|<span data-ttu-id="05aac-500">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="05aac-500">OverwriteChanges</span></span>|<span data-ttu-id="05aac-501">PreserveChanges (поведение по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="05aac-501">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="05aac-502">Добавлено</span><span class="sxs-lookup"><span data-stu-id="05aac-502">Added</span></span>|<span data-ttu-id="05aac-503">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-503">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-504">Исходный = -\<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-504">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="05aac-505">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-505">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-506">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-506">RowAction = Change</span></span>|<span data-ttu-id="05aac-507">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-507">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-508">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-508">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-509">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-509">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-510">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-510">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-511">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-511">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-512">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-512">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-513">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-513">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-514">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-514">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-515">Изменено</span><span class="sxs-lookup"><span data-stu-id="05aac-515">Modified</span></span>|<span data-ttu-id="05aac-516">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-516">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-517">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-517">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-518">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-518">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-519">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-519">RowAction = Change</span></span>|<span data-ttu-id="05aac-520">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-520">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-521">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-521">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-522">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-522">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-523">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-523">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-524">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-524">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-525">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-525">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-526">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-526">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-527">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-527">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="05aac-528">аленный</span><span class="sxs-lookup"><span data-stu-id="05aac-528">eleted</span></span>|<span data-ttu-id="05aac-529">(Нагрузки не влияет на удаленные строки)</span><span class="sxs-lookup"><span data-stu-id="05aac-529">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="05aac-530">Текущий =---</span><span class="sxs-lookup"><span data-stu-id="05aac-530">Current = ---</span></span><br /><br /> <span data-ttu-id="05aac-531">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-531">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-532">Состояние = \<удален ></span><span class="sxs-lookup"><span data-stu-id="05aac-532">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="05aac-533">(Со следующими характеристиками добавляется новая строка)</span><span class="sxs-lookup"><span data-stu-id="05aac-533">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="05aac-534">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-534">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-535">Исходный = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-535">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-536">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-536">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-537">RowAction = добавить</span><span class="sxs-lookup"><span data-stu-id="05aac-537">RowAction = Add</span></span>|<span data-ttu-id="05aac-538">Отменить удаление и</span><span class="sxs-lookup"><span data-stu-id="05aac-538">Undo delete and</span></span><br /><br /> <span data-ttu-id="05aac-539">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-539">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-540">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-540">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-541">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-541">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-542">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-542">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-543">Текущий = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-543">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-544">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-544">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-545">Состояние = \<удален ></span><span class="sxs-lookup"><span data-stu-id="05aac-545">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="05aac-546">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-546">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-547">Unchanged</span><span class="sxs-lookup"><span data-stu-id="05aac-547">Unchanged</span></span>|<span data-ttu-id="05aac-548">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-548">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-549">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-549">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-550">Если новое значение будет таким же, как существующее значение</span><span class="sxs-lookup"><span data-stu-id="05aac-550">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="05aac-551">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-551">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-552">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="05aac-552">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="05aac-553">ELSE</span><span class="sxs-lookup"><span data-stu-id="05aac-553">Else</span></span><br /><br /> <span data-ttu-id="05aac-554">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-554">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-555">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-555">RowAction = Change</span></span>|<span data-ttu-id="05aac-556">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-556">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-557">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-557">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-558">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-558">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-559">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-559">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-560">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-560">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-561">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-561">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-562">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-562">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-563">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-563">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="05aac-564">Отсутствует)</span><span class="sxs-lookup"><span data-stu-id="05aac-564">Not present)</span></span>|<span data-ttu-id="05aac-565">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-565">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-566">Исходный = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-566">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-567">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-567">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-568">RowAction = добавить</span><span class="sxs-lookup"><span data-stu-id="05aac-568">RowAction = Add</span></span>|<span data-ttu-id="05aac-569">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-569">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-570">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-570">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-571">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-571">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-572">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-572">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-573">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-573">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-574">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-574">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-575">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-575">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-576">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-576">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="05aac-577">Значения в <xref:System.Data.DataColumn> может быть ограничена путем использования свойства таких как <xref:System.Data.DataColumn.ReadOnly%2A> и <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-577">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="05aac-578">`Load` Метод обрабатывает такие столбцы способом, который согласуется с поведением, определяются свойствами столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-578">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="05aac-579">Чтение Единственное ограничение на <xref:System.Data.DataColumn> применимо только для изменений, произошедших в памяти.</span><span class="sxs-lookup"><span data-stu-id="05aac-579">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="05aac-580">`Load` Метода перезаписывает значения столбца только для чтения, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="05aac-580">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="05aac-581">Если указать параметры OverwriteChanges или PreserveChanges при вызове `Load` метод, то предполагается выполняется что данные поступают из `DataTable`в первичный источник данных, а объект DataTable отслеживает изменения и можно распространить изменения в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-581">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="05aac-582">Если выбран параметр Upsert, предполагается, что данные поступают из одного из вторичного источника данных, таких как данные, предоставляемые компонентом среднего уровня, быть изменены пользователем.</span><span class="sxs-lookup"><span data-stu-id="05aac-582">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="05aac-583">В этом случае предполагается, что цель состоит в сборе данных из одного или нескольких источников данных в `DataTable`, а затем данные могут распространяться обратно в основной источник данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-583">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="05aac-584"><xref:System.Data.LoadOption> Параметр используется для определения конкретной версии строки, которая будет использоваться для сравнения первичных ключей.</span><span class="sxs-lookup"><span data-stu-id="05aac-584">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="05aac-585">В таблице ниже сведения.</span><span class="sxs-lookup"><span data-stu-id="05aac-585">The table below provides the details.</span></span>  
  
|<span data-ttu-id="05aac-586">Параметр загрузки</span><span class="sxs-lookup"><span data-stu-id="05aac-586">Load option</span></span>|<span data-ttu-id="05aac-587">Версия DataRow, используемая для сравнения первичных ключей</span><span class="sxs-lookup"><span data-stu-id="05aac-587">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="05aac-588">Исходная версия, если он существует, в противном случае текущая версия</span><span class="sxs-lookup"><span data-stu-id="05aac-588">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="05aac-589">Исходная версия, если он существует, в противном случае текущая версия</span><span class="sxs-lookup"><span data-stu-id="05aac-589">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="05aac-590">Текущая версия, если он существует, в противном случае исходная версия</span><span class="sxs-lookup"><span data-stu-id="05aac-590">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="05aac-591">В следующем примере показано несколько вопросов, связанных с вызовом <xref:System.Data.DataTable.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-591">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="05aac-592">Во-первых, пример рассматриваются вопросы схемы, включая получение схемы из загруженного <xref:System.Data.IDataReader>, а затем на обработке несовместимых схем и схем с отсутствующими или дополнительными столбцами.</span><span class="sxs-lookup"><span data-stu-id="05aac-592">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="05aac-593">Пример затем рассматриваются вопросы данных, включая обработку различных параметров загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-593">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit&#xA;override this.Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit" Usage="dataTable.Load (reader, loadOption, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-594">Объект <see cref="T:System.Data.IDataReader" />, предоставляющий набор результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-594">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="05aac-595">Значение из перечисления <see cref="T:System.Data.LoadOption" />, которое показывает способ комбинирования строк, уже находящихся в таблице <see cref="T:System.Data.DataTable" />, с поступающими строками, которые совместно используют один и тот же первичный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-595">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <param name="errorHandler">
          <span data-ttu-id="05aac-596">Делегат <see cref="T:System.Data.FillErrorEventHandler" />, вызываемый при возникновении ошибки во время загрузки данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-596">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-597">Заполняет таблицу <see cref="T:System.Data.DataTable" /> значениями из источника данных с помощью предоставляемого объекта <see cref="T:System.Data.IDataReader" />, использующего делегат для обработки ошибок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-597">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-598">`Load` Метод использует первый результирующий набор из загруженного <xref:System.Data.IDataReader>и после успешного завершения задает положение средства чтения к следующему результирующему набору, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="05aac-598">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="05aac-599">При преобразовании данных, `Load` метод использует те же правила преобразования как <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-599">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="05aac-600">`Load` Метод должен принимать во внимание три конкретные проблемы при загрузке данных из <xref:System.Data.IDataReader> экземпляр: операции схем, данных и событий.</span><span class="sxs-lookup"><span data-stu-id="05aac-600">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="05aac-601">При работе со схемой, `Load` метода могут возникнуть условия, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-601">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="05aac-602">Операций схемы выполняются для всех импортированных результирующих наборов, даже не содержащих данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-602">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="05aac-603">Условие</span><span class="sxs-lookup"><span data-stu-id="05aac-603">Condition</span></span>|<span data-ttu-id="05aac-604">Поведение</span><span class="sxs-lookup"><span data-stu-id="05aac-604">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="05aac-605"><xref:System.Data.DataTable> Не имеет схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-605">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="05aac-606">`Load` Метод определяет схему, в зависимости от результирующего набора из импортированного <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-606">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="05aac-607"><xref:System.Data.DataTable> Имеет схему, но он не совместим с схема загружена.</span><span class="sxs-lookup"><span data-stu-id="05aac-607">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="05aac-608">`Load` Метод вызывает исключение, соответствующей конкретной ошибки, возникающее при попытке загрузить данные в несовместимую схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-608">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="05aac-609">Схемы совместимы, но схема загруженного набора результатов содержит столбцы, которые не существуют в `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-609">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="05aac-610">`Load` Метод добавляет дополнительные столбцы для `DataTable`элемента схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-610">The `Load` method adds the extra column(s) to `DataTable`’s schema.</span></span> <span data-ttu-id="05aac-611">Метод вызывает исключение, если соответствующие столбцы в <xref:System.Data.DataTable> и загрузить результирующий набор не совместимы.</span><span class="sxs-lookup"><span data-stu-id="05aac-611">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="05aac-612">Этот метод также извлекает сведения об ограничениях в результирующем наборе для всех добавленных столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-612">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="05aac-613">За исключением в случае ограничения Primary Key, эта информация ограничение используется только в том случае, если текущий <xref:System.Data.DataTable> не содержит все столбцы в начале операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-613">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="05aac-614">Схемы совместимы, но схема загруженного набора результатов содержит меньше столбцов, чем `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-614">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="05aac-615">Если отсутствующий столбец имеет определенное значение по умолчанию или тип данных столбца, допускающего значение NULL, `Load` метод позволяет строки должен быть добавлен, замещая значение по умолчанию или значение null для отсутствующего столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-615">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="05aac-616">Если используется не значение по умолчанию или значение null, то `Load` метод вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-616">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="05aac-617">Если указано значение определенного по умолчанию отсутствует, `Load` метод использует значение null как значение по умолчанию подразумеваемых.</span><span class="sxs-lookup"><span data-stu-id="05aac-617">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="05aac-618">Прежде чем анализировать поведение `Load` метод с точки зрения операций с данными, обратите внимание на каждой строки в пределах <xref:System.Data.DataTable> сохраняет текущее значение и исходное значение для каждого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-618">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="05aac-619">Эти значения могут быть эквивалентны, или может отличаться, если данные в строке были изменены с момента заполнения `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-619">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="05aac-620">См. в разделе [строки состояния и версии строк](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="05aac-620">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="05aac-621">При таком вызове метода, указанного <xref:System.Data.LoadOption> параметр влияет на обработку входящих данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-621">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="05aac-622">Как метод Load должна обрабатывать загрузку строк, имеющих тот же первичный ключ, как и существующие строки?</span><span class="sxs-lookup"><span data-stu-id="05aac-622">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="05aac-623">Должен ли он изменять текущие значения и исходные значения?</span><span class="sxs-lookup"><span data-stu-id="05aac-623">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="05aac-624">Эти проблемы и многое другое, управляются `loadOption` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-624">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="05aac-625">Если существующая строка и входная строка содержит соответствующие значения первичного ключа, строка обрабатывается с помощью его текущее значение строки состояния, в противном случае она обрабатывается как новой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-625">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="05aac-626">С точки зрения операций событий <xref:System.Data.DataTable.RowChanging> событие происходит перед каждой строки изменяется и <xref:System.Data.DataTable.RowChanged> событие возникает после изменения каждой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-626">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="05aac-627">В каждом случае <xref:System.Data.DataRowChangeEventArgs.Action%2A> свойство <xref:System.Data.DataRowChangeEventArgs> экземпляр, переданный в обработчик событий содержит сведения о конкретного действия, связанного с событием.</span><span class="sxs-lookup"><span data-stu-id="05aac-627">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="05aac-628">Значение этого действия зависит от состояния строки до операции загрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-628">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="05aac-629">В каждом случае оба события возникают и всех действии.</span><span class="sxs-lookup"><span data-stu-id="05aac-629">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="05aac-630">Действие может применяться к текущей или исходной версии каждой строки, или оба из них, в зависимости от состояния текущей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-630">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="05aac-631">В следующей таблице показаны поведение метода Load при вызове с каждым из `LoadOption` значений, а также показано, как значения взаимодействуют с состоянием загружаемой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-631">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="05aac-632">Последняя строка (с меткой "(отсутствует)») описывается поведение для входящих строк, которые не соответствуют любой существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-632">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="05aac-633">Каждая ячейка в этой таблице описывает текущее и исходное значение для поля в строке, вместе с <xref:System.Data.DataRowState> для значения после `Load` завершения метода.</span><span class="sxs-lookup"><span data-stu-id="05aac-633">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="05aac-634">Существующие DataRowState</span><span class="sxs-lookup"><span data-stu-id="05aac-634">Existing DataRowState</span></span>|<span data-ttu-id="05aac-635">Upsert</span><span class="sxs-lookup"><span data-stu-id="05aac-635">Upsert</span></span>|<span data-ttu-id="05aac-636">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="05aac-636">OverwriteChanges</span></span>|<span data-ttu-id="05aac-637">PreserveChanges (поведение по умолчанию)</span><span class="sxs-lookup"><span data-stu-id="05aac-637">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="05aac-638">Добавлено</span><span class="sxs-lookup"><span data-stu-id="05aac-638">Added</span></span>|<span data-ttu-id="05aac-639">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-639">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-640">Исходный = -\<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-640">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="05aac-641">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-641">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-642">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-642">RowAction = Change</span></span>|<span data-ttu-id="05aac-643">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-643">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-644">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-644">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-645">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-645">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-646">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-646">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-647">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-647">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-648">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-648">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-649">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-649">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-650">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-650">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-651">Изменено</span><span class="sxs-lookup"><span data-stu-id="05aac-651">Modified</span></span>|<span data-ttu-id="05aac-652">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-652">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-653">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-653">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-654">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-654">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-655">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-655">RowAction = Change</span></span>|<span data-ttu-id="05aac-656">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-656">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-657">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-657">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-658">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-658">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-659">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-659">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-660">Текущий = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-660">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-661">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-661">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-662">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-662">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-663">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-663">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="05aac-664">аленный</span><span class="sxs-lookup"><span data-stu-id="05aac-664">eleted</span></span>|<span data-ttu-id="05aac-665">(Нагрузки не влияет на удаленные строки)</span><span class="sxs-lookup"><span data-stu-id="05aac-665">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="05aac-666">Текущий =---</span><span class="sxs-lookup"><span data-stu-id="05aac-666">Current = ---</span></span><br /><br /> <span data-ttu-id="05aac-667">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-667">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-668">Состояние = \<удален ></span><span class="sxs-lookup"><span data-stu-id="05aac-668">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="05aac-669">(Со следующими характеристиками добавляется новая строка)</span><span class="sxs-lookup"><span data-stu-id="05aac-669">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="05aac-670">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-670">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-671">Исходный = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-671">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-672">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-672">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-673">RowAction = добавить</span><span class="sxs-lookup"><span data-stu-id="05aac-673">RowAction = Add</span></span>|<span data-ttu-id="05aac-674">Отменить удаление и</span><span class="sxs-lookup"><span data-stu-id="05aac-674">Undo delete and</span></span><br /><br /> <span data-ttu-id="05aac-675">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-675">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-676">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-676">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-677">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-677">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-678">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-678">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-679">Текущий = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-679">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-680">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-680">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-681">Состояние = \<удален ></span><span class="sxs-lookup"><span data-stu-id="05aac-681">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="05aac-682">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-682">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="05aac-683">Unchanged</span><span class="sxs-lookup"><span data-stu-id="05aac-683">Unchanged</span></span>|<span data-ttu-id="05aac-684">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-684">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-685">Исходный = \<существующие ></span><span class="sxs-lookup"><span data-stu-id="05aac-685">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="05aac-686">Если новое значение будет таким же, как существующее значение</span><span class="sxs-lookup"><span data-stu-id="05aac-686">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="05aac-687">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-687">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-688">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="05aac-688">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="05aac-689">ELSE</span><span class="sxs-lookup"><span data-stu-id="05aac-689">Else</span></span><br /><br /> <span data-ttu-id="05aac-690">Состояние = \<изменения ></span><span class="sxs-lookup"><span data-stu-id="05aac-690">State = \<Modified></span></span><br /><br /> <span data-ttu-id="05aac-691">RowAction = изменение</span><span class="sxs-lookup"><span data-stu-id="05aac-691">RowAction = Change</span></span>|<span data-ttu-id="05aac-692">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-692">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-693">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-693">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-694">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-694">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-695">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-695">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-696">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-696">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-697">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-697">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-698">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-698">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-699">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-699">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="05aac-700">Отсутствует)</span><span class="sxs-lookup"><span data-stu-id="05aac-700">Not present)</span></span>|<span data-ttu-id="05aac-701">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-701">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-702">Исходный = \<недоступно ></span><span class="sxs-lookup"><span data-stu-id="05aac-702">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="05aac-703">Состояние = \<добавлены ></span><span class="sxs-lookup"><span data-stu-id="05aac-703">State = \<Added></span></span><br /><br /> <span data-ttu-id="05aac-704">RowAction = добавить</span><span class="sxs-lookup"><span data-stu-id="05aac-704">RowAction = Add</span></span>|<span data-ttu-id="05aac-705">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-705">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-706">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-706">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-707">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-707">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-708">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-708">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="05aac-709">Текущий = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-709">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-710">Исходный = \<входящих ></span><span class="sxs-lookup"><span data-stu-id="05aac-710">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="05aac-711">Состояние = \<без изменений ></span><span class="sxs-lookup"><span data-stu-id="05aac-711">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="05aac-712">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="05aac-712">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="05aac-713">Значения в <xref:System.Data.DataColumn> может быть ограничена путем использования свойства таких как <xref:System.Data.DataColumn.ReadOnly%2A> и <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-713">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="05aac-714">`Load` Метод обрабатывает такие столбцы способом, который согласуется с поведением, определяются свойствами столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-714">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="05aac-715">Чтение Единственное ограничение на <xref:System.Data.DataColumn> применимо только для изменений, произошедших в памяти.</span><span class="sxs-lookup"><span data-stu-id="05aac-715">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="05aac-716">`Load` Метода перезаписывает значения столбца только для чтения, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="05aac-716">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="05aac-717">Если указать параметры OverwriteChanges или PreserveChanges при вызове `Load` метод, то предполагается выполняется что данные поступают из `DataTable`в первичный источник данных, а объект DataTable отслеживает изменения и можно распространить изменения в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-717">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="05aac-718">Если выбран параметр Upsert, предполагается, что данные поступают из одного из вторичного источника данных, таких как данные, предоставляемые компонентом среднего уровня, быть изменены пользователем.</span><span class="sxs-lookup"><span data-stu-id="05aac-718">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="05aac-719">В этом случае предполагается, что цель состоит в сборе данных из одного или нескольких источников данных в `DataTable`, а затем данные могут распространяться обратно в основной источник данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-719">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="05aac-720"><xref:System.Data.LoadOption> Параметр используется для определения конкретной версии строки, которая будет использоваться для сравнения первичных ключей.</span><span class="sxs-lookup"><span data-stu-id="05aac-720">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="05aac-721">В таблице ниже сведения.</span><span class="sxs-lookup"><span data-stu-id="05aac-721">The table below provides the details.</span></span>  
  
|<span data-ttu-id="05aac-722">Параметр загрузки</span><span class="sxs-lookup"><span data-stu-id="05aac-722">Load option</span></span>|<span data-ttu-id="05aac-723">Версия DataRow, используемая для сравнения первичных ключей</span><span class="sxs-lookup"><span data-stu-id="05aac-723">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="05aac-724">Исходная версия, если он существует, в противном случае текущая версия</span><span class="sxs-lookup"><span data-stu-id="05aac-724">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="05aac-725">Исходная версия, если он существует, в противном случае текущая версия</span><span class="sxs-lookup"><span data-stu-id="05aac-725">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="05aac-726">Текущая версия, если он существует, в противном случае исходная версия</span><span class="sxs-lookup"><span data-stu-id="05aac-726">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="05aac-727">`errorHandler` Параметр <xref:System.Data.FillErrorEventHandler> делегат, который ссылается на процедуру, которая вызывается при возникновении ошибки во время загрузки данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-727">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="05aac-728"><xref:System.Data.FillErrorEventArgs> Параметра, передаваемые в процедуру предоставляет свойства, которые позволяют получить сведения об ошибке, которая произошла, текущей строке данных, и <xref:System.Data.DataTable> заполнения.</span><span class="sxs-lookup"><span data-stu-id="05aac-728">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="05aac-729">С помощью этого механизма делегата, вместо простой блок try/catch, позволяет определить ошибки, обрабатывать ситуации и продолжить обработку при необходимости.</span><span class="sxs-lookup"><span data-stu-id="05aac-729">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="05aac-730"><xref:System.Data.FillErrorEventArgs> Параметр предоставляет <xref:System.Data.FillErrorEventArgs.Continue%2A> свойство: присвойте этому свойству значение `true` для указания, что ошибка была обработана и продолжить обработку.</span><span class="sxs-lookup"><span data-stu-id="05aac-730">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="05aac-731">Присвойте свойству `false` для указания, что вы хотите остановить процесс.</span><span class="sxs-lookup"><span data-stu-id="05aac-731">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="05aac-732">Имейте в виду, что свойству присвоено значение `false` вызывает код, источником проблемы для создания исключения.</span><span class="sxs-lookup"><span data-stu-id="05aac-732">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-733">Находит и обновляет конкретную строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-733">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="05aac-734">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-734">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * bool -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, fAcceptChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="05aac-735">Массив значений, используемых для создания новой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-735">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="fAcceptChanges">
          <span data-ttu-id="05aac-736">Значение <see langword="true" /> — принять изменения; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-736">
              <see langword="true" /> to accept changes; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-737">Находит и обновляет конкретную строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-737">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="05aac-738">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-738">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-739">Новый объект <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-739">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-740"><xref:System.Data.DataTable.LoadDataRow%2A> Метод принимает массив значений и находит соответствующее значение(я) в столбцы первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-740">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="05aac-741">Если столбец имеет значение по умолчанию, передайте значение null в массиве, чтобы задать значение по умолчанию для этого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-741">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="05aac-742">Аналогично Если столбец имеет его <xref:System.Data.DataColumn.AutoIncrement%2A> свойству присвоено значение true, передать значение null в массив для установки автоматически сформированное значение для строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-742">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="05aac-743">Если `fAcceptChanges` параметр `true` или не указан, добавления новых данных и затем <xref:System.Data.DataTable.AcceptChanges%2A> вызывается для принятия всех изменений в <xref:System.Data.DataTable>; Если аргумент является `false`, новые добавленные строки помечаются как вставки и изменения существующие строки помечаются как изменения.</span><span class="sxs-lookup"><span data-stu-id="05aac-743">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="05aac-744">Исключения могут также возникнуть в <xref:System.Data.DataTable.ColumnChanging> или <xref:System.Data.DataTable.RowChanging> событий.</span><span class="sxs-lookup"><span data-stu-id="05aac-744">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="05aac-745">При возникновении исключения, строка не добавлена в таблицу.</span><span class="sxs-lookup"><span data-stu-id="05aac-745">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="05aac-746">Используйте <xref:System.Data.DataTable.LoadDataRow%2A> в сочетании с <xref:System.Data.DataTable.BeginLoadData%2A> и <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-746">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-747">В следующем примере используется <xref:System.Data.DataTable.LoadDataRow%2A> метод, чтобы попытаться найти строку.</span><span class="sxs-lookup"><span data-stu-id="05aac-747">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="05aac-748">Если строка не обнаружена, значения используются для создания новой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-748">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05aac-749">Размер массива превышает число столбцов в таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-749">The array is larger than the number of columns in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="05aac-750">Значение не отвечает соответствующему типу столбца.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-750">A value doesn't match its respective column type.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ConstraintException">
          <span data-ttu-id="05aac-751">Добавление строки нарушает ограничение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-751">Adding the row invalidates a constraint.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.NoNullAllowedException">
          <span data-ttu-id="05aac-752">Попытка поместить значение null в столбец, у которого <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-752">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * System.Data.LoadOption -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="05aac-753">Массив значений, используемых для создания новой строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-753">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="05aac-754">Используется для определения способа применения значений массива к соответствующим значениям в существующей строке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-754">Used to determine how the array values are applied to the corresponding values in an existing row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-755">Находит и обновляет конкретную строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-755">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="05aac-756">Если нужная строка не найдена, то с помощью заданных значений создается новая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-756">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-757">Новый объект <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-757">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-758"><xref:System.Data.DataTable.LoadDataRow%2A> Метод принимает массив значений и находит соответствующее значение(я) в столбцы первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-758">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="05aac-759">Если столбец имеет значение по умолчанию, передайте значение null в массиве, чтобы задать значение по умолчанию для этого столбца.</span><span class="sxs-lookup"><span data-stu-id="05aac-759">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="05aac-760">Аналогично Если столбец имеет его <xref:System.Data.DataColumn.AutoIncrement%2A> свойству присвоено значение true, передать значение null в массив для установки автоматически сформированное значение для строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-760">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="05aac-761">Значение `loadOption` параметр используется для определения способа применения значений массива в существующую строку.</span><span class="sxs-lookup"><span data-stu-id="05aac-761">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="05aac-762">Например если `loadOption` присваивается `OverwriteChanges`, `Original` и `Current` значения каждого столбца заменяются значениями из входящей строки и `RowState` свойству `Unchanged`.</span><span class="sxs-lookup"><span data-stu-id="05aac-762">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="05aac-763">Исключения могут также возникнуть в <xref:System.Data.DataTable.ColumnChanging> или <xref:System.Data.DataTable.RowChanging> событий.</span><span class="sxs-lookup"><span data-stu-id="05aac-763">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="05aac-764">При возникновении исключения, строка не добавлена в таблицу.</span><span class="sxs-lookup"><span data-stu-id="05aac-764">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="05aac-765">Используйте <xref:System.Data.DataTable.LoadDataRow%2A> в сочетании с <xref:System.Data.DataTable.BeginLoadData%2A> и <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-765">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : System.Globalization.CultureInfo with get, set" Usage="System.Data.DataTable.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableLocaleDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-766">Возвращает или задает сведения о языке, используемые для сравнения строк таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-766">Gets or sets the locale information used to compare strings within the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-767">Класс <see cref="T:System.Globalization.CultureInfo" />, содержащий данные о языковом стандарте, используемом пользователем на компьютере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-767">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span>
          </span>
          <span data-ttu-id="05aac-768">Значением по умолчанию является языковый стандарт <see cref="T:System.Data.DataSet" /> объекта <see cref="T:System.Globalization.CultureInfo" /> (возвращаемый свойством <see cref="P:System.Data.DataSet.Locale" />), к которому принадлежит таблица <see cref="T:System.Data.DataTable" />; если таблица не принадлежит набору <see cref="T:System.Data.DataSet" />, значением по умолчанию является языковый стандарт <see cref="T:System.Globalization.CultureInfo" /> текущей системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-768">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-769">Объект <xref:System.Globalization.CultureInfo> представляет программные настройки конкретного языка и региональных параметров или community.</span><span class="sxs-lookup"><span data-stu-id="05aac-769">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="05aac-770">При сравнении строк <xref:System.Globalization.CultureInfo> влияет на сортировки, сравнения и фильтрации.</span><span class="sxs-lookup"><span data-stu-id="05aac-770">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-771">В столбцах, содержащих выражения <xref:System.StringComparison.InvariantCulture> используется.</span><span class="sxs-lookup"><span data-stu-id="05aac-771">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="05aac-772"><xref:System.StringComparison.CurrentCulture> Учитывается.</span><span class="sxs-lookup"><span data-stu-id="05aac-772">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-773">В следующем примере задается <xref:System.Globalization.CultureInfo> через <xref:System.Data.DataTable.Locale%2A> и выводит имя языка ISO.</span><span class="sxs-lookup"><span data-stu-id="05aac-773">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-774">Объединяет заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-774">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-775">`Merge` Метод используется для слияния двух <xref:System.Data.DataTable> объекты, которые имеют схожее схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-775">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="05aac-776">Слияние обычно используется в клиентском приложении для включения последних изменений из источника данных в существующую коллекцию <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-776">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-777">Это позволяет клиентскому приложению обновлять <xref:System.Data.DataTable> последние данные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-777">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="05aac-778">Операция слияния принимает во внимание только исходная таблица и таблицу для слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-778">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="05aac-779">Дочерние таблицы не влияет и не включены.</span><span class="sxs-lookup"><span data-stu-id="05aac-779">Child tables are not affected or included.</span></span> <span data-ttu-id="05aac-780">Если таблица содержит один или несколько дочерних таблиц, определенных как часть связи, каждой дочерней таблицы должны быть объединены по отдельности.</span><span class="sxs-lookup"><span data-stu-id="05aac-780">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-781">Следующее консольное приложение демонстрирует поведение `missingSchemaAction` параметр <xref:System.Data.DataTable.Merge%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-781">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="05aac-782">В этом примере создаются две версии той же таблицы, изменения схемы для второй версии.</span><span class="sxs-lookup"><span data-stu-id="05aac-782">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="05aac-783">Код пытается объединить вторую таблицу с первой.</span><span class="sxs-lookup"><span data-stu-id="05aac-783">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-784">В этом примере показано, как использовать один из перегруженных версий метода Merge.</span><span class="sxs-lookup"><span data-stu-id="05aac-784">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="05aac-785">Другие примеры, которые могут быть доступны см. в разделах отдельные перегрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-785">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable -&gt; unit" Usage="dataTable.Merge table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="05aac-786">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-786">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-787">Объединяет заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-787">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-788">Метод Merge используется для слияния двух <xref:System.Data.DataTable> объекты, которые имеют схожее схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-788">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="05aac-789">Слияние обычно используется в клиентском приложении для включения последних изменений из источника данных в существующую коллекцию <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-789">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-790">Это позволяет клиентскому приложению обновлять <xref:System.Data.DataTable> последние данные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-790">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="05aac-791">Операция слияния принимает во внимание только исходная таблица и таблицу для слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-791">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="05aac-792">Дочерние таблицы не влияет и не включены.</span><span class="sxs-lookup"><span data-stu-id="05aac-792">Child tables are not affected or included.</span></span> <span data-ttu-id="05aac-793">Если таблица содержит один или несколько дочерних таблиц, определенных как часть связи, каждой дочерней таблицы должны быть объединены по отдельности.</span><span class="sxs-lookup"><span data-stu-id="05aac-793">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="05aac-794">`Merge` Метод обычно вызывается в конце серии процедур, включающих проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-794">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="05aac-795">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются по умолчанию во время операции слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-795">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="05aac-796">Разработчики могут изменить это поведение путем вызова одного из двух других перегрузок для этого метода и задания значение false для `preserveChanges` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-796">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="05aac-797">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и выполняет его проверку перед их отправкой обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-797">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="05aac-798">В этом случае <xref:System.Data.DataTable.GetChanges%2A> сначала вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-798">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="05aac-799">Что метод возвращает второй <xref:System.Data.DataTable> оптимизировано для проверки и слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-799">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="05aac-800">Эта секунда <xref:System.Data.DataTable> объект содержит только <xref:System.Data.DataRow> объектов, которые были изменены, приводит к подмножество исходного <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-800">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-801">Это подмножество обычно меньше и поэтому более эффективно передается обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-801">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="05aac-802">Компонент среднего уровня обновит исходный источник данных изменениями с помощью хранимых процедур.</span><span class="sxs-lookup"><span data-stu-id="05aac-802">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="05aac-803">Средний уровень может отправить назад либо новый <xref:System.Data.DataTable> с исходными данными и последние данные из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-803">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="05aac-804">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <xref:System.Data.DataTable> можно объединить обратно в клиентское приложение исходный <xref:System.Data.DataTable> с <xref:System.Data.DataTable.Merge%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-804">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-805">При слиянии источника <xref:System.Data.DataTable> в целевую, исходные строки с <xref:System.Data.DataRowState> значение `Unchanged`, `Modified`, или `Deleted`, сопоставляется с конечным строкам с теми же значениями первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-805">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="05aac-806">Исходные строки с <xref:System.Data.DataRowState> значение `Added` сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-806">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-807">Следующее консольное приложение создает простой <xref:System.Data.DataTable> и добавляет данные в таблицу.</span><span class="sxs-lookup"><span data-stu-id="05aac-807">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="05aac-808">Затем в примере создается копия таблицы путем добавления строк в копию.</span><span class="sxs-lookup"><span data-stu-id="05aac-808">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="05aac-809">Наконец, в примере вызывается <xref:System.Data.DataTable.Merge%2A> метода можно объединить эти данные во второй таблице с данными в первой таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-809">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool -&gt; unit" Usage="dataTable.Merge (table, preserveChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="05aac-810">Объект <see langword="DataTable" />, объединяемый с текущим объектом <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-810">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="05aac-811">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see langword="DataTable" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-811">
              <see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-812">Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения в контейнере данных <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-812">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-813">Метод Merge используется для слияния двух <xref:System.Data.DataTable> объекты, которые имеют схожее схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-813">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="05aac-814">Слияние обычно используется в клиентском приложении для включения последних изменений из источника данных в существующую коллекцию <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-814">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-815">Это позволяет клиентскому приложению обновлять <xref:System.Data.DataTable> последние данные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-815">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="05aac-816">Операция слияния принимает во внимание только исходная таблица и таблицу для слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-816">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="05aac-817">Дочерние таблицы не влияет и не включены.</span><span class="sxs-lookup"><span data-stu-id="05aac-817">Child tables are not affected or included.</span></span> <span data-ttu-id="05aac-818">Если таблица содержит один или несколько дочерних таблиц, определенных как часть связи, каждой дочерней таблицы должны быть объединены по отдельности.</span><span class="sxs-lookup"><span data-stu-id="05aac-818">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="05aac-819">`Merge` Метод обычно вызывается в конце серии процедур, включающих проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-819">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="05aac-820">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются во время операции слияния, если только значение "false" для `preserveChanges` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-820">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="05aac-821">Если `preserveChanges` параметр имеет значение `true`, входные значения не переопределяют существующие значения в текущей версии существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-821">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="05aac-822">Если `preserveChanges` параметр имеет значение `false`, входные значения переопределяют существующие значения в текущей версии существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-822">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="05aac-823">Дополнительные сведения о версиях строк см. в разделе [строки состояния и версии строк](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-823">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="05aac-824">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и выполняет его проверку перед их отправкой обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-824">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="05aac-825">В этом случае <xref:System.Data.DataTable.GetChanges%2A> сначала вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-825">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="05aac-826">Что метод возвращает второй <xref:System.Data.DataTable> оптимизировано для проверки и слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-826">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="05aac-827">Эта секунда <xref:System.Data.DataTable> объект содержит только <xref:System.Data.DataTable> и <xref:System.Data.DataRow> объектов, которые были изменены, приводит к подмножество исходного <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-827">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-828">Это подмножество обычно меньше, и поэтому это подмножество более эффективно передается обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-828">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="05aac-829">Компонент среднего уровня обновит исходный источник данных изменениями с помощью хранимых процедур.</span><span class="sxs-lookup"><span data-stu-id="05aac-829">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="05aac-830">Средний уровень может отправить назад либо новый <xref:System.Data.DataTable> с исходными данными и последние данные из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-830">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="05aac-831">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <xref:System.Data.DataTable> можно объединить обратно в клиентское приложение исходный <xref:System.Data.DataTable> с <xref:System.Data.DataTable.Merge%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-831">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-832">При слиянии источника <xref:System.Data.DataTable> в целевую, исходные строки с <xref:System.Data.DataRowState> значение `Unchanged`, `Modified`, или `Deleted` сопоставляются с конечным строкам с теми же значениями первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-832">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="05aac-833">Исходные строки с <xref:System.Data.DataRowState> значение `Added` сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-833">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-834">Следующее консольное приложение создает <xref:System.Data.DataTable> строк, содержащий изменяет некоторые данные в тех строках и пытается объединить данные из разных <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-834">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-835">В примере показано поведение `preserveChanges` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-835">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool * System.Data.MissingSchemaAction -&gt; unit" Usage="dataTable.Merge (table, preserveChanges, missingSchemaAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="05aac-836">Объект <see cref="T:System.Data.DataTable" />, объединяемый с текущим объектом <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-836">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="05aac-837">Значение <see langword="true" />, если необходимо сохранить изменения в текущем объекте <see cref="T:System.Data.DataTable" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-837">
              <see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="missingSchemaAction">
          <span data-ttu-id="05aac-838">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-838">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-839">Объедините заданный объект <see cref="T:System.Data.DataTable" /> с текущим объектом <see langword="DataTable" />, указав, следует ли сохранить изменения и способ обработки отсутствующей схемы в текущем контейнере данных <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-839">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-840">`Merge` Метод используется для слияния двух <xref:System.Data.DataTable> объекты, которые имеют схожее схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-840">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="05aac-841">Слияние обычно используется в клиентском приложении для включения последних изменений из источника данных в существующую коллекцию <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-841">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-842">Это позволяет клиентскому приложению обновлять <xref:System.Data.DataTable> последние данные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-842">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="05aac-843">Операция слияния принимает во внимание только исходная таблица и таблицу для слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-843">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="05aac-844">Дочерние таблицы не влияет и не включены.</span><span class="sxs-lookup"><span data-stu-id="05aac-844">Child tables are not affected or included.</span></span> <span data-ttu-id="05aac-845">Если таблица содержит один или несколько дочерних таблиц, определенных как часть связи, каждой дочерней таблицы должны быть объединены по отдельности.</span><span class="sxs-lookup"><span data-stu-id="05aac-845">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="05aac-846">`Merge` Метод обычно вызывается в конце серии процедур, включающих проверку изменений, согласование ошибок, обновление источника данных с учетом изменений и наконец обновление существующего <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-846">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="05aac-847">При выполнении слияния, изменения, внесенные в существующие данные до слияния, сохраняются во время операции слияния, если только значение "false" для `preserveChanges` параметра.</span><span class="sxs-lookup"><span data-stu-id="05aac-847">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="05aac-848">Если `preserveChanges` параметр имеет значение `true`, входные значения не переопределяют существующие значения в текущей версии существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-848">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="05aac-849">Если `preserveChanges` параметр имеет значение `false`, входные значения переопределяют существующие значения в текущей версии существующей строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-849">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="05aac-850">Дополнительные сведения о версиях строк см. в разделе [строки состояния и версии строк](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-850">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="05aac-851">В клиентском приложении обычно существует одна кнопка, которой пользователь может щелкнуть собрать измененные данные и выполняет его проверку перед их отправкой обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-851">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="05aac-852">В этом случае <xref:System.Data.DataTable.GetChanges%2A> сначала вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-852">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="05aac-853">Что метод возвращает второй <xref:System.Data.DataTable> оптимизировано для проверки и слияния.</span><span class="sxs-lookup"><span data-stu-id="05aac-853">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="05aac-854">Эта секунда <xref:System.Data.DataTable> объект содержит только <xref:System.Data.DataTable> и <xref:System.Data.DataRow> объектов, которые были изменены, приводит к подмножество исходного <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-854">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-855">Это подмножество обычно меньше, и поэтому это подмножество более эффективно передается обратно в компонент среднего уровня.</span><span class="sxs-lookup"><span data-stu-id="05aac-855">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="05aac-856">Компонент среднего уровня обновит исходный источник данных изменениями с помощью хранимых процедур.</span><span class="sxs-lookup"><span data-stu-id="05aac-856">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="05aac-857">Средний уровень может отправить назад либо новый <xref:System.Data.DataTable> с исходными данными и последние данные из источника данных (повторив исходный запрос), или он может отправить обратно подмножество с любыми изменениями, внесенными в него из источника данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-857">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="05aac-858">(Например, если источник данных автоматически создает уникальные значения первичного ключа, эти значения могут передаваться обратно в клиентское приложение.) В любом случае возвращаемый <xref:System.Data.DataTable> можно объединить обратно в клиентское приложение исходный <xref:System.Data.DataTable> с <xref:System.Data.DataTable.Merge%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-858">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-859">Когда <xref:System.Data.DataTable.Merge%2A> вызывается метод, схемы двух <xref:System.Data.DataTable> объекты сравниваются, так как это схемы могут быть изменены.</span><span class="sxs-lookup"><span data-stu-id="05aac-859">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="05aac-860">Например в бизнес-сценарии, новые столбцы могут были добавлены XML-схеме автоматизированным процессом.</span><span class="sxs-lookup"><span data-stu-id="05aac-860">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="05aac-861">Если источник <xref:System.Data.DataTable> содержит элементы схемы (добавлены <xref:System.Data.DataColumn> объектов), которые отсутствуют в целевой объект, элементы схемы могут добавляться к целевому объекту, задав `missingSchemaAction` аргумент `MissingSchemaAction.Add`.</span><span class="sxs-lookup"><span data-stu-id="05aac-861">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="05aac-862">В этом случае объединенный <xref:System.Data.DataTable> содержит добавленные схему и данные.</span><span class="sxs-lookup"><span data-stu-id="05aac-862">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="05aac-863">После слияния схем, данные объединяются.</span><span class="sxs-lookup"><span data-stu-id="05aac-863">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="05aac-864">При слиянии источника <xref:System.Data.DataTable> в целевую, исходные строки с <xref:System.Data.DataRowState> значение `Unchanged`, `Modified`, или `Deleted` сопоставляются с конечным строкам с теми же значениями первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="05aac-864">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="05aac-865">Исходные строки с <xref:System.Data.DataRowState> значение `Added` сопоставляются с новым конечным строкам с теми же значениями первичного ключа, как новые исходные строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-865">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-866">Следующее консольное приложение демонстрирует поведение `missingSchemaAction` параметр <xref:System.Data.DataTable.Merge%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-866">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="05aac-867">В этом примере создаются две версии той же таблицы, изменения схемы для второй версии.</span><span class="sxs-lookup"><span data-stu-id="05aac-867">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="05aac-868">Код пытается объединить вторую таблицу с первой.</span><span class="sxs-lookup"><span data-stu-id="05aac-868">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumCapacity : int with get, set" Usage="System.Data.DataTable.MinimumCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableMinimumCapacityDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-869">Возвращает или задает начальный размер таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-869">Gets or sets the initial starting size for this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-870">Начальный размер (в строках) этой таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-870">The initial starting size in rows of this table.</span>
          </span>
          <span data-ttu-id="05aac-871">Значение по умолчанию — 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-871">The default is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-872"><xref:System.Data.DataTable.MinimumCapacity%2A> Позволяет системе создать соответствующий набор ресурсов перед получением данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-872">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="05aac-873">В ситуации, когда важна производительность, задание этого свойства можно оптимизировать производительность.</span><span class="sxs-lookup"><span data-stu-id="05aac-873">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-874">В следующем примере задается <xref:System.Data.DataTable.MinimumCapacity%2A> из <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-874">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataTable.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-875">Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-875">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-876">Пространство имен <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-876">The namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberSignature Language="F#" Value="member this.NewRow : unit -&gt; System.Data.DataRow" Usage="dataTable.NewRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-877">Создает новый класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и таблица.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-877">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-878">Класс <see cref="T:System.Data.DataRow" />, имеющий ту же схему, что и класс <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-878">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-879">Необходимо использовать <xref:System.Data.DataTable.NewRow%2A> метод для создания новых <xref:System.Data.DataRow> объектов с той же схеме <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-879">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-880">После создания <xref:System.Data.DataRow>, его можно добавить к <xref:System.Data.DataRowCollection>помощи <xref:System.Data.DataTable> объекта <xref:System.Data.DataTable.Rows%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="05aac-880">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="05aac-881">При использовании <xref:System.Data.DataTable.NewRow%2A> для создания новых строк, строки должны быть добавляется или удаляется из таблицы данных, перед вызовом метода <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-881">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-882">В следующем примере создается <xref:System.Data.DataTable>, складывает два <xref:System.Data.DataColumn> объекты, определить схему таблицы и создаются несколько <xref:System.Data.DataRow> объектов с помощью <xref:System.Data.DataTable.NewRow%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-882">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="05aac-883">Те <xref:System.Data.DataRow> объекты будут добавляться в <xref:System.Data.DataRowCollection> с помощью <xref:System.Data.DataRowCollection.Add%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-883">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberSignature Language="F#" Value="member this.NewRowArray : int -&gt; System.Data.DataRow[]" Usage="dataTable.NewRowArray size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="05aac-884">Значение <see cref="T:System.Int32" />, описывающее размер массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-884">A <see cref="T:System.Int32" /> value that describes the size of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-885">Возвращает массив <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-885">Returns an array of <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-886">Новый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-886">The new array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow&#xA;override this.NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="dataTable.NewRowFromBuilder builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="05aac-887">Объект <see cref="T:System.Data.DataRowBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-887">A <see cref="T:System.Data.DataRowBuilder" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-888">Создает новую строку из существующей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-888">Creates a new row from an existing row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-889">Производный класс <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-889">A <see cref="T:System.Data.DataRow" /> derived class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-890">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-890">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-891">Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-891">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-892">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-892">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-893">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-893">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-894">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-894">
              <para>When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-895">Объект <see cref="T:System.Data.DataColumnChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-895">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-896">Вызывает событие <see cref="E:System.Data.DataTable.ColumnChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-896">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-897">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-897">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-898">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-898">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-899">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-899">
              <para>When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataTable.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="05aac-900">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-900">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-901">Вызывает событие <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-901">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-902">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-902">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-903">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-903">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-904">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-904">
              <para>When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveColumn : System.Data.DataColumn -&gt; unit&#xA;override this.OnRemoveColumn : System.Data.DataColumn -&gt; unit" Usage="dataTable.OnRemoveColumn column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="05aac-905">Удаляемый объект <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-905">The <see cref="T:System.Data.DataColumn" /> being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-906">Сообщает классу <see cref="T:System.Data.DataTable" /> об удалении объекта <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-906">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-907">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-907">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-908">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-908">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-909">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-909">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-910">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-910">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-911">Вызывает событие <see cref="E:System.Data.DataTable.RowChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-911">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-912">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-912">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-913">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-913">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-914">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-914">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-915">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-915">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-916">Вызывает событие <see cref="E:System.Data.DataTable.RowChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-916">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-917">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-917">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-918">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-918">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-919">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-919">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-920">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-920">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-921">Вызывает событие <see cref="E:System.Data.DataTable.RowDeleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-921">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-922">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-922">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-923">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-923">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-924">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-924">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-925">Объект <see cref="T:System.Data.DataRowChangeEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-925">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-926">Вызывает событие <see cref="E:System.Data.DataTable.RowDeleting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-926">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-927">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-928">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-928">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="05aac-929">
            <para>При переопределении метода <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-929">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableCleared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-930">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-930">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-931">Вызывает событие <see cref="E:System.Data.DataTable.TableCleared" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-931">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-932">Вызывает <xref:System.Data.DataTable.TableCleared> событие, которое создается немедленно после всех строк был успешно очищен до <xref:System.Data.DataTable.Clear%2A> метод возвращает управление вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="05aac-932">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="05aac-933">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-933">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-934">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-934">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableClearing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-935">Объект <see cref="T:System.Data.DataTableClearEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-935">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-936">Вызывает событие <see cref="E:System.Data.DataTable.TableClearing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-936">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-937">Вызывает <xref:System.Data.DataTable.TableClearing> событие, которое возникает перед началом обработки <xref:System.Data.DataTable.Clear%2A> начала операции.</span><span class="sxs-lookup"><span data-stu-id="05aac-937">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="05aac-938">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-938">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-939">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-939">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit&#xA;override this.OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit" Usage="dataTable.OnTableNewRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="05aac-940">Объект <see cref="T:System.Data.DataTableNewRowEventArgs" />, содержащий данные события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-940">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-941">Вызывает событие <see cref="E:System.Data.DataTable.TableNewRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-941">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-942">Вызывает <xref:System.Data.DataTable.TableNewRow> , запускающегося после создания нового <xref:System.Data.DataRow> создавались с помощью <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-942">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="05aac-943">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="05aac-943">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="05aac-944">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-944">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ParentRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableParentRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-945">Получает коллекцию родительских отношений для объекта <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-945">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-946">Коллекция <see cref="T:System.Data.DataRelationCollection" />, содержащая родительские отношения для таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-946">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span>
          </span>
          <span data-ttu-id="05aac-947">Если отсутствуют объекты <see cref="T:System.Data.DataRelation" /> возвращается пустая коллекция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-947">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05aac-948">В следующем примере используется <xref:System.Data.DataTable.ParentRelations%2A> свойства для возврата всех его родительских <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-948">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-949">Каждое отношение используется в качестве аргумента в <xref:System.Data.DataRow.GetParentRows%2A> метод <xref:System.Data.DataRow> для возвращения массива строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-949">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="05aac-950">Затем выводит значение каждого столбца в строке.</span><span class="sxs-lookup"><span data-stu-id="05aac-950">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataTable.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-951">Возвращает или задает пространство имен для представления данных объекта <see cref="T:System.Data.DataTable" /> в формате XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-951">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-952">Префикс объекта <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-952">The prefix of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : System.Data.DataColumn[] with get, set" Usage="System.Data.DataTable.PrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrimaryKeyDescr")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-953">Возвращает или задает массив столбцов, которые являются столбцами первичного ключа для таблицы данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-953">Gets or sets an array of columns that function as primary keys for the data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-954">Массив объектов <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-954">An array of <see cref="T:System.Data.DataColumn" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-955">Первичный ключ таблицы должно быть уникальным для идентификации записи в таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-955">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="05aac-956">Можно также создать таблицу с первичным ключом, состоящий из двух или нескольких столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-956">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="05aac-957">Это происходит, когда один столбец не может содержать достаточное количество уникальных значений.</span><span class="sxs-lookup"><span data-stu-id="05aac-957">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="05aac-958">Например два столбца первичного ключа может состоять из столбца «FirstName» и «LastName».</span><span class="sxs-lookup"><span data-stu-id="05aac-958">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="05aac-959">Так как первичные ключи может состоять из более чем одного столбца <xref:System.Data.DataTable.PrimaryKey%2A> свойство состоит из массива <xref:System.Data.DataColumn> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-959">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-960">В первом примере показано, как возвращать столбцы первичного ключа для <xref:System.Data.DataTable> в `DataGrid`.</span><span class="sxs-lookup"><span data-stu-id="05aac-960">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="05aac-961">Во втором примере показано, как задать первичные ключевые столбцы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-961">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException">
          <span data-ttu-id="05aac-962">Ключ является внешним ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-962">The key is a foreign key.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-963">Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-963">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-964"><xref:System.Data.DataTable.ReadXml%2A> Метод предоставляет способ чтения только данных или схему и данные в <xref:System.Data.DataTable> из XML-документа, тогда как <xref:System.Data.DataTable.ReadXmlSchema%2A> метод считывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-964">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="05aac-965">Чтобы прочитать схему и данные, используйте один из `ReadXML` перегрузки, включающие `XmlReadMode` параметра и присвойте ему значение `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-965">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="05aac-966">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.WriteXml%2A> и <xref:System.Data.DataTable.WriteXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-966">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-967">Для записи XML-данных или схемы и данных из `DataTable`, используйте `WriteXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-967">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="05aac-968">Чтобы написать только схему, используйте `WriteXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-968">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-969"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-969">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.Stream -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-970">Производный объект от класса <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-970">An object that derives from <see cref="T:System.IO.Stream" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-971">Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-971">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-972">
            <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-972">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-973">Текущий <xref:System.Data.DataTable> и его потомки, загружаются с данными из предоставленного <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="05aac-973">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="05aac-974">Поведение этого метода идентична <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> методы, кроме данных, в этом случае загружается только для текущей таблицы и ее потомков.</span><span class="sxs-lookup"><span data-stu-id="05aac-974">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="05aac-975"><xref:System.Data.DataTable.ReadXml%2A> Метод предоставляет способ чтения только данных или схему и данные в <xref:System.Data.DataTable> из XML-документа, тогда как <xref:System.Data.DataTable.ReadXmlSchema%2A> метод считывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-975">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="05aac-976">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.WriteXml%2A> и <xref:System.Data.DataTable.WriteXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-976">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-977">Для записи XML-данных или схемы и данных из `DataTable`, используйте `WriteXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-977">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="05aac-978">Чтобы написать только схему, используйте `WriteXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-978">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-979"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-979">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="05aac-980">Если указано схему в строке, встроенная схема используется для расширения существующей реляционной структуры до загрузки данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-980">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="05aac-981">При возникновении конфликтов (например, же столбец в той же таблице, определенные с различными типами данных), возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-981">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="05aac-982">Если схема в строке не указан, реляционной структурой расширяется путем вывода, при необходимости в соответствии со структурой XML-документа.</span><span class="sxs-lookup"><span data-stu-id="05aac-982">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="05aac-983">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-983">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-984">`DataSet` Не связывает XML-элемент с соответствующим ему аргументом `DataColumn` или `DataTable` при экранируются допустимые символы XML, например («_») в сериализованный XML.</span><span class="sxs-lookup"><span data-stu-id="05aac-984">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="05aac-985">`DataSet` Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</span><span class="sxs-lookup"><span data-stu-id="05aac-985">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="05aac-986">Когда экранируются допустимых символов в имени XML-элемента, элемент игнорируется при обработке.</span><span class="sxs-lookup"><span data-stu-id="05aac-986">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-987">В следующем примере создается <xref:System.Data.DataTable> содержащий два столбца и десять строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-987">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="05aac-988">В примере записывается <xref:System.Data.DataTable> схему и данные в поток памяти, путем вызова <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-988">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="05aac-989">В примере создается второй <xref:System.Data.DataTable> и вызывает <xref:System.Data.DataTable.ReadXml%2A> метод заполнения его схемы и данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-989">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.TextReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-990">Объект <see cref="T:System.IO.TextReader" />, используемый для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-990">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-991">Считывает XML-схему и данные в <see cref="T:System.Data.DataTable" />, используя указанный класс <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-991">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-992">
            <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-992">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-993">Текущий <xref:System.Data.DataTable> и его потомки, загружаются с данными из предоставленного <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-993">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="05aac-994">Поведение этого метода идентична <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> методы, кроме данных, в этом случае загружается только для текущей таблицы и ее потомков.</span><span class="sxs-lookup"><span data-stu-id="05aac-994">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="05aac-995"><xref:System.Data.DataTable.ReadXml%2A> Метод предоставляет способ чтения только данных или схему и данные в <xref:System.Data.DataTable> из XML-документа, тогда как <xref:System.Data.DataTable.ReadXmlSchema%2A> метод считывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-995">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="05aac-996">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.WriteXml%2A> и <xref:System.Data.DataTable.WriteXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-996">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-997">Для записи XML-данных или схемы и данных из `DataTable`, используйте `WriteXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-997">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="05aac-998">Чтобы написать только схему, используйте `WriteXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-998">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-999"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-999">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="05aac-1000">Если указано схему в строке, встроенная схема используется для расширения существующей реляционной структуры до загрузки данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1000">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="05aac-1001">При возникновении конфликтов (например, же столбец в той же таблице, определенные с различными типами данных), возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1001">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="05aac-1002">Если схема в строке не указан, реляционной структурой расширяется путем вывода, при необходимости в соответствии со структурой XML-документа.</span><span class="sxs-lookup"><span data-stu-id="05aac-1002">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="05aac-1003">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1003">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1004">`DataSet` Не связывает XML-элемент с соответствующим ему аргументом `DataColumn` или `DataTable` при экранируются допустимые символы XML, например («_») в сериализованный XML.</span><span class="sxs-lookup"><span data-stu-id="05aac-1004">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="05aac-1005">`DataSet` Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</span><span class="sxs-lookup"><span data-stu-id="05aac-1005">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="05aac-1006">Когда экранируются допустимых символов в имени XML-элемента, элемент игнорируется при обработке.</span><span class="sxs-lookup"><span data-stu-id="05aac-1006">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1007">В следующем примере создается <xref:System.Data.DataTable> содержащий два столбца и десять строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1007">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="05aac-1008">В примере записывается <xref:System.Data.DataTable> схему и данные в поток памяти, путем вызова <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1008">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="05aac-1009">В примере создается второй <xref:System.Data.DataTable> и вызывает <xref:System.Data.DataTable.ReadXml%2A> метод заполнения его схемы и данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1009">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : string -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1010">Имя файла, из которого читаются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1010">The name of the file from which to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1011">Читает данные и схему XML в <see cref="T:System.Data.DataTable" /> из указанного файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1011">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1012">
            <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1012">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1013">Текущий <xref:System.Data.DataTable> и его потомки, загружаются с данными из файла с именем в предоставленном <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1013">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="05aac-1014">Поведение этого метода идентична <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> методы, кроме данных, в этом случае загружается только для текущей таблицы и ее потомков.</span><span class="sxs-lookup"><span data-stu-id="05aac-1014">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="05aac-1015"><xref:System.Data.DataTable.ReadXml%2A> Метод предоставляет способ чтения только данных или схему и данные в <xref:System.Data.DataTable> из XML-документа, тогда как <xref:System.Data.DataTable.ReadXmlSchema%2A> метод считывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1015">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="05aac-1016">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.WriteXml%2A> и <xref:System.Data.DataTable.WriteXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1016">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1017">Для записи XML-данных или схемы и данных из `DataTable`, используйте `WriteXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1017">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="05aac-1018">Чтобы написать только схему, используйте `WriteXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1018">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1019"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1019">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="05aac-1020">Если указано схему в строке, встроенная схема используется для расширения существующей реляционной структуры до загрузки данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1020">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="05aac-1021">При возникновении конфликтов (например, же столбец в той же таблице, определенные с различными типами данных), возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1021">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="05aac-1022">Если схема в строке не указан, реляционной структурой расширяется путем вывода, при необходимости в соответствии со структурой XML-документа.</span><span class="sxs-lookup"><span data-stu-id="05aac-1022">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="05aac-1023">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1023">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1024">`DataSet` Не связывает XML-элемент с соответствующим ему аргументом `DataColumn` или `DataTable` при экранируются допустимые символы XML, например («_») в сериализованный XML.</span><span class="sxs-lookup"><span data-stu-id="05aac-1024">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="05aac-1025">`DataSet` Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</span><span class="sxs-lookup"><span data-stu-id="05aac-1025">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="05aac-1026">Когда экранируются допустимых символов в имени XML-элемента, элемент игнорируется при обработке.</span><span class="sxs-lookup"><span data-stu-id="05aac-1026">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1027">В следующем примере создается <xref:System.Data.DataTable> содержащий два столбца и десять строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1027">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="05aac-1028">В примере записывается <xref:System.Data.DataTable> схему и данные на диск.</span><span class="sxs-lookup"><span data-stu-id="05aac-1028">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="05aac-1029">В примере создается второй <xref:System.Data.DataTable> и вызывает <xref:System.Data.DataTable.ReadXml%2A> метод заполнения его схемы и данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1029">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.Xml.XmlReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-1030">Объект <see cref="T:System.Xml.XmlReader" />, используемый для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1030">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1031">Читает данные и схему XML в <see cref="T:System.Data.DataTable" />, используя указанное средство чтения <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1031">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1032">
            <see cref="T:System.Data.XmlReadMode" /> служит для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1032">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1033">Текущий <xref:System.Data.DataTable> и его потомки, загружаются с данными из файла с именем в предоставленном <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1033">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="05aac-1034">Поведение этого метода идентична <xref:System.Data.DataTable.ReadXml%2A> методы, кроме данных, в этом случае загружается только для текущей таблицы и ее потомков.</span><span class="sxs-lookup"><span data-stu-id="05aac-1034">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="05aac-1035"><xref:System.Data.DataTable.ReadXml%2A> Метод предоставляет способ чтения только данных или схему и данные в <xref:System.Data.DataTable> из XML-документа, тогда как <xref:System.Data.DataTable.ReadXmlSchema%2A> метод считывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1035">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="05aac-1036">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.WriteXml%2A> и <xref:System.Data.DataTable.WriteXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1036">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1037">Для записи XML-данных или схемы и данных из `DataTable`, используйте `WriteXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1037">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="05aac-1038">Чтобы написать только схему, используйте `WriteXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1038">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1039"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1039">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="05aac-1040">Если указано схему в строке, встроенная схема используется для расширения существующей реляционной структуры до загрузки данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1040">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="05aac-1041">При возникновении конфликтов (например, же столбец в той же таблице, определенные с различными типами данных), возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1041">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="05aac-1042">Если схема в строке не указан, реляционной структурой расширяется путем вывода, при необходимости в соответствии со структурой XML-документа.</span><span class="sxs-lookup"><span data-stu-id="05aac-1042">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="05aac-1043">Если схема не может расширить с помощью интерфейса для представления всех данных, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1043">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1044">`DataSet` Не связывает XML-элемент с соответствующим ему аргументом `DataColumn` или `DataTable` при экранируются допустимые символы XML, например («_») в сериализованный XML.</span><span class="sxs-lookup"><span data-stu-id="05aac-1044">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="05aac-1045">`DataSet` Себя только экранирует XML-символы в именах элементов XML и таким образом можно использовать только такие же.</span><span class="sxs-lookup"><span data-stu-id="05aac-1045">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="05aac-1046">Когда экранируются допустимых символов в имени XML-элемента, элемент игнорируется при обработке.</span><span class="sxs-lookup"><span data-stu-id="05aac-1046">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1047">В следующем примере создается <xref:System.Data.DataTable> содержащий два столбца и десять строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1047">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="05aac-1048">В примере записывается <xref:System.Data.DataTable> схемы и данных на <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1048">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="05aac-1049">В примере создается второй <xref:System.Data.DataTable> и вызывает <xref:System.Data.DataTable.ReadXml%2A> метод, чтобы заполнить его схему и данные из <xref:System.Xml.XmlReader> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="05aac-1049">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1050">Считывает схему XML в таблицу <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1050">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1051">Используйте `ReadXmlSchema` метод для создания схемы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1051">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1052">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1052">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1053">Для записи схемы в XML-документ, используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1053">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1054">Схема XML интерпретируется согласно стандарту XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1054">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1055">`ReadXmlSchema` Метод обычно вызывается перед вызовом <xref:System.Data.DataTable.ReadXml%2A> метод, который используется для заполнения <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1055">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.ReadXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1056">Поток, используемый для чтения схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1056">The stream used to read the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1057">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1057">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1058">Используйте <xref:System.Data.DataTable.ReadXmlSchema%2A> метод для создания схемы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1058">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1059">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1059">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1060">Для записи схемы в XML-документ, используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1060">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1061">Схема XML интерпретируется согласно стандарту XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1061">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1062">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1062">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="05aac-1063">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="05aac-1063">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="05aac-1064">`ReadXmlSchema` Метод обычно вызывается перед вызовом <xref:System.Data.DataTable.ReadXml%2A> метод, который используется для заполнения <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1064">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="05aac-1065">Чтобы создать вложенное отношение, с помощью схемы XML, используйте неявные вложенные элементы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1065">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="05aac-1066">Можно также настроить вложенные связи с использованием явных имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1066">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="05aac-1067">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать в вложенное отношение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1067">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1068">Следующее консольное приложение создает новый <xref:System.Data.DataTable>и записывает схему для этой таблицы для <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1068">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="05aac-1069">Затем в примере создается новый <xref:System.Data.DataTable> и считывает его схему из сохраненных XML-схемы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1069">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.TextReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-1070">Средство чтения <see cref="T:System.IO.TextReader" />, используемое для чтения сведений схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1070">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1071">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1071">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1072">Используйте <xref:System.Data.DataTable.ReadXmlSchema%2A> метод для создания схемы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1072">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1073">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1073">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1074">Для записи схемы в XML-документ, используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1074">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1075">Схема XML интерпретируется согласно стандарту XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1075">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1076">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1076">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="05aac-1077">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="05aac-1077">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="05aac-1078">`ReadXmlSchema` Метод обычно вызывается перед вызовом <xref:System.Data.DataTable.ReadXml%2A> метод, который используется для заполнения <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1078">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="05aac-1079">Чтобы создать вложенное отношение, с помощью схемы XML, используйте неявные вложенные элементы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1079">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="05aac-1080">Можно также настроить вложенные связи с использованием явных имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1080">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="05aac-1081">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать в вложенное отношение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1081">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1082">Следующее консольное приложение создает новый <xref:System.Data.DataTable>и записывает схему для этой таблицы для <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1082">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="05aac-1083">Затем в примере создается новый <xref:System.Data.DataTable> и считывает его схему из сохраненных XML-схема, с помощью <xref:System.IO.StreamReader> (который наследуется от <xref:System.IO.TextReader>) в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="05aac-1083">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : string -&gt; unit" Usage="dataTable.ReadXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1084">Имя файла, из которого считываются сведения схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1084">The name of the file from which to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1085">Считывает XML-схему из указанного файла в таблицу <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1085">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1086">Используйте <xref:System.Data.DataTable.ReadXmlSchema%2A> метод для создания схемы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1086">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1087">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1087">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1088">Для записи схемы в XML-документ, используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1088">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1089">Схема XML интерпретируется согласно стандарту XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1089">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1090">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1090">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="05aac-1091">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="05aac-1091">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="05aac-1092">`ReadXmlSchema` Метод обычно вызывается перед вызовом <xref:System.Data.DataTable.ReadXml%2A> метод, который используется для заполнения `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1092">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="05aac-1093">Чтобы создать вложенное отношение, с помощью схемы XML, используйте неявные вложенные элементы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1093">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="05aac-1094">Можно также настроить вложенные связи с использованием явных имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1094">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="05aac-1095">Элементы должны быть неявно вложены в порядке для соответствующего DataTables участвовать в вложенное отношение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1095">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1096">Следующее консольное приложение создает новый <xref:System.Data.DataTable>и записывает схему для этой таблицы в файл.</span><span class="sxs-lookup"><span data-stu-id="05aac-1096">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="05aac-1097">Затем в примере создается новый <xref:System.Data.DataTable> и считывает его схему из сохраненных XML-схемы, используя файл в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="05aac-1097">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-1098">Средство чтения <see cref="T:System.Xml.XmlReader" />, используемое для чтения сведений схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1098">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1099">Считывает XML-схему в <see cref="T:System.Data.DataTable" />, используя указанный объект <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1099">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1100">Используйте <xref:System.Data.DataTable.ReadXmlSchema%2A> метод для создания схемы для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1100">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1101">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1101">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1102">Для записи схемы в XML-документ, используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1102">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1103">Схема XML интерпретируется согласно стандарту XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1103">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1104">Если msdata:DataType и типы xs: Type не совпадают, это может привести к повреждению данных.</span><span class="sxs-lookup"><span data-stu-id="05aac-1104">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="05aac-1105">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="05aac-1105">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="05aac-1106">`ReadXmlSchema` Метод обычно вызывается перед вызовом <xref:System.Data.DataTable.ReadXml%2A> метод, который используется для заполнения <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1106">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1107">Способ создания вложенного отношения с помощью XML-схемы — имеют неявные вложенные элементы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1107">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="05aac-1108">Кроме того вложенное отношение может быть переопределено для использования явных имен столбцов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1108">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="05aac-1109">Это обязательный параметр для элементов, чтобы быть неявно вложенными для соответствующего DataTables участвовать в вложенное отношение.</span><span class="sxs-lookup"><span data-stu-id="05aac-1109">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1110">Следующее консольное приложение создает новый <xref:System.Data.DataTable>и записывает схему для этой таблицы для <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1110">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="05aac-1111">Затем в примере создается новый <xref:System.Data.DataTable> и считывает его схему из сохраненных XML-схема, с помощью <xref:System.Xml.XmlTextReader> (который наследуется от <xref:System.Xml.XmlReader>) в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="05aac-1111">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXmlSerializable : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXmlSerializable : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSerializable reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-1112">Объект <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1112">A <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1113">Считывает из XML-потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1113">Reads from an XML stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataTable.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1114">Выполняется откат всех изменений, внесенных в таблицу с момента ее загрузки или после последнего вызова метода <see cref="M:System.Data.DataTable.AcceptChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1114">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1115">Когда <xref:System.Data.DataTable.RejectChanges%2A> вызывается, каждый <xref:System.Data.DataRow> объекты, которые все еще находятся в режиме редактирования отменить их изменения.</span><span class="sxs-lookup"><span data-stu-id="05aac-1115">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="05aac-1116">Новые строки будут удалены.</span><span class="sxs-lookup"><span data-stu-id="05aac-1116">New rows are removed.</span></span> <span data-ttu-id="05aac-1117">Строки с <xref:System.Data.DataRowState> присвоено `Modified` или `Deleted` возвращаются в исходное состояние.</span><span class="sxs-lookup"><span data-stu-id="05aac-1117">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1118">В следующем примере создается несколько соответствующих изменений <xref:System.Data.DataTable>, но отклоняет изменения, вызвав <xref:System.Data.DataTable.RejectChanges%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1118">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingFormat : System.Data.SerializationFormat with get, set" Usage="System.Data.DataTable.RemotingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1119">Возвращает или задает формат сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1119">Gets or sets the serialization format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-1120">Перечисление <see cref="T:System.Data.SerializationFormat" />, задающее сериализацию типа <see langword="Binary" /> или <see langword="Xml" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1120">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dataTable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1121">Возвращает объект <see cref="T:System.Data.DataTable" /> в исходное состояние.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1121">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span>
          </span>
          <span data-ttu-id="05aac-1122">Сброс удаляет все данные, индексы, связи и столбцы таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1122">Reset removes all data, indexes, relations, and columns of the table.</span>
          </span>
          <span data-ttu-id="05aac-1123">Если набор данных содержит таблицы данных, то таблица по-прежнему будет частью набора данных после того, как таблица будет сброшена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1123">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberSignature Language="F#" Value="member this.RowChanged : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanged : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1124">Происходит после успешного изменения <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1124">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1125">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-1125">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberSignature Language="F#" Value="member this.RowChanging : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanging : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1126">Происходит при изменении объекта <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1126">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1127">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-1127">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleted : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1128">Происходит после удаления строки таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1128">Occurs after a row in the table has been deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1129">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-1129">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleting : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1130">Происходит перед удалением строки таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1130">Occurs before a row in the table is about to be deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1131">Дополнительные сведения см. в разделе [обработка событий DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="05aac-1131">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Data.DataRowCollection" Usage="System.Data.DataTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1132">Получает коллекцию строк, принадлежащих данной таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1132">Gets the collection of rows that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-1133">Коллекция <see cref="T:System.Data.DataRowCollection" />, содержащая объекты <see cref="T:System.Data.DataRow" />; в противном случае — значение null, если нет ни одного объекта <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1133">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1134">Чтобы создать новую <xref:System.Data.DataRow>, необходимо использовать <xref:System.Data.DataTable.NewRow%2A> метод для возврата объекта.</span><span class="sxs-lookup"><span data-stu-id="05aac-1134">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="05aac-1135">Такой объект настраивается автоматически в соответствии со схемой, определенной для <xref:System.Data.DataTable> через коллекции <xref:System.Data.DataColumn> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1135">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="05aac-1136">После создания новой строки и задание значений для каждого столбца в строке, добавьте строку <xref:System.Data.DataRowCollection> с помощью `Add` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1136">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="05aac-1137">Каждый <xref:System.Data.DataRow> коллекции представляет строку данных в таблице.</span><span class="sxs-lookup"><span data-stu-id="05aac-1137">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="05aac-1138">Чтобы сохранить измененное значение столбца в строке, необходимо вызвать <xref:System.Data.DataTable.AcceptChanges%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1138">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1139">Ниже показаны два примера возврата и задания строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1139">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="05aac-1140">В первом примере используется <xref:System.Data.DataTable.Rows%2A> свойство и печатает значение каждого столбца для каждой строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-1140">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="05aac-1141">Второй пример использует <xref:System.Data.DataTable> объекта <xref:System.Data.DataTable.NewRow%2A> метод для создания нового <xref:System.Data.DataRow> объекта со схемой <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1141">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="05aac-1142">После задания значения строк, добавляется строка <xref:System.Data.DataRowCollection> через `Add` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1142">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1143">Получает массив объектов <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1143">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Data.DataRow[]" Usage="dataTable.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1144">Получает массив всех объектов <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1144">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1145">Массив объектов <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1145">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1146">Чтобы обеспечить правильное сортировку, указать критерии сортировки с <xref:System.Data.DataTable.Select%2A> или <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1146">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1147">В следующем примере возвращается массив <xref:System.Data.DataRow> объектов через <xref:System.Data.DataTable.Select%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1147">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberSignature Language="F#" Value="member this.Select : string -&gt; System.Data.DataRow[]" Usage="dataTable.Select filterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="05aac-1148">Условия фильтрации строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1148">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="05aac-1149">Примеры по фильтрации строк см. в разделе [Синтаксис DataView RowFilter [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1149">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1150">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1150">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1151">Массив объектов <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1151">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1152">Чтобы создать `filterExpression` аргумент, используйте те же правила, которые применяются к <xref:System.Data.DataColumn> класса <xref:System.Data.DataColumn.Expression%2A> значение свойства для создания фильтров.</span><span class="sxs-lookup"><span data-stu-id="05aac-1152">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
 <span data-ttu-id="05aac-1153">Чтобы обеспечить правильное сортировку, указать критерии сортировки с <xref:System.Data.DataTable.Select%2A> или <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1153">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
 <span data-ttu-id="05aac-1154">Если столбец в фильтре содержит значение null, он не будет часть результата.</span><span class="sxs-lookup"><span data-stu-id="05aac-1154">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1155">В следующем примере критерий фильтра для возвращения массива из <xref:System.Data.DataRow> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1155">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="05aac-1156">Условия фильтрации строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1156">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="05aac-1157">Примеры по фильтрации строк см. в разделе [Синтаксис DataView RowFilter [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1157">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="05aac-1158">Строка, задающая столбец и порядок его сортировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1158">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1159">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно указанному порядку сортировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1159">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1160">Массив объектов <see cref="T:System.Data.DataRow" />, отвечающих выражению для фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1160">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1161">Форму `filterExpression` аргумент, используйте те же правила для создания <xref:System.Data.DataColumn> класса <xref:System.Data.DataColumn.Expression%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="05aac-1161">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="05aac-1162">`Sort` Аргумент также использует те же правила для создания класса <xref:System.Data.DataColumn.Expression%2A> строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1162">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="05aac-1163">Если столбец в фильтре содержит значение null, он не будет часть результата.</span><span class="sxs-lookup"><span data-stu-id="05aac-1163">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1164">В следующем примере критерий фильтра для возвращения массива из <xref:System.Data.DataRow> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1164">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string * System.Data.DataViewRowState -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort, recordStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="05aac-1165">Условия фильтрации строк.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1165">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="05aac-1166">Примеры по фильтрации строк см. в разделе [Синтаксис DataView RowFilter [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1166">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="05aac-1167">Строка, задающая столбец и порядок его сортировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1167">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <param name="recordStates">
          <span data-ttu-id="05aac-1168">Одно из значений перечисления <see cref="T:System.Data.DataViewRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1168">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1169">Получает массив всех объектов <see cref="T:System.Data.DataRow" />, отвечающих условиям фильтра, согласно порядку сортировки, соответствующему указанному состоянию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1169">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1170">Массив объектов <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1170">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1171">Форму `filterExpression` аргумент, используйте те же правила для создания <xref:System.Data.DataColumn> класса <xref:System.Data.DataColumn.Expression%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="05aac-1171">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="05aac-1172">`Sort` Аргумент также использует те же правила для создания класса <xref:System.Data.DataColumn.Expression%2A> строк.</span><span class="sxs-lookup"><span data-stu-id="05aac-1172">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="05aac-1173">Если столбец в фильтре содержит значение null, он не будет часть результата.</span><span class="sxs-lookup"><span data-stu-id="05aac-1173">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1174">В следующем примере используется фильтр выражение и запись состояния для возвращения массива из <xref:System.Data.DataRow> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1174">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Data.DataTable.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1175">Возвращает или задает тип <see cref="T:System.ComponentModel.ISite" /> для объекта <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1175">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-1176">Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1176">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1177">Узлы связывают <xref:System.ComponentModel.Component> для <xref:System.ComponentModel.Container> и обеспечения взаимодействия между ними, а также предоставляют способ для управления компонентами контейнера.</span><span class="sxs-lookup"><span data-stu-id="05aac-1177">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1178">Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1178">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-1179">Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1179">
              <see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1180">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="05aac-1180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="05aac-1181">Он может использоваться, только если экземпляр <xref:System.Data.DataTable> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1181">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1182">Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1182">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1183">Объект <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных из объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1183">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1184">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="05aac-1184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="05aac-1185">Он может использоваться, только если экземпляр <xref:System.Data.DataTable> приведен к типу интерфейса <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1185">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1186">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1186">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1187">
            <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного из метода <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и включенного в метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1187">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1188">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="05aac-1188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="05aac-1189">Он может использоваться, только если экземпляр <xref:System.Data.DataSet> приведен к типу интерфейса <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1189">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="05aac-1190">XmlReader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1190">An XmlReader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1191">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1191">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1192">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="05aac-1192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="05aac-1193">Он может использоваться, только если экземпляр <xref:System.Data.DataSet> приведен к типу интерфейса <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1193">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1194">XmlWriter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1194">An XmlWriter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1195">Описание этого члена см. в разделе <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1195">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1196">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="05aac-1196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="05aac-1197">Он может использоваться, только если экземпляр <xref:System.Data.DataSet> приведен к типу интерфейса <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1197">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberSignature Language="F#" Value="member this.TableCleared : System.Data.DataTableClearEventHandler " Usage="member this.TableCleared : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1198">Происходит после очистки <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1198">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1199"><xref:System.Data.DataTable.TableCleared> События сразу после всех строк был успешно очищен до <xref:System.Data.DataTable.Clear%2A> метод возвращает управление вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="05aac-1199">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="05aac-1200"><xref:System.Data.DataTable.TableCleared> Событие не создается, если имеются все исключения во время операции очистки.</span><span class="sxs-lookup"><span data-stu-id="05aac-1200">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberSignature Language="F#" Value="member this.TableClearing : System.Data.DataTableClearEventHandler " Usage="member this.TableClearing : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1201">Происходит, когда очищается таблица <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1201">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1202"><xref:System.Data.DataTable.TableClearing> События перед началом обработки <xref:System.Data.DataTable.Clear%2A> начала операции.</span><span class="sxs-lookup"><span data-stu-id="05aac-1202">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="05aac-1203">Это событие всегда возникает, когда <xref:System.Data.DataTable.Clear%2A> вызывается метод, даже если таблица не содержит ни одной строки.</span><span class="sxs-lookup"><span data-stu-id="05aac-1203">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Data.DataTable.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableTableNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1204">Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1204">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05aac-1205">Имя <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1205">The name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1206"><xref:System.Data.DataTable.TableName%2A> Используется для возврата этой таблицы из родительского <xref:System.Data.DataSet> объекта <xref:System.Data.DataTableCollection> (возвращенный <xref:System.Data.DataSet.Tables%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="05aac-1206">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1207">В следующем примере выводится <xref:System.Data.DataTable.TableName%2A> для каждой таблицы в коллекцию <xref:System.Data.DataTable> объектов.</span><span class="sxs-lookup"><span data-stu-id="05aac-1207">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="05aac-1208">Передается значение <see langword="null" /> или пустая строка (""), а таблица принадлежит коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1208">
              <see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="05aac-1209">Таблица принадлежит коллекции, которая уже содержит таблицу с таким же именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1209">The table belongs to a collection that already has a table with the same name.</span>
          </span>
          <span data-ttu-id="05aac-1210">(При сравнении учитывается регистр).</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1210">(Comparison is case-sensitive).</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberSignature Language="F#" Value="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " Usage="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1211">Происходит, когда вставляется новая строка <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1211">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1212">Возникает после создания нового <xref:System.Data.DataRow> создавались с помощью <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1212">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="05aac-1213">Это событие возникает перед вызванной `NewRow` возвращает метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1213">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="05aac-1214">Новый <xref:System.Data.DataRow> экземпляр отсоединена; он не был добавлен в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="05aac-1214">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dataTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1215">Получает свойства <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />, если существует сцепленная строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1215">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05aac-1216">Строка, состоящая из значений свойств <see cref="P:System.Data.DataTable.TableName" /> и <see cref="P:System.Data.DataTable.DisplayExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1216">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1217">Получает <xref:System.Data.DataTable.TableName%2A> и <xref:System.Data.DataTable.DisplayExpression%2A> для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1217">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1218">В следующем примере возвращается <xref:System.Data.DataTable.TableName%2A> и <xref:System.Data.DataTable.DisplayExpression%2A> с помощью <xref:System.Data.DataTable.ToString%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1218">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1219">Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1219">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1220"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1220">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1221">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1221">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1222">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1222">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1223">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1223">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1224">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1224">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1225"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1225">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1226">Следующее консольное приложение создает два <xref:System.Data.DataTable> экземпляров, добавляются в <xref:System.Data.DataSet>, создает <xref:System.Data.DataRelation> двух связанных таблиц, а затем использует <xref:System.Data.DataTable.WriteXml%2A> метод для записи данных, содержащихся в родительской таблице для <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1226">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="05aac-1227">В примере показано поведение при задании `writeHierarchy` параметра для каждого из его значений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1227">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1228">В этом примере показано, как использовать один из перегруженных версий метода WriteXml.</span><span class="sxs-lookup"><span data-stu-id="05aac-1228">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="05aac-1229">Другие примеры, которые могут быть доступны см. в разделах отдельные перегрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-1229">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-1230">В этом примере в окне консоли отображаются следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="05aac-1230">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1231">Поток, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1231">The stream to which the data will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1232">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1232">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1233"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1233">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1234">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1234">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1235">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1235">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1236">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1236">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1237">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1237">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1238"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1238">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1239">
            <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1239">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1240">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1240">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1241"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1241">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1242">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1242">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1243">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1243">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1244">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1244">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1245">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1245">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1246"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1246">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string -&gt; unit" Usage="dataTable.WriteXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1247">Файл, в который записываются XML-данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1247">The file to which to write the XML data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1248">Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1248">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1249"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1249">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1250">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1250">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1251">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1251">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1252">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1252">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1253">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1253">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1254"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1254">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1255">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1255">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1256">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1256">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1257"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1257">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1258">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1258">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1259">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1259">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1260">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1260">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1261">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1261">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1262"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1262">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXml (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1263">Поток, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1263">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1264">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1264">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1265">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1265">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1266">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1266">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="05aac-1267">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1267">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1268">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1268">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1269">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1269">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1270">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1270">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1271">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1271">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1272">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1272">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1273">Для записи данных для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1273">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1274"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1274">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (stream, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1275">Поток, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1275">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1276">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1276">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1277">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1277">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1278">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1278">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1279"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1279">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1280">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1280">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1281">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1281">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1282">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1282">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1283">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1283">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1284"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1284">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1285">
            <see cref="T:System.IO.TextWriter" /> — используется для записи содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1285">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1286">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1286">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1287">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1287">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1288">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1288">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="05aac-1289">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1289">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1290"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1290">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1291">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1291">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1292">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1292">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1293">Чтобы записать данные для текущей таблицы и всех его потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1293">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1294"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1294">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1295">Следующее консольное приложение создает два <xref:System.Data.DataTable> экземпляров, добавляются в <xref:System.Data.DataSet>, создает <xref:System.Data.DataRelation> двух связанных таблиц, а затем использует <xref:System.Data.DataTable.WriteXml%2A> метод для записи данных, содержащихся в родительской таблице для <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1295">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="05aac-1296">В примере показано поведение при задании `writeHierarchy` параметр `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1296">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1297">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1297">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1298">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1298">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1299">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1299">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1300">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1300">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1301"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1301">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1302">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1302">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1303">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1303">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1304">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1304">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1305">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1305">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1306"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1306">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1307">Файл, в который записываются XML-данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1307">The file to which to write the XML data.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1308">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1308">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1309">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1309">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1310">Записывает текущее содержимое таблицы <see cref="T:System.Data.DataTable" /> в формате XML, используя указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1310">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
          <span data-ttu-id="05aac-1311">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1311">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1312"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1312">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1313">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1313">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1314">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1314">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1315">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1315">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1316">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1316">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1317">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1317">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1318">Для записи данных для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1318">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1319"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1319">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (fileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1320">Имя файла, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1320">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1321">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1321">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1322">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1322">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1323">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1323">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1324"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1324">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1325">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1325">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1326">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1326">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1327">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1327">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1328">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1328">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1329"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1329">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1330">Средство записи <see cref="T:System.Xml.XmlWriter" />, с помощью которого записывается содержимое.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1330">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1331">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1331">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1332">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1332">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1333">Записывает текущее содержимое <see cref="T:System.Data.DataTable" /> как XML с использованием указанного элемента <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1333">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1334"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1334">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1335">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1335">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1336">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1336">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1337">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1337">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1338">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1338">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1339">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1339">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1340">Чтобы записать данные для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1340">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1341"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1341">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1342">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1342">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1343">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1343">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1344">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1344">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1345">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1345">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1346"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1346">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1347">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1347">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1348">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1348">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1349">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1349">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1350">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1350">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1351"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1351">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (stream, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1352">Поток, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1352">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1353">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1353">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1354">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1354">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1355">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1355">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1356">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> в указанный файл с помощью заданного объекта <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1356">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1357">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1357">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="05aac-1358">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1358">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1359"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из `DataTable` в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1359">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1360">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя `XmlWriteMode` параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1360">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1361">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1361">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1362">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1362">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1363">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1363">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1364">Как правило `WriteXml` метод сохраняет данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1364">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="05aac-1365">`WriteXml` Метод предоставляет способ записи только данных или схему и данные из `DataTable` в документ XML, тогда как `WriteXmlSchema` метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1365">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="05aac-1366">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя `XmlWriteMode` параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1366">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1367">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1367">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1368">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1368">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1369">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1369">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1370">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1370">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1371">Для записи данных для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1371">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1372"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1373">Класс <see cref="T:System.IO.TextWriter" />, используемый для записи документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1373">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1374">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1374">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1375">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1375">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1376">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1376">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1377">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.IO.TextWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1377">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1378">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1378">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="05aac-1379">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1379">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1380"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1380">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1381">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1381">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1382">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1382">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1383">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1383">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1384">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1384">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1385">Как правило `WriteXml` метод сохраняет данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1385">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="05aac-1386"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1386">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1387">Для записи данных и схемы, используйте одну из перегрузок, которые включает в себя <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1387">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1388">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1388">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1389">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1389">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1390">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1390">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1391">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1391">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1392">Для записи данных для текущей таблицы и всех ее потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1392">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1393"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1393">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1394">Следующее консольное приложение создает два <xref:System.Data.DataTable> экземпляров, добавляются в <xref:System.Data.DataSet>, создает <xref:System.Data.DataRelation> двух связанных таблиц, а затем использует <xref:System.Data.DataTable.WriteXml%2A> метод для записи данных, содержащихся в родительской таблице для <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1394">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="05aac-1395">В примере показано поведение при задании `writeHierarchy` параметра для каждого из его значений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1395">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-1396">В этом примере в окне консоли отображаются следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="05aac-1396">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1397">Имя файла, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1397">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1398">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1398">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1399">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1399">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1400">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1400">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1401">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" />, используя указанный файл и заданное перечисление <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1401">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1402">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1402">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="05aac-1403">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1403">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1404"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1404">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1405">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1405">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1406">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1406">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1407">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1407">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1408">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1408">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1409">Как правило `WriteXml` метод сохраняет данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1409">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="05aac-1410">Если вы хотите сохранить данные для текущей таблицы и все схемы, <xref:System.Data.DataTable.WriteXml%2A> метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1410">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1411">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1411">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1412">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1412">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1413">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1413">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1414">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1414">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1415">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1415">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1416">Чтобы записать данные для текущей таблицы и всех потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1416">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1417"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1417">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1418">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1418">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="05aac-1419">Одно из значений перечисления <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1419">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1420">Если значение равно <see langword="true" />, записывает содержимое текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1420">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1421">Если значение равно <see langword="false" /> (значение по умолчанию), записывает данные только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1421">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1422">Записывает текущие данные и по возможности схему для <see cref="T:System.Data.DataTable" /> с помощью указанных <see cref="T:System.Xml.XmlWriter" /> и  <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1422">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="05aac-1423">Чтобы записать схему, задайте в параметре <paramref name="mode" /> значение <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1423">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="05aac-1424">Чтобы сохранить данные для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1424">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1425"><xref:System.Data.DataTable.WriteXml%2A> Метод предоставляет способ записи только данных или схему и данные из <xref:System.Data.DataTable> в документ XML, тогда как <xref:System.Data.DataTable.WriteXmlSchema%2A> метод записывает только схему.</span><span class="sxs-lookup"><span data-stu-id="05aac-1425">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="05aac-1426">Чтобы записать схему и данные, используйте одну из перегрузок, которые включают <xref:System.Data.XmlWriteMode> параметра и присвойте ему значение `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1426">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="05aac-1427">Обратите внимание, что то же самое касается <xref:System.Data.DataTable.ReadXml%2A> и <xref:System.Data.DataTable.ReadXmlSchema%2A> методы, соответственно.</span><span class="sxs-lookup"><span data-stu-id="05aac-1427">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="05aac-1428">Для считывания XML-данных или схему и данные в `DataTable`, используйте `ReadXml` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1428">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="05aac-1429">Чтобы прочитать только схему, используйте `ReadXmlSchema` метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1429">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="05aac-1430">Обычно `WriteXml` метод записывает данные только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1430">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="05aac-1431">Чтобы записать данные для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1431">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1432"><xref:System.InvalidOperationException> Возникает, если тип столбца в `DataRow` чтения или записи на implements <xref:System.Dynamic.IDynamicMetaObjectProvider> и не реализует <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1432">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05aac-1433">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1433">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1434">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1434">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1435">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1435">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1436">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1436">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1437">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1437">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1438">Следующее консольное приложение создает два <xref:System.Data.DataTable> экземпляров, добавляются в <xref:System.Data.DataSet>, создает <xref:System.Data.DataRelation> двух связанных таблиц, а затем использует <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи данных, содержащихся в родительской таблице для <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1438">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="05aac-1439">В примере показано поведение при задании `writeHierarchy` параметра для каждого из его значений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1439">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05aac-1440">В этом примере показано, как использовать один из перегруженных версий `WriteXmlSchema` для других примеров, которые могут быть доступны, см. в разделах отдельные перегрузки.</span><span class="sxs-lookup"><span data-stu-id="05aac-1440">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-1441">В этом примере в окне консоли отображаются следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="05aac-1441">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1442">Поток, в который записывается XML-схема.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1442">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1443">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1443">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1444">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1444">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1445">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1445">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1446">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1446">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1447">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1447">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1448">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1448">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1449">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1449">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1450">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1450">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1451">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1451">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1452">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1452">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1453">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1453">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string -&gt; unit" Usage="dataTable.WriteXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1454">Имя используемого файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1454">The name of the file to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1455">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1455">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1456">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1456">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1457">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1457">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1458">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1458">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1459">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1459">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1460">Используемый <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1460">The <see cref="T:System.Xml.XmlWriter" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1461">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1461">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1462">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1462">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1463">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1463">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1464">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1464">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1465">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1465">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="05aac-1466">Поток, в который записывается XML-схема.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1466">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1467">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1467">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1468">Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1468">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1469">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1469">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
          <span data-ttu-id="05aac-1470">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1470">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1471">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1471">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1472">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1472">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1473">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1473">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1474">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1474">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1475">Обычно `WriteXmlSchema` метод записывает схему только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1475">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="05aac-1476">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1476">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1477">Класс <see cref="T:System.IO.TextWriter" />, с помощью которого осуществляется запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1477">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1478">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1478">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1479">Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1479">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1480">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1480">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="05aac-1481">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1481">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1482">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1482">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1483">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1483">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1484">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1484">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1485">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1485">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1486">Обычно `WriteXmlSchema` метод записывает схему только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1486">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="05aac-1487">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1487">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05aac-1488">Следующее консольное приложение создает два <xref:System.Data.DataTable> экземпляров, добавляются в <xref:System.Data.DataSet>, создает <xref:System.Data.DataRelation> двух связанных таблиц, а затем использует <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи данных, содержащихся в родительской таблице для <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="05aac-1488">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="05aac-1489">В примере показано поведение при задании `writeHierarchy` параметра для каждого из его значений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1489">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="05aac-1490">В этом примере в окне консоли отображаются следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="05aac-1490">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="05aac-1491">Имя используемого файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1491">The name of the file to use.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1492">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1492">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1493">Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1493">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1494">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы в указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1494">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
          <span data-ttu-id="05aac-1495">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1495">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1496">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1496">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1497">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1497">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1498">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1498">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1499">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1499">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1500">Обычно `WriteXmlSchema` метод записывает схему только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1500">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="05aac-1501">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1501">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="05aac-1502">Класс <see cref="T:System.Xml.XmlWriter" />, используемый для записи документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1502">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="05aac-1503">Если значение равно <see langword="true" />, записывает схему текущей таблицы и всех ее потомков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1503">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="05aac-1504">Если значение равно <see langword="false" /> (значение по умолчанию), записывает схему только для текущей таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1504">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05aac-1505">Записывает текущую структуру данных таблицы <see cref="T:System.Data.DataTable" /> в виде XML-схемы, используя указанный класс <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1505">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="05aac-1506">Чтобы сохранить схему для таблицы и всех ее потомков, установите для параметра <paramref name="writeHierarchy" /> значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05aac-1506">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05aac-1507">Используйте <xref:System.Data.DataTable.WriteXmlSchema%2A> метод для записи схемы для <xref:System.Data.DataTable> в XML-документ.</span><span class="sxs-lookup"><span data-stu-id="05aac-1507">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="05aac-1508">Эта схема включает определения таблиц, связей и ограничений.</span><span class="sxs-lookup"><span data-stu-id="05aac-1508">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="05aac-1509">Схема XML записывается с использованием стандарта XSD.</span><span class="sxs-lookup"><span data-stu-id="05aac-1509">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="05aac-1510">Чтобы записать данные в XML-документ, используйте <xref:System.Data.DataTable.WriteXml%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="05aac-1510">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="05aac-1511">Обычно `WriteXmlSchema` метод записывает схему только для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="05aac-1511">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="05aac-1512">Чтобы записать схему для текущей таблицы и всей потомков, связанных таблиц, вызовите метод с `writeHierarchy` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="05aac-1512">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>